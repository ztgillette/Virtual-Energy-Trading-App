{"version":3,"sources":["../src/common/pad.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,GAAG,CAAC,GAAoB,EAAE,cAAsB,CAAC,EAAE,EAAE;IAC/D,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,CAAC;IACxB,OAAO,CAAC,IAAI,CAAC,EAAE;QACb,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;QACjB,CAAC,IAAI,CAAC,CAAC;KACR;IACD,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AAuBF,MAAM,GAAG,GAAG,CAAC,GAAoB,EAAE,MAAc,EAAE,UAAkB,GAAG,EAAE,QAAgB,OAAO,EAAE,EAAE;IACnG,MAAM,CAAC,GAAG,OAAO,CAAC;IAClB,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACnB,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IAE5B,IAAI,CAAC,IAAI,CAAC,EAAE;QACV,OAAO,CAAC,CAAC;KACV;IAED,IAAI,KAAK,KAAK,MAAM,EAAE;QACpB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;KACzB;IAED,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChH,CAAC,CAAC;AAEF,eAAe,GAAG,CAAC","file":"pad.js","sourcesContent":["const repeat = (str: string | number, repeatCount: number = 0) => {\n  let s = '';\n  let i = repeatCount - 1;\n  while (i >= 0) {\n    s = `${s}${str}`;\n    i -= 1;\n  }\n  return s;\n};\n\n/**\n * Pads `string` on the left and right, left or right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * pad('abc', 8)\n * // => '  abc   '\n *\n * pad('abc', 8, '_-')\n * // => '_-abc_-_'\n *\n * pad('abc', 2)\n * // => 'abc'\n */\nconst pad = (str: string | number, length: number, padChar: string = ' ', align: string = 'right') => {\n  const c = padChar;\n  const s = str + '';\n  const n = length - s.length;\n\n  if (n <= 0) {\n    return s;\n  }\n\n  if (align === 'left') {\n    return repeat(c, n) + s;\n  }\n\n  return align === 'center' ? repeat(c, Math.floor(n / 2)) + s + repeat(c, Math.ceil(n / 2)) : s + repeat(c, n);\n};\n\nexport default pad;\n"]}