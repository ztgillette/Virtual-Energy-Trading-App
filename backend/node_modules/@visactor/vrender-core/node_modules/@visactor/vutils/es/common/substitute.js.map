{"version":3,"sources":["../src/common/substitute.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,OAAO,UAAU,UAAU,CAAI,GAAW,EAAE,CAAU;IAC3D,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE;QACd,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,GAAG,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,IAAI,EAAO,EAAE;QAC1D,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC","file":"substitute.js","sourcesContent":["import type { Dict } from '../type';\n\nexport default function substitute<T>(str: string, o: Dict<T>) {\n  if (!str || !o) {\n    return str;\n  }\n  return str.replace(/\\\\?\\{([^{}]+)\\}/g, (match, name): any => {\n    if (match.charAt(0) === '\\\\') {\n      return match.slice(1);\n    }\n    return o[name] === undefined ? '' : o[name];\n  });\n}\n"]}