{"version":3,"sources":["../src/graphic/image.ts"],"names":[],"mappings":"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","file":"image.js","sourcesContent":["import type { IAABBBounds } from '@visactor/vutils';\nimport type { IImage, IImageGraphicAttribute, IRepeatType, ISetAttributeContext } from '../interface';\nimport { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from './graphic';\nimport { DefaultImageAttribute } from './config';\nimport { getTheme } from './theme';\nimport { application } from '../application';\nimport { IMAGE_NUMBER_TYPE } from './constants';\nimport { updateBoundsOfCommonOuterBorder } from './graphic-service/common-outer-boder-bounds';\n\nconst IMAGE_UPDATE_TAG_KEY = ['width', 'height', 'image', ...GRAPHIC_UPDATE_TAG_KEY];\n\n/**\n * TODO image 需要考虑加载问题 等load模块\n * 同时需要在Graphic增加 图片填充 or 图片按形状clip功能\n */\nexport class Image extends Graphic<IImageGraphicAttribute> implements IImage {\n  type: 'image' = 'image';\n  // 资源加载完成后回调，外部通过回调获取图片资源尺寸\n  successCallback?: () => void;\n  failCallback?: () => void;\n  declare _actualWidth?: number;\n  declare _actualHeight?: number;\n\n  static NOWORK_ANIMATE_ATTR = {\n    image: 1,\n    repeatX: 1,\n    repeatY: 1,\n    ...NOWORK_ANIMATE_ATTR\n  };\n\n  constructor(params: IImageGraphicAttribute) {\n    super(params);\n    this.numberType = IMAGE_NUMBER_TYPE;\n\n    this.loadImage(this.attribute.image);\n  }\n\n  getImageElement(): HTMLImageElement | HTMLCanvasElement | null {\n    const { image } = this.attribute;\n    if (!image || !this.resources) {\n      return null;\n    }\n    const res = this.resources.get(image);\n    if (res.state !== 'success') {\n      return null;\n    }\n    return res.data;\n  }\n\n  get width(): number {\n    this.tryUpdateAABBBounds();\n    return this._actualWidth;\n  }\n  // set width(width: number) {\n  //   if (this.attribute.width === width) {\n  //     this.attribute.width = width;\n  //     this.addUpdateShapeAndBoundsTag();\n  //   }\n  // }\n\n  get height(): number {\n    this.tryUpdateAABBBounds();\n    return this._actualHeight;\n  }\n  // set height(height: number) {\n  //   if (this.attribute.height === height) {\n  //     this.attribute.height = height;\n  //     this.addUpdateShapeAndBoundsTag();\n  //   }\n  // }\n  get repeatX(): IRepeatType {\n    return this.attribute.repeatX ?? 'no-repeat';\n  }\n  set repeatX(repeatX: IRepeatType) {\n    if (this.attribute.repeatX === repeatX) {\n      this.attribute.repeatX = repeatX;\n    }\n  }\n  get repeatY(): IRepeatType {\n    return this.attribute.repeatY ?? 'no-repeat';\n  }\n  set repeatY(repeatY: IRepeatType) {\n    if (this.attribute.repeatY === repeatY) {\n      this.attribute.repeatY = repeatY;\n    }\n  }\n  get image(): string | HTMLImageElement | HTMLCanvasElement {\n    return this.attribute.image;\n  }\n  set image(image: string | HTMLImageElement | HTMLCanvasElement) {\n    if (image !== this.attribute.image) {\n      this.attribute.image = image;\n      this.loadImage(this.attribute.image);\n      // this.addUpdateShapeAndBoundsTag();\n    }\n  }\n\n  imageLoadSuccess(url: string, image: HTMLImageElement, cb?: () => void): void {\n    super.imageLoadSuccess(url, image, () => {\n      if (this.successCallback) {\n        this.successCallback();\n      }\n    });\n    this.addUpdateBoundTag();\n  }\n\n  imageLoadFail(url: string, cb?: () => void): void {\n    super.imageLoadFail(url, () => {\n      if (this.failCallback) {\n        this.failCallback();\n      }\n    });\n  }\n\n  setAttributes(\n    params: Partial<IImageGraphicAttribute>,\n    forceUpdateTag?: boolean,\n    context?: ISetAttributeContext\n  ): void {\n    if (params.image) {\n      this.loadImage(params.image);\n    }\n    return super.setAttributes(params, forceUpdateTag, context);\n  }\n\n  setAttribute(key: string, value: any, forceUpdateTag?: boolean, context?: ISetAttributeContext): void {\n    if (key === 'image') {\n      this.loadImage(value);\n    }\n    return super.setAttribute(key, value, forceUpdateTag, context);\n  }\n\n  getGraphicTheme(): Required<IImageGraphicAttribute> {\n    return getTheme(this).image;\n  }\n\n  protected updateAABBBounds(\n    attribute: IImageGraphicAttribute,\n    imageTheme: Required<IImageGraphicAttribute>,\n    aabbBounds: IAABBBounds\n  ) {\n    if (!this.updatePathProxyAABBBounds(aabbBounds)) {\n      const { maxWidth = imageTheme.maxWidth, maxHeight = imageTheme.maxHeight } = attribute;\n      let { width, height } = attribute;\n      if (width == null || height == null) {\n        const imageElement = this.getImageElement();\n        if (imageElement) {\n          // 如果给了width或者height，那就使用已给的width或者height来按比例缩放，否则就在maxWidth和maxHeight之间按比例缩放\n          const imageWidth = imageElement.width;\n          const imageHeight = imageElement.height;\n          if (width != null) {\n            height = width * (imageHeight / imageWidth);\n          } else if (height != null) {\n            width = height * (imageWidth / imageHeight);\n          } else {\n            // 如果width和height都没有给，那就使用maxWidth和maxHeight来按比例缩放\n            const imageRatio = imageWidth / imageHeight;\n            const maxWHRatio = maxWidth / maxHeight;\n            if (imageRatio > maxWHRatio) {\n              width = maxWidth;\n              height = maxWidth / imageRatio;\n            } else {\n              height = maxHeight;\n              width = maxHeight * imageRatio;\n            }\n          }\n        } else {\n          width = maxWidth;\n          height = maxHeight;\n        }\n      }\n      this._actualWidth = width;\n      this._actualHeight = height;\n      aabbBounds.set(0, 0, width, height);\n    }\n\n    const { tb1, tb2 } = application.graphicService.updateTempAABBBounds(aabbBounds);\n\n    updateBoundsOfCommonOuterBorder(attribute, imageTheme, tb1);\n    aabbBounds.union(tb1);\n    tb1.setValue(tb2.x1, tb2.y1, tb2.x2, tb2.y2);\n\n    this.widthWithoutTransform = aabbBounds.x2 - aabbBounds.x1;\n    this.heightWithoutTransform = aabbBounds.y2 - aabbBounds.y1;\n\n    application.graphicService.transformAABBBounds(attribute, aabbBounds, imageTheme, false, this);\n    return aabbBounds;\n  }\n\n  getDefaultAttribute(name: string) {\n    return (DefaultImageAttribute as any)[name];\n  }\n\n  protected needUpdateTags(keys: string[]): boolean {\n    return super.needUpdateTags(keys, IMAGE_UPDATE_TAG_KEY);\n  }\n  protected needUpdateTag(key: string): boolean {\n    return super.needUpdateTag(key, IMAGE_UPDATE_TAG_KEY);\n  }\n\n  clone() {\n    return new Image({ ...this.attribute });\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Image.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createImage(attributes: IImageGraphicAttribute): IImage {\n  return new Image(attributes);\n}\n"]}