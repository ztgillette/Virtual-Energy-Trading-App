{"version":3,"sources":["../src/graphic/graphic-service/graphic-service.ts"],"names":[],"mappings":"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","file":"graphic-service.js","sourcesContent":["import { inject, injectable } from '../../common/inversify-lite';\nimport type { IAABBBounds } from '@visactor/vutils';\nimport { AABBBounds, isNumber, transformBoundsWithMatrix } from '@visactor/vutils';\nimport { SyncHook } from '../../tapable';\nimport type {\n  mat4,\n  IGraphicAttribute,\n  IGraphic,\n  IGroup,\n  IStage,\n  IText,\n  ITextGraphicAttribute,\n  ITransform,\n  IGraphicService,\n  IGraphicCreator,\n  ISyncHook\n} from '../../interface';\nimport { textDrawOffsetX, textLayoutOffsetY } from '../../common/text';\nimport { boundStroke } from '../tools';\nimport { mat4Allocate } from '../../allocator/matrix-allocate';\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { BoundsContext } from '../../common/bounds-context';\nimport { renderCommandList } from '../../common/render-command-list';\nimport { GraphicCreator } from '../constants';\nimport { identityMat4, multiplyMat4Mat4, rotateX, rotateY, rotateZ, scaleMat4, translate } from '../../common/matrix';\n\nexport function getExtraModelMatrix(dx: number, dy: number, graphic: IGraphic): mat4 | null {\n  const { alpha, beta } = graphic.attribute;\n  if (!alpha && !beta) {\n    return null;\n  }\n  const { anchor3d = graphic.attribute.anchor } = graphic.attribute;\n\n  const _anchor: [number, number] = [0, 0];\n  if (anchor3d) {\n    if (typeof anchor3d[0] === 'string') {\n      const ratio = parseFloat(anchor3d[0]) / 100;\n      const bounds = graphic.AABBBounds;\n      _anchor[0] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n    } else {\n      _anchor[0] = anchor3d[0];\n    }\n    if (typeof anchor3d[1] === 'string') {\n      const ratio = parseFloat(anchor3d[1]) / 100;\n      const bounds = graphic.AABBBounds;\n      _anchor[1] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n    } else {\n      _anchor[1] = anchor3d[1];\n    }\n  }\n\n  if (graphic.type === 'text') {\n    const { textAlign } = graphic.attribute as ITextGraphicAttribute;\n    // 计算偏移\n    _anchor[0] += textDrawOffsetX(textAlign, (graphic as IText).clipedWidth);\n  }\n\n  // 应用偏移，计算全局的偏移\n  _anchor[0] += dx;\n  _anchor[1] += dy;\n  // matrix.scale(dpr, dpr);\n\n  const modelMatrix = mat4Allocate.allocate();\n  translate(modelMatrix, modelMatrix, [_anchor[0], _anchor[1], 0]);\n  if (beta) {\n    rotateX(modelMatrix, modelMatrix, beta);\n  }\n  if (alpha) {\n    rotateY(modelMatrix, modelMatrix, alpha);\n  }\n  translate(modelMatrix, modelMatrix, [-_anchor[0], -_anchor[1], 0]);\n\n  return modelMatrix;\n}\n\n// 计算3d下的模型矩阵\nexport function getModelMatrix(out: mat4, graphic: IGraphic, theme: ITransform) {\n  const {\n    x = theme.x,\n    y = theme.y,\n    z = theme.z,\n    dx = theme.dx,\n    dy = theme.dy,\n    dz = theme.dz,\n    scaleX = theme.scaleX,\n    scaleY = theme.scaleY,\n    scaleZ = theme.scaleZ,\n    alpha = theme.alpha,\n    beta = theme.beta,\n    angle = theme.angle,\n    anchor3d = graphic.attribute.anchor,\n    anchor\n  } = graphic.attribute;\n\n  const _anchor: [number, number, number] = [0, 0, 0];\n  if (anchor3d) {\n    if (typeof anchor3d[0] === 'string') {\n      const ratio = parseFloat(anchor3d[0]) / 100;\n      const bounds = graphic.AABBBounds;\n      _anchor[0] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n    } else {\n      _anchor[0] = anchor3d[0];\n    }\n    if (typeof anchor3d[1] === 'string') {\n      const ratio = parseFloat(anchor3d[1]) / 100;\n      const bounds = graphic.AABBBounds;\n      _anchor[1] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n    } else {\n      _anchor[1] = anchor3d[1];\n    }\n    _anchor[2] = anchor3d[2] ?? 0;\n  }\n\n  // if (graphic.type === 'text') {\n  //   const { textAlign } = graphic.attribute as ITextGraphicAttribute;\n  //   // 计算偏移\n  //   _anchor[0] += textDrawOffsetX(textAlign, (graphic as IText).clipedWidth);\n  // }\n\n  identityMat4(out);\n  // 平移\n  translate(out, out, [x + dx, y + dy, z + dz]);\n  translate(out, out, [_anchor[0], _anchor[1], _anchor[2]]);\n  rotateX(out, out, beta);\n  rotateY(out, out, alpha);\n  // 基于z轴的偏移基于anchor计算\n  // rotateZ(out, out, angle);\n  translate(out, out, [-_anchor[0], -_anchor[1], _anchor[2]]);\n  scaleMat4(out, out, [scaleX, scaleY, scaleZ]);\n\n  // 计算基于z轴的偏移\n  if (angle) {\n    const m = mat4Allocate.allocate();\n    const _anchor: [number, number] = [0, 0];\n    if (anchor) {\n      if (typeof anchor3d[0] === 'string') {\n        const ratio = parseFloat(anchor3d[0]) / 100;\n        const bounds = graphic.AABBBounds;\n        _anchor[0] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n      } else {\n        _anchor[0] = anchor3d[0];\n      }\n      if (typeof anchor3d[1] === 'string') {\n        const ratio = parseFloat(anchor3d[1]) / 100;\n        const bounds = graphic.AABBBounds;\n        _anchor[1] = bounds.x1 + (bounds.x2 - bounds.x1) * ratio;\n      } else {\n        _anchor[1] = anchor3d[1];\n      }\n    }\n\n    translate(m, m, [_anchor[0], _anchor[1], 0]);\n    // 基于z轴的偏移基于anchor计算\n    rotateZ(m, m, angle);\n    translate(m, m, [-_anchor[0], -_anchor[1], 0]);\n\n    multiplyMat4Mat4(out, out, m);\n  }\n}\n\nexport function shouldUseMat4(graphic: IGraphic) {\n  const { alpha, beta } = graphic.attribute;\n  return alpha || beta;\n}\n\n// 管理graphic\n@injectable()\nexport class DefaultGraphicService implements IGraphicService {\n  declare hooks: {\n    onAttributeUpdate: ISyncHook<[IGraphic]>;\n    onSetStage: ISyncHook<[IGraphic, IStage]>;\n    onRemove: ISyncHook<[IGraphic]>;\n    onRelease: ISyncHook<[IGraphic]>;\n    onAddIncremental: ISyncHook<[IGraphic, IGroup, IStage]>;\n    onClearIncremental: ISyncHook<[IGroup, IStage]>;\n    beforeUpdateAABBBounds: ISyncHook<[IGraphic, IStage, boolean, IAABBBounds]>;\n    afterUpdateAABBBounds: ISyncHook<[IGraphic, IStage, IAABBBounds, { globalAABBBounds: IAABBBounds }, boolean]>;\n    clearAABBBounds: ISyncHook<[IGraphic, IStage, IAABBBounds]>;\n  };\n\n  // 临时bounds，用作缓存\n  protected tempAABBBounds1: AABBBounds;\n  protected tempAABBBounds2: AABBBounds;\n  constructor(@inject(GraphicCreator) public readonly creator: IGraphicCreator) {\n    this.hooks = {\n      onAttributeUpdate: new SyncHook<[IGraphic]>(['graphic']),\n      onSetStage: new SyncHook<[IGraphic, IStage]>(['graphic', 'stage']),\n      onRemove: new SyncHook<[IGraphic]>(['graphic']),\n      onRelease: new SyncHook<[IGraphic]>(['graphic']),\n      onAddIncremental: new SyncHook<[IGraphic, IGroup, IStage]>(['graphic', 'group', 'stage']),\n      onClearIncremental: new SyncHook<[IGroup, IStage]>(['graphic', 'group', 'stage']),\n      beforeUpdateAABBBounds: new SyncHook<[IGraphic, IStage, boolean, IAABBBounds]>([\n        'graphic',\n        'stage',\n        'willUpdate',\n        'aabbBounds'\n      ]),\n      afterUpdateAABBBounds: new SyncHook<[IGraphic, IStage, IAABBBounds, { globalAABBBounds: IAABBBounds }, boolean]>([\n        'graphic',\n        'stage',\n        'aabbBounds',\n        'globalAABBBounds',\n        'selfChange'\n      ]),\n      clearAABBBounds: new SyncHook<[IGraphic, IStage, IAABBBounds]>(['graphic', 'stage', 'aabbBounds'])\n    };\n    this.tempAABBBounds1 = new AABBBounds();\n    this.tempAABBBounds2 = new AABBBounds();\n  }\n  onAttributeUpdate(graphic: IGraphic) {\n    if (this.hooks.onAttributeUpdate.taps.length) {\n      this.hooks.onAttributeUpdate.call(graphic);\n    }\n  }\n  onSetStage(graphic: IGraphic, stage: IStage): void {\n    if (this.hooks.onSetStage.taps.length) {\n      this.hooks.onSetStage.call(graphic, stage);\n    }\n  }\n  onRemove(graphic: IGraphic<Partial<IGraphicAttribute>>): void {\n    if (this.hooks.onRemove.taps.length) {\n      this.hooks.onRemove.call(graphic);\n    }\n  }\n  onRelease(graphic: IGraphic<Partial<IGraphicAttribute>>): void {\n    if (this.hooks.onRelease.taps.length) {\n      this.hooks.onRelease.call(graphic);\n    }\n  }\n  onAddIncremental(graphic: IGraphic, group: IGroup, stage: IStage): void {\n    if (this.hooks.onAddIncremental.taps.length) {\n      this.hooks.onAddIncremental.call(graphic, group, stage);\n    }\n  }\n  onClearIncremental(group: IGroup, stage: IStage): void {\n    if (this.hooks.onClearIncremental.taps.length) {\n      this.hooks.onClearIncremental.call(group, stage);\n    }\n  }\n  beforeUpdateAABBBounds(graphic: IGraphic, stage: IStage, willUpdate: boolean, bounds: IAABBBounds) {\n    if (this.hooks.beforeUpdateAABBBounds.taps.length) {\n      this.hooks.beforeUpdateAABBBounds.call(graphic, stage, willUpdate, bounds);\n    }\n  }\n  afterUpdateAABBBounds(\n    graphic: IGraphic,\n    stage: IStage,\n    bounds: IAABBBounds,\n    params: { globalAABBBounds: IAABBBounds },\n    selfChange: boolean\n  ) {\n    if (this.hooks.afterUpdateAABBBounds.taps.length) {\n      this.hooks.afterUpdateAABBBounds.call(graphic, stage, bounds, params, selfChange);\n    }\n  }\n  clearAABBBounds(graphic: IGraphic, stage: IStage, b: IAABBBounds) {\n    if (this.hooks.clearAABBBounds.taps.length) {\n      this.hooks.clearAABBBounds.call(graphic, stage, b);\n    }\n  }\n  // TODO delete\n  updatePathProxyAABBBounds(aabbBounds: IAABBBounds, graphic?: IGraphic): boolean {\n    const path = typeof graphic.pathProxy === 'function' ? graphic.pathProxy(graphic.attribute) : graphic.pathProxy;\n    if (!path) {\n      return false;\n    }\n    const boundsContext = new BoundsContext(aabbBounds);\n    renderCommandList(path.commandList, boundsContext, 0, 0);\n    return true;\n  }\n\n  updateHTMLTextAABBBounds(\n    attribute: ITextGraphicAttribute,\n    textTheme: Required<ITextGraphicAttribute>,\n    aabbBounds: IAABBBounds,\n    graphic?: IText\n  ) {\n    const { textAlign, textBaseline } = attribute;\n    if (attribute.forceBoundsHeight != null) {\n      const h = isNumber(attribute.forceBoundsHeight) ? attribute.forceBoundsHeight : attribute.forceBoundsHeight();\n      const dy = textLayoutOffsetY(textBaseline, h, h);\n      aabbBounds.set(aabbBounds.x1, dy, aabbBounds.x2, dy + h);\n    }\n    if (attribute.forceBoundsWidth != null) {\n      const w = isNumber(attribute.forceBoundsWidth) ? attribute.forceBoundsWidth : attribute.forceBoundsWidth();\n      const dx = textDrawOffsetX(textAlign, w);\n      aabbBounds.set(dx, aabbBounds.y1, dx + w, aabbBounds.y2);\n    }\n  }\n\n  combindShadowAABBBounds(bounds: IAABBBounds, graphic?: IGraphic) {\n    // 合并shadowRoot的Bounds\n    if (graphic && graphic.shadowRoot) {\n      const b = graphic.shadowRoot.AABBBounds;\n      bounds.union(b);\n    }\n  }\n\n  transformAABBBounds(\n    attribute: Partial<IGraphicAttribute>,\n    aabbBounds: IAABBBounds,\n    theme: Required<IGraphicAttribute>,\n    miter: boolean,\n    graphic?: IGraphic\n  ) {\n    if (!aabbBounds.empty()) {\n      const {\n        scaleX = theme.scaleX,\n        scaleY = theme.scaleY,\n        stroke = theme.stroke,\n        shadowBlur = theme.shadowBlur,\n        lineWidth = theme.lineWidth,\n        pickStrokeBuffer = theme.pickStrokeBuffer,\n        strokeBoundsBuffer = theme.strokeBoundsBuffer\n      } = attribute;\n      const tb1 = this.tempAABBBounds1;\n      const tb2 = this.tempAABBBounds2;\n      if (stroke && lineWidth) {\n        const scaledHalfLineWidth = (lineWidth + pickStrokeBuffer) / Math.abs(scaleX + scaleY);\n        boundStroke(tb1, scaledHalfLineWidth, miter, strokeBoundsBuffer);\n        aabbBounds.union(tb1);\n        tb1.setValue(tb2.x1, tb2.y1, tb2.x2, tb2.y2);\n      }\n      if (shadowBlur) {\n        const { shadowOffsetX = theme.shadowOffsetX, shadowOffsetY = theme.shadowOffsetY } = attribute;\n        const shadowBlurWidth = (shadowBlur / Math.abs(scaleX + scaleY)) * 2;\n        boundStroke(tb1, shadowBlurWidth, false, strokeBoundsBuffer + 1);\n        tb1.translate(shadowOffsetX, shadowOffsetY);\n        aabbBounds.union(tb1);\n        // tb1.setValue(tb2.x1, tb2.y1, tb2.x2, tb2.y2);\n      }\n    }\n\n    // 合并shadowRoot的bounds\n    this.combindShadowAABBBounds(aabbBounds, graphic);\n    if (aabbBounds.empty()) {\n      return;\n    }\n\n    // 性能优化逻辑，group类型变换较少，不需要矩阵变换\n    let updateMatrix = true;\n    const m = graphic.transMatrix;\n    if (graphic && graphic.isContainer) {\n      updateMatrix = !(m.a === 1 && m.b === 0 && m.c === 0 && m.d === 1 && m.e === 0 && m.f === 0);\n    }\n    updateMatrix && transformBoundsWithMatrix(aabbBounds, aabbBounds, m);\n\n    // TODO 加上锚点\n    // transformBounds(aabbBounds, x, y, scaleX, scaleY, angle);\n    // if (graphic.attribute.postMatrix) {\n    //   console.log('aaa');\n    //   transformBoundsWithMatrix(aabbBounds, graphic.attribute.postMatrix);\n    // }\n    // aabbBounds.translate(dx, dy);\n  }\n\n  validCheck(\n    attribute: Partial<IGraphicAttribute>,\n    theme: Required<IGraphicAttribute>,\n    aabbBounds: IAABBBounds,\n    graphic?: IGraphic\n  ): boolean {\n    if (!graphic) {\n      return true;\n    }\n\n    // 设置了强制wh，那就直接认为是合法的\n    if (attribute.forceBoundsHeight != null || attribute.forceBoundsWidth != null) {\n      return true;\n    }\n\n    // 是Group或者有影子节点的话，就直接认为是合法的\n    if (graphic.shadowRoot || graphic.isContainer) {\n      return true;\n    }\n\n    const { visible = theme.visible } = attribute;\n\n    if (!(graphic.valid && visible)) {\n      // application.graphicService.beforeUpdateAABBBounds(graphic, graphic.stage, true, aabbBounds);\n      if (!aabbBounds.empty()) {\n        graphic.parent && aabbBounds.transformWithMatrix((graphic.parent as IGroup).globalTransMatrix);\n        this.clearAABBBounds(graphic, graphic.stage, aabbBounds);\n        aabbBounds.clear();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  updateTempAABBBounds(aabbBounds: IAABBBounds) {\n    const tb1 = this.tempAABBBounds1;\n    const tb2 = this.tempAABBBounds2;\n    tb1.setValue(aabbBounds.x1, aabbBounds.y1, aabbBounds.x2, aabbBounds.y2);\n    tb2.setValue(aabbBounds.x1, aabbBounds.y1, aabbBounds.x2, aabbBounds.y2);\n\n    return { tb1, tb2 };\n  }\n}\n"]}