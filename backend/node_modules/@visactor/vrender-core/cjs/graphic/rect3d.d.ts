import type { GraphicType, IFace3d, IRect3d, IRect3dGraphicAttribute } from '../interface';
import { Rect } from './rect';
export declare class Rect3d extends Rect implements IRect3d {
    type: GraphicType;
    attribute: IRect3dGraphicAttribute;
    static NOWORK_ANIMATE_ATTR: {
        strokeSeg: number;
        boundsPadding: number;
        pickMode: number;
        boundsMode: number;
        customPickShape: number;
        pickable: number;
        childrenPickable: number;
        visible: number;
        zIndex: number;
        layout: number;
        keepDirIn3d: number;
        globalZIndex: number;
        outerBorder: number;
        innerBorder: number;
        lineDash: number;
        lineCap: number;
        lineJoin: number;
        miterLimit: number;
        strokeBoundsBuffer: number;
        scaleCenter: number;
        anchor: number;
        anchor3d: number;
        postMatrix: number;
        backgroundMode: number;
        background: number;
        texture: number;
        cursor: number;
        html: number;
    };
    constructor(params: IRect3dGraphicAttribute);
    findFace(): IFace3d;
    getNoWorkAnimateAttr(): Record<string, number>;
}
export declare function createRect3d(attributes: IRect3dGraphicAttribute): IRect3d;
