{"version":3,"sources":["../src/graphic/star.ts"],"names":[],"mappings":"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","file":"star.js","sourcesContent":["import type { IAABBBounds, IPointLike } from '@visactor/vutils';\nimport { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from './graphic';\nimport type { IStar, IStarGraphicAttribute } from '../interface/graphic/star';\nimport { getTheme } from './theme';\nimport { application } from '../application';\nimport type { GraphicType } from '../interface';\nimport { CustomPath2D } from '../common/custom-path2d';\nimport { STAR_NUMBER_TYPE } from './constants';\n\nconst STAR_UPDATE_TAG_KEY = ['width', 'height', 'spikes', 'thickness', ...GRAPHIC_UPDATE_TAG_KEY];\n\nexport class Star extends Graphic<IStarGraphicAttribute> implements IStar {\n  type: GraphicType = 'star';\n\n  static NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;\n\n  _cachedPoints: IPointLike[] = [];\n\n  constructor(params: IStarGraphicAttribute) {\n    super(params);\n    this.numberType = STAR_NUMBER_TYPE;\n  }\n\n  isValid(): boolean {\n    return super.isValid() && this._isValid();\n  }\n\n  protected _isValid(): boolean {\n    const { width, height, spikes } = this.attribute;\n    return (\n      (width == null || width > 0) &&\n      (height == null || height > 0) &&\n      (spikes == null || (spikes >= 3 && Number.isInteger(spikes)))\n    );\n  }\n\n  getGraphicTheme(): Required<IStarGraphicAttribute> {\n    return getTheme(this).star;\n  }\n\n  protected updateAABBBounds(\n    attribute: IStarGraphicAttribute,\n    rectTheme: Required<IStarGraphicAttribute>,\n    aabbBounds: IAABBBounds\n  ) {\n    if (!this.updatePathProxyAABBBounds(aabbBounds)) {\n      const { width = 0, height = 0 } = attribute;\n      if (isFinite(width) || isFinite(height)) {\n        aabbBounds.set(0, 0, width, height);\n      }\n    }\n\n    const { tb1, tb2 } = application.graphicService.updateTempAABBBounds(aabbBounds);\n\n    aabbBounds.union(tb1);\n    tb1.setValue(tb2.x1, tb2.y1, tb2.x2, tb2.y2);\n\n    this.widthWithoutTransform = aabbBounds.x2 - aabbBounds.x1;\n    this.heightWithoutTransform = aabbBounds.y2 - aabbBounds.y1;\n\n    application.graphicService.transformAABBBounds(attribute, aabbBounds, rectTheme, false, this);\n    return aabbBounds;\n  }\n\n  getCachedPoints(): IPointLike[] {\n    if (this.shouldUpdateShape()) {\n      this._cachedPoints = this.getStarPoints(this.attribute, this.getGraphicTheme());\n      this.clearUpdateShapeTag();\n    }\n    return this._cachedPoints;\n  }\n\n  /**\n   * Calculate star points based on width, height, spikes, and thickness\n   */\n  private getStarPoints(attribute: IStarGraphicAttribute, starTheme: Required<IStarGraphicAttribute>): IPointLike[] {\n    const {\n      width = starTheme.width,\n      height = starTheme.height,\n      spikes = starTheme.spikes,\n      thickness = starTheme.thickness\n    } = attribute;\n\n    // Ensure valid values\n    const validSpikes = Math.max(3, Math.floor(spikes));\n    const validThickness = Math.max(0, Math.min(1, thickness));\n\n    const points: IPointLike[] = [];\n    const outerRadius = Math.min(width, height) / 2;\n    const innerRadius = outerRadius * (1 - validThickness);\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Calculate points for the star\n    for (let i = 0; i < validSpikes * 2; i++) {\n      // Alternate between outer and inner radius\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\n      const angle = (Math.PI / validSpikes) * i;\n\n      // Scale X based on width and Y based on height\n      const scaleX = width / (outerRadius * 2);\n      const scaleY = height / (outerRadius * 2);\n\n      points.push({\n        x: centerX + Math.sin(angle) * radius * scaleX,\n        y: centerY - Math.cos(angle) * radius * scaleY\n      });\n    }\n\n    this._cachedPoints = points;\n\n    return points;\n  }\n\n  protected _interpolate(key: string, ratio: number, lastStepVal: any, nextStepVal: any, nextAttributes: any): void {\n    if (key === 'width' || key === 'height' || key === 'spikes' || key === 'thickness') {\n      nextAttributes[key] = lastStepVal + (nextStepVal - lastStepVal) * ratio;\n    }\n  }\n\n  protected needUpdateTags(keys: string[]): boolean {\n    return super.needUpdateTags(keys, STAR_UPDATE_TAG_KEY);\n  }\n\n  protected needUpdateTag(key: string): boolean {\n    return super.needUpdateTag(key, STAR_UPDATE_TAG_KEY);\n  }\n\n  toCustomPath() {\n    let path = super.toCustomPath();\n    if (path) {\n      return path;\n    }\n    const starTheme = this.getGraphicTheme();\n    const points = this.getStarPoints(this.attribute, starTheme);\n    path = new CustomPath2D();\n\n    points.forEach((point, index) => {\n      if (index === 0) {\n        path.moveTo(point.x, point.y);\n      } else {\n        path.lineTo(point.x, point.y);\n      }\n    });\n    path.closePath();\n\n    return path;\n  }\n\n  clone() {\n    return new Star({ ...this.attribute });\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Star.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createStar(attributes: IStarGraphicAttribute): IStar {\n  return new Star(attributes);\n}\n"]}