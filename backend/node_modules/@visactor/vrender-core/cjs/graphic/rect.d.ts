import type { IAABBBounds } from '@visactor/vutils';
import { Graphic } from './graphic';
import type { GraphicType, ICustomPath2D, IRect, IRectGraphicAttribute } from '../interface';
export declare class Rect extends Graphic<IRectGraphicAttribute> implements IRect {
    type: GraphicType;
    static NOWORK_ANIMATE_ATTR: {
        strokeSeg: number;
        boundsPadding: number;
        pickMode: number;
        boundsMode: number;
        customPickShape: number;
        pickable: number;
        childrenPickable: number;
        visible: number;
        zIndex: number;
        layout: number;
        keepDirIn3d: number;
        globalZIndex: number;
        outerBorder: number;
        innerBorder: number;
        lineDash: number;
        lineCap: number;
        lineJoin: number;
        miterLimit: number;
        strokeBoundsBuffer: number;
        scaleCenter: number;
        anchor: number;
        anchor3d: number;
        postMatrix: number;
        backgroundMode: number;
        background: number;
        texture: number;
        cursor: number;
        html: number;
    };
    constructor(params: IRectGraphicAttribute);
    isValid(): boolean;
    private _isValid;
    getGraphicTheme(): Required<IRectGraphicAttribute>;
    protected updateAABBBounds(attribute: IRectGraphicAttribute, rectTheme: Required<IRectGraphicAttribute>, aabbBounds: IAABBBounds): import("@visactor/vutils").IBounds;
    protected needUpdateTags(keys: string[]): boolean;
    protected needUpdateTag(key: string): boolean;
    toCustomPath(): ICustomPath2D;
    clone(): Rect;
    getNoWorkAnimateAttr(): Record<string, number>;
}
export declare function createRect(attributes: IRectGraphicAttribute): IRect;
