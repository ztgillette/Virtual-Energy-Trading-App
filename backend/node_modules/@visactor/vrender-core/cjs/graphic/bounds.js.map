{"version":3,"sources":["../src/graphic/bounds.ts"],"names":[],"mappings":";;;AACA,uDAAmD;AAInD,IAAI,IAAS,CAAC;AACd,SAAgB,aAAa,CAAC,MAAyB;IACrD,IAAI,CAAC,IAAI,EAAE;QACT,IAAI,GAAG,gCAAc,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;KACjD;IACD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC5B,OAAO,IAAI,CAAC,UAAU,CAAC;AACzB,CAAC;AAND,sCAMC;AAGD,IAAI,QAAa,CAAC;AAClB,SAAgB,iBAAiB,CAAC,MAA6B;IAC7D,IAAI,CAAC,QAAQ,EAAE;QACb,QAAQ,GAAG,gCAAc,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KACzD;IACD,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC/B,OAAO,QAAQ,CAAC,UAAU,CAAC;AAC7B,CAAC;AAND,8CAMC","file":"bounds.js","sourcesContent":["import type { IRichTextAttribute, IRichTextGraphicAttribute, ITextGraphicAttribute } from '../interface';\nimport { graphicCreator } from './graphic-creator';\n// import { createRichText, createText } from './graphic-creator';\n\ntype ITextBoundsParams = Partial<ITextGraphicAttribute>;\nlet text: any;\nexport function getTextBounds(params: ITextBoundsParams) {\n  if (!text) {\n    text = graphicCreator.CreateGraphic('text', {});\n  }\n  text.initAttributes(params);\n  return text.AABBBounds;\n}\n\ntype IRichTextBoundsParams = Partial<IRichTextGraphicAttribute>;\nlet richText: any;\nexport function getRichTextBounds(params: IRichTextBoundsParams) {\n  if (!richText) {\n    richText = graphicCreator.CreateGraphic('richtext', {});\n  }\n  richText.setAttributes(params);\n  return richText.AABBBounds;\n}\n"]}