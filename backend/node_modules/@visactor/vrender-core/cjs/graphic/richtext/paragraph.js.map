{"version":3,"sources":["../src/graphic/richtext/paragraph.ts"],"names":[],"mappings":"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","file":"paragraph.js","sourcesContent":["import { calculateLineHeight } from '../../common/utils';\nimport type { IContext2d, IRichTextParagraphCharacter } from '../../interface';\nimport { measureTextCanvas, getStrByWithCanvas } from './utils';\n\nfunction getFixedLRTB(left: number, right: number, top: number, bottom: number) {\n  const leftInt = Math.round(left);\n  const topInt = Math.round(top);\n  const rightInt = Math.round(right);\n  const bottomInt = Math.round(bottom);\n  const _left = left > leftInt ? leftInt : leftInt - 0.5;\n  const _top = top > topInt ? topInt : topInt - 0.5;\n  const _right = rightInt > right ? rightInt : rightInt + 0.5;\n  const _bottom = bottomInt > bottom ? bottomInt : bottomInt + 0.5;\n  return {\n    left: _left,\n    top: _top,\n    right: _right,\n    bottom: _bottom\n  };\n}\n\n/**\n * 部分代码参考 https://github.com/danielearwicker/carota/\n * The MIT License (MIT)\n\n  \"Carota\" - Copyright (c) 2013 Daniel Earwicker\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n */\n\n// 文字段\n// 参考carota\n// https://github.com/danielearwicker/carota/blob/master/src/text.js\nexport default class Paragraph {\n  text: string;\n  ascent: number;\n  descent: number;\n  width: number;\n  height: number;\n  lineHeight: number;\n  fontSize: number;\n  length: number;\n  newLine: boolean;\n  character: IRichTextParagraphCharacter;\n  left: number;\n  top: number;\n  // rotate?: number;\n  direction?: 'horizontal' | 'vertical';\n  // bounds?: Bounds;\n  widthOrigin?: number;\n  heightOrigin?: number;\n  textBaseline?: CanvasTextBaseline;\n  ascentDescentMode?: 'actual' | 'font';\n\n  ellipsis: 'normal' | 'add' | 'replace' | 'hide';\n  ellipsisStr: string;\n  ellipsisWidth: number;\n  ellipsisOtherParagraphWidth: number;\n  verticalEllipsis?: boolean;\n  overflow?: boolean;\n  space?: number;\n  dx?: number;\n  dy?: number;\n\n  constructor(\n    text: string,\n    newLine: boolean,\n    character: IRichTextParagraphCharacter,\n    ascentDescentMode?: 'actual' | 'font'\n  ) {\n    // 测量文字\n    this.fontSize = character.fontSize || 16;\n    this.textBaseline = character.textBaseline || 'alphabetic';\n    this.ascentDescentMode = ascentDescentMode;\n\n    // 处理行高：\n    // lineHeight为数字时，大于fontSize取lineHeight，小于fontSize时取fontSize\n    // lineHeight不为数字时，统一认为lineHeight为'normal'，值取1.2 * fontSize\n    const lineHeight = calculateLineHeight(character.lineHeight, this.fontSize);\n    if (typeof lineHeight === 'number') {\n      this.lineHeight = lineHeight > this.fontSize ? lineHeight : this.fontSize;\n    } else {\n      this.lineHeight = Math.floor(1.2 * this.fontSize);\n    }\n\n    this.height = this.lineHeight;\n\n    const { ascent, height, descent, width } = measureTextCanvas(text, character, this.ascentDescentMode);\n\n    let halfDetaHeight = 0;\n    let deltaAscent = 0;\n    let deltaDescent = 0;\n    if (this.height > height) {\n      // measureTextCanvas测量出的是纯文字高度，this.height是考虑行高后的高度\n      // 如果this.height > height，将超过的高度平均分配到ascent和descent上\n      halfDetaHeight = (this.height - height) / 2;\n      deltaAscent = Math.ceil(halfDetaHeight);\n      deltaDescent = Math.floor(halfDetaHeight);\n    }\n\n    if (this.textBaseline === 'top') {\n      this.ascent = halfDetaHeight;\n      this.descent = height - halfDetaHeight;\n    } else if (this.textBaseline === 'bottom') {\n      this.ascent = height - halfDetaHeight;\n      this.descent = halfDetaHeight;\n    } else if (this.textBaseline === 'middle') {\n      this.ascent = this.height / 2;\n      this.descent = this.height / 2;\n    } else {\n      this.ascent = ascent + deltaAscent;\n      this.descent = descent + deltaDescent;\n    }\n\n    this.length = text.length;\n    this.width = width || 0;\n    this.text = text || '';\n    this.newLine = newLine || false;\n    this.character = character;\n\n    this.left = 0;\n    this.top = 0;\n\n    this.ellipsis = 'normal';\n    this.ellipsisWidth = 0;\n    this.ellipsisOtherParagraphWidth = 0;\n    this.space = character.space;\n    this.dx = character.dx ?? 0;\n    this.dy = character.dy ?? 0;\n\n    // 处理旋转\n    if (character.direction === 'vertical') {\n      this.direction = character.direction;\n      this.widthOrigin = this.width;\n      this.heightOrigin = this.height;\n      // const bounds = new Bounds();\n      // bounds.set(0, 0, this.width, this.height);\n      // bounds.rotate(Math.PI / 2, this.width / 2, this.height / 2);\n      // this.bounds = bounds;\n      // this.width = bounds.width();\n      // this.height = bounds.height();\n      this.width = this.heightOrigin;\n      this.height = this.widthOrigin;\n      this.lineHeight = this.height;\n    }\n    this.ellipsisStr = '...';\n  }\n\n  updateWidth() {\n    const { width } = measureTextCanvas(this.text, this.character, this.ascentDescentMode);\n    this.width = width;\n    if (this.direction === 'vertical') {\n      this.widthOrigin = this.width;\n      this.width = this.heightOrigin;\n      this.height = this.widthOrigin;\n    }\n  }\n\n  drawBackground(\n    ctx: IContext2d,\n    top: number,\n    ascent: number,\n    deltaLeft: number,\n    isLineFirst: boolean,\n    textAlign: string,\n    lineHeight: number\n  ) {\n    if (\n      !(\n        this.text !== '' &&\n        this.text !== '\\n' &&\n        this.character.background &&\n        (!this.character.backgroundOpacity || this.character.backgroundOpacity > 0)\n      )\n    ) {\n      return;\n    }\n    let baseline = top + ascent;\n    let text = this.text;\n    let left = this.left + deltaLeft;\n    baseline += this.top;\n    let direction = this.direction;\n\n    if (this.verticalEllipsis) {\n      text = this.ellipsisStr;\n      direction = 'vertical';\n      baseline -= this.ellipsisWidth / 2;\n    } else if (this.ellipsis === 'hide') {\n      return;\n    } else if (this.ellipsis === 'add') {\n      text += this.ellipsisStr;\n\n      if (textAlign === 'right' || textAlign === 'end') {\n        left -= this.ellipsisWidth;\n      }\n    } else if (this.ellipsis === 'replace') {\n      // 找到需要截断的字符长度\n      // const index = getStrByWith(text, this.width - this.ellipsisWidth + this.ellipsisOtherParagraphWidth, this.style, text.length - 1);\n      const index = getStrByWithCanvas(\n        text,\n        (direction === 'vertical' ? this.height : this.width) - this.ellipsisWidth + this.ellipsisOtherParagraphWidth,\n        this.character,\n        text.length - 1\n      );\n      text = text.slice(0, index);\n      text += this.ellipsisStr;\n\n      if (textAlign === 'right' || textAlign === 'end') {\n        if (direction === 'vertical') {\n          // baseline -= this.ellipsisWidth - width;\n        } else {\n          const { width } = measureTextCanvas(this.text.slice(index), this.character, this.ascentDescentMode);\n          left -= this.ellipsisWidth - width;\n        }\n      }\n    }\n    // 背景稍微扩充一些buf，否则会出现白线\n    const right = left + (this.widthOrigin || this.width);\n    const bottom = top + lineHeight;\n    const lrtb = getFixedLRTB(left, right, top, bottom);\n\n    return {\n      ...lrtb,\n      fillStyle: this.character.background,\n      globalAlpha: this.character.backgroundOpacity\n    };\n  }\n\n  draw(\n    ctx: IContext2d,\n    top: number,\n    ascent: number,\n    deltaLeft: number,\n    isLineFirst: boolean,\n    textAlign: string,\n    lineHeight: number\n  ) {\n    let baseline = top + ascent;\n    let text = this.text;\n    let left = this.left + deltaLeft + (this.space ?? 0) / 2;\n    baseline += this.top;\n    let direction = this.direction;\n\n    if (this.verticalEllipsis) {\n      text = this.ellipsisStr;\n      direction = 'vertical';\n      baseline -= this.ellipsisWidth / 2;\n    } else if (this.ellipsis === 'hide') {\n      return;\n    } else if (this.ellipsis === 'add') {\n      text += this.ellipsisStr;\n\n      if (textAlign === 'right' || textAlign === 'end') {\n        left -= this.ellipsisWidth;\n      }\n    } else if (this.ellipsis === 'replace') {\n      // 找到需要截断的字符长度\n      // const index = getStrByWith(text, this.width - this.ellipsisWidth + this.ellipsisOtherParagraphWidth, this.style, text.length - 1);\n      const index = getStrByWithCanvas(\n        text,\n        (direction === 'vertical' ? this.height : this.width) - this.ellipsisWidth + this.ellipsisOtherParagraphWidth,\n        this.character,\n        text.length - 1\n      );\n      text = text.slice(0, index);\n      text += this.ellipsisStr;\n\n      if (textAlign === 'right' || textAlign === 'end') {\n        if (direction === 'vertical') {\n          // baseline -= this.ellipsisWidth - width;\n        } else {\n          const { width } = measureTextCanvas(this.text.slice(index), this.character, this.ascentDescentMode);\n          left -= this.ellipsisWidth - width;\n        }\n      }\n    }\n\n    // prepareContext(ctx);\n    switch (this.character.script) {\n      case 'super':\n        baseline -= this.ascent * (1 / 3);\n        break;\n      case 'sub':\n        baseline += this.descent / 2;\n        break;\n    }\n\n    // if (isLineFirst) {\n    //   const result = regFirstSpace.exec(text);\n    //   if (result?.index !== 0) {\n    //     text = text.slice(result?.index);\n    //   }\n    // }\n\n    // 处理旋转\n    if (direction === 'vertical') {\n      ctx.save();\n      ctx.rotateAbout(Math.PI / 2, left, baseline);\n      ctx.translate(-(this.heightOrigin as number) || -this.lineHeight / 2, -this.descent / 2);\n      ctx.translate(left, baseline);\n      left = 0;\n      baseline = 0;\n    }\n\n    // if (this.character.fill) {\n    //   if (this.character.background && (!this.character.backgroundOpacity || this.character.backgroundOpacity > 0)) {\n    //     const fillStyle = ctx.fillStyle;\n    //     const globalAlpha = ctx.globalAlpha;\n    //     ctx.fillStyle = this.character.background;\n    //     if (this.character.backgroundOpacity !== void 0) {\n    //       ctx.globalAlpha = this.character.backgroundOpacity;\n    //     }\n    //     // 背景稍微扩充一些buf，否则会出现白线\n    //     const right = left + (this.widthOrigin || this.width);\n    //     const bottom = top + lineHeight;\n    //     const lrtb = getFixedLRTB(left, right, top, bottom);\n    //     ctx.fillRect(lrtb.left, lrtb.top, lrtb.right - lrtb.left, lrtb.bottom - lrtb.top);\n    //     ctx.fillStyle = fillStyle;\n    //     ctx.globalAlpha = globalAlpha;\n    //   }\n    // }\n\n    const { lineWidth = 1 } = this.character;\n    if (this.character.stroke && lineWidth) {\n      ctx.strokeText(text, left + this.dx, baseline + this.dy);\n    }\n\n    if (this.character.fill) {\n      ctx.fillText(text, left + this.dx, baseline + this.dy);\n    }\n\n    if (this.character.fill) {\n      if (this.character.lineThrough || this.character.underline) {\n        if (this.character.underline) {\n          const top = 1 + baseline;\n          const right = left + (this.widthOrigin || this.width);\n          const bottom = top + (this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1);\n          const lrtb = getFixedLRTB(left, right, top, bottom);\n          ctx.fillRect(\n            lrtb.left,\n            1 + baseline,\n            lrtb.right - lrtb.left,\n            this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1\n          );\n        }\n        if (this.character.lineThrough) {\n          const top = 1 + baseline - this.ascent / 2;\n          const right = left + (this.widthOrigin || this.width);\n          const bottom = top + (this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1);\n          const lrtb = getFixedLRTB(left, right, top, bottom);\n          ctx.fillRect(\n            lrtb.left,\n            1 + baseline - this.ascent / 2,\n            lrtb.right - lrtb.left,\n            this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1\n          );\n        }\n      } else if (this.character.textDecoration === 'underline') {\n        const top = 1 + baseline;\n        const right = left + (this.widthOrigin || this.width);\n        const bottom = top + (this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1);\n        const lrtb = getFixedLRTB(left, right, top, bottom);\n        ctx.fillRect(\n          lrtb.left,\n          1 + baseline,\n          lrtb.right - lrtb.left,\n          this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1\n        );\n      } else if (this.character.textDecoration === 'line-through') {\n        const top = 1 + baseline - this.ascent / 2;\n        const right = left + (this.widthOrigin || this.width);\n        const bottom = top + (this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1);\n        const lrtb = getFixedLRTB(left, right, top, bottom);\n        ctx.fillRect(\n          lrtb.left,\n          1 + baseline - this.ascent / 2,\n          lrtb.right - lrtb.left,\n          this.character.fontSize ? Math.max(1, Math.floor(this.character.fontSize / 10)) : 1\n        );\n      }\n    }\n\n    if (direction === 'vertical') {\n      ctx.restore();\n    }\n  }\n\n  getWidthWithEllips(direction: string): number {\n    let text = this.text;\n    // const direction = this.direction;\n    const width = direction === 'vertical' ? this.height : this.width;\n    // const height = direction === 'vertical' ? this.width: this.height;\n\n    if (this.ellipsis === 'hide') {\n      return width;\n    } else if (this.ellipsis === 'add') {\n      return width + this.ellipsisWidth;\n    } else if (this.ellipsis === 'replace') {\n      // 找到需要截断的字符长度\n      // const index = getStrByWith(text, width - this.ellipsisWidth + this.ellipsisOtherParagraphWidth, this.style, text.length - 1);\n      const index = getStrByWithCanvas(\n        text,\n        width - this.ellipsisWidth + this.ellipsisOtherParagraphWidth,\n        this.character,\n        text.length - 1\n      );\n      text = text.slice(0, index);\n      text += this.ellipsisStr;\n\n      const { width: measureWidth } = measureTextCanvas(this.text.slice(index), this.character, this.ascentDescentMode);\n      return width + this.ellipsisWidth - measureWidth;\n    }\n    return width;\n  }\n}\n\nexport function seperateParagraph(paragraph: Paragraph, index: number) {\n  const text1 = paragraph.text.slice(0, index);\n  const text2 = paragraph.text.slice(index);\n  const p1 = new Paragraph(text1, paragraph.newLine, paragraph.character, paragraph.ascentDescentMode);\n  const p2 = new Paragraph(text2, true, paragraph.character, paragraph.ascentDescentMode);\n\n  return [p1, p2];\n}\n"]}