{"version":3,"sources":["../src/graphic/richtext/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import type { IBoundsLike } from '@visactor/vutils';\nimport { application } from '../../application';\nimport { createColor } from '../../common/canvas-utils';\nimport type { IContext2d, ITextStyleParams, IRichTextParagraphCharacter } from '../../interface';\nimport { DEFAULT_TEXT_FONT_FAMILY } from '../../constants';\n\nexport const DIRECTION_KEY = {\n  horizontal: {\n    width: 'width',\n    height: 'height',\n    left: 'left',\n    top: 'top',\n    x: 'x',\n    y: 'y',\n    bottom: 'bottom'\n  },\n  vertical: {\n    width: 'height',\n    height: 'width',\n    left: 'top',\n    top: 'left',\n    x: 'y',\n    y: 'x',\n    bottom: 'right'\n  }\n};\n\nconst defaultFormatting = {\n  fontSize: 16,\n  fontFamily: DEFAULT_TEXT_FONT_FAMILY,\n  fill: true,\n  stroke: false,\n  fontWeight: 'normal',\n  lineHeight: 'normal',\n  fontStyle: 'normal', // normal, italic, oblique\n  textDecoration: 'none', // none, underline, line-through\n  textAlign: 'left', // left, right, center\n  script: 'normal' // normal, sub, super\n};\nconst nbsp = String.fromCharCode(160);\n\nexport const regLetter = /\\w|\\(|\\)|-/;\nconst regPunctuation = /[.?!,;:/，。？！、；：]/;\nexport const regFirstSpace = /\\S/;\n\nconst setTextStyle = (ctx: IContext2d, character: IRichTextParagraphCharacter) => {\n  let fontSize = character.fontSize || 16;\n  switch (character.script) {\n    case 'super':\n    case 'sub':\n      fontSize *= 0.8;\n      break;\n  }\n\n  ctx.setTextStyle({\n    textAlign: 'left',\n    textBaseline: character.textBaseline || 'alphabetic',\n    fontStyle: character.fontStyle || '',\n    fontWeight: character.fontWeight || '',\n    fontSize,\n    fontFamily: character.fontFamily\n  } as ITextStyleParams);\n};\n\n// Applies the style of a run to the canvas context\nexport function applyFillStyle(ctx: IContext2d, character: IRichTextParagraphCharacter, b?: IBoundsLike) {\n  const fillStyle = (character && (character.fill as string)) || defaultFormatting.fill;\n  if (!fillStyle) {\n    ctx.globalAlpha = 0;\n    return;\n  }\n\n  const { fillOpacity = 1, opacity = 1 } = character;\n\n  ctx.globalAlpha = fillOpacity * opacity;\n  ctx.fillStyle = b ? createColor(ctx, fillStyle, { AABBBounds: b }) : (fillStyle as string);\n\n  setTextStyle(ctx, character);\n}\n\nexport function applyStrokeStyle(ctx: IContext2d, character: IRichTextParagraphCharacter) {\n  const strokeStyle = (character && (character.stroke as string)) || (defaultFormatting.stroke as any);\n  if (!strokeStyle) {\n    ctx.globalAlpha = 0;\n    return;\n  }\n\n  const { strokeOpacity = 1, opacity = 1 } = character;\n\n  ctx.globalAlpha = strokeOpacity * opacity;\n  ctx.lineWidth = character && typeof character.lineWidth === 'number' ? character.lineWidth : 1;\n  ctx.strokeStyle = strokeStyle as string;\n\n  setTextStyle(ctx, character);\n}\n\nexport function prepareContext(ctx: IContext2d) {\n  ctx.setTextStyle({\n    textAlign: 'left',\n    textBaseline: 'bottom'\n  });\n}\n\n// 确认达到availableWidth的字符串截取index\nexport function getStrByWithDom(\n  desc: string,\n  width: number,\n  style: string,\n  guessIndex: number,\n  needTestLetter?: boolean\n): number {\n  desc = desc.replace(/\\s/g, nbsp);\n\n  // 测量用DOM\n  const span = document.createElement('span');\n  span.setAttribute('style', style);\n  span.style.visibility = 'hidden';\n  span.style.whiteSpace = 'nowrap';\n  document.body.appendChild(span);\n\n  // 测量从头到当前位置宽度以及从头到下一个字符位置宽度\n  let index = guessIndex;\n  let temp = desc.slice(0, index);\n  span.innerText = temp;\n  let tempWidth = span.offsetWidth;\n\n  let tempNext = desc.slice(0, index + 1);\n  span.innerText = tempNext;\n  let tempWidthNext = span.offsetWidth;\n\n  // 到当前位置宽度 < width && 到下一个字符位置宽度 > width时，认为找到准确阶段位置\n  while (tempWidth > width || tempWidthNext <= width) {\n    if (tempWidth > width) {\n      index--;\n    } else {\n      index++;\n    }\n\n    temp = desc.slice(0, index);\n    span.innerText = temp;\n    tempWidth = span.offsetWidth;\n\n    tempNext = desc.slice(0, index + 1);\n    span.innerText = tempNext;\n    tempWidthNext = span.offsetWidth;\n  }\n\n  // 处理特殊情况\n  if (needTestLetter) {\n    index = testLetter(desc, index);\n  }\n\n  document.body.removeChild(span);\n  return index;\n}\nexport function getStrByWithCanvas(\n  desc: string,\n  width: number,\n  character: IRichTextParagraphCharacter,\n  // ctx: IContext2d,\n  guessIndex: number,\n  needTestLetter?: boolean\n): number {\n  if (desc.length <= 1) {\n    return 0;\n  }\n  if (!width || width <= 0) {\n    return 0;\n  }\n  const textMeasure = application.graphicUtil.textMeasure;\n  // const measurement = textMeasure.measureText(text, character);\n\n  // 测量从头到当前位置宽度以及从头到下一个字符位置宽度\n  let index = guessIndex;\n  let temp = desc.slice(0, index);\n  let tempWidth = Math.floor(textMeasure.measureText(temp, character as any).width);\n\n  let tempNext = desc.slice(0, index + 1);\n  let tempWidthNext = Math.floor(textMeasure.measureText(tempNext, character as any).width);\n\n  // 到当前位置宽度 < width && 到下一个字符位置宽度 > width时，认为找到准确阶段位置\n  while (tempWidth > width || tempWidthNext <= width) {\n    if (tempWidth > width) {\n      index--;\n    } else {\n      index++;\n    }\n\n    if (index > desc.length) {\n      index = desc.length;\n      break;\n    } else if (index < 0) {\n      index = 0;\n      break;\n    }\n\n    temp = desc.slice(0, index);\n    tempWidth = Math.floor(textMeasure.measureText(temp, character as any).width);\n\n    tempNext = desc.slice(0, index + 1);\n    tempWidthNext = Math.floor(textMeasure.measureText(tempNext, character as any).width);\n  }\n\n  // 处理特殊情况\n  if (needTestLetter) {\n    index = testLetter(desc, index);\n  }\n\n  return index;\n}\n\nexport function getWordStartEndIdx(string: string, index: number) {\n  let startIdx = index;\n  // 切分前后都是英文字母数字下划线，向前找到非英文字母处换行\n  while (\n    (regLetter.test(string[startIdx - 1]) && regLetter.test(string[startIdx])) ||\n    // 行首标点符号处理\n    regPunctuation.test(string[startIdx])\n  ) {\n    startIdx--;\n    // 无法满足所有条件，放弃匹配，直接截断，避免陷入死循环\n    if (startIdx <= 0) {\n      break;\n    }\n  }\n\n  let endIdx = index;\n  // 切分前后都是英文字母数字下划线，向前找到非英文字母处换行\n  while (\n    (regLetter.test(string[endIdx + 1]) && regLetter.test(string[endIdx])) ||\n    // 行首标点符号处理\n    regPunctuation.test(string[endIdx])\n  ) {\n    endIdx++;\n    // 无法满足所有条件，放弃匹配，直接截断，避免陷入死循环\n    if (endIdx >= string.length) {\n      break;\n    }\n  }\n  endIdx = Math.min(endIdx + 1, string.length);\n\n  return {\n    startIdx,\n    endIdx\n  };\n}\n\n/**\n * 向前找到单词结尾处换行\n * @param string\n * @param index\n * @param negativeWrongMatch 如果为true，那么如果无法匹配就会向后找到单词的结尾，否则就直接返回index\n * @returns\n */\nexport function testLetter(string: string, index: number, negativeWrongMatch: boolean = false): number {\n  let i = index;\n  // 切分前后都是英文字母数字下划线，向前找到非英文字母处换行\n  while (\n    (regLetter.test(string[i - 1]) && regLetter.test(string[i])) ||\n    // 行首标点符号处理\n    regPunctuation.test(string[i])\n  ) {\n    i--;\n    // 无法满足所有条件，放弃匹配，直接截断，避免陷入死循环\n    if (i <= 0) {\n      return negativeWrongMatch ? testLetter2(string, index) : index;\n    }\n  }\n  return i;\n}\n\n/**\n * 向后找到单词结尾处换行\n * @param string\n * @param index\n * @returns\n */\nexport function testLetter2(string: string, index: number) {\n  let i = index;\n  // 切分前后都是英文字母数字下划线，向前找到非英文字母处换行\n  while (\n    (regLetter.test(string[i + 1]) && regLetter.test(string[i])) ||\n    // 行首标点符号处理\n    regPunctuation.test(string[i])\n  ) {\n    i++;\n    // 无法满足所有条件，放弃匹配，直接截断，避免陷入死循环\n    if (i >= string.length) {\n      return i;\n    }\n  }\n  return i + 1;\n}\n\n// 测量文字详细信息\nexport function measureTextDom(\n  text: string,\n  style: string\n): { ascent?: number; height?: number; descent?: number; width?: number } {\n  let div;\n\n  const span = document.createElement('span');\n  const block = document.createElement('div');\n  div = document.createElement('div');\n\n  block.style.display = 'inline-block';\n  block.style.width = '1px';\n  block.style.height = '0';\n\n  div.style.visibility = 'hidden';\n  div.style.position = 'absolute';\n  div.style.top = '0';\n  div.style.left = '0';\n  div.style.width = '500px';\n  div.style.height = '200px';\n  div.style.whiteSpace = 'nowrap';\n\n  div.appendChild(span);\n  div.appendChild(block);\n  document.body.appendChild(div);\n\n  const result: { ascent?: number; height?: number; descent?: number; width?: number } = {};\n  try {\n    span.setAttribute('style', style);\n    span.style.whiteSpace = 'nowrap';\n    span.style.display = 'inline-block';\n\n    span.innerHTML = '';\n    span.appendChild(document.createTextNode(text.replace(/\\s/g, nbsp)));\n\n    block.style.verticalAlign = 'baseline';\n    result.ascent = block.offsetTop - span.offsetTop;\n    block.style.verticalAlign = 'bottom';\n    result.height = block.offsetTop - span.offsetTop;\n    result.descent = result.height - result.ascent;\n    result.width = span.offsetWidth;\n  } finally {\n    div.parentNode?.removeChild(div);\n    div = null;\n  }\n  return result;\n}\n\n// 测量文字详细信息\nexport function measureTextCanvas(\n  text: string,\n  character: IRichTextParagraphCharacter,\n  mode: 'actual' | 'font' = 'actual'\n): { ascent: number; height: number; descent: number; width: number } {\n  if (text === '') {\n    return {\n      ascent: 0,\n      height: 0,\n      descent: 0,\n      width: 0\n    };\n  }\n  const textMeasure = application.graphicUtil.textMeasure;\n  const measurement = textMeasure.measureText(text, character as any) as TextMetrics;\n  const result: { ascent: number; height: number; descent: number; width: number } = {\n    ascent: 0,\n    height: 0,\n    descent: 0,\n    width: 0\n  };\n  const ascent = mode === 'actual' ? measurement.actualBoundingBoxAscent : measurement.fontBoundingBoxAscent;\n  const descent = mode === 'actual' ? measurement.actualBoundingBoxDescent : measurement.fontBoundingBoxDescent;\n  if (typeof ascent !== 'number' || typeof descent !== 'number') {\n    result.width = Math.floor(measurement.width);\n    result.height = character.fontSize || 0;\n    result.ascent = result.height;\n    result.descent = 0;\n  } else {\n    result.width = Math.floor(measurement.width);\n    result.height = Math.floor(ascent + descent);\n    result.ascent = Math.floor(ascent);\n    result.descent = result.height - result.ascent;\n  }\n  const space = character.space ?? 0;\n  result.width += space;\n  return result;\n}\n\nexport function getFontString(character: IRichTextParagraphCharacter, ctx: IContext2d | null) {\n  let fontSize = (character && character.fontSize) || defaultFormatting.fontSize;\n\n  if (character) {\n    switch (character.script) {\n      case 'super':\n      case 'sub':\n        fontSize *= 0.8;\n        break;\n    }\n  }\n\n  return (\n    ((character && character.fontStyle) || '') +\n    ' ' +\n    ((character && character.fontWeight) || '') +\n    ' ' +\n    (fontSize || 12) +\n    'px ' +\n    ((character && character.fontFamily) || defaultFormatting.fontFamily)\n  );\n}\n"]}