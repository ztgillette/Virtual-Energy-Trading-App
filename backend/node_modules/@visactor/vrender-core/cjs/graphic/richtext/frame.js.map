{"version":3,"sources":["../src/graphic/richtext/frame.ts"],"names":[],"mappings":"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","file":"frame.js","sourcesContent":["// import { IContext2d } from '../../IContext';\nimport type { IContext2d, IRichTextIcon } from '../../interface';\nimport type Line from './line';\nimport { DIRECTION_KEY } from './utils';\n\n/**\n * 部分代码参考 https://github.com/danielearwicker/carota/\n * The MIT License (MIT)\n\n  \"Carota\" - Copyright (c) 2013 Daniel Earwicker\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n */\n\n// 文字窗口\n// 参考carota\n// https://github.com/danielearwicker/carota/blob/master/src/frame.js\nexport default class Frame {\n  left: number;\n  top: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  actualHeight: number;\n  ellipsis: boolean | string;\n  wordBreak: 'break-word' | 'break-all';\n  verticalDirection: 'top' | 'middle' | 'bottom';\n  lines: Line[];\n  // ctx: IContext2d;\n  globalAlign: 'left' | 'center' | 'right' | 'start' | 'end';\n  globalBaseline: 'top' | 'middle' | 'bottom';\n  layoutDirection: 'horizontal' | 'vertical';\n  directionKey: { width: string; height: string; left: string; top: string; bottom: string };\n  isWidthMax: boolean;\n  isHeightMax: boolean;\n\n  singleLine: boolean;\n\n  icons: Map<string, IRichTextIcon>;\n\n  constructor(\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    ellipsis: boolean | string,\n    wordBreak: 'break-word' | 'break-all',\n    verticalDirection: 'top' | 'middle' | 'bottom',\n    // ctx: IContext2d,\n    globalAlign: 'left' | 'center' | 'right' | 'start' | 'end',\n    globalBaseline: 'top' | 'middle' | 'bottom',\n    layoutDirection: 'horizontal' | 'vertical',\n    isWidthMax: boolean,\n    isHeightMax: boolean,\n    singleLine: boolean,\n    icons?: Map<string, IRichTextIcon>\n  ) {\n    this.left = left;\n    this.top = top;\n    this.width = width;\n    this.height = height;\n    this.actualHeight = 0;\n    this.bottom = top + height;\n    this.right = left + width;\n    this.ellipsis = ellipsis;\n    this.wordBreak = wordBreak;\n    this.verticalDirection = verticalDirection;\n    this.lines = [];\n    // this.ctx = ctx;\n    this.globalAlign = globalAlign;\n    this.globalBaseline = globalBaseline;\n    this.layoutDirection = layoutDirection;\n    this.directionKey = DIRECTION_KEY[this.layoutDirection];\n\n    this.isWidthMax = isWidthMax;\n    this.isHeightMax = isHeightMax;\n\n    this.singleLine = singleLine;\n\n    if (icons) {\n      icons.clear();\n      this.icons = icons;\n    } else {\n      this.icons = new Map();\n    }\n  }\n\n  draw(\n    ctx: IContext2d,\n    drawIcon: (icon: IRichTextIcon, context: IContext2d, x: number, y: number, baseline: number) => void\n  ) {\n    const { width: actualWidth, height: actualHeight } = this.getActualSize();\n    const width = this.isWidthMax ? Math.min(this.width, actualWidth) : this.width || actualWidth || 0;\n    let height = this.isHeightMax ? Math.min(this.height, actualHeight) : this.height || actualHeight || 0;\n    // 1. height 可能受 maxHeight 影响大于 actualHeight 计算出来的实际高度\n    // 2. actualHeight 是不加省略内容的高度，可能会大于 height\n    // 以上两种情况都可以通过 Math.min 解决\n    height = Math.min(height, actualHeight);\n    /**\n     * 根据 align 和 baseline 进行偏移\n     */\n    let deltaY = 0;\n    switch (this.globalBaseline) {\n      case 'top':\n        deltaY = 0;\n        break;\n      case 'middle':\n        deltaY = -height / 2;\n        break;\n      case 'bottom':\n        deltaY = -height;\n        break;\n      default:\n        break;\n    }\n\n    let deltaX = 0;\n    if (this.globalAlign === 'right' || this.globalAlign === 'end') {\n      deltaX = -width;\n    } else if (this.globalAlign === 'center') {\n      deltaX = -width / 2;\n    }\n\n    let frameHeight = this[this.directionKey.height];\n    if (this.singleLine) {\n      frameHeight = this.lines[0].height + 1;\n    }\n    let lastLineTag = false;\n    if (this.verticalDirection === 'middle') {\n      if (this.actualHeight >= frameHeight && frameHeight !== 0) {\n        for (let i = 0; i < this.lines.length; i++) {\n          const { top, height } = this.lines[i];\n          if (top + height < this[this.directionKey.top] || top + height > this[this.directionKey.top] + frameHeight) {\n            return lastLineTag; // 不在展示范围内的line不绘制\n          }\n          // 判断需要显示省略号且是展示范围内的最后一行\n          let lastLine = false;\n          if (\n            this.ellipsis &&\n            this.lines[i + 1] &&\n            this.lines[i + 1].top + this.lines[i + 1].height > this[this.directionKey.top] + frameHeight\n          ) {\n            lastLine = true;\n            lastLineTag = true;\n          }\n          this.lines[i].draw(\n            ctx,\n            lastLine,\n            this.lines[i][this.directionKey.left] + deltaX,\n            this.lines[i][this.directionKey.top] + deltaY,\n            this.ellipsis,\n            drawIcon\n          );\n        }\n      } else {\n        const detalHeight = Math.floor((frameHeight - this.actualHeight) / 2);\n        if (this.layoutDirection === 'vertical') {\n          deltaX += detalHeight;\n        } else {\n          deltaY += detalHeight;\n        }\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines[i].draw(\n            ctx,\n            false,\n            this.lines[i][this.directionKey.left] + deltaX,\n            this.lines[i][this.directionKey.top] + deltaY,\n            this.ellipsis,\n            drawIcon\n          );\n        }\n      }\n\n      // top = this.top + (this.height - this.actualHeight) / 2\n    } else if (this.verticalDirection === 'bottom' && this.layoutDirection !== 'vertical') {\n      for (let i = 0; i < this.lines.length; i++) {\n        const { top, height } = this.lines[i];\n        const y = frameHeight - this.lines[i].top - this.lines[i].height;\n        // if (y + height < this.top || y + height > this.bottom) {\n        if (frameHeight === 0) {\n          this.lines[i].draw(ctx, false, deltaX, y + deltaY, this.ellipsis, drawIcon);\n        } else if (y + height > this[this.directionKey.top] + frameHeight || y < this[this.directionKey.top]) {\n          return lastLineTag; // 不在展示范围内的line不绘制\n        } else {\n          // 判断需要显示省略号且是展示范围内的最后一行\n          let lastLine = false;\n          if (this.ellipsis && this.lines[i + 1] && y - this.lines[i + 1].height < this[this.directionKey.top]) {\n            lastLine = true;\n            lastLineTag = true;\n          }\n          this.lines[i].draw(ctx, lastLine, deltaX, y + deltaY, this.ellipsis, drawIcon);\n        }\n      }\n    } else {\n      if (\n        this.verticalDirection === 'bottom' &&\n        this.layoutDirection === 'vertical' &&\n        this.singleLine &&\n        this.isWidthMax\n      ) {\n        deltaX += this.lines[0].height + 1;\n      }\n      for (let i = 0; i < this.lines.length; i++) {\n        if (this.verticalDirection === 'bottom' && this.layoutDirection === 'vertical') {\n          deltaX -= this.lines[i].height + this.lines[i].top;\n        }\n        const { top, height } = this.lines[i];\n        if (frameHeight === 0) {\n          this.lines[i].draw(\n            ctx,\n            false,\n            this.lines[i][this.directionKey.left] + deltaX,\n            this.lines[i][this.directionKey.top] + deltaY,\n            this.ellipsis,\n            drawIcon\n          );\n        } else if (\n          top + height < this[this.directionKey.top] ||\n          top + height > this[this.directionKey.top] + frameHeight\n        ) {\n          return lastLineTag; // 不在展示范围内的line不绘制\n        } else {\n          // 判断需要显示省略号且是展示范围内的最后一行\n          let lastLine = false;\n          if (\n            this.ellipsis &&\n            this.lines[i + 1] &&\n            this.lines[i + 1].top + this.lines[i + 1].height > this[this.directionKey.top] + frameHeight\n          ) {\n            lastLine = true;\n            lastLineTag = true;\n          }\n          this.lines[i].draw(\n            ctx,\n            lastLine,\n            this.lines[i][this.directionKey.left] + deltaX,\n            this.lines[i][this.directionKey.top] + deltaY,\n            this.ellipsis,\n            drawIcon\n          );\n        }\n      }\n    }\n\n    return lastLineTag;\n  }\n\n  getActualSize(): { width: number; height: number } {\n    if (this.ellipsis) {\n      return this.getActualSizeWidthEllipsis();\n    }\n\n    return this.getRawActualSize();\n  }\n\n  getRawActualSize(): { width: number; height: number } {\n    let width: number = 0;\n    let height: number = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (line.actualWidth > width) {\n        width = line.actualWidth;\n      }\n      height += line.height;\n    }\n\n    // return { width, height };\n    return {\n      width: this.layoutDirection === 'vertical' ? height : width,\n      height: this.layoutDirection === 'vertical' ? width : height\n    };\n  }\n\n  getActualSizeWidthEllipsis(): { width: number; height: number } {\n    let widthBound: number = 0;\n    let heightBound: number = 0;\n\n    const { width: actualWidth, height: actualHeight } = this.getRawActualSize();\n    const width = this.width || actualWidth || 0;\n    let height = this.height || actualHeight || 0;\n    // 1. height 可能受 maxHeight 影响大于 actualHeight 计算出来的实际高度\n    // 2. actualHeight 是不加省略内容的高度，可能会大于 height\n    // 以上两种情况都可以通过 Math.min 解决\n    height = Math.min(height, actualHeight);\n    /**\n     * 根据 align 和 baseline 进行偏移\n     */\n    const deltaY = 0;\n\n    let frameHeight = this[this.directionKey.height];\n    if (this.singleLine) {\n      frameHeight = this.lines[0].height + 1;\n    }\n\n    if (this.verticalDirection === 'middle') {\n      if (this.actualHeight >= frameHeight && frameHeight !== 0) {\n        for (let i = 0; i < this.lines.length; i++) {\n          const { top, height } = this.lines[i];\n          if (top + height < this[this.directionKey.top] || top + height > this[this.directionKey.top] + frameHeight) {\n            // return; // 不在展示范围内的line不绘制\n          } else {\n            // 判断需要显示省略号且是展示范围内的最后一行\n            if (\n              this.ellipsis &&\n              this.lines[i + 1] &&\n              this.lines[i + 1].top + this.lines[i + 1].height > this[this.directionKey.top] + frameHeight\n            ) {\n              const ellipsis = this.ellipsis === true ? '...' : this.ellipsis || '';\n              const lineWidth = this.lines[i].getWidthWithEllips(ellipsis);\n              if (lineWidth > widthBound) {\n                widthBound = lineWidth;\n              }\n              heightBound += this.lines[i].height;\n            } else {\n              if (this.lines[i].actualWidth > widthBound) {\n                widthBound = this.lines[i].actualWidth;\n              }\n              heightBound += this.lines[i].height;\n            }\n            // this.lines[i].draw(ctx, lastLine, deltaX, this.lines[i].top + deltaY);\n          }\n        }\n      } else {\n        const detalHeight = Math.floor((frameHeight - this.actualHeight) / 2);\n        for (let i = 0; i < this.lines.length; i++) {\n          if (this.lines[i].actualWidth > widthBound) {\n            widthBound = this.lines[i].actualWidth;\n          }\n          heightBound += this.lines[i].height;\n        }\n      }\n\n      // top = this.top + (this.height - this.actualHeight) / 2\n    } else if (this.verticalDirection === 'bottom') {\n      for (let i = 0; i < this.lines.length; i++) {\n        const { top, height } = this.lines[i];\n        const y = frameHeight - this.lines[i].top - this.lines[i].height;\n        // if (y + height < this.top || y + height > this.bottom) {\n        if (frameHeight === 0) {\n          if (this.lines[i].actualWidth > widthBound) {\n            widthBound = this.lines[i].actualWidth;\n          }\n          heightBound += this.lines[i].height;\n        } else if (y + height > this[this.directionKey.top] + frameHeight || y < this[this.directionKey.top]) {\n          // return; // 不在展示范围内的line不绘制\n        } else {\n          // 判断需要显示省略号且是展示范围内的最后一行\n          const lastLine = false;\n          if (this.ellipsis && this.lines[i + 1] && y - this.lines[i + 1].height < this[this.directionKey.top]) {\n            const ellipsis = this.ellipsis === true ? '...' : this.ellipsis || '';\n            const lineWidth = this.lines[i].getWidthWithEllips(ellipsis);\n            if (lineWidth > widthBound) {\n              widthBound = lineWidth;\n            }\n            heightBound += this.lines[i].height;\n          } else {\n            if (this.lines[i].actualWidth > widthBound) {\n              widthBound = this.lines[i].actualWidth;\n            }\n            heightBound += this.lines[i].height;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < this.lines.length; i++) {\n        const { top, height } = this.lines[i];\n        if (frameHeight === 0) {\n          if (this.lines[i].actualWidth > widthBound) {\n            widthBound = this.lines[i].actualWidth;\n          }\n          heightBound += this.lines[i].height;\n        } else if (\n          top + height < this[this.directionKey.top] ||\n          top + height > this[this.directionKey.top] + frameHeight\n        ) {\n          // return; // 不在展示范围内的line不绘制\n        } else {\n          // 判断需要显示省略号且是展示范围内的最后一行\n          const lastLine = false;\n          if (\n            this.ellipsis &&\n            this.lines[i + 1] &&\n            this.lines[i + 1].top + this.lines[i + 1].height > this[this.directionKey.top] + frameHeight\n          ) {\n            const ellipsis = this.ellipsis === true ? '...' : this.ellipsis || '';\n            const lineWidth = this.lines[i].getWidthWithEllips(ellipsis);\n            if (lineWidth > widthBound) {\n              widthBound = lineWidth;\n            }\n            heightBound += this.lines[i].height;\n          } else {\n            if (this.lines[i].actualWidth > widthBound) {\n              widthBound = this.lines[i].actualWidth;\n            }\n            heightBound += this.lines[i].height;\n          }\n        }\n      }\n    }\n\n    return {\n      width: this.layoutDirection === 'vertical' ? heightBound : widthBound,\n      height: this.layoutDirection === 'vertical' ? widthBound : heightBound\n    };\n  }\n}\n"]}