{"version":3,"sources":["../src/graphic/rect3d.ts"],"names":[],"mappings":"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","file":"rect3d.js","sourcesContent":["import { min } from '@visactor/vutils';\nimport type { GraphicType, IFace3d, IRect3d, IRect3dGraphicAttribute } from '../interface';\nimport { Rect } from './rect';\nimport { getTheme } from './theme';\nimport { RECT3D_NUMBER_TYPE } from './constants';\nimport { NOWORK_ANIMATE_ATTR } from './graphic';\n\nconst CUBE_VERTICES = [\n  [0, 0, 0],\n  [1, 0, 0],\n  [1, 1, 0],\n  [0, 1, 0],\n  [0, 0, 1],\n  [1, 0, 1],\n  [1, 1, 1],\n  [0, 1, 1]\n];\n\nexport class Rect3d extends Rect implements IRect3d {\n  type: GraphicType = 'rect3d';\n  declare attribute: IRect3dGraphicAttribute;\n\n  static NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;\n\n  constructor(params: IRect3dGraphicAttribute) {\n    super(params);\n    this.numberType = RECT3D_NUMBER_TYPE;\n  }\n\n  findFace(): IFace3d {\n    const faces: IFace3d = { polygons: [], vertices: [], edges: [] };\n    const rectTheme = this.getGraphicTheme();\n    const { x1, y1, x, y, length = min(rectTheme.width, rectTheme.height) } = this.attribute;\n    let { width, height } = this.attribute;\n    width = width ?? x1 - x;\n    height = height ?? y1 - y;\n    for (let i = 0; i < CUBE_VERTICES.length; i++) {\n      const v = CUBE_VERTICES[i];\n      faces.vertices.push([v[0] * width, v[1] * height, v[2] * length]);\n    }\n\n    // 上\n    faces.polygons.push({ polygon: [0, 1, 5, 4], normal: [0, -1, 0] });\n    // 下\n    faces.polygons.push({ polygon: [2, 3, 7, 6], normal: [0, 1, 0] });\n    // 左\n    faces.polygons.push({ polygon: [4, 7, 3, 0], normal: [-1, 0, 0] });\n    // 右\n    faces.polygons.push({ polygon: [1, 2, 6, 5], normal: [1, 0, 0] });\n    // 前\n    faces.polygons.push({ polygon: [0, 1, 2, 3], normal: [0, 0, -1] });\n    // 后\n    faces.polygons.push({ polygon: [4, 5, 6, 7], normal: [0, 0, 1] });\n\n    faces.edges = [\n      [0, 1],\n      [1, 2],\n      [2, 3],\n      [3, 0],\n      [4, 5],\n      [5, 6],\n      [6, 7],\n      [7, 4],\n      [0, 4],\n      [3, 7],\n      [1, 5],\n      [2, 6]\n    ];\n\n    return faces;\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Rect3d.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createRect3d(attributes: IRect3dGraphicAttribute): IRect3d {\n  return new Rect3d(attributes);\n}\n"]}