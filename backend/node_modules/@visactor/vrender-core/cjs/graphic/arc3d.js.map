{"version":3,"sources":["../src/graphic/arc3d.ts"],"names":[],"mappings":";;;AAEA,+BAA4B;AAC5B,gDAA6C;AAC7C,2CAAgD;AAChD,uCAAgD;AAEhD,MAAa,KAAM,SAAQ,SAAG;IAS5B,YAAY,MAA8B;QACxC,KAAK,CAAC,MAAM,CAAC,CAAC;QAThB,SAAI,GAAgB,OAAO,CAAC;QAU1B,IAAI,CAAC,UAAU,GAAG,6BAAiB,CAAC;IACtC,CAAC;IAES,gBAAgB,CACxB,SAAiC,EACjC,QAA0C,EAC1C,UAAuB;QAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3B,OAAO,UAAU,CAAC;SACnB;QAGD,MAAM,EAAE,WAAW,GAAG,QAAQ,CAAC,WAAW,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,SAAS,CAAC;QACrE,MAAM,CAAC,GAAG,WAAW,GAAG,MAAM,CAAC;QAC/B,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAyBlC,yBAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QAC5D,yBAAW,CAAC,cAAc,CAAC,mBAAmB,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7F,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,oBAAoB;QAClB,OAAO,KAAK,CAAC,mBAAmB,CAAC;IACnC,CAAC;;AA3DH,sBA4DC;AAxDQ,yBAAmB,mBACxB,GAAG,EAAE,CAAC,IACH,6BAAmB,EACtB;AAuDJ,SAAgB,WAAW,CAAC,UAAkC;IAC5D,OAAO,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;AAC/B,CAAC;AAFD,kCAEC","file":"arc3d.js","sourcesContent":["import type { IAABBBounds } from '@visactor/vutils';\nimport type { GraphicType, IArc3d, IArc3dGraphicAttribute } from '../interface';\nimport { Arc } from './arc';\nimport { application } from '../application';\nimport { ARC3D_NUMBER_TYPE } from './constants';\nimport { NOWORK_ANIMATE_ATTR } from './graphic';\n\nexport class Arc3d extends Arc implements IArc3d {\n  type: GraphicType = 'arc3d';\n  declare attribute: IArc3dGraphicAttribute;\n\n  static NOWORK_ANIMATE_ATTR = {\n    cap: 1,\n    ...NOWORK_ANIMATE_ATTR\n  };\n\n  constructor(params: IArc3dGraphicAttribute) {\n    super(params);\n    this.numberType = ARC3D_NUMBER_TYPE;\n  }\n\n  protected updateAABBBounds(\n    attribute: IArc3dGraphicAttribute,\n    arcTheme: Required<IArc3dGraphicAttribute>,\n    aabbBounds: IAABBBounds\n  ) {\n    const stage = this.stage;\n    if (!stage || !stage.camera) {\n      return aabbBounds;\n    }\n\n    // 当做一个立方体计算\n    const { outerRadius = arcTheme.outerRadius, height = 0 } = attribute;\n    const r = outerRadius + height;\n    aabbBounds.setValue(-r, -r, r, r);\n    // const matrix = getExtraModelMatrix(graphic.globalTransMatrix, 1, graphic);\n    // const { outerRadius=arcTheme.outerRadius, height=0 } = attribute;\n    // const points = [\n    //   {x: -outerRadius, y: -outerRadius, z: 0 },\n    //   {x: outerRadius, y: -outerRadius, z: 0 },\n    //   {x: outerRadius, y: outerRadius, z: 0 },\n    //   {x: -outerRadius, y: outerRadius, z: 0 },\n    //   {x: -outerRadius, y: -outerRadius, z: height },\n    //   {x: outerRadius, y: -outerRadius, z: height },\n    //   {x: outerRadius, y: outerRadius, z: height },\n    //   {x: -outerRadius, y: outerRadius, z: height },\n    // ]\n    // const outP: vec3 = [0, 0, 0];\n    // points.forEach(item => {\n    //   let x = item.x;\n    //   let y = item.y;\n    //   if (stage.camera) {\n    //     transformMat4(outP, [item.x, item.y, item.z], matrix);\n    //     const data = stage.camera.vp(outP[0], outP[1], outP[2]);\n    //     x = data.x;\n    //     y = data.y;\n    //   }\n    //   aabbBounds.add(x, y);\n    // });\n    application.graphicService.updateTempAABBBounds(aabbBounds);\n    application.graphicService.transformAABBBounds(attribute, aabbBounds, arcTheme, false, this);\n    return aabbBounds;\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Arc3d.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createArc3d(attributes: IArc3dGraphicAttribute): IArc3d {\n  return new Arc3d(attributes);\n}\n"]}