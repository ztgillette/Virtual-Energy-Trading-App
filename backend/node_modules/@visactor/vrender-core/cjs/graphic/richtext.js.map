{"version":3,"sources":["../src/graphic/richtext.ts"],"names":[],"mappings":"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","file":"richtext.js","sourcesContent":["import type { IAABBBounds } from '@visactor/vutils';\nimport { isNumber, isString } from '@visactor/vutils';\nimport type {\n  IRichText,\n  IRichTextCharacter,\n  RichTextGlobalAlignType,\n  RichTextGlobalBaselineType,\n  RichTextVerticalDirection,\n  RichTextWordBreak,\n  IRichTextGraphicAttribute,\n  IRichTextImageCharacter,\n  IRichTextParagraphCharacter,\n  IStage,\n  ILayer,\n  IRichTextIcon,\n  EventPoint,\n  IRichTextFrame,\n  ISetAttributeContext\n} from '../interface';\nimport { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from './graphic';\nimport { DefaultRichTextAttribute } from './config';\nimport Frame from './richtext/frame';\nimport Paragraph from './richtext/paragraph';\nimport Wrapper from './richtext/wrapper';\nimport { getTheme } from './theme';\nimport { RichTextIcon } from './richtext/icon';\nimport type { FederatedMouseEvent } from '../event';\nimport { application } from '../application';\nimport { RICHTEXT_NUMBER_TYPE } from './constants';\n\nlet supportIntl = false;\ntry {\n  supportIntl = Intl && typeof (Intl as any).Segmenter === 'function';\n} catch (e) {\n  supportIntl = false;\n}\n\nconst RICHTEXT_UPDATE_TAG_KEY = [\n  'width',\n  'height',\n  'ellipsis',\n  'wordBreak',\n  'verticalDirection',\n  'maxHeight',\n  'maxWidth',\n  'textAlign',\n  'textBaseline',\n  'textConfig',\n  'layoutDirection',\n  'fill',\n  'stroke',\n  'fontSize',\n  'fontFamily',\n  'fontStyle',\n  'fontWeight',\n  'lineWidth',\n  'opacity',\n  'fillOpacity',\n  'strokeOpacity',\n  ...GRAPHIC_UPDATE_TAG_KEY\n];\n\nexport class RichText extends Graphic<IRichTextGraphicAttribute> implements IRichText {\n  type: 'richtext' = 'richtext';\n\n  _frameCache: Frame; // 富文本布局画布\n  _currentHoverIcon: IRichTextIcon | null = null;\n\n  static NOWORK_ANIMATE_ATTR = {\n    ellipsis: 1,\n    wordBreak: 1,\n    verticalDirection: 1,\n    textAlign: 1,\n    textBaseline: 1,\n    textConfig: 1,\n    layoutDirection: 1,\n    ...NOWORK_ANIMATE_ATTR\n  };\n\n  constructor(params?: IRichTextGraphicAttribute) {\n    super(params);\n    this.numberType = RICHTEXT_NUMBER_TYPE;\n\n    this.onBeforeAttributeUpdate = ((val: any, attributes: any, key: null | string | string[]) => {\n      for (const key in val) {\n        if (key === 'hoverIconId') {\n          if (val[key] === attributes[key]) {\n            continue;\n          }\n          const icon = this._frameCache.icons.get(val[key]);\n          this.updateHoverIconState(icon);\n        }\n      }\n    }) as any;\n  }\n\n  get width(): number {\n    return this.attribute.width ?? DefaultRichTextAttribute.width;\n  }\n  set width(w: number) {\n    if (this.attribute.width === w) {\n      return;\n    }\n    this.attribute.width = w;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get height(): number {\n    return this.attribute.height ?? DefaultRichTextAttribute.height;\n  }\n  set height(h: number) {\n    if (this.attribute.height === h) {\n      return;\n    }\n    this.attribute.height = h;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get maxWidth(): number | undefined {\n    return this.attribute.maxWidth;\n  }\n  set maxWidth(mw: number | undefined) {\n    if (this.attribute.maxWidth === mw) {\n      return;\n    }\n    this.attribute.maxWidth = mw;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get maxHeight(): number | undefined {\n    return this.attribute.maxHeight;\n  }\n  set maxHeight(mh: number | undefined) {\n    if (this.attribute.maxHeight === mh) {\n      return;\n    }\n    this.attribute.maxHeight = mh;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get ellipsis(): boolean | string {\n    return this.attribute.ellipsis ?? DefaultRichTextAttribute.ellipsis;\n  }\n  set ellipsis(e: boolean | string) {\n    if (this.attribute.ellipsis === e) {\n      return;\n    }\n    this.attribute.ellipsis = e;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get wordBreak(): RichTextWordBreak {\n    return this.attribute.wordBreak ?? DefaultRichTextAttribute.wordBreak;\n  }\n  set wordBreak(wb: RichTextWordBreak) {\n    if (this.attribute.wordBreak === wb) {\n      return;\n    }\n    this.attribute.wordBreak = wb;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get verticalDirection(): RichTextVerticalDirection {\n    return this.attribute.verticalDirection ?? DefaultRichTextAttribute.verticalDirection;\n  }\n  set verticalDirection(vd: RichTextVerticalDirection) {\n    if (this.attribute.verticalDirection === vd) {\n      return;\n    }\n    this.attribute.verticalDirection = vd;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get textAlign(): RichTextGlobalAlignType {\n    return this.attribute.textAlign ?? DefaultRichTextAttribute.textAlign;\n  }\n  set textAlign(align: RichTextGlobalAlignType) {\n    if (this.attribute.textAlign === align) {\n      return;\n    }\n    this.attribute.textAlign = align;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get textBaseline(): RichTextGlobalBaselineType {\n    return this.attribute.textBaseline ?? DefaultRichTextAttribute.textBaseline;\n  }\n  set textBaseline(baseline: RichTextGlobalBaselineType) {\n    if (this.attribute.textBaseline === baseline) {\n      return;\n    }\n    this.attribute.textBaseline = baseline;\n    this.addUpdateShapeAndBoundsTag();\n  }\n  get textConfig(): IRichTextCharacter[] {\n    return this.attribute.textConfig ?? DefaultRichTextAttribute.textConfig;\n  }\n  set textConfig(config: IRichTextCharacter[]) {\n    this.attribute.textConfig = config;\n    this.addUpdateShapeAndBoundsTag();\n  }\n\n  getGraphicTheme(): Required<IRichTextGraphicAttribute> {\n    return getTheme(this).richtext;\n  }\n\n  static AllSingleCharacter(cache: IRichTextFrame | IRichTextGraphicAttribute['textConfig']) {\n    if ((cache as IRichTextFrame).lines) {\n      const frame = cache as IRichTextFrame;\n      return frame.lines.every(line =>\n        line.paragraphs.every(item => !(item.text && isString(item.text) && RichText.splitText(item.text).length > 1))\n      );\n    }\n    // isComposing的不算\n    const tc = cache as IRichTextGraphicAttribute['textConfig'];\n    return tc.every(\n      item =>\n        (item as any).isComposing ||\n        !((item as any).text && isString((item as any).text) && RichText.splitText((item as any).text).length > 1)\n    );\n  }\n\n  static splitText(text: string) {\n    if (supportIntl) {\n      // 不传入具体语言标签，使用默认设置\n      const segmenter = new (Intl as any).Segmenter(undefined, { granularity: 'grapheme' });\n      const segments = [];\n      for (const { segment } of segmenter.segment(text)) {\n        segments.push(segment);\n      }\n      return segments;\n    }\n    // 如果不支持 Intl.Segmenter，则使用旧方法\n    return Array.from(text);\n  }\n\n  static TransformTextConfig2SingleCharacter(textConfig: IRichTextGraphicAttribute['textConfig']) {\n    const tc: IRichTextGraphicAttribute['textConfig'] = [];\n    textConfig.forEach((item: IRichTextParagraphCharacter) => {\n      const textList = RichText.splitText(item.text.toString());\n      if (isString(item.text) && textList.length > 1) {\n        // 拆分\n        for (let i = 0; i < textList.length; i++) {\n          const t = textList[i];\n          tc.push({ ...item, text: t });\n        }\n      } else {\n        tc.push(item);\n      }\n    });\n\n    return tc;\n  }\n\n  protected updateAABBBounds(\n    attribute: IRichTextGraphicAttribute,\n    richtextTheme: Required<IRichTextGraphicAttribute>,\n    aabbBounds: IAABBBounds\n  ) {\n    const {\n      width = richtextTheme.width,\n      height = richtextTheme.height,\n      maxWidth = richtextTheme.maxWidth,\n      maxHeight = richtextTheme.maxHeight,\n      textAlign = richtextTheme.textAlign,\n      textBaseline = attribute.textBaseline ?? richtextTheme.textBaseline ?? 'top',\n      editOptions\n    } = attribute;\n\n    if (width > 0 && height > 0) {\n      // 外部设置宽高\n      aabbBounds.set(0, 0, width, height);\n    } else {\n      // 获取内容宽高\n      const frameCache = this.getFrameCache();\n      const { width: actualWidth, height: actualHeight } = frameCache.getActualSize();\n      let contentWidth = width || actualWidth || 0;\n      let contentHeight = height || actualHeight || 0;\n\n      contentHeight = typeof maxHeight === 'number' && contentHeight > maxHeight ? maxHeight : contentHeight || 0;\n      contentWidth = typeof maxWidth === 'number' && contentWidth > maxWidth ? maxWidth : contentWidth || 0;\n\n      aabbBounds.set(0, 0, contentWidth, contentHeight);\n    }\n\n    // 如果是可编辑状态，且没有设置高度，就用fontSize，否则就完全选不到了\n    if (editOptions && editOptions.keepHeightWhileEmpty && !aabbBounds.height() && !attribute.textConfig?.length) {\n      aabbBounds.y2 = aabbBounds.y1 + (attribute.fontSize ?? 12);\n      aabbBounds.x2 = aabbBounds.x1 + 2;\n    }\n\n    // 调整对齐方式\n    let deltaY = 0;\n    switch (textBaseline) {\n      case 'top':\n        deltaY = 0;\n        break;\n      case 'middle':\n        deltaY = -aabbBounds.height() / 2;\n        break;\n      case 'bottom':\n        deltaY = -aabbBounds.height();\n        break;\n      default:\n        break;\n    }\n    let deltaX = 0;\n    switch (textAlign) {\n      case 'left':\n        deltaX = 0;\n        break;\n      case 'center':\n        deltaX = -aabbBounds.width() / 2;\n        break;\n      case 'right':\n        deltaX = -aabbBounds.width();\n        break;\n      default:\n        break;\n    }\n    if (!height) {\n      if (this.verticalDirection === 'middle') {\n        deltaY -= aabbBounds.height() / 2;\n      } else if (this.verticalDirection === 'bottom') {\n        deltaY -= aabbBounds.height();\n      }\n    }\n    aabbBounds.translate(deltaX, deltaY);\n\n    application.graphicService.updateTempAABBBounds(aabbBounds);\n\n    if (attribute.forceBoundsHeight != null || attribute.forceBoundsWidth != null) {\n      application.graphicService.updateHTMLTextAABBBounds(attribute, richtextTheme, aabbBounds);\n    }\n    this.widthWithoutTransform = aabbBounds.x2 - aabbBounds.x1;\n    this.heightWithoutTransform = aabbBounds.y2 - aabbBounds.y1;\n\n    application.graphicService.transformAABBBounds(attribute, aabbBounds, richtextTheme, false, this);\n    // 都为0的话，就直接clear\n    if (aabbBounds.width() === 0 && aabbBounds.height() === 0) {\n      aabbBounds.clear();\n    }\n    return aabbBounds;\n  }\n\n  protected needUpdateTags(keys: string[]): boolean {\n    return super.needUpdateTags(keys, RICHTEXT_UPDATE_TAG_KEY);\n  }\n  protected needUpdateTag(key: string): boolean {\n    return super.needUpdateTag(key, RICHTEXT_UPDATE_TAG_KEY);\n  }\n  getFrameCache(): IRichTextFrame {\n    if (this.shouldUpdateShape()) {\n      this.doUpdateFrameCache();\n      this.clearUpdateShapeTag();\n    }\n    return this._frameCache as IRichTextFrame;\n  }\n\n  get cliped() {\n    const frameCache = this.getFrameCache();\n    if (frameCache.actualHeight > frameCache.height) {\n      return true;\n    }\n    const { disableAutoWrapLine } = this.attribute;\n    if (disableAutoWrapLine) {\n      for (let i = 0; i < frameCache.lines.length; i++) {\n        const l = frameCache.lines[i];\n        for (let j = 0; j < l.paragraphs.length; j++) {\n          const p = l.paragraphs[j];\n          if ((p as any).overflow && (p as any).text !== '') {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n    // if (height < this.attribute.height || )\n  }\n  combinedStyleToCharacter(config: IRichTextImageCharacter | IRichTextParagraphCharacter) {\n    const {\n      fill,\n      stroke,\n      fontSize,\n      fontFamily,\n      fontStyle,\n      fontWeight,\n      lineWidth,\n      opacity,\n      fillOpacity,\n      lineHeight,\n      strokeOpacity,\n      upgradeAttrs\n    } = this.attribute;\n    const out = {\n      fill,\n      stroke,\n      fontSize,\n      fontFamily,\n      fontStyle,\n      fontWeight,\n      lineWidth,\n      opacity,\n      fillOpacity,\n      strokeOpacity,\n      ...config\n    };\n    if (upgradeAttrs?.lineHeight) {\n      out.lineHeight = lineHeight;\n    }\n    return out;\n  }\n  doUpdateFrameCache(tc?: IRichTextCharacter[]) {\n    // 1. 测量，生成paragraph\n    const {\n      maxWidth,\n      maxHeight,\n      width,\n      height,\n      ellipsis,\n      wordBreak,\n      verticalDirection,\n      textAlign,\n      textBaseline,\n      layoutDirection,\n      singleLine,\n      disableAutoWrapLine,\n      editable,\n      ascentDescentMode,\n      upgradeAttrs\n    } = this.attribute;\n\n    const enableMultiBreakLine = upgradeAttrs && upgradeAttrs.multiBreakLine;\n\n    let { textConfig: _tc = [] } = this.attribute;\n\n    // 预处理editable，将textConfig中的text转换为单个字符\n    if (editable && _tc.length > 0 && !RichText.AllSingleCharacter(_tc)) {\n      _tc = RichText.TransformTextConfig2SingleCharacter(_tc);\n      this.attribute.textConfig = _tc;\n    }\n\n    const paragraphs: (Paragraph | RichTextIcon)[] = [];\n\n    const textConfig = tc ?? _tc;\n\n    for (let i = 0; i < textConfig.length; i++) {\n      if ('image' in textConfig[i]) {\n        const config = this.combinedStyleToCharacter(\n          textConfig[i] as IRichTextImageCharacter\n        ) as IRichTextImageCharacter;\n        (config as any).lineWidth = undefined; // for icon bounds\n        // 直接创建icon Mark\n        const iconCache =\n          config.id && this._frameCache && this._frameCache.icons && this._frameCache.icons.get(config.id);\n        if (iconCache) {\n          paragraphs.push(iconCache as RichTextIcon);\n        } else {\n          const icon = new RichTextIcon(config);\n          icon.successCallback = () => {\n            this.addUpdateBoundTag();\n            this.stage?.renderNextFrame();\n          };\n          icon.richtextId = config.id;\n          paragraphs.push(icon);\n        }\n      } else {\n        const richTextConfig = this.combinedStyleToCharacter(\n          textConfig[i] as IRichTextParagraphCharacter\n        ) as IRichTextParagraphCharacter;\n        if (isNumber(richTextConfig.text)) {\n          richTextConfig.text = `${richTextConfig.text}`;\n        }\n        if (richTextConfig.text && richTextConfig.text.includes('\\n')) {\n          // 如果有文字内有换行符，将该段文字切为多段，并在后一段加入newLine标记\n          const textParts = richTextConfig.text.split('\\n');\n          for (let j = 0; j < textParts.length; j++) {\n            if (j === 0) {\n              paragraphs.push(new Paragraph(textParts[j], false, richTextConfig, ascentDescentMode));\n            } else if (textParts[j] || i === textConfig.length - 1) {\n              paragraphs.push(new Paragraph(textParts[j], true, richTextConfig, ascentDescentMode));\n            } else {\n              // 空行的话，config应该要和下一行对齐\n              const nextRichTextConfig = this.combinedStyleToCharacter(\n                textConfig[i + 1] as IRichTextParagraphCharacter\n              ) as IRichTextParagraphCharacter;\n              paragraphs.push(new Paragraph(textParts[j], true, nextRichTextConfig, ascentDescentMode));\n            }\n            // paragraphs.push(new Paragraph(textParts[j], j !== 0, richTextConfig, ascentDescentMode));\n          }\n        } else if (richTextConfig.text) {\n          paragraphs.push(new Paragraph(richTextConfig.text, false, richTextConfig, ascentDescentMode));\n        }\n      }\n    }\n\n    // 2. 布局，生成frame\n    // const frameHeight =\n    //   typeof maxHeight === 'number' && (!height || height > maxHeight) // height = 0或height>maxHeight，使用maxHeight布局\n    //     ? maxHeight\n    //     : height;\n    // const frameWidth =\n    //   typeof maxWidth === 'number' && (!width || width > maxWidth) // height = 0或height>maxWidth，使用maxWidth布局\n    //     ? maxWidth\n    //     : width;\n\n    const maxWidthFinite = typeof maxWidth === 'number' && Number.isFinite(maxWidth) && maxWidth > 0;\n    const maxHeightFinite = typeof maxHeight === 'number' && Number.isFinite(maxHeight) && maxHeight > 0;\n\n    const richTextWidthEnable =\n      typeof width === 'number' &&\n      Number.isFinite(width) &&\n      width > 0 &&\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      (!maxWidthFinite || width <= maxWidth);\n    const richTextHeightEnable =\n      typeof height === 'number' &&\n      Number.isFinite(height) &&\n      height > 0 &&\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      (!maxHeightFinite || height <= maxHeight);\n\n    const frameWidth = richTextWidthEnable ? width : maxWidthFinite ? maxWidth : 0;\n    const frameHeight = richTextHeightEnable ? height : maxHeightFinite ? maxHeight : 0;\n\n    const frame = new Frame(\n      0,\n      0,\n      frameWidth || 0,\n      frameHeight || 0,\n      ellipsis,\n      wordBreak,\n      verticalDirection,\n      textAlign,\n      textBaseline,\n      layoutDirection || 'horizontal',\n      // typeof maxWidth === 'number' && (!width || width > maxWidth),\n      // typeof maxHeight === 'number' && (!height || height > maxHeight),\n      !richTextWidthEnable && maxWidthFinite,\n      !richTextHeightEnable && maxHeightFinite,\n      singleLine || false,\n      this._frameCache?.icons\n    );\n    const wrapper = new Wrapper(frame);\n    // @since 0.22.0\n    // 如果可编辑的话，则支持多换行符\n    wrapper.newLine = enableMultiBreakLine;\n    if (disableAutoWrapLine) {\n      let lineCount = 0;\n      let skip = false;\n      for (let i = 0; i < paragraphs.length; i++) {\n        const p = paragraphs[i];\n        if (skip) {\n          (p as Paragraph).overflow = true;\n          (p as Paragraph).left = Infinity;\n          (p as Paragraph).top = Infinity;\n          !(p as Paragraph).newLine && frame.lines[frame.lines.length - 1].paragraphs.push(p);\n        } else {\n          wrapper.deal(p, true);\n        }\n        if (frame.lines.length !== lineCount) {\n          lineCount = frame.lines.length;\n          wrapper.lineBuffer.length = 0;\n          (p as Paragraph).overflow = true;\n          (p as Paragraph).left = 1000;\n          (p as Paragraph).top = 1000;\n          frame.lines[frame.lines.length - 1].paragraphs.push(p);\n          skip = true;\n        }\n        if ((p as Paragraph).newLine) {\n          skip = false;\n          wrapper.lineWidth = 0;\n        }\n        wrapper.send();\n      }\n    } else {\n      for (let i = 0; i < paragraphs.length; i++) {\n        wrapper.deal(paragraphs[i]);\n      }\n    }\n\n    wrapper.send(); // 最后一行手动输出\n\n    // 如果对应的配置宽度不可用，那么需要额外进行一次对齐\n    const directionEnable = frame.layoutDirection === 'horizontal' ? richTextWidthEnable : richTextHeightEnable;\n    if (!directionEnable) {\n      // 使用实际宽度\n      const frameSize = frame.getActualSizeWidthEllipsis();\n      let offsetSize = frame.layoutDirection === 'horizontal' ? frameSize.width : frameSize.height;\n      // 如果最大值可用\n      if (frame.layoutDirection === 'horizontal' ? maxWidthFinite : maxHeightFinite) {\n        // 取2者中的较小值\n        offsetSize = Math.min(\n          offsetSize,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          frame.layoutDirection === 'horizontal' ? maxWidth : maxHeight\n        );\n      }\n\n      frame.lines.forEach(function (l) {\n        l.calcOffset(offsetSize, false);\n      });\n    }\n\n    // 处理空行\n    if (enableMultiBreakLine) {\n      frame.lines.forEach(item => {\n        const lastParagraphs = item.paragraphs;\n        item.paragraphs = item.paragraphs.filter(p => (p as any).text !== '');\n        if (item.paragraphs.length === 0 && lastParagraphs.length) {\n          (lastParagraphs[0] as any).text = '\\n';\n          item.paragraphs.push(lastParagraphs[0]);\n        }\n      });\n    }\n\n    this._frameCache = frame;\n\n    // this.bindIconEvent();\n  }\n\n  clone() {\n    return new RichText({ ...this.attribute });\n  }\n\n  setStage(stage?: IStage, layer?: ILayer) {\n    super.setStage(stage, layer);\n    const frameCache = this.getFrameCache();\n    // for (let i = 0; i < frameCache.icons.length; i++) {\n    //   const icon = frameCache.icons[i];\n    //   icon.setStage(stage, layer);\n    // }\n    frameCache.icons.forEach(icon => {\n      icon.setStage(stage, layer);\n    });\n  }\n\n  // richtext绑定icon交互事件，供外部调用\n  bindIconEvent() {\n    this.addEventListener('pointermove', (e: FederatedMouseEvent) => {\n      const pickedIcon = this.pickIcon(e.global);\n      if (pickedIcon && pickedIcon === this._currentHoverIcon) {\n        // do nothing\n      } else if (pickedIcon) {\n        this.setAttribute('hoverIconId', pickedIcon.richtextId);\n\n        // this._currentHoverIcon?.setHoverState(false);\n        // this._currentHoverIcon = pickedIcon;\n        // this._currentHoverIcon.setHoverState(true);\n        // this.stage?.setCursor(pickedIcon.attribute.cursor);\n        // this.stage?.renderNextFrame();\n      } else if (!pickedIcon && this._currentHoverIcon) {\n        this.setAttribute('hoverIconId', undefined);\n\n        // this._currentHoverIcon.setHoverState(false);\n        // this._currentHoverIcon = null;\n        // this.stage?.setCursor();\n        // this.stage?.renderNextFrame();\n      }\n    });\n\n    this.addEventListener('pointerleave', (e: FederatedMouseEvent) => {\n      if (this._currentHoverIcon) {\n        this.setAttribute('hoverIconId', undefined);\n\n        // this._currentHoverIcon.setHoverState(false);\n        // this._currentHoverIcon = null;\n        // this.stage?.setCursor();\n        // this.stage?.renderNextFrame();\n      }\n    });\n  }\n\n  updateHoverIconState(pickedIcon?: IRichTextIcon) {\n    if (pickedIcon) {\n      this._currentHoverIcon?.setHoverState(false);\n      this._currentHoverIcon = pickedIcon;\n      this._currentHoverIcon.setHoverState(true);\n      this.stage?.setCursor(pickedIcon.attribute.cursor);\n      this.stage?.renderNextFrame();\n    } else {\n      this._currentHoverIcon.setHoverState(false);\n      this._currentHoverIcon = null;\n      this.stage?.setCursor();\n      this.stage?.renderNextFrame();\n    }\n  }\n\n  pickIcon(point: EventPoint): IRichTextIcon | undefined {\n    const frameCache = this.getFrameCache();\n    const { e: x, f: y } = this.globalTransMatrix;\n    // for (let i = 0; i < frameCache.icons.length; i++) {\n    //   const icon = frameCache.icons[i];\n    //   if (icon.containsPoint(point.x - x, point.y - y)) {\n    //     return icon;\n    //   }\n    // }\n    let pickIcon: IRichTextIcon | undefined;\n    frameCache.icons.forEach((icon, key) => {\n      const bounds = icon.AABBBounds.clone();\n      bounds.translate(icon._marginArray[3], icon._marginArray[0]);\n      if (bounds.containsPoint({ x: point.x - x, y: point.y - y })) {\n        pickIcon = icon;\n\n        pickIcon.globalX = (pickIcon.attribute.x ?? 0) + x + icon._marginArray[3];\n        pickIcon.globalY = (pickIcon.attribute.y ?? 0) + y + icon._marginArray[0];\n      }\n    });\n\n    return pickIcon;\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return RichText.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createRichText(attributes: IRichTextGraphicAttribute): IRichText {\n  return new RichText(attributes);\n}\n"]}