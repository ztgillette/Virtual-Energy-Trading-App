{"version":3,"sources":["../src/common/inversify-lite/planning/queryable_string.ts"],"names":[],"mappings":";;;AAEA,MAAM,eAAe;IAGnB,YAAY,GAAW;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAaD,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,aAAqB;QAC1B,OAAO,IAAI,CAAC,GAAG,KAAK,aAAa,CAAC;IACpC,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;CACF;AAEQ,0CAAe","file":"queryable_string.js","sourcesContent":["import type { interfaces } from '../interfaces/interfaces';\n\nclass QueryableString implements interfaces.QueryableString {\n  private str: string;\n\n  constructor(str: string) {\n    this.str = str;\n  }\n\n  // startsWith(searchString: string): boolean {\n  //   return this.str.indexOf(searchString) === 0;\n  // }\n\n  // endsWith(searchString: string): boolean {\n  //   let reverseString = '';\n  //   const reverseSearchString = searchString.split('').reverse().join('');\n  //   reverseString = this.str.split('').reverse().join('');\n  //   return this.startsWith.call({ str: reverseString }, reverseSearchString);\n  // }\n\n  contains(searchString: string): boolean {\n    return this.str.indexOf(searchString) !== -1;\n  }\n\n  equals(compareString: string): boolean {\n    return this.str === compareString;\n  }\n\n  value(): string {\n    return this.str;\n  }\n}\n\nexport { QueryableString };\n"]}