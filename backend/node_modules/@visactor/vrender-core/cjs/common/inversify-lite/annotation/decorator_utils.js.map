{"version":3,"sources":["../src/common/inversify-lite/annotation/decorator_utils.ts"],"names":[],"mappings":"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","file":"decorator_utils.js","sourcesContent":["import * as ERROR_MSGS from '../constants/error_msgs';\nimport * as METADATA_KEY from '../constants/metadata_keys';\nimport type { interfaces } from '../interfaces/interfaces';\nimport { getFirstArrayDuplicate } from '../utils/js';\nimport Reflect from '../../Reflect-metadata';\n\nfunction targetIsConstructorFunction<T = any>(target: DecoratorTarget<T>): target is ConstructorFunction<T> {\n  return (target as ConstructorFunction<T>).prototype !== undefined;\n}\n\ntype Prototype<T> = {\n  [Property in keyof T]: T[Property] extends NewableFunction ? T[Property] : T[Property] | undefined;\n} & { constructor: NewableFunction };\n\ninterface ConstructorFunction<T = Record<string, unknown>> {\n  new (...args: unknown[]): T;\n  prototype: Prototype<T>;\n}\n\nexport type DecoratorTarget<T = unknown> = ConstructorFunction<T> | Prototype<T>;\n\nfunction _throwIfMethodParameter(parameterName: string | symbol | undefined): void {\n  if (parameterName !== undefined) {\n    throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n  }\n}\n\nfunction tagParameter(\n  annotationTarget: DecoratorTarget,\n  parameterName: string | symbol | undefined,\n  parameterIndex: number,\n  metadata: interfaces.MetadataOrMetadataArray\n) {\n  _throwIfMethodParameter(parameterName);\n  _tagParameterOrProperty(\n    METADATA_KEY.TAGGED,\n    annotationTarget as ConstructorFunction,\n    parameterIndex.toString(),\n    metadata\n  );\n}\n\nfunction tagProperty(\n  annotationTarget: DecoratorTarget,\n  propertyName: string | symbol,\n  metadata: interfaces.MetadataOrMetadataArray\n) {\n  if (targetIsConstructorFunction(annotationTarget)) {\n    throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n  }\n  _tagParameterOrProperty(METADATA_KEY.TAGGED_PROP, annotationTarget.constructor, propertyName, metadata);\n}\n\nfunction _ensureNoMetadataKeyDuplicates(metadata: interfaces.MetadataOrMetadataArray): interfaces.Metadata[] {\n  let metadatas: interfaces.Metadata[] = [];\n  if (Array.isArray(metadata)) {\n    metadatas = metadata;\n    const duplicate = getFirstArrayDuplicate(metadatas.map(md => md.key));\n    if (duplicate !== undefined) {\n      throw new Error(`${ERROR_MSGS.DUPLICATED_METADATA} ${duplicate.toString()}`);\n    }\n  } else {\n    metadatas = [metadata];\n  }\n  return metadatas;\n}\n\nfunction _tagParameterOrProperty(\n  metadataKey: string,\n  annotationTarget: NewableFunction,\n  key: string | symbol,\n  metadata: interfaces.MetadataOrMetadataArray\n) {\n  const metadatas: interfaces.Metadata[] = _ensureNoMetadataKeyDuplicates(metadata);\n\n  let paramsOrPropertiesMetadata: Record<string | symbol, interfaces.Metadata[] | undefined> = {};\n  // read metadata if available\n  if ((Reflect as any).hasOwnMetadata(metadataKey, annotationTarget)) {\n    paramsOrPropertiesMetadata = (Reflect as any).getMetadata(metadataKey, annotationTarget);\n  }\n\n  let paramOrPropertyMetadata: interfaces.Metadata[] | undefined = paramsOrPropertiesMetadata[key as string];\n\n  if (paramOrPropertyMetadata === undefined) {\n    paramOrPropertyMetadata = [];\n  } else {\n    for (const m of paramOrPropertyMetadata) {\n      if (metadatas.some(md => md.key === m.key)) {\n        throw new Error(`${ERROR_MSGS.DUPLICATED_METADATA} ${m.key.toString()}`);\n      }\n    }\n  }\n\n  // set metadata\n  paramOrPropertyMetadata.push(...metadatas);\n  paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\n  (Reflect as any).defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\n}\n\nfunction createTaggedDecorator(metadata: interfaces.MetadataOrMetadataArray) {\n  return <T>(\n    target: DecoratorTarget,\n    targetKey?: string | symbol,\n    indexOrPropertyDescriptor?: number | TypedPropertyDescriptor<T>\n  ) => {\n    if (typeof indexOrPropertyDescriptor === 'number') {\n      tagParameter(target, targetKey, indexOrPropertyDescriptor, metadata);\n    } else {\n      tagProperty(target, targetKey as string | symbol, metadata);\n    }\n  };\n}\n\nfunction _decorate(\n  decorators: (DecoratorTarget | ParameterDecorator | MethodDecorator)[],\n  target: any | NewableFunction\n): void {\n  (Reflect as any).decorate(decorators as ClassDecorator[], target as NewableFunction);\n}\n\nfunction _param(paramIndex: number, decorator: ParameterDecorator) {\n  return function (target: string, key: string) {\n    decorator(target, key, paramIndex);\n  };\n}\n\n// Allows VanillaJS developers to use decorators:\n// decorate(injectable(), FooBar);\n// decorate(targetName('foo', 'bar'), FooBar);\n// decorate(named('foo'), FooBar, 0);\n// decorate(tagged('bar'), FooBar, 1);\nfunction decorate(\n  decorator: DecoratorTarget | ParameterDecorator | MethodDecorator,\n  target: any,\n  parameterIndexOrProperty?: number | string\n): void {\n  if (typeof parameterIndexOrProperty === 'number') {\n    _decorate([_param(parameterIndexOrProperty, decorator as ParameterDecorator)], target);\n  } else if (typeof parameterIndexOrProperty === 'string') {\n    (Reflect as any).decorate([decorator as MethodDecorator], target, parameterIndexOrProperty);\n  } else {\n    _decorate([decorator], target);\n  }\n}\n\nexport { decorate, tagParameter, tagProperty, createTaggedDecorator };\n"]}