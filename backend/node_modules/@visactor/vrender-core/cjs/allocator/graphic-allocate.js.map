{"version":3,"sources":["../src/allocator/graphic-allocate.ts"],"names":[],"mappings":"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","file":"graphic-allocate.js","sourcesContent":["// import { IMatrix, IMatrixLike, Matrix } from '@visactor/vutils';\nimport type { IAllocate } from '../interface';\nimport type {\n  IArc,\n  IArcGraphicAttribute,\n  IArea,\n  IAreaGraphicAttribute,\n  ICircle,\n  ICircleGraphicAttribute,\n  IGraphic,\n  ILine,\n  ILineGraphicAttribute,\n  IPath,\n  IPathGraphicAttribute,\n  IRect,\n  IRectGraphicAttribute,\n  ISymbol,\n  ISymbolGraphicAttribute,\n  IText,\n  ITextGraphicAttribute,\n  Releaseable\n} from '../interface';\nimport { application } from '../application';\n\nexport abstract class DefaultGraphicAllocate<T extends IGraphic, IGraphicAttribute>\n  implements IAllocate<T>, Releaseable\n{\n  protected pools: T[] = [];\n  abstract allocate(attribute: IGraphicAttribute): T;\n  abstract allocateByObj(g: T): T;\n  free(d: T) {\n    this.pools.push(d);\n  }\n  get length(): number {\n    return this.pools.length;\n  }\n  release(...params: any): void {\n    this.pools = [];\n  }\n}\n\nexport class DefaultRectAllocate extends DefaultGraphicAllocate<IRect, IRectGraphicAttribute> {\n  allocate(attribute: IRectGraphicAttribute): IRect {\n    if (!this.pools.length) {\n      return application.graphicService.creator.rect(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(rect: IRect): IRect {\n    if (!this.pools.length) {\n      return application.graphicService.creator.rect(rect.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(rect.attribute);\n    return g;\n  }\n}\nexport const defaultRectAllocate = new DefaultRectAllocate();\n\nexport class DefaultArcAllocate extends DefaultGraphicAllocate<IArc, IArcGraphicAttribute> {\n  allocate(attribute: IArcGraphicAttribute): IArc {\n    if (!this.pools.length) {\n      return application.graphicService.creator.arc(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(arc: IArc): IArc {\n    if (!this.pools.length) {\n      return application.graphicService.creator.arc(arc.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(arc.attribute);\n    return g;\n  }\n}\n\nexport const defaultArcAllocate = new DefaultArcAllocate();\n\nexport class DefaultAreaAllocate extends DefaultGraphicAllocate<IArea, IAreaGraphicAttribute> {\n  allocate(attribute: IAreaGraphicAttribute): IArea {\n    if (!this.pools.length) {\n      return application.graphicService.creator.area(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(area: IArea): IArea {\n    if (!this.pools.length) {\n      return application.graphicService.creator.area(area.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(area.attribute);\n    return g;\n  }\n}\n\nexport const defaultAreaAllocate = new DefaultAreaAllocate();\n\nexport class DefaultCircleAllocate extends DefaultGraphicAllocate<ICircle, ICircleGraphicAttribute> {\n  allocate(attribute: ICircleGraphicAttribute): ICircle {\n    if (!this.pools.length) {\n      return application.graphicService.creator.circle(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(area: ICircle): ICircle {\n    if (!this.pools.length) {\n      return application.graphicService.creator.circle(area.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(area.attribute);\n    return g;\n  }\n}\n\nexport const defaultCircleAllocate = new DefaultCircleAllocate();\n\nexport class DefaultLineAllocate extends DefaultGraphicAllocate<ILine, ILineGraphicAttribute> {\n  allocate(attribute: ILineGraphicAttribute): ILine {\n    if (!this.pools.length) {\n      return application.graphicService.creator.line(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(line: ILine): ILine {\n    if (!this.pools.length) {\n      return application.graphicService.creator.line(line.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(line.attribute);\n    return g;\n  }\n}\n\nexport const defaultLineAllocate = new DefaultLineAllocate();\n\nexport class DefaultPathAllocate extends DefaultGraphicAllocate<IPath, IPathGraphicAttribute> {\n  allocate(attribute: IPathGraphicAttribute): IPath {\n    if (!this.pools.length) {\n      return application.graphicService.creator.path(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(path: IPath): IPath {\n    if (!this.pools.length) {\n      return application.graphicService.creator.path(path.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(path.attribute);\n    return g;\n  }\n}\n\nexport const defaultPathAllocate = new DefaultPathAllocate();\n\nexport class DefaultSymbolAllocate extends DefaultGraphicAllocate<ISymbol, ISymbolGraphicAttribute> {\n  allocate(attribute: ISymbolGraphicAttribute): ISymbol {\n    if (!this.pools.length) {\n      return application.graphicService.creator.symbol(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(symbol: ISymbol): ISymbol {\n    if (!this.pools.length) {\n      return application.graphicService.creator.symbol(symbol.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(symbol.attribute);\n    return g;\n  }\n}\n\nexport const defaultSymbolAllocate = new DefaultSymbolAllocate();\n\nexport class DefaultTextAllocate extends DefaultGraphicAllocate<IText, ITextGraphicAttribute> {\n  allocate(attribute: ITextGraphicAttribute): IText {\n    if (!this.pools.length) {\n      return application.graphicService.creator.text(attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(attribute);\n    return g;\n  }\n\n  allocateByObj(text: IText): IText {\n    if (!this.pools.length) {\n      return application.graphicService.creator.text(text.attribute);\n    }\n    const g = this.pools.pop();\n    g.initAttributes(text.attribute);\n    return g;\n  }\n}\n\nexport const defaultTextAllocate = new DefaultTextAllocate();\n\nexport class DefaultGraphicMemoryManager {\n  map: Record<string, DefaultGraphicAllocate<any, any>> = {\n    text: defaultTextAllocate,\n    symbol: defaultSymbolAllocate\n  };\n  gc(g: IGraphic) {\n    if (g.isContainer) {\n      g.forEachChildren(i => this.gc(i as any));\n    } else {\n      this.gcItem(g);\n    }\n  }\n\n  gcItem(g: IGraphic) {\n    const allocate = this.map[g.type];\n    if (allocate) {\n      allocate.free(g);\n    }\n  }\n}\n\nexport const defaultGraphicMemoryManager = new DefaultGraphicMemoryManager();\n"]}