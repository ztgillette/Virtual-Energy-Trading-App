{"version":3,"sources":["../src/resource-loader/loader.ts"],"names":[],"mappings":"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","file":"loader.js","sourcesContent":["import type { IImage, ImagePayload, ResourceData } from '../interface';\nimport { application } from '../application';\n\nconst PARALLEL_NUMBER = 10;\nexport class ResourceLoader {\n  private static cache: Map<string, ResourceData> = new Map();\n  private static isLoading: boolean = false;\n  private static toLoadAueue: { url: string; marks: ImagePayload[] }[] = [];\n  private static onLoadSuccessCb: (() => void)[] = [];\n\n  static GetImage(url: string, mark: ImagePayload) {\n    const data = ResourceLoader.cache.get(url);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'fail') {\n        // 资源请求失败，修改mark状态\n        application.global.getRequestAnimationFrame()(() => {\n          mark.imageLoadFail(url);\n        });\n      } else if (data.loadState === 'init' || data.loadState === 'loading') {\n        // 资源padding队列加入mark信息\n        data.waitingMark?.push(mark);\n      } else if (mark) {\n        mark.imageLoadSuccess(url, data.data as HTMLImageElement);\n      }\n    } else {\n      ResourceLoader.loadImage(url, mark);\n      // data = { type: 'image', loadState: 'init' };\n      // ResourceLoader.cache.set(url, data);\n\n      // data.dataPromise = application.global.loadImage(url);\n      // if (!data.dataPromise) {\n      //   // 无法获取资源，修改缓存和mark状态\n      //   data.loadState = 'fail';\n      //   mark.imageLoadFail(url);\n      // } else {\n      //   // 资源padding队列加入mark信息\n      //   data.waitingMark = [mark];\n\n      //   data.dataPromise.then(res => {\n      //     data.loadState = res?.data ? 'success' : 'fail';\n      //     data.data = res?.data;\n      //     // 遍历资源padding队列，更新mark信息\n      //     data.waitingMark?.map((mark: IImage, index) => {\n      //       if (res?.data) {\n      //         data.loadState = 'success';\n      //         data.data = res.data;\n      //         mark.imageLoadSuccess(url, res.data as HTMLImageElement);\n      //       } else {\n      //         data.loadState = 'fail';\n      //         mark.imageLoadFail(url);\n      //       }\n      //     });\n      //   });\n      // }\n    }\n  }\n\n  static GetSvg(svgStr: string, mark: ImagePayload) {\n    let data = ResourceLoader.cache.get(svgStr);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'fail') {\n        // 资源请求失败，修改mark状态\n        application.global.getRequestAnimationFrame()(() => {\n          mark.imageLoadFail(svgStr);\n        });\n      } else if (data.loadState === 'init' || data.loadState === 'loading') {\n        // 资源padding队列加入mark信息\n        data.waitingMark?.push(mark);\n      } else if (mark) {\n        mark.imageLoadSuccess(svgStr, data.data as HTMLImageElement);\n      }\n    } else {\n      data = { type: 'image', loadState: 'init' };\n      ResourceLoader.cache.set(svgStr, data);\n\n      data.dataPromise = application.global.loadSvg(svgStr);\n      if (!data.dataPromise) {\n        // 无法获取资源，修改缓存和mark状态\n        data.loadState = 'fail';\n        mark.imageLoadFail(svgStr);\n      } else {\n        // 资源padding队列加入mark信息\n        data.waitingMark = [mark];\n\n        data.dataPromise.then(res => {\n          data.loadState = res?.data ? 'success' : 'fail';\n          data.data = res?.data;\n          // 遍历资源padding队列，更新mark信息\n          data.waitingMark?.map((mark: IImage, index) => {\n            if (res?.data) {\n              data.loadState = 'success';\n              data.data = res.data;\n              mark.imageLoadSuccess(svgStr, res.data as HTMLImageElement);\n            } else {\n              data.loadState = 'fail';\n              mark.imageLoadFail(svgStr);\n            }\n          });\n          data.waitingMark && (data.waitingMark = []);\n        });\n      }\n    }\n  }\n\n  static GetFile(url: string, type: 'json' | 'arrayBuffer' | 'blob') {\n    let data = ResourceLoader.cache.get(url);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'fail') {\n        return Promise.reject();\n      } else if (data.loadState === 'init' || data.loadState === 'loading') {\n        return data.dataPromise.then(data => data.data);\n      }\n      return Promise.resolve(data.data);\n    }\n    data = { type, loadState: 'init' };\n    ResourceLoader.cache.set(url, data);\n\n    if (type === 'arrayBuffer') {\n      data.dataPromise = application.global.loadArrayBuffer(url);\n    } else if (type === 'blob') {\n      data.dataPromise = application.global.loadBlob(url);\n    } else if (type === 'json') {\n      data.dataPromise = application.global.loadJson(url);\n    }\n\n    return data.dataPromise.then(data => data.data);\n  }\n\n  static loading() {\n    setTimeout(() => {\n      if (!ResourceLoader.isLoading && ResourceLoader.toLoadAueue.length) {\n        ResourceLoader.isLoading = true;\n        const tasks = ResourceLoader.toLoadAueue.splice(0, PARALLEL_NUMBER);\n        const promises: Promise<void>[] = [];\n        tasks.forEach(task => {\n          const { url, marks } = task;\n          const data: ResourceData = { type: 'image', loadState: 'init' };\n          ResourceLoader.cache.set(url, data);\n\n          data.dataPromise = application.global.loadImage(url);\n          if (!data.dataPromise) {\n            // 无法获取资源，修改缓存和mark状态\n            data.loadState = 'fail';\n            // mark.imageLoadFail(url);\n            marks.forEach(mark => mark.imageLoadFail(url));\n          } else {\n            // 资源padding队列加入mark信息\n            // data.waitingMark = [mark];\n            data.waitingMark = marks;\n\n            const end = data.dataPromise.then(res => {\n              data.loadState = res?.data ? 'success' : 'fail';\n              data.data = res?.data;\n              // 遍历资源padding队列，更新mark信息\n              data.waitingMark?.map((mark: IImage, index) => {\n                if (res?.data) {\n                  data.loadState = 'success';\n                  data.data = res.data;\n                  // console.log(mark.attribute.y)\n                  mark.imageLoadSuccess(url, res.data as HTMLImageElement);\n                } else {\n                  data.loadState = 'fail';\n                  mark.imageLoadFail(url);\n                }\n              });\n\n              data.waitingMark && (data.waitingMark = []);\n            });\n\n            promises.push(end);\n          }\n        });\n\n        Promise.all(promises)\n          .then(() => {\n            ResourceLoader.isLoading = false;\n            this.onLoadSuccessCb.forEach(cb => cb());\n            ResourceLoader.loading();\n          })\n          .catch(error => {\n            console.error(error);\n            ResourceLoader.isLoading = false;\n            this.onLoadSuccessCb.forEach(cb => cb());\n            ResourceLoader.loading();\n          });\n      }\n    }, 0);\n  }\n\n  static loadImage(url: string, mark: ImagePayload) {\n    // find url in toLoadAueue\n    const index = getIndex(url, ResourceLoader.toLoadAueue);\n    if (index !== -1) {\n      // add mark to aueue\n      ResourceLoader.toLoadAueue[index].marks.push(mark);\n      ResourceLoader.loading();\n      return;\n    }\n\n    // add task to aueue\n    ResourceLoader.toLoadAueue.push({ url, marks: [mark] });\n    ResourceLoader.loading();\n  }\n\n  static improveImageLoading(url: string) {\n    const index = getIndex(url, ResourceLoader.toLoadAueue);\n    if (index !== -1) {\n      const elememt = ResourceLoader.toLoadAueue.splice(index, 1);\n      ResourceLoader.toLoadAueue.unshift(elememt[0]);\n    }\n  }\n\n  static onLoadSuccess(cb: () => void) {\n    this.onLoadSuccessCb.push(cb);\n  }\n}\n\nfunction getIndex(url: string, arr: { url: string; marks: ImagePayload[] }[]) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].url === url) {\n      return i;\n    }\n  }\n  return -1;\n}\n"]}