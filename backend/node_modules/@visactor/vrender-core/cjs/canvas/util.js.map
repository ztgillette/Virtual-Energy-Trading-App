{"version":3,"sources":["../src/canvas/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import type { IPointLike, vec2 } from '@visactor/vutils';\nimport { isPointInLine, pi, pi2 } from '@visactor/vutils';\nimport { enumCommandMap as CMD } from '../common/path-svg';\nimport type { CommandType, IContext2d } from '../interface';\nimport { container } from '../container';\nimport { application } from '../application';\nimport { CanvasFactory, Context2dFactory } from './constants';\nimport type { CanvasConfigType, ICanvas, ICanvasFactory, IContext2dFactory } from '../interface';\n\nexport function wrapCanvas(params: CanvasConfigType) {\n  return container.getNamed<ICanvasFactory>(CanvasFactory, application.global.env)(params);\n}\n\nexport function wrapContext(canvas: ICanvas, dpr: number) {\n  return container.getNamed<IContext2dFactory>(Context2dFactory, application.global.env)(canvas, dpr);\n}\n// 源码参考 http://pomax.github.io/bezierinfo/#projections\n/**\n * 源码参考zrender https://github.com/ecomfe/zrender/\n * BSD 3-Clause License\n\n  Copyright (c) 2017, Baidu Inc.\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n  * Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// todo: 优化逻辑\n\nconst EPSILON_NUMERIC = 1e-4;\n\nconst THREE_SQRT = Math.sqrt(3);\nconst ONE_THIRD = 1 / 3;\nfunction isAroundZero(val: number) {\n  return val > -EPSILON && val < EPSILON;\n}\nfunction isNotAroundZero(val: number) {\n  return val > EPSILON || val < -EPSILON;\n}\nexport function vec2Equals(d1: vec2, d2: vec2): boolean {\n  return Math.abs(d1[0] - d2[0]) + Math.abs(d1[1] - d2[1]) < 1e-10;\n}\n\nexport function isNumber(data: any): boolean {\n  return typeof data === 'number' && Number.isFinite(data);\n}\n\nconst _v0: [number, number] = [0, 0];\nconst _v1: [number, number] = [0, 0];\nconst _v2: [number, number] = [0, 0];\n\nfunction distanceSquare(v1: [number, number], v2: [number, number]): number {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\n/**\n * 计算二次方贝塞尔值\n */\nexport function quadraticAt(p0: number, p1: number, p2: number, t: number): number {\n  const onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n\n/**\n * 计算三次贝塞尔值\n */\nexport function cubicAt(p0: number, p1: number, p2: number, p3: number, t: number): number {\n  const onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n\n/**\n * 计算二次方贝塞尔方程根\n * @return 有效根数目\n */\nexport function quadraticRootAt(p0: number, p1: number, p2: number, val: number, roots: number[]): number {\n  const a = p0 - 2 * p1 + p2;\n  const b = 2 * (p1 - p0);\n  const c = p0 - val;\n\n  let n = 0;\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      const t1 = -c / b;\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    const disc = b * b - 4 * a * c;\n    if (isAroundZero(disc)) {\n      const t1 = -b / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      const discSqrt = Math.sqrt(disc);\n      const t1 = (-b + discSqrt) / (2 * a);\n      const t2 = (-b - discSqrt) / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n  return n;\n}\n\n/**\n * 计算二次贝塞尔方程极限值\n */\nexport function quadraticExtremum(p0: number, p1: number, p2: number): number {\n  const divider = p0 + p2 - 2 * p1;\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  }\n\n  return (p0 - p1) / divider;\n}\n\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\nexport function quadraticProjectPoint(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x: number,\n  y: number,\n  out: [number, number] | null\n): number {\n  // http://pomax.github.io/bezierinfo/#projections\n  let t: number = 0;\n  let interval = 0.005;\n  let d = Infinity;\n\n  _v0[0] = x;\n  _v0[1] = y;\n\n  // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n  for (let _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    const d1 = distanceSquare(_v0, _v1);\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n  d = Infinity;\n\n  // At most 32 iteration\n  for (let i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n    const prev = t - interval;\n    const next = t + interval;\n    // t - interval\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n    const d1 = distanceSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      const d2 = distanceSquare(_v2, _v0);\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n  // t\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  }\n\n  return Math.sqrt(d);\n}\n\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n */\nexport function cubicProjectPoint(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x3: number,\n  y3: number,\n  x: number,\n  y: number,\n  out: [number, number] | null\n): number {\n  // http://pomax.github.io/bezierinfo/#projections\n  let t: number = 0;\n  let interval = 0.005;\n  let d = Infinity;\n  let prev;\n  let next;\n  let d1;\n  let d2;\n\n  _v0[0] = x;\n  _v0[1] = y;\n\n  // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n  for (let _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = distanceSquare(_v0, _v1);\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n  d = Infinity;\n\n  // At most 32 iteration\n  for (let i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n    prev = t - interval;\n    next = t + interval;\n    // t - interval\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n    d1 = distanceSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = distanceSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n  // t\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  }\n  // console.log(interval, i);\n  return Math.sqrt(d);\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/util.ts\nexport function normalizeRadian(angle: number): number {\n  angle %= pi2;\n  if (angle < 0) {\n    angle += pi2;\n  }\n  return angle;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/quadratic.ts\nexport function containQuadStroke(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  lineWidth: number,\n  x: number,\n  y: number\n): boolean {\n  if (lineWidth === 0) {\n    return false;\n  }\n  const _l = lineWidth;\n  // Quick reject\n  if (\n    (y > y0 + _l && y > y1 + _l && y > y2 + _l) ||\n    (y < y0 - _l && y < y1 - _l && y < y2 - _l) ||\n    (x > x0 + _l && x > x1 + _l && x > x2 + _l) ||\n    (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n  ) {\n    return false;\n  }\n  const d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/cubic.ts\n/**\n * 三次贝塞尔曲线描边包含判断\n */\nexport function containCubicStroke(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x3: number,\n  y3: number,\n  lineWidth: number,\n  x: number,\n  y: number\n): boolean {\n  if (lineWidth === 0) {\n    return false;\n  }\n  const _l = lineWidth;\n  // Quick reject\n  if (\n    (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l) ||\n    (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l) ||\n    (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l) ||\n    (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n  ) {\n    return false;\n  }\n  const d = cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/arc.ts\n/**\n * 圆弧描边包含判断\n */\nexport function containArcStroke(\n  cx: number,\n  cy: number,\n  r: number,\n  startAngle: number,\n  endAngle: number,\n  anticlockwise: boolean,\n  lineWidth: number,\n  x: number,\n  y: number\n): boolean {\n  if (lineWidth === 0) {\n    return false;\n  }\n  const _l = lineWidth;\n\n  x -= cx;\n  y -= cy;\n  const d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n  // TODO\n  if (Math.abs(startAngle - endAngle) % pi2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n  if (anticlockwise) {\n    const tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n  if (startAngle > endAngle) {\n    endAngle += pi2;\n  }\n\n  let angle = Math.atan2(y, x);\n  if (angle < 0) {\n    angle += pi2;\n  }\n  return (angle >= startAngle && angle <= endAngle) || (angle + pi2 >= startAngle && angle + pi2 <= endAngle);\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/line.ts\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nexport function containLineStroke(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  lineWidth: number,\n  x: number,\n  y: number\n): boolean {\n  if (lineWidth === 0) {\n    return false;\n  }\n  const _l = lineWidth;\n  const _halfL = lineWidth / 2;\n  let _a = 0;\n  let _b = x0;\n  // Quick reject\n  if (\n    (y > y0 + _halfL && y > y1 + _halfL) ||\n    (y < y0 - _halfL && y < y1 - _halfL) ||\n    (x > x0 + _halfL && x > x1 + _halfL) ||\n    (x < x0 - _halfL && x < x1 - _halfL)\n  ) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n  const tmp = _a * x - y + _b;\n  const _s = (tmp * tmp) / (_a * _a + 1);\n  return _s <= ((_l / 2) * _l) / 2;\n}\n\nconst globalPoint: IPointLike = { x: 0, y: 0 };\nexport function transformPoint(pos: IPointLike, ctx: IContext2d, out?: IPointLike): IPointLike {\n  const matrix = ctx.currentMatrix.getInverse();\n  out = out || globalPoint;\n  out.x = pos.x * matrix.a + pos.y * matrix.c + matrix.e;\n  out.y = pos.x * matrix.b + pos.y * matrix.d + matrix.f;\n  return out;\n}\n\nconst EPSILON = 1e-4;\n\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n */\nexport function cubicRootAt(p0: number, p1: number, p2: number, p3: number, val: number, roots: number[]): number {\n  // Evaluate roots of cubic functions\n  const a = p3 + 3 * (p1 - p2) - p0;\n  const b = 3 * (p2 - p1 * 2 + p0);\n  const c = 3 * (p1 - p0);\n  const d = p0 - val;\n\n  const A = b * b - 3 * a * c;\n  const B = b * c - 9 * a * d;\n  const C = c * c - 3 * b * d;\n\n  let n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      const t1 = -c / b; //t1, t2, t3, b is not zero\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    const disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      const K = B / A;\n      const t1 = -b / a + K; // t1, a is not zero\n      const t2 = -K / 2; // t2, t3\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      const discSqrt = Math.sqrt(disc);\n      let Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      let Y2 = A * b + 1.5 * a * (-B - discSqrt);\n      if (Y1 < 0) {\n        Y1 = -Math.pow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = Math.pow(Y1, ONE_THIRD);\n      }\n      if (Y2 < 0) {\n        Y2 = -Math.pow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = Math.pow(Y2, ONE_THIRD);\n      }\n      const t1 = (-b - (Y1 + Y2)) / (3 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      const T = (2 * A * b - 3 * a * B) / (2 * Math.sqrt(A * A * A));\n      const theta = Math.acos(T) / 3;\n      const ASqrt = Math.sqrt(A);\n      const tmp = Math.cos(theta);\n\n      const t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      const t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      const t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n  return n;\n}\n\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @return 有效数目\n */\nexport function cubicExtrema(p0: number, p1: number, p2: number, p3: number, extrema: number[]): number {\n  const b = 6 * p2 - 12 * p1 + 6 * p0;\n  const a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  const c = 3 * p1 - 3 * p0;\n\n  let n = 0;\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      const t1 = -c / b;\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    const disc = b * b - 4 * a * c;\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      const discSqrt = Math.sqrt(disc);\n      const t1 = (-b + discSqrt) / (2 * a);\n      const t2 = (-b - discSqrt) / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n  return n;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nfunction isAroundEqual(a: number, b: number) {\n  return Math.abs(a - b) < EPSILON;\n}\n\n// 临时数组\nconst roots = [-1, -1, -1];\nconst extrema = [-1, -1];\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nfunction swapExtrema() {\n  const tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nfunction windingCubic(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x3: number,\n  y3: number,\n  x: number,\n  y: number\n): number {\n  // Quick reject\n  if ((y > y0 && y > y1 && y > y2 && y > y3) || (y < y0 && y < y1 && y < y2 && y < y3)) {\n    return 0;\n  }\n  const nRoots = cubicRootAt(y0, y1, y2, y3, y, roots);\n  if (nRoots === 0) {\n    return 0;\n  }\n\n  let w = 0;\n  let nExtrema = -1;\n  let y0_ = 0;\n  let y1_ = 0;\n  for (let i = 0; i < nRoots; i++) {\n    const t = roots[i];\n\n    // Avoid winding error when intersection point is the connect point of two line of polygon\n    const unit = t === 0 || t === 1 ? 0.5 : 1;\n\n    const x_ = cubicAt(x0, x1, x2, x3, t);\n    if (x_ < x) {\n      // Quick reject\n      continue;\n    }\n    if (nExtrema < 0) {\n      nExtrema = cubicExtrema(y0, y1, y2, y3, extrema);\n      if (extrema[1] < extrema[0] && nExtrema > 1) {\n        swapExtrema();\n      }\n      y0_ = cubicAt(y0, y1, y2, y3, extrema[0]);\n      if (nExtrema > 1) {\n        y1_ = cubicAt(y0, y1, y2, y3, extrema[1]);\n      }\n    }\n    if (nExtrema === 2) {\n      // 分成三段单调函数\n      if (t < extrema[0]) {\n        w += y0_ < y0 ? unit : -unit;\n      } else if (t < extrema[1]) {\n        w += y1_ < y0_ ? unit : -unit;\n      } else {\n        w += y3 < y1_ ? unit : -unit;\n      }\n    } else {\n      // 分成两段单调函数\n      if (t < extrema[0]) {\n        w += y0_ < y0 ? unit : -unit;\n      } else {\n        w += y3 < y0_ ? unit : -unit;\n      }\n    }\n  }\n  return w;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nfunction windingQuadratic(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  x: number,\n  y: number\n): number {\n  // Quick reject\n  if ((y > y0 && y > y1 && y > y2) || (y < y0 && y < y1 && y < y2)) {\n    return 0;\n  }\n  const nRoots = quadraticRootAt(y0, y1, y2, y, roots);\n  if (nRoots === 0) {\n    return 0;\n  }\n\n  const t = quadraticExtremum(y0, y1, y2);\n  if (t >= 0 && t <= 1) {\n    let w = 0;\n    const y_ = quadraticAt(y0, y1, y2, t);\n    for (let i = 0; i < nRoots; i++) {\n      // Remove one endpoint.\n      const unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n\n      const x_ = quadraticAt(x0, x1, x2, roots[i]);\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n      if (roots[i] < t) {\n        w += y_ < y0 ? unit : -unit;\n      } else {\n        w += y2 < y_ ? unit : -unit;\n      }\n    }\n    return w;\n  }\n\n  // Remove one endpoint.\n  const unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n\n  const x_ = quadraticAt(x0, x1, x2, roots[0]);\n  if (x_ < x) {\n    // Quick reject\n    return 0;\n  }\n  return y2 < y0 ? unit : -unit;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\n// TODO\n// Arc 旋转\n// startAngle, endAngle has been normalized by normalizeArcAngles\nfunction windingArc(\n  cx: number,\n  cy: number,\n  r: number,\n  startAngle: number,\n  endAngle: number,\n  anticlockwise: boolean,\n  x: number,\n  y: number\n) {\n  y -= cy;\n  if (y > r || y < -r) {\n    return 0;\n  }\n  const tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n\n  const dTheta = Math.abs(startAngle - endAngle);\n  if (dTheta < 1e-4) {\n    return 0;\n  }\n  if (dTheta >= pi2 - 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = pi2;\n    const dir = anticlockwise ? 1 : -1;\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    }\n\n    return 0;\n  }\n\n  if (startAngle > endAngle) {\n    // Swap, make sure startAngle is smaller than endAngle.\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n  // endAngle - startAngle is normalized to 0 - 2*pi.\n  // So following will normalize them to 0 - 4*pi\n  if (startAngle < 0) {\n    startAngle += pi2;\n    endAngle += pi2;\n  }\n\n  let w = 0;\n  for (let i = 0; i < 2; i++) {\n    const x_ = roots[i];\n    if (x_ + cx > x) {\n      let angle = Math.atan2(y, x_);\n      let dir = anticlockwise ? 1 : -1;\n      if (angle < 0) {\n        angle = pi2 + angle;\n      }\n      if ((angle >= startAngle && angle <= endAngle) || (angle + pi2 >= startAngle && angle + pi2 <= endAngle)) {\n        if (angle > pi / 2 && angle < pi * 1.5) {\n          dir = -dir;\n        }\n        w += dir;\n      }\n    }\n  }\n  return w;\n}\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/core/PathProxy.ts\nfunction modpi2(radian: number) {\n  const n = Math.round((radian / pi) * 1e8) / 1e8;\n  return (n % 2) * pi;\n}\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/core/PathProxy.ts\nfunction normalizeArcAngles(angles: [number, number], anticlockwise: boolean) {\n  let newStartAngle = modpi2(angles[0]);\n  if (newStartAngle < 0) {\n    newStartAngle += pi2;\n  }\n  const delta = newStartAngle - angles[0];\n  let newEndAngle = angles[1];\n  newEndAngle += delta;\n  if (!anticlockwise && newEndAngle - newStartAngle >= pi2) {\n    newEndAngle = newStartAngle + pi2;\n  } else if (anticlockwise && newStartAngle - newEndAngle >= pi2) {\n    newEndAngle = newStartAngle - pi2;\n  } else if (!anticlockwise && newStartAngle > newEndAngle) {\n    newEndAngle = newStartAngle + (pi2 - modpi2(newStartAngle - newEndAngle));\n  } else if (anticlockwise && newStartAngle < newEndAngle) {\n    newEndAngle = newStartAngle - (pi2 - modpi2(newEndAngle - newStartAngle));\n  }\n  angles[0] = newStartAngle;\n  angles[1] = newEndAngle;\n}\n\nconst tmpAngles: [number, number] = [0, 0];\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nfunction containPath(commands: CommandType[], lineWidth: number, isStroke: boolean, x: number, y: number): boolean {\n  const data = commands;\n  const len = commands.length;\n  let w = 0;\n  let xi = 0;\n  let yi = 0;\n  let x0 = 0;\n  let y0 = 0;\n  let x1;\n  let y1;\n\n  for (let i = 0; i < len; i++) {\n    const command = data[i];\n    const isFirst = i === 0;\n    // Begin a new subpath\n    if (command[0] === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += isPointInLine(xi, yi, x0, y0, x, y);\n      }\n    }\n    if (isFirst) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = command[1] as number;\n      yi = command[2] as number;\n\n      x0 = xi;\n      y0 = yi;\n    }\n\n    const c0 = command[0];\n    const c1 = command[1] as number;\n    const c2 = command[2] as number;\n    const c3 = command[3] as number;\n    const c4 = command[4] as number;\n    const c5 = command[5] as number;\n    const c6 = command[6] as number;\n\n    // TODO Arc 判断的开销比较大\n    let startAngle = c4;\n    let endAngle = c5;\n    tmpAngles[0] = startAngle;\n    tmpAngles[1] = endAngle;\n    normalizeArcAngles(tmpAngles, Boolean(command[6]));\n    startAngle = tmpAngles[0];\n    endAngle = tmpAngles[1];\n    const theta = startAngle;\n    const dTheta = endAngle - startAngle;\n    const anticlockwise = !!(1 - (command[6] ? 0 : 1));\n    const _x = ((x - c1) * c3) / c3 + c1;\n    switch (c0) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = c1;\n        y0 = c2;\n        xi = x0;\n        yi = y0;\n        break;\n      case CMD.L:\n        if (isStroke) {\n          if (containLineStroke(xi, yi, c1, c2, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += isPointInLine(xi, yi, c1, c2, x, y) || 0;\n        }\n        xi = c1;\n        yi = c2;\n        break;\n      case CMD.C:\n        if (isStroke) {\n          if (containCubicStroke(xi, yi, c1, c2, c3, c4, c5, c6, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, c1, c2, c3, c4, c5, c6, x, y) || 0;\n        }\n        xi = c5;\n        yi = c6;\n        break;\n      case CMD.Q:\n        if (isStroke) {\n          if (containQuadStroke(xi, yi, c1, c2, c3, c4, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, c1, c2, c3, c4, x, y) || 0;\n        }\n        xi = c3;\n        yi = c4;\n        break;\n      case CMD.A:\n        // TODO Arc 旋转\n        x1 = Math.cos(theta) * c3 + c1;\n        y1 = Math.sin(theta) * c3 + c2;\n        // 不是直接使用 arc 命令\n        if (!isFirst) {\n          w += isPointInLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        }\n        // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n        if (isStroke) {\n          if (containArcStroke(c1, c2, c3, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(c1, c2, c3, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n        xi = Math.cos(theta + dTheta) * c3 + c1;\n        yi = Math.sin(theta + dTheta) * c3 + c2;\n        break;\n      case CMD.R:\n        x0 = xi = c1;\n        y0 = yi = c2;\n        x1 = x0 + c3;\n        y1 = y0 + c4;\n        if (isStroke) {\n          if (\n            containLineStroke(x0, y0, x1, y0, lineWidth, x, y) ||\n            containLineStroke(x1, y0, x1, y1, lineWidth, x, y) ||\n            containLineStroke(x1, y1, x0, y1, lineWidth, x, y) ||\n            containLineStroke(x0, y1, x0, y0, lineWidth, x, y)\n          ) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += isPointInLine(x1, y0, x1, y1, x, y);\n          w += isPointInLine(x0, y1, x0, y0, x, y);\n        }\n        break;\n      case CMD.Z:\n        if (isStroke) {\n          if (containLineStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += isPointInLine(xi, yi, x0, y0, x, y);\n          // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += isPointInLine(xi, yi, x0, y0, x, y) || 0;\n  }\n  return w !== 0;\n}\n\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nexport function contain(commands: CommandType[], x: number, y: number): boolean {\n  return containPath(commands, 0, false, x, y);\n}\n// 基于zrender\n// https://github.com/ecomfe/zrender/blob/master/src/contain/path.ts\nexport function containStroke(commands: CommandType[], lineWidth: number, x: number, y: number): boolean {\n  return containPath(commands, lineWidth, true, x, y);\n}\n"]}