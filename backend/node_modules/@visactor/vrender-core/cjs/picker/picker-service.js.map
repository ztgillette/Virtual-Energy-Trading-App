{"version":3,"sources":["../src/picker/picker-service.ts"],"names":[],"mappings":"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","file":"picker-service.js","sourcesContent":["import type { IMatrix, IPoint, IPointLike } from '@visactor/vutils';\nimport { AABBBounds, Matrix, Point } from '@visactor/vutils';\nimport { inject, injectable, named } from '../common/inversify-lite';\nimport { foreach } from '../common/sort';\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { ContributionProvider } from '../common/contribution-provider';\nimport type {\n  IContext2d,\n  IGraphic,\n  IGroup,\n  EnvType,\n  IGlobal,\n  IPickerService,\n  IGraphicPicker,\n  IPickParams,\n  PickResult,\n  IPickItemInterceptorContribution,\n  IContributionProvider,\n  IPickServiceInterceptorContribution\n} from '../interface';\nimport { getTheme } from '../graphic/theme';\nimport { DefaultAttribute } from '../graphic/config';\nimport { mat3Tomat4, multiplyMat4Mat4 } from '../common/matrix';\nimport { mat4Allocate, matrixAllocate } from '../allocator/matrix-allocate';\nimport { application } from '../application';\nimport { PickItemInterceptor, PickServiceInterceptor } from './constants';\n\n@injectable()\nexport abstract class DefaultPickService implements IPickerService {\n  type: string = 'default';\n  declare pickerMap: Map<number, IGraphicPicker>;\n  declare pickContext?: IContext2d;\n  declare InterceptorContributions: IPickItemInterceptorContribution[];\n  declare pickerServiceInterceptorContributions: IPickServiceInterceptorContribution[];\n  declare global: IGlobal;\n\n  constructor(\n    // 拦截器\n    // @ts-ignore\n    @inject(ContributionProvider)\n    @named(PickItemInterceptor)\n    protected readonly pickItemInterceptorContributions: IContributionProvider<IPickItemInterceptorContribution>,\n    // @ts-ignore\n    @inject(ContributionProvider)\n    @named(PickServiceInterceptor)\n    protected readonly pickServiceInterceptorContributions: IContributionProvider<IPickServiceInterceptorContribution>\n  ) {\n    this.global = application.global;\n  }\n\n  reInit() {\n    this._init();\n  }\n\n  protected _init() {\n    this.InterceptorContributions = this.pickItemInterceptorContributions\n      .getContributions()\n      .sort((a, b) => a.order - b.order);\n    this.pickerServiceInterceptorContributions = this.pickServiceInterceptorContributions\n      .getContributions()\n      .sort((a, b) => a.order - b.order);\n  }\n\n  abstract configure(global: IGlobal, env: EnvType): void;\n\n  // todo: params支持\n  // todo: 性能优化\n  pick(graphics: IGraphic[], point: IPoint, params: IPickParams): PickResult {\n    let result: PickResult = {\n      graphic: null,\n      group: null\n    };\n    // point变换\n    params.pickerService = this;\n\n    const w = params.bounds.width();\n    const h = params.bounds.height();\n    if (!new AABBBounds().setValue(0, 0, w, h).containsPoint(point)) {\n      return result;\n    }\n    if (this.pickContext) {\n      this.pickContext.inuse = true;\n    }\n    params.pickContext = this.pickContext;\n    this.pickContext && this.pickContext.clearMatrix(true, 1);\n\n    const parentMatrix = new Matrix(1, 0, 0, 1, 0, 0);\n    let group: IGroup;\n    for (let i = graphics.length - 1; i >= 0; i--) {\n      if (graphics[i].isContainer) {\n        result = this.pickGroup(graphics[i] as IGroup, point, parentMatrix, params);\n      } else {\n        result = this.pickItem(graphics[i], point, parentMatrix, params);\n      }\n      if (result.graphic) {\n        break;\n      }\n      if (!group) {\n        group = result.group;\n      }\n    }\n    if (!result.graphic) {\n      result.group = group;\n    }\n    if (this.pickContext) {\n      this.pickContext.inuse = false;\n    }\n\n    if (this.pickerServiceInterceptorContributions.length) {\n      for (let i = 0; i < this.pickerServiceInterceptorContributions.length; i++) {\n        const drawContribution = this.pickerServiceInterceptorContributions[i];\n        if (drawContribution.afterPickItem) {\n          result = drawContribution.afterPickItem(result, this, point, params, { parentMatrix });\n        }\n      }\n    }\n    // // 判断是否有shadow-dom\n    // if (result.graphic) {\n    //   let g = result.graphic;\n    //   while (g.parent) {\n    //     g = g.parent;\n    //   }\n    //   if (g.shadowHost) {\n    //     result.params = {\n    //       shadowTarget: result.graphic\n    //     };\n    //     result.graphic = g.shadowHost;\n    //   }\n    // }\n\n    return result;\n  }\n\n  containsPoint(graphic: IGraphic, point: IPointLike, params: IPickParams): boolean {\n    return !!this.pickItem(graphic, point, null, params ?? { pickContext: this.pickContext, pickerService: this })\n      ?.graphic;\n  }\n\n  // TODO: 支持3d模式的拾取和自定义path的拾取\n  pickGroup(group: IGroup, point: IPointLike, parentMatrix: IMatrix, params: IPickParams): PickResult {\n    let result: PickResult = {\n      group: null,\n      graphic: null\n    };\n    if (group.attribute.visibleAll === false) {\n      return result;\n    }\n    const context = params.pickContext;\n    const lastMatrix = context.modelMatrix;\n    // 如果是3d，那么需要生成modelMatrix\n    if (context.camera) {\n      const m = group.transMatrix;\n      const matrix = mat4Allocate.allocate();\n      mat3Tomat4(matrix, m);\n      if (lastMatrix) {\n        if (matrix) {\n          const m = mat4Allocate.allocate();\n          context.modelMatrix = multiplyMat4Mat4(m, lastMatrix, matrix);\n          mat4Allocate.free(matrix);\n        }\n      } else {\n        // 转化context的matrix为lastMatrix\n        mat3Tomat4(matrix, group.globalTransMatrix);\n        context.modelMatrix = matrix;\n      }\n    }\n    // 添加拦截器\n    if (this.InterceptorContributions.length) {\n      for (let i = 0; i < this.InterceptorContributions.length; i++) {\n        const drawContribution = this.InterceptorContributions[i];\n        if (drawContribution.beforePickItem) {\n          const result = drawContribution.beforePickItem(group, this, point, params, { parentMatrix });\n          if (result) {\n            if (context.modelMatrix !== lastMatrix) {\n              mat4Allocate.free(context.modelMatrix);\n            }\n            context.modelMatrix = lastMatrix;\n            return result;\n          }\n        }\n      }\n    }\n    // 转换坐标空间\n    const transMatrix = group.transMatrix;\n    const currentGroupMatrix = matrixAllocate.allocateByObj(parentMatrix);\n    const newPoint: IPoint = new Point(point.x, point.y);\n    currentGroupMatrix.transformPoint(newPoint, newPoint);\n    // todo: 支持带有path的group的选中\n    const insideGroup = group.AABBBounds.containsPoint(newPoint);\n    // 如果group没有被选中，直接跳过（如果是3d模式，那么继续）\n    if (!insideGroup && !group.stage.camera) {\n      return result;\n    }\n    // pickGroup，Group目前只支持拦截模式（用于shadow节点）\n    const pickedItem = this.pickItem(group, newPoint.clone(), parentMatrix, params);\n    if (pickedItem && pickedItem.graphic) {\n      result.graphic = pickedItem.graphic;\n      result.params = pickedItem.params;\n    }\n    const groupPicked = group.attribute.pickable !== false && insideGroup;\n\n    currentGroupMatrix.multiply(\n      transMatrix.a,\n      transMatrix.b,\n      transMatrix.c,\n      transMatrix.d,\n      transMatrix.e,\n      transMatrix.f\n    );\n    if (group.attribute.childrenPickable !== false && !(pickedItem && pickedItem.graphic)) {\n      foreach(\n        group,\n        DefaultAttribute.zIndex,\n        (graphic: IGraphic) => {\n          if (graphic.isContainer) {\n            // 偏移scrollX和scrollY\n            const newPoint: IPoint = new Point(point.x, point.y);\n            const theme = getTheme(group).group;\n            const { scrollX = theme.scrollX, scrollY = theme.scrollY } = group.attribute;\n            newPoint.x -= scrollX;\n            newPoint.y -= scrollY;\n            result = this.pickGroup(graphic as IGroup, newPoint, currentGroupMatrix, params);\n          } else {\n            const newPoint: IPoint = new Point(point.x, point.y);\n            currentGroupMatrix.transformPoint(newPoint, newPoint);\n            // 偏移scrollX和scrollY\n            const theme = getTheme(group).group;\n            const { scrollX = theme.scrollX, scrollY = theme.scrollY } = group.attribute;\n            newPoint.x -= scrollX;\n            newPoint.y -= scrollY;\n            const pickedItem = this.pickItem(graphic, newPoint, parentMatrix, params);\n            if (pickedItem && pickedItem.graphic) {\n              result.graphic = pickedItem.graphic;\n              result.params = pickedItem.params;\n            }\n          }\n          return !!result.graphic || !!result.group;\n        },\n        true,\n        !!context.camera\n      );\n    }\n    if (context.modelMatrix !== lastMatrix) {\n      mat4Allocate.free(context.modelMatrix);\n    }\n    context.modelMatrix = lastMatrix;\n\n    if (!result.graphic && !result.group && groupPicked && !group.stage.camera) {\n      result.group = group;\n    }\n    matrixAllocate.free(currentGroupMatrix);\n    return result;\n  }\n\n  // todo: switch统一改为数字map\n  abstract pickItem(\n    graphic: IGraphic,\n    point: IPointLike,\n    parentMatrix: IMatrix | null,\n    params: IPickParams\n  ): PickResult | null;\n\n  protected selectPicker(graphic: IGraphic): IGraphicPicker | null {\n    const picker = this.pickerMap.get(graphic.numberType);\n    if (!picker) {\n      return null;\n    }\n    return picker;\n  }\n}\n"]}