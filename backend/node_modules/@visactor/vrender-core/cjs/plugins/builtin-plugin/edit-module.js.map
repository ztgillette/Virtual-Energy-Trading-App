{"version":3,"sources":["../src/plugins/builtin-plugin/edit-module.ts"],"names":[],"mappings":"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","file":"edit-module.js","sourcesContent":["import { application } from '../../application';\nimport type {\n  IRichText,\n  IRichTextCharacter,\n  IRichTextGraphicAttribute,\n  IRichTextParagraphCharacter\n} from '../../interface';\n\n// function getMaxConfigIndexIgnoreLinebreak(textConfig: IRichTextCharacter[]) {\n//   let idx = 0;\n//   for (let i = 0; i < textConfig.length; i++) {\n//     const c = textConfig[i] as IRichTextParagraphCharacter;\n//     if (c.text !== '\\n') {\n//       idx++;\n//     }\n//   }\n//   return Math.max(idx - 1, 0);\n// }\n\nexport function getDefaultCharacterConfig(attribute: IRichTextGraphicAttribute) {\n  const {\n    fill = 'black',\n    stroke = false,\n    fontWeight = 'normal',\n    lineHeight,\n    fontFamily = 'Arial',\n    textAlign\n  } = attribute;\n  let { fontSize = 12 } = attribute;\n  if (!isFinite(fontSize)) {\n    fontSize = 12;\n  }\n  return {\n    fill,\n    stroke,\n    fontSize,\n    fontWeight,\n    fontFamily,\n    lineHeight,\n    textAlign\n  } as any;\n}\n\n/**\n * 找到cursorIndex所在的textConfig的位置，给出的index就是要插入的准确位置\n * @param textConfig\n * @param cursorIndex\n * @returns\n */\nexport function findConfigIndexByCursorIdx(textConfig: IRichTextCharacter[], cursorIndex: number): number {\n  if (cursorIndex < 0) {\n    return 0;\n  }\n\n  // 排序找到对应的元素\n  const intCursorIndex = Math.round(cursorIndex);\n  let tempCursorIndex = intCursorIndex;\n  // 跳过连续换行符中的第一个换行符（但是如果第一个字符就是换行符，那就不跳）\n  let lineBreak = (textConfig?.[0] as any)?.text === '\\n';\n  let configIdx = 0;\n  for (configIdx = 0; configIdx < textConfig.length && tempCursorIndex >= 0; configIdx++) {\n    const c = textConfig[configIdx] as IRichTextParagraphCharacter;\n    if (c.text === '\\n') {\n      tempCursorIndex -= Number(lineBreak);\n      lineBreak = true;\n    } else {\n      tempCursorIndex--;\n      lineBreak = false;\n    }\n  }\n  // 说明过限了\n  if (tempCursorIndex >= 0) {\n    return textConfig.length;\n  }\n  configIdx -= 1;\n\n  // 如果有换行，一定在换行符左边写\n  if (cursorIndex > intCursorIndex && !lineBreak) {\n    configIdx += 1;\n  }\n  return configIdx;\n}\n\n/**\n * 根据configIndex找到cursorIndex的位置，忽略单个换行符，连续换行符的时候只忽略第一个\n * @param textConfig\n * @param configIndex\n * @returns\n */\nexport function findCursorIdxByConfigIndex(textConfig: IRichTextCharacter[], configIndex: number): number {\n  let cursorIndex = 0;\n  if (configIndex < 0) {\n    return -0.1;\n  }\n  // 仅有一个\\n，那不算\n  // 如果有连续的\\n，那就少算一个（但是第一个字符是\\n的话，不算）\n  let lastLineBreak = (textConfig?.[0] as any)?.text === '\\n';\n\n  for (let i = 0; i <= configIndex && i < textConfig.length; i++) {\n    const c = textConfig[i] as IRichTextParagraphCharacter;\n    if (c.text === '\\n') {\n      cursorIndex += Number(lastLineBreak);\n      lastLineBreak = true;\n    } else {\n      cursorIndex++;\n      lastLineBreak = false;\n    }\n  }\n  cursorIndex = Math.max(cursorIndex - 1, 0);\n\n  // 超出区间了直接设置到尾部，configIndex超过区间，cursorIndex不会超过\n  if (configIndex > textConfig.length - 1) {\n    // 如果最后一行是一个换行符，那么就得是xx.9否则就是xx.1\n    if ((textConfig[textConfig.length - 1] as any)?.text === '\\n') {\n      return cursorIndex + 0.9;\n    }\n    return cursorIndex + 0.1;\n  }\n\n  // 如果是这个configIdx对应到的是单个换行的话，那么算到下一个字符上\n  const lineBreak = (textConfig[configIndex] as any)?.text === '\\n';\n  if (configIndex >= textConfig.length - 1 && lineBreak) {\n    return cursorIndex + 1 - 0.1;\n  }\n  const singleLineBreak = lineBreak && (textConfig[configIndex - 1] as any)?.text !== '\\n';\n\n  // 光标往左放\n  cursorIndex -= 0.1;\n\n  // 如果是单行，那么这一个换行符没有算字符，光标要往右放\n  if (singleLineBreak) {\n    cursorIndex += 0.2;\n  }\n  return cursorIndex;\n}\n\nexport class EditModule {\n  container: HTMLElement;\n  textAreaDom: HTMLTextAreaElement;\n  currRt: IRichText;\n  isComposing: boolean;\n  composingConfigIdx: number;\n  cursorIndex: number;\n  selectionStartCursorIdx: number;\n  // 输入的回调（composing的时候每次也会触发）\n  onInputCbList: Array<(text: string, isComposing: boolean, cursorIdx: number, rt: IRichText) => void>;\n  // change的回调（composing确认才会触发）\n  onChangeCbList: Array<(text: string, isComposing: boolean, cursorIdx: number, rt: IRichText) => void>;\n  onFocusInList: Array<() => void>;\n  onFocusOutList: Array<() => void>;\n  focusOutTimer: number;\n\n  constructor(container?: HTMLElement) {\n    this.container = container ?? document.body;\n\n    const textAreaDom = document.createElement('textarea');\n    textAreaDom.autocomplete = 'off';\n    textAreaDom.spellcheck = false;\n    textAreaDom.innerText = '';\n    this.applyStyle(textAreaDom);\n    this.container.append(textAreaDom);\n    this.textAreaDom = textAreaDom;\n    this.isComposing = false;\n    this.composingConfigIdx = -1;\n    this.onInputCbList = [];\n    this.onChangeCbList = [];\n    this.onFocusInList = [];\n    this.onFocusOutList = [];\n  }\n\n  onInput(cb: (text: string, isComposing: boolean, cursorIdx: number, rt: IRichText) => void) {\n    this.onInputCbList.push(cb);\n  }\n\n  onChange(cb: (text: string, isComposing: boolean, cursorIdx: number, rt: IRichText) => void) {\n    this.onChangeCbList.push(cb);\n  }\n\n  onFocusIn(cb: () => void) {\n    this.onFocusInList.push(cb);\n  }\n\n  onFocusOut(cb: () => void) {\n    this.onFocusOutList.push(cb);\n  }\n\n  applyStyle(textAreaDom: HTMLTextAreaElement) {\n    textAreaDom.setAttribute(\n      'style',\n      `width: 100px; height: 30px; left: 0; top: 0; position: absolute; z-index: -1; outline: none; resize: none; border: none; overflow: hidden; color: transparent; user-select: none; caret-color: transparent;background-color: transparent;opacity: 0;pointer-events: none;`\n    );\n\n    textAreaDom.addEventListener('input', this.handleInput);\n    textAreaDom.addEventListener('compositionstart', this.handleCompositionStart);\n    textAreaDom.addEventListener('compositionend', this.handleCompositionEnd);\n    // 监听焦点\n    textAreaDom.addEventListener('focusin', this.handleFocusIn);\n    textAreaDom.addEventListener('focusout', this.handleFocusOut);\n    application.global.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleFocusIn = () => {\n    // this.focusOutTimer && clearTimeout(this.focusOutTimer);\n    // this.focusOutTimer = 0;\n    // this.onFocusInList && this.onFocusInList.forEach(cb => cb());\n  };\n  handleFocusOut = () => {\n    // 暂时注释，会导致非期待情况下的误关闭\n    // // 延时触发，避免误关闭\n    // this.focusOutTimer = setTimeout(() => {\n    //   this.onFocusOutList && this.onFocusOutList.forEach(cb => cb());\n    // }, 100);\n  };\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    if (!this.currRt) {\n      return;\n    }\n    if (e.key === 'Delete' || e.key === 'Backspace') {\n      this.handleInput({ data: null, type: 'Backspace' });\n    }\n  };\n\n  handleCompositionStart = () => {\n    if (!this.currRt) {\n      return;\n    }\n    this.isComposing = true;\n    const { textConfig = [] } = this.currRt.attribute;\n    this.composingConfigIdx = this.cursorIndex < 0 ? 0 : findConfigIndexByCursorIdx(textConfig, this.cursorIndex);\n    if (this.cursorIndex < 0) {\n      const config = textConfig[0];\n      textConfig.unshift({ fill: 'black', ...getDefaultCharacterConfig(this.currRt.attribute), ...config, text: '' });\n    } else {\n      const configIdx = this.composingConfigIdx;\n      const lastConfig = textConfig[configIdx] || textConfig[configIdx - 1];\n      textConfig.splice(configIdx, 0, {\n        fill: 'black',\n        ...getDefaultCharacterConfig(this.currRt.attribute),\n        ...lastConfig,\n        text: ''\n      });\n    }\n  };\n  handleCompositionEnd = () => {\n    this.isComposing = false;\n\n    const text = this.parseCompositionStr(this.composingConfigIdx);\n    // 拆分上一次的内容\n    // const { textConfig = [] } = this.currRt.attribute;\n    // const configIdx = this.composingConfigIdx;\n\n    // const lastConfig = textConfig[configIdx];\n    // textConfig.splice(configIdx, 1);\n    // const text = (lastConfig as any).text;\n    // const textList: string[] = text ? Array.from(text.toString()) : [];\n    // for (let i = 0; i < textList.length; i++) {\n    //   textConfig.splice(i + configIdx, 0, { ...lastConfig, isComposing: false, text: textList[i] } as any);\n    // }\n    // this.currRt.setAttributes({ textConfig });\n    // const nextConfigIdx = configIdx + textList.length;\n    // this.cursorIndex = findCursorIdxByConfigIndex(textConfig, nextConfigIdx);\n    this.composingConfigIdx = -1;\n\n    this.onChangeCbList.forEach(cb => {\n      cb(\n        text,\n        this.isComposing,\n        // TODO 当换行后刚开始输入会有问题，后续看这里具体Cursor变换逻辑\n        this.cursorIndex,\n        this.currRt\n      );\n    });\n  };\n\n  /**\n   * 复合输入以及粘贴，都会复制出一大段内容，这时候需要重新处理textConfig和cursorIndex\n   * 1. 拆分text到textConfig\n   * 2. 计算新的cursorIndex\n   * @param configIdx\n   */\n  parseCompositionStr(configIdx: number) {\n    if (!this.currRt) {\n      return '';\n    }\n    const { textConfig = [] } = this.currRt.attribute;\n\n    const lastConfig = textConfig[configIdx] ?? {};\n    textConfig.splice(configIdx, 1);\n    const text = (lastConfig as any).text;\n    const textList: string[] = text ? Array.from(text.toString()) : [];\n    for (let i = 0; i < textList.length; i++) {\n      textConfig.splice(i + configIdx, 0, {\n        fill: 'black',\n        ...lastConfig,\n        isComposing: false,\n        text: textList[i]\n      } as any);\n    }\n    this.currRt.setAttributes({ textConfig });\n    const nextConfigIdx = configIdx + textList.length;\n    this.cursorIndex = findCursorIdxByConfigIndex(textConfig, nextConfigIdx);\n    return text;\n  }\n\n  handleInput = (ev: any) => {\n    if (!this.currRt) {\n      return;\n    }\n    if (ev.inputType === 'historyUndo') {\n      return;\n    }\n    const { textConfig = [], ...rest } = this.currRt.attribute;\n    // 删完了，直接返回\n    if (ev.type === 'Backspace' && !textConfig.length) {\n      return;\n    }\n\n    let str = (ev as any).data;\n    if (!this.isComposing && ev.type !== 'Backspace' && !str) {\n      str = '\\n';\n    }\n\n    // 处理正反选\n    if (this.selectionStartCursorIdx > this.cursorIndex) {\n      [this.cursorIndex, this.selectionStartCursorIdx] = [this.selectionStartCursorIdx, this.cursorIndex];\n    }\n\n    const startIdx = findConfigIndexByCursorIdx(textConfig, this.selectionStartCursorIdx);\n    const endIdx = findConfigIndexByCursorIdx(textConfig, this.cursorIndex);\n\n    // composing的话会插入一个字符，所以往右加一个\n    const lastConfigIdx = this.isComposing ? this.composingConfigIdx : Math.max(startIdx - 1, 0);\n    // 算一个默认属性\n    let lastConfig: any = textConfig[lastConfigIdx];\n    if (!lastConfig) {\n      lastConfig = getDefaultCharacterConfig(rest);\n    }\n    let nextConfig = lastConfig;\n\n    if (startIdx !== endIdx) {\n      textConfig.splice(startIdx, endIdx - startIdx);\n      if (this.isComposing) {\n        this.composingConfigIdx = startIdx;\n      }\n    }\n\n    let nextConfigIdx = startIdx;\n\n    // 删除键\n    if (ev.type === 'Backspace' && !this.isComposing) {\n      if (startIdx === endIdx) {\n        if (startIdx <= 0) {\n          return;\n        }\n        // 删除\n        textConfig.splice(startIdx - 1, 1);\n        nextConfigIdx = Math.max(startIdx - 1, 0);\n      } else {\n        // 不插入内容\n      }\n    } else {\n      // 插入\n      if (!this.isComposing) {\n        nextConfig = { fill: 'black', ...lastConfig, text: '' };\n        textConfig.splice(startIdx, 0, nextConfig);\n        nextConfigIdx++;\n      }\n      // 插入\n      nextConfig.text = str;\n      // 标记isComposing，用来判定是否应该拆分成单个字符\n      nextConfig.isComposing = this.isComposing;\n    }\n\n    this.currRt.setAttributes({ textConfig });\n    // 重新计算cursorIdx\n    // nextConfigIdx = Math.min(nextConfigIdx, textConfig.length - 1);\n\n    let cursorIndex = this.cursorIndex;\n    if (str && str.length > 1 && !this.isComposing) {\n      // 如果字符长度大于1且不是composing，那说明是粘贴\n      // 拆分\n      this.parseCompositionStr(nextConfigIdx - 1);\n      cursorIndex = this.cursorIndex;\n    } else {\n      // composing的时候不偏移，只有完整输入后才偏移\n      cursorIndex = findCursorIdxByConfigIndex(textConfig, nextConfigIdx);\n      if (!this.isComposing) {\n        this.cursorIndex = cursorIndex;\n      } else {\n        this.cursorIndex = this.selectionStartCursorIdx;\n      }\n    }\n\n    if (!this.isComposing) {\n      this.onChangeCbList.forEach(cb => {\n        cb(str, this.isComposing, cursorIndex, this.currRt);\n      });\n    } else {\n      this.onInputCbList.forEach(cb => {\n        cb(str, this.isComposing, cursorIndex, this.currRt);\n      });\n    }\n  };\n\n  moveTo(x: number, y: number, rt: IRichText, cursorIndex: number, selectionStartCursorIdx: number) {\n    this.textAreaDom.style.left = `${x}px`;\n    this.textAreaDom.style.top = `${y}px`;\n    setTimeout(() => {\n      this.textAreaDom.focus();\n      this.textAreaDom.setSelectionRange(0, 0);\n    });\n    this.currRt = rt;\n\n    this.cursorIndex = cursorIndex;\n    this.selectionStartCursorIdx = selectionStartCursorIdx;\n  }\n\n  release() {\n    this.textAreaDom.removeEventListener('input', this.handleInput);\n    this.textAreaDom.removeEventListener('compositionstart', this.handleCompositionStart);\n    this.textAreaDom.removeEventListener('compositionend', this.handleCompositionEnd);\n    this.textAreaDom.addEventListener('focusin', this.handleFocusOut);\n    this.textAreaDom.addEventListener('focusout', this.handleFocusOut);\n    application.global.removeEventListener('keydown', this.handleKeyDown);\n  }\n}\n"]}