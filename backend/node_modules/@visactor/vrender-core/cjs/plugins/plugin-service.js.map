{"version":3,"sources":["../src/plugins/plugin-service.ts"],"names":[],"mappings":"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","file":"plugin-service.js","sourcesContent":["import { injectable, inject, named } from '../common/inversify-lite';\nimport type { IContributionProvider, IPlugin, IPluginService, IStage } from '../interface';\nimport { ContributionProvider } from '../common/contribution-provider';\nimport { AutoEnablePlugins } from './constants';\nimport { container } from '../container';\n\n@injectable()\nexport class DefaultPluginService implements IPluginService {\n  declare onStartupFinishedPlugin: IPlugin[];\n  declare onRegisterPlugin: IPlugin[];\n  declare stage: IStage;\n  declare actived: boolean;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(AutoEnablePlugins)\n    protected readonly autoEnablePlugins: IContributionProvider<IPlugin>\n  ) {\n    this.onStartupFinishedPlugin = [];\n    this.onRegisterPlugin = [];\n    this.actived = false;\n  }\n\n  active(stage: IStage, params: { pluginList?: string[] }) {\n    this.stage = stage;\n    this.actived = true;\n\n    // 启动插件\n    const { pluginList } = params;\n    if (pluginList && container.isBound(AutoEnablePlugins)) {\n      this.autoEnablePlugins.getContributions().forEach(p => {\n        if (pluginList.includes(p.name)) {\n          this.register(p);\n        }\n      });\n    }\n  }\n\n  findPluginsByName(name: string): IPlugin[] {\n    const arr: IPlugin[] = [];\n    this.onStartupFinishedPlugin.forEach(plugin => {\n      if (plugin.name === name) {\n        arr.push(plugin);\n      }\n    });\n    this.onRegisterPlugin.forEach(plugin => {\n      if (plugin.name === name) {\n        arr.push(plugin);\n      }\n    });\n    return arr;\n  }\n\n  register(plugin: IPlugin) {\n    if (plugin.activeEvent === 'onStartupFinished') {\n      this.onStartupFinishedPlugin.push(plugin);\n    } else if (plugin.activeEvent === 'onRegister') {\n      this.onRegisterPlugin.push(plugin);\n      plugin.activate(this);\n    }\n  }\n  unRegister(plugin: IPlugin) {\n    if (plugin.activeEvent === 'onStartupFinished') {\n      this.onStartupFinishedPlugin.splice(this.onStartupFinishedPlugin.indexOf(plugin), 1);\n    } else if (plugin.activeEvent === 'onRegister') {\n      this.onRegisterPlugin.splice(this.onStartupFinishedPlugin.indexOf(plugin), 1);\n    }\n    plugin.deactivate(this);\n  }\n\n  release(...params: any): void {\n    this.onStartupFinishedPlugin.forEach(plugin => {\n      plugin.deactivate(this);\n    });\n    this.onStartupFinishedPlugin = [];\n    this.onRegisterPlugin.forEach(plugin => {\n      plugin.deactivate(this);\n    });\n    this.onRegisterPlugin = [];\n  }\n}\n"]}