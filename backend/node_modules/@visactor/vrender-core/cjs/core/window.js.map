{"version":3,"sources":["../src/core/window.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6DAA8D;AAE9D,6CAAkH;AAClH,mDAAgD;AAUhD,4CAAyC;AACzC,wCAAsC;AACtC,gDAA6C;AAC7C,6EAAwE;AAE3D,QAAA,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAEhC,QAAA,yBAAyB,GAAG,MAAM,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AAQ1E,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,6CAAoB;IAYrD,IAAI,KAAK;QACP,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,IAAI,MAAM;QACR,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAqBD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QA9CV,UAAK,GAAG;YACN,QAAQ,EAAE,IAAI,kBAAQ,CAAmC,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;SACxF,CAAC;QA8EQ,WAAM,GAAG,GAAG,EAAE;YACtB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC/B,OAAO;aACR;YACD,MAAM,OAAO,GAAG,qBAAS,CAAC,QAAQ,CAA6B,iCAAyB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;YACtG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAIhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC;QA5CA,IAAI,CAAC,IAAI,GAAG,qBAAS,CAAC,kBAAkB,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,yBAAW,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGS,uBAAuB,CAC/B,IAAY,EACZ,QAA4C,EAC5C,OAA2C;QAE3C,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAGS,0BAA0B,CAClC,IAAY,EACZ,QAA4C,EAC5C,OAAwC;QAExC,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACpE,CAAC;IAGS,oBAAoB,CAAC,KAAY;QACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAES,QAAQ;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAeD,IAAI,KAAK;;QACP,OAAO,MAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,mCAAI,EAAE,CAAC;IACxC,CAAC;IAED,IAAI,KAAK,CAAC,KAAgD;QACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,MAAqB;;QAE1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAGnC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;QAG/B,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,MAAM,CAAC,eAAe,KAAK,KAAK,EAAE;gBACpC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,MAAA,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,MAAA,MAAM,CAAC,MAAM,mCAAI,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACvG;SACF;QAOD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,OAAmC;QAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,CAAS,EAAE,CAAS;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IACD,SAAS;QACP,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAExD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IACD,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IACD,cAAc,CAAC,IAAa;QAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;YACjC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;IAC/C,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,KAAc;QACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,UAAU,CAAC,OAAoB;QAC7B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IACD,mBAAmB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QAClF,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IACD,mBAAmB;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;IAC7C,CAAC;IACD,cAAc,CAAC,CAAS,EAAE,CAAS;QACjC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACtC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAClC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;QACjB,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,UAAU;QACR,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC3C,OAAO,CAAC,CACN,OAAO,CAAC,EAAE,KAAK,CAAC;YAChB,OAAO,CAAC,EAAE,KAAK,CAAC;YAChB,IAAA,sBAAa,EAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC;YAC1C,IAAA,sBAAa,EAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAC7C,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAkB;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,EAAqC;QACnD,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,UAAoB;QAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;CACF,CAAA;AA7NY,aAAa;IADzB,IAAA,2BAAU,GAAE;;GACA,aAAa,CA6NzB;AA7NY,sCAAa","file":"window.js","sourcesContent":["import { inject, injectable } from '../common/inversify-lite';\nimport type { IPointLike } from '@visactor/vutils';\nimport { Matrix, type IBoundsLike, type IMatrix, IBounds, Point, isEqual, isNumberClose } from '@visactor/vutils';\nimport { Generator } from '../common/generator';\nimport type {\n  ICanvas,\n  IContext2d,\n  IDomRectLike,\n  IGlobal,\n  IWindow,\n  IWindowHandlerContribution,\n  IWindowParams\n} from '../interface';\nimport { container } from '../container';\nimport { SyncHook } from '../tapable';\nimport { application } from '../application';\nimport { EventListenerManager } from '../common/event-listener-manager';\n\nexport const VWindow = Symbol.for('VWindow');\n\nexport const WindowHandlerContribution = Symbol.for('WindowHandlerContribution');\n\n/**\n * 窗口\n * 对于浏览器，就是管理某个Stage影响的Canvas\n * 对于原生，就是管理这个系统窗口\n */\n@injectable()\nexport class DefaultWindow extends EventListenerManager implements IWindow {\n  protected _width: number;\n  protected _height: number;\n  protected _handler: IWindowHandlerContribution;\n\n  hooks = {\n    onChange: new SyncHook<[number, number, number, number]>(['x', 'y', 'width', 'height'])\n  };\n\n  // 父窗口(容器)，对于浏览器来说就是container dom\n  declare parent: Window;\n  // 窗口的大小\n  get width(): number {\n    if (this._handler) {\n      const wh = this._handler.getWH();\n      return (this._width = wh.width);\n    }\n    return this._width;\n  }\n  get height(): number {\n    if (this._handler) {\n      const wh = this._handler.getWH();\n      return (this._height = wh.height);\n    }\n    return this._height;\n  }\n  // 窗口的位置\n  // declare x: number;\n  // declare y: number;\n  declare _uid: number;\n  // 窗口操作配置\n  declare resizable: boolean;\n  declare minHeight: number;\n  declare minWidth: number;\n  declare maxHeight: number;\n  declare maxWidth: number;\n  // 窗口配置\n  declare title: string;\n\n  /* 浏览器环境配置 */\n  // 这是主体canvas，对于单图层来说就是绘图canvas\n  // 对于多图层画布来说，就是用户传入的或者默认的一个canvas\n  declare mainCanvas: ICanvas;\n  declare layerCanvas: ICanvas[];\n  declare actived: boolean;\n  declare global: IGlobal;\n  get dpr(): number {\n    return this._handler.getDpr();\n  }\n\n  constructor() {\n    super();\n    this._uid = Generator.GenAutoIncrementId();\n    this.global = application.global;\n    this.postInit();\n  }\n\n  // Override from EventListenerManager\n  protected _nativeAddEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    return this._handler.addEventListener(type, listener, options);\n  }\n\n  // Override from EventListenerManager\n  protected _nativeRemoveEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void {\n    return this._handler.removeEventListener(type, listener, options);\n  }\n\n  // Override from EventListenerManager\n  protected _nativeDispatchEvent(event: Event): boolean {\n    return this._handler.dispatchEvent(event);\n  }\n\n  protected postInit() {\n    this.global.hooks.onSetEnv.tap('window', this.active);\n    this.active();\n  }\n\n  protected active = () => {\n    const global = this.global;\n    if (!global.env || this.actived) {\n      return;\n    }\n    const handler = container.getNamed<IWindowHandlerContribution>(WindowHandlerContribution, global.env);\n    handler.configure(this, global);\n    // this.contributions.getContributions().forEach((handlerContribution) => {\n    //   handlerContribution.configure(this, this.global);\n    // });\n    this.actived = true;\n  };\n\n  get style(): CSSStyleDeclaration | Record<string, any> {\n    return this._handler.getStyle() ?? {};\n  }\n\n  set style(style: CSSStyleDeclaration | Record<string, any>) {\n    this._handler.setStyle(style);\n  }\n\n  create(params: IWindowParams): void {\n    // 通过handler创建窗口\n    this._handler.createWindow(params);\n\n    // 使用window的wh\n    const windowWH = this._handler.getWH();\n    this._width = windowWH.width;\n    this._height = windowWH.height;\n\n    // 设置viewBox\n    if (params.viewBox) {\n      this.setViewBox(params.viewBox);\n    } else {\n      if (params.canvasControled !== false) {\n        this.setViewBox({ x1: 0, y1: 0, x2: this._width, y2: this._height });\n      } else {\n        this.setViewBox({ x1: 0, y1: 0, x2: params.width ?? this._width, y2: params.height ?? this._height });\n      }\n    }\n\n    // 使用window的xy\n    // const windowXY = this._handler.getXY();\n    // this.x = windowXY.x;\n    // this.y = windowXY.y;\n    // 使用window的title\n    this.title = this._handler.getTitle();\n    this.resizable = true;\n  }\n\n  setWindowHandler(handler: IWindowHandlerContribution) {\n    this._handler = handler;\n  }\n\n  setDpr(dpr: number): void {\n    return this._handler.setDpr(dpr);\n  }\n  resize(w: number, h: number): void {\n    return this._handler.resizeWindow(w, h);\n  }\n  configure(): void {\n    throw new Error('暂不支持');\n  }\n  release(): void {\n    this.global.hooks.onSetEnv.unTap('window', this.active);\n    // Clean up all event listeners\n    this.clearAllEventListeners();\n    return this._handler.releaseWindow();\n  }\n  getContext(): IContext2d {\n    return this._handler.getContext();\n  }\n  getNativeHandler(): ICanvas {\n    return this._handler.getNativeHandler();\n  }\n  getImageBuffer(type?: string): any {\n    if (!this._handler.getImageBuffer) {\n      return null;\n    }\n    return this._handler.getImageBuffer(type);\n  }\n\n  getBoundingClientRect(): IDomRectLike {\n    return this._handler.getBoundingClientRect();\n  }\n\n  getContainer(): HTMLElement | any {\n    return this._handler.container;\n  }\n\n  clearViewBox(color?: string) {\n    this._handler.clearViewBox(color);\n  }\n  setViewBox(viewBox: IBoundsLike) {\n    this._handler.setViewBox(viewBox);\n  }\n  setViewBoxTransform(a: number, b: number, c: number, d: number, e: number, f: number) {\n    this._handler.setViewBoxTransform(a, b, c, d, e, f);\n  }\n  getViewBox() {\n    return this._handler.getViewBox();\n  }\n  getViewBoxTransform() {\n    return this._handler.getViewBoxTransform();\n  }\n  pointTransform(x: number, y: number): IPointLike {\n    const vb = this._handler.getViewBox();\n    const m = this._handler.getViewBoxTransform();\n    const nextP = { x, y };\n    m.transformPoint({ x, y }, nextP);\n    nextP.x -= vb.x1;\n    nextP.y -= vb.y1;\n    return nextP;\n  }\n\n  hasSubView() {\n    const viewBox = this._handler.getViewBox();\n    return !(\n      viewBox.x1 === 0 &&\n      viewBox.y1 === 0 &&\n      isNumberClose(this.width, viewBox.width()) &&\n      isNumberClose(this.height, viewBox.height())\n    );\n  }\n\n  isVisible(bbox?: IBoundsLike): boolean {\n    return this._handler.isVisible(bbox);\n  }\n\n  onVisibleChange(cb: (currentVisible: boolean) => void) {\n    return this._handler.onVisibleChange(cb);\n  }\n\n  getTopLeft(baseWindow?: boolean): { top: number; left: number } {\n    return this._handler.getTopLeft(baseWindow);\n  }\n}\n"]}