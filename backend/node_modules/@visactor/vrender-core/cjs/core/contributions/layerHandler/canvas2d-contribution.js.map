{"version":3,"sources":["../src/core/contributions/layerHandler/canvas2d-contribution.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mEAAoE;AACpE,+CAAkD;AAgBlD,sDAAmD;AAG5C,IAAM,8BAA8B,GAApC,MAAM,8BAA8B;IAYzC;QALA,SAAI,GAAc,QAAQ,CAAC;QAMzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,yBAAW,CAAC,MAAM,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QACtB,OAAO;IACT,CAAC;IAED,IAAI,CAAC,KAAa,EAAE,MAAe,EAAE,MAA+B;QAClE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,YAAyB,CAAC;YAC9B,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC5D;YACD,IAAI,CAAC,YAAY,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;oBACtC,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,MAAM,EAAE,MAAM,CAAC,MAAM;iBACtB,CAAC,CAAC;aACJ;YAED,IAAI,YAAY,CAAC,KAAK,EAAE;gBACtB,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC;aAC/C;YACD,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;YAC1C,MAAM,YAAY,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC;YAC5D,MAAM,MAAM,GAAG,IAAA,iBAAU,EAAC;gBACxB,YAAY;gBACZ,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,GAAG,EAAE,MAAM,CAAC,GAAG;gBACf,EAAE,EAAE,MAAM,CAAC,QAAQ;gBACnB,eAAe,EAAE,IAAI;gBACrB,SAAS,EAAE,MAAM,CAAC,YAAY,EAAE;gBAChC,CAAC,EAAE,YAAY,CAAC,UAAU;gBAC1B,CAAC,EAAE,YAAY,CAAC,SAAS;aAC1B,CAAC,CAAC;YACH,MAAM,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;SACpC;IACH,CAAC;IAED,MAAM,CAAC,CAAS,EAAE,CAAS;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,OAAO;IACT,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS;QAC7B,OAAO;IACT,CAAC;IAED,MAAM,CAAC,KAAe,EAAE,MAA+B,EAAE,UAAkC;;QAEzF,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YAC/C,MAAM,YAAY,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC;YAC5D,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,YAAY,CAAC,SAAS,CAAC,EAAE;gBAC3G,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAC,UAAU,CAAC;gBACxC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;aAC7B;SACF;QACD,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,gCAC/B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,KAAK,EAAE,MAAA,MAAM,CAAC,UAAU,mCAAI,SAAS,IAClC,MAAM,GACN,UAAU,EACb,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAA0C;QAC9C,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,MAAM,GAAG,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,WAAoB,EAAE,MAA+B;QAC3D,OAAO;IACT,CAAC;IAED,MAAM,CAAC,MAAe,EAAE,KAAe,EAAE,MAA+C;;QACtF,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;QACpC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,gCAC/B,OAAO,IACJ,MAAM,KACT,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAA,MAAM,CAAC,UAAU,mCAAI,MAAM,CAAC,CAAC,CAAC,SAAS,IAC7D,CAAC;QACH,OAAO;IACT,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;CACF,CAAA;AAzHY,8BAA8B;IAD1C,IAAA,2BAAU,GAAE;;GACA,8BAA8B,CAyH1C;AAzHY,wEAA8B","file":"canvas2d-contribution.js","sourcesContent":["import { inject, injectable } from '../../../common/inversify-lite';\nimport { wrapCanvas } from '../../../canvas/util';\nimport type {\n  IGlobal,\n  ICanvas,\n  IContext2d,\n  IDrawToParams,\n  IGroup,\n  ILayer,\n  ILayerHandlerContribution,\n  IWindow,\n  ILayerHandlerInitParams,\n  ILayerHandlerDrawParams,\n  IDrawContext,\n  LayerMode\n} from '../../../interface';\nimport type { IBounds } from '@visactor/vutils';\nimport { application } from '../../../application';\n\n@injectable()\nexport class CanvasLayerHandlerContribution implements ILayerHandlerContribution {\n  layer: ILayer;\n  canvas: ICanvas;\n  context: IContext2d;\n  offscreen: boolean;\n  main: boolean;\n  window: IWindow;\n  type: LayerMode = 'static';\n  global: IGlobal;\n  // 所绑定的副layer handler\n  secondaryHandlers: ILayerHandlerContribution[];\n\n  constructor() {\n    this.offscreen = false;\n    this.global = application.global;\n  }\n\n  setDpr(dpr: number) {\n    this.canvas.dpr = dpr;\n    return;\n  }\n\n  init(layer: ILayer, window: IWindow, params: ILayerHandlerInitParams): void {\n    this.layer = layer;\n    this.window = window;\n    // 默认图层，那么直接拿window上的上下文和canvas即可\n    if (params.main) {\n      this.main = true;\n      this.context = window.getContext();\n      this.canvas = this.context.getCanvas();\n    } else {\n      this.main = false;\n      let nativeCanvas: HTMLElement;\n      if (params.canvasId) {\n        nativeCanvas = this.global.getElementById(params.canvasId);\n      }\n      if (!nativeCanvas) {\n        nativeCanvas = this.global.createCanvas({\n          width: window.width,\n          height: window.height\n        });\n      }\n      // 不是main的话，就穿透点击事件\n      if (nativeCanvas.style) {\n        nativeCanvas.style['pointer-events'] = 'none';\n      }\n      const windowContext = window.getContext();\n      const windowCanvas = windowContext.getCanvas().nativeCanvas;\n      const canvas = wrapCanvas({\n        nativeCanvas,\n        width: window.width,\n        height: window.height,\n        dpr: window.dpr,\n        id: params.canvasId,\n        canvasControled: true,\n        container: window.getContainer(),\n        x: windowCanvas.offsetLeft,\n        y: windowCanvas.offsetTop\n      });\n      canvas.applyPosition();\n      this.canvas = canvas;\n      this.context = canvas.getContext();\n    }\n  }\n\n  resize(w: number, h: number) {\n    this.canvas.resize(w, h);\n    return;\n  }\n  resizeView(w: number, h: number) {\n    return;\n  }\n\n  render(group: IGroup[], params: ILayerHandlerDrawParams, userParams?: Partial<IDrawContext>): void {\n    // 调整位置\n    if (!this.main) {\n      const windowContext = this.window.getContext();\n      const windowCanvas = windowContext.getCanvas().nativeCanvas;\n      if (windowCanvas && (this.canvas.x !== windowCanvas.offsetLeft || this.canvas.y !== windowCanvas.offsetTop)) {\n        this.canvas.x = windowCanvas.offsetLeft;\n        this.canvas.y = windowCanvas.offsetTop;\n        this.canvas.applyPosition();\n      }\n    }\n    params.renderService.render(group, {\n      context: this.context,\n      clear: params.background ?? '#ffffff',\n      ...params,\n      ...userParams\n    });\n  }\n\n  merge(layerHandlers: ILayerHandlerContribution[]) {\n    layerHandlers.forEach(l => {\n      const ctx = l.getContext();\n      const canvas = ctx.canvas.nativeCanvas;\n      this.context.drawImage(canvas, 0, 0);\n    });\n  }\n\n  prepare(dirtyBounds: IBounds, params: ILayerHandlerDrawParams) {\n    return;\n  }\n\n  drawTo(target: IWindow, group: IGroup[], params: IDrawToParams & ILayerHandlerDrawParams) {\n    const context = target.getContext();\n    params.renderService.render(group, {\n      context,\n      ...params,\n      clear: params.clear ? params.background ?? '#fff' : undefined\n    });\n    return;\n  }\n\n  getContext(): IContext2d {\n    return this.context;\n  }\n\n  release() {\n    this.canvas.release();\n  }\n}\n"]}