{"version":3,"sources":["../src/core/contributions/env/base-contribution.ts"],"names":[],"mappings":"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","file":"base-contribution.js","sourcesContent":["import { injectable } from '../../../common/inversify-lite';\nimport type {\n  ICanvasLike,\n  EnvType,\n  ICreateCanvasParams,\n  IEnvContribution,\n  IGlobal,\n  CreateDOMParamsType\n} from '../../../interface';\nimport type { IBoundsLike } from '@visactor/vutils';\nimport { AABBBounds } from '@visactor/vutils';\n\n@injectable()\nexport abstract class BaseEnvContribution implements IEnvContribution {\n  type: EnvType;\n\n  supportsTouchEvents: boolean;\n  supportsPointerEvents: boolean;\n  supportsMouseEvents: boolean;\n  applyStyles: boolean;\n  supportEvent: boolean;\n\n  configure(service: IGlobal, ...p: any) {\n    if (service.env === this.type) {\n      service.setActiveEnvContribution(this);\n    }\n  }\n\n  getNativeAABBBounds(dom: any): IBoundsLike {\n    return new AABBBounds();\n  }\n\n  removeDom(dom: HTMLElement): boolean {\n    return false;\n  }\n\n  createDom(params: CreateDOMParamsType): any {\n    return null;\n  }\n\n  updateDom(dom: HTMLElement, params: CreateDOMParamsType): boolean {\n    return false;\n  }\n\n  /**\n   * 获取动态canvas的数量，offscreenCanvas或者framebuffer\n   */\n  getDynamicCanvasCount(): number {\n    return 999;\n  }\n\n  /**\n   * 获取静态canvas的数量，纯粹canvas\n   */\n  getStaticCanvasCount(): number {\n    return 999;\n  }\n\n  abstract loadImage(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }>;\n\n  abstract loadSvg(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }>;\n\n  abstract createCanvas(params: ICreateCanvasParams): ICanvasLike | any;\n  abstract createOffscreenCanvas(params: ICreateCanvasParams): ICanvasLike | any;\n\n  abstract releaseCanvas(canvas: ICanvasLike | string): void;\n\n  abstract getDevicePixelRatio(): number;\n\n  abstract getRequestAnimationFrame(): (callback: FrameRequestCallback) => number;\n  abstract getCancelAnimationFrame(): (h: number) => void;\n\n  abstract addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  abstract addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  abstract addEventListener(type: unknown, listener: unknown, options?: unknown): void;\n\n  abstract removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  abstract removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  abstract removeEventListener(type: unknown, listener: unknown, options?: unknown): void;\n\n  abstract dispatchEvent(event: any): boolean;\n\n  getElementById(str: string): HTMLElement | null {\n    return document.getElementById(str);\n  }\n\n  getRootElement(): HTMLElement | null {\n    return document.body;\n  }\n\n  abstract release(...params: any): void;\n\n  loadJson(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: Record<string, unknown> | null;\n  }> {\n    const jsonPromise = fetch(url).then(data => data.json());\n    jsonPromise\n      .then(json => {\n        return {\n          data: json,\n          state: 'success'\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          state: 'fail'\n        };\n      });\n    return jsonPromise;\n  }\n\n  loadArrayBuffer(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: ArrayBuffer | null;\n  }> {\n    const arrayBufferPromise = fetch(url).then(data => data.arrayBuffer());\n    return arrayBufferPromise\n      .then((arrayBuffer: ArrayBuffer) => {\n        return {\n          data: arrayBuffer,\n          loadState: 'success' as const\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          loadState: 'fail'\n        };\n      });\n  }\n\n  loadBlob(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: Blob | null;\n  }> {\n    const blobPromise = fetch(url).then(data => data.blob());\n    return blobPromise\n      .then((blob: Blob) => {\n        return {\n          data: blob,\n          loadState: 'success' as const\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          loadState: 'fail'\n        };\n      });\n  }\n\n  getElementTop(dom: any, baseWindow?: boolean) {\n    return 0;\n  }\n  getElementLeft(dom: any, baseWindow?: boolean) {\n    return 0;\n  }\n  getElementTopLeft(dom: any, baseWindow?: boolean): { top: number; left: number } {\n    return { top: 0, left: 0 };\n  }\n\n  async loadFont(\n    font: string,\n    source: string | BinaryData,\n    descriptors?: FontFaceDescriptors\n  ): Promise<{ loadState: 'success' | 'fail' }> {\n    return { loadState: 'fail' };\n  }\n\n  isMacOS() {\n    return false;\n  }\n  copyToClipBoard(text: string) {\n    return Promise.resolve(null);\n  }\n}\n"]}