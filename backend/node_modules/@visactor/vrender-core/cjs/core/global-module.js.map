{"version":3,"sources":["../src/core/global-module.ts"],"names":[],"mappings":"","file":"global-module.js","sourcesContent":["// import type { IGlobal } from '../interface';\n// import { container } from '../container';\n// import { DefaultGlobal } from './global';\n// import envModules from './contributions/env/modules';\n// import { Global } from '../constants';\n\n// const globalModule = new ContainerModule((bind, unbind, isBound) => {\n//   // global对象，全局单例模式\n//   if (!isBound(Global)) {\n//     bind(DefaultGlobal).toSelf().inSingletonScope();\n//     bind(Global).toService(DefaultGlobal);\n//   }\n// });\n\n// container.load(globalModule);\n// container.load(envModules);\n\n// export const global = container.get<IGlobal>(Global);\n\n// export default globalModule;\n"]}