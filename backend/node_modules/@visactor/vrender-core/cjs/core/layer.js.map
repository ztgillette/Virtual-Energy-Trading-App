{"version":3,"sources":["../src/core/layer.ts"],"names":[],"mappings":"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","file":"layer.js","sourcesContent":["import type { AABBBounds, IBoundsLike } from '@visactor/vutils';\nimport { application } from '../application';\nimport { container } from '../container';\nimport type {\n  IDrawToParams,\n  IGraphic,\n  IGroup,\n  ILayer,\n  ILayerDrawParams,\n  IStage,\n  IGlobal,\n  ILayerHandlerContribution,\n  IDrawContext,\n  ILayerHandlerDrawParams,\n  IDrawContribution,\n  IWindow,\n  ILayerParams,\n  LayerMode\n} from '../interface';\nimport { Theme } from '../graphic/theme';\nimport { Group } from '../graphic/group';\n\ntype BlendMode = 'normal';\n\n// layer需要有多个，对于Canvas来说，layer可以绑定一个canvas或一个ImageData\n// 对于WebGL来说，layer对应一个FrameBuffer\n// 对于Native来说，layer保留一个FrameBufferHandler\nexport class Layer extends Group implements ILayer {\n  declare parent: any;\n\n  declare _dpr: number;\n  declare main: boolean;\n  declare renderCount: number;\n\n  declare afterDrawCbs: ((l: this) => void)[];\n\n  declare imageData?: ImageData;\n  // 混合模式，用于多图层混合\n  declare blendMode: BlendMode;\n\n  declare background: string;\n  declare opacity: number;\n\n  declare layer: this;\n  declare subLayers: Map<\n    number,\n    { layer: ILayer; group?: IGroup; zIndex: number; drawContribution?: IDrawContribution }\n  >;\n\n  get offscreen(): boolean {\n    return this.layerHandler.offscreen;\n  }\n\n  get layerMode(): LayerMode {\n    return this.layerHandler.type;\n  }\n\n  // stage控制\n  // width: number;\n  // height: number;\n  get width(): number {\n    if (!this.stage) {\n      return 0;\n    }\n    return this.stage.width;\n  }\n  get height(): number {\n    if (!this.stage) {\n      return 0;\n    }\n    return this.stage.height;\n  }\n  get viewWidth(): number {\n    if (!this.stage) {\n      return 0;\n    }\n    return this.stage.viewWidth;\n  }\n  get viewHeight(): number {\n    if (!this.stage) {\n      return 0;\n    }\n    return this.stage.viewHeight;\n  }\n  declare pickable: boolean;\n\n  get dirtyBound(): AABBBounds {\n    // this.getRootNode<any>();\n    throw new Error('暂不支持');\n  }\n\n  get dpr(): number {\n    return this._dpr;\n  }\n\n  declare stage?: IStage;\n  protected declare global: IGlobal;\n  protected declare window: IWindow;\n  protected declare layerHandler: ILayerHandlerContribution;\n\n  constructor(stage: IStage, global: IGlobal, window: IWindow, params: ILayerParams) {\n    super({});\n    this.stage = stage;\n    this.global = global;\n    this.window = window;\n    this.main = params.main;\n    this.layerHandler = params.layerHandler;\n    // this.layerHandler = container.get<ILayerHandlerContribution>(LayerHandlerContribution);\n    this.layerHandler.init(this, window, {\n      main: params.main,\n      canvasId: params.canvasId,\n      width: this.viewWidth,\n      height: this.viewHeight,\n      zIndex: params.zIndex ?? 0\n    });\n    this.layer = this;\n    this.subLayers = new Map();\n    this.theme = new Theme();\n    this.background = 'rgba(0, 0, 0, 0)';\n    this.afterDrawCbs = [];\n  }\n\n  combineSubLayer(removeIncrementalKey: boolean = true) {\n    const subLayers = Array.from(this.subLayers.values()).sort((a, b) => {\n      return a.zIndex - b.zIndex;\n    });\n    this.layerHandler.merge(\n      subLayers.map(l => {\n        if (l.layer.subLayers.size) {\n          l.layer.combineSubLayer(removeIncrementalKey);\n        }\n        return l.layer.getNativeHandler();\n      })\n    );\n    if (removeIncrementalKey) {\n      subLayers.forEach(l => {\n        l.group && (l.group.incremental = 0);\n      });\n    }\n    subLayers.forEach(l => {\n      // l.layer.release();\n      application.layerService.releaseLayer(this.stage, l.layer);\n    });\n    this.subLayers.clear();\n  }\n\n  getNativeHandler(): ILayerHandlerContribution {\n    return this.layerHandler;\n  }\n\n  setStage(stage?: IStage, layer?: ILayer) {\n    super.setStage(stage, this);\n  }\n\n  // 选中图层中的节点\n  pick(x: number, y: number): { graphic?: IGraphic; group?: IGroup } | false {\n    throw new Error('暂不支持');\n  }\n  // 绘制依赖的副layer\n  protected tryRenderSecondaryLayer(params: ILayerDrawParams, userParams?: Partial<IDrawContext>) {\n    if (this.layerHandler.secondaryHandlers && this.layerHandler.secondaryHandlers.length) {\n      this.layerHandler.secondaryHandlers.forEach(h => {\n        h.layer.renderCount = this.renderCount;\n        h.layer.render(params, userParams);\n      });\n    }\n  }\n  // 绘制图层\n  render(params: ILayerDrawParams, userParams?: Partial<IDrawContext>) {\n    this.layerHandler.render(\n      [this],\n      {\n        renderService: params.renderService,\n        stage: this.stage,\n        layer: this,\n        viewBox: params.viewBox,\n        transMatrix: params.transMatrix,\n        // TODO: 多图层时不应该再用默认background\n        background: params.background ?? this.background,\n        updateBounds: params.updateBounds\n      },\n      userParams\n    );\n    this.afterDrawCbs.forEach(c => c(this));\n    this.tryRenderSecondaryLayer(params, userParams);\n  }\n  resize(w: number, h: number) {\n    this.layerHandler.resize(w, h);\n  }\n  resizeView(w: number, h: number) {\n    this.layerHandler.resizeView(w, h);\n  }\n  setDpr(dpr: number) {\n    this.layerHandler.setDpr(dpr);\n  }\n  afterDraw(cb: (l: this) => void) {\n    this.afterDrawCbs.push(cb);\n  }\n\n  // 动画相关\n  startAnimate(t: number) {\n    throw new Error('暂不支持');\n  }\n\n  setToFrame(t: number) {\n    throw new Error('暂不支持');\n  }\n\n  prepare(dirtyBounds: IBoundsLike, params: ILayerHandlerDrawParams) {\n    return;\n  }\n\n  // // 合并到某个target上\n  // combineTo(target: IWindow, params: IDrawToParams) {\n  //   if (this.offscreen) {\n  //     this.layerHandler.drawTo(target, [this], {\n  //       // TODO: 多图层时不应该再用默认background\n  //       background: params.background ?? this.background,\n  //       renderService: params.renderService,\n  //       stage: this.stage,\n  //       layer: this,\n  //       ...params\n  //     });\n  //     this.afterDrawCbs.forEach(c => c(this));\n  //   }\n  // }\n\n  release(): void {\n    super.release();\n    this.layerHandler.release();\n    if (this.subLayers) {\n      this.subLayers.forEach(l => {\n        // l.layer.release();\n        application.layerService.releaseLayer(this.stage, l.layer);\n      });\n    }\n  }\n\n  drawTo(target: IWindow, params: IDrawToParams) {\n    this.layerHandler.drawTo(target, [this], {\n      // TODO: 多图层时不应该再用默认background\n      background: params.background ?? this.background,\n      renderService: params.renderService,\n      viewBox: params.viewBox,\n      transMatrix: params.transMatrix,\n      stage: this.stage,\n      layer: this,\n      ...params\n    });\n    this.afterDrawCbs.forEach(c => c(this));\n  }\n}\n"]}