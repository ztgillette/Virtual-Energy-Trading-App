{"version":3,"sources":["../src/interface/picker.ts"],"names":[],"mappings":"","file":"picker.js","sourcesContent":["import type { IBounds, IMatrix, IPoint, IPointLike } from '@visactor/vutils';\nimport type { IGraphic } from './graphic';\nimport type { IContext2d } from './context';\nimport type { EnvType, IGlobal } from './global';\nimport type { IGroup } from './graphic/group';\nimport type { IDrawContribution } from './render';\n\ntype ISubPickEventParams =\n  | boolean\n  | {\n      graphic?: any;\n      group?: any;\n      params: ISubPickEventParams;\n    };\n\nexport type IPickEventParams =\n  | {\n      shadowTarget?: IGraphic;\n    }\n  | ISubPickEventParams;\n\nexport type PickResult = {\n  graphic?: IGraphic | null;\n  group?: IGroup | null;\n  params?:\n    | {\n        shadowTarget?: IGraphic;\n      }\n    | ISubPickEventParams;\n};\n\nexport interface IGraphicPicker {\n  type: string;\n  numberType: number;\n\n  contains: (graphic: IGraphic, point: IPointLike, params?: IPickParams) => boolean | any;\n}\n\nexport interface IPickParams {\n  group?: boolean;\n  graphic?: boolean;\n  bounds?: IBounds;\n  pickContext?: IContext2d;\n  pickerService?: IPickerService;\n  // 内部设置\n  in3dInterceptor?: boolean;\n  hack_pieFace?: string;\n}\n\nexport interface IPickerService {\n  type: string;\n\n  pickContext?: IContext2d;\n  pickerMap: Map<number, IGraphicPicker>;\n  configure: (global: IGlobal, env: EnvType) => void;\n  pick: (group: IGraphic[], point: IPoint, params?: IPickParams) => PickResult;\n  pickGroup: (group: IGroup, point: IPointLike, parentMatrix: IMatrix, params: IPickParams) => PickResult;\n  pickItem: (\n    graphic: IGraphic,\n    point: IPointLike,\n    parentMatrix: IMatrix | null,\n    params?: IPickParams\n  ) => PickResult | null;\n  containsPoint: (graphic: IGraphic, point: IPointLike, params?: IPickParams) => boolean;\n  drawContribution?: IDrawContribution;\n  reInit: () => void;\n}\n\nexport interface IPickItemInterceptorContribution {\n  order: number;\n  // null代表没匹配到，boolean代表是否pick中\n  beforePickItem?: (\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    drawContext: {\n      in3dInterceptor?: boolean;\n    },\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ) => PickResult | null;\n\n  afterPickItem?: (\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    drawContext: {\n      in3dInterceptor?: boolean;\n    },\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ) => PickResult | null;\n  // afterPickItem?: (\n  //   graphic: IGraphic,\n  //   pickerService: IPickerService,\n  // ) => boolean;\n}\nexport interface IPickServiceInterceptorContribution {\n  order: number;\n  // null代表没匹配到，boolean代表是否pick中\n  beforePickItem?: (\n    result: PickResult,\n    pickerService: IPickerService,\n    point: IPointLike,\n    drawContext: {\n      in3dInterceptor?: boolean;\n    },\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ) => PickResult | null;\n\n  afterPickItem?: (\n    result: PickResult,\n    pickerService: IPickerService,\n    point: IPointLike,\n    drawContext: {\n      in3dInterceptor?: boolean;\n    },\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ) => PickResult | null;\n  // afterPickItem?: (\n  //   graphic: IGraphic,\n  //   pickerService: IPickerService,\n  // ) => boolean;\n}\n\nexport interface IBoundsPicker {\n  type: string;\n  numberType?: number;\n\n  contains: (graphic: IGraphic, point: IPointLike, params?: IPickParams) => boolean;\n}\n"]}