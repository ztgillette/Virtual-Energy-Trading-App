{"version":3,"sources":["../src/interface/matrix.ts"],"names":[],"mappings":"","file":"matrix.js","sourcesContent":["export type vec2 = [number, number] | Float32Array;\nexport type vec3 = [number, number, number] | Float32Array;\nexport type vec4 = [number, number, number, number] | Float32Array;\nexport type mat4 =\n  | [\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number,\n      number\n    ]\n  | Float32Array;\n\n// import { IPoint } from '@visactor/vutils';\n\n// // 不建议用户直接操作matrix\n// export interface IMatrix {\n//   /**\n//    * scale x\n//    */\n//   a: number;\n//   /**\n//    * skew y\n//    */\n//   b: number;\n//   /**\n//    * skewx\n//    */\n//   c: number;\n//   /**\n//    * scale y\n//    */\n//   d: number;\n//   /**\n//    * translate x\n//    */\n//   e: number;\n//   /**\n//    * translate y\n//    */\n//   f: number;\n//   // new (a?: number, b?: number, c?: number, d?: number, e?: number, f?: number): IMatrix;\n//   setValue: (a: number, b: number, c: number, d: number, e: number, f: number) => IMatrix;\n//   /**\n//    * 获取当前矩阵的逆矩阵\n//    */\n//   getInverse: () => IMatrix;\n//   rotate: (rad: number) => IMatrix;\n//   scale: (sx: number, sy: number) => IMatrix;\n//   setScale: (sx: number, sy: number) => IMatrix;\n//   transform: (a: number, b: number, c: number, d: number, e: number, f: number) => IMatrix;\n//   translate: (x: number, y: number) => IMatrix;\n//   /**\n//    * 矩阵相乘\n//    * @param matrix\n//    */\n//   multiply: (a2: number, b2: number, c2: number, d2: number, e2: number, f2: number) => IMatrix;\n//   /**\n//    * 插值计算\n//    * @param m2\n//    * @param t\n//    */\n//   interpolate: (m2: IMatrix, t: number) => IMatrix;\n\n//   // 将point转到当前矩阵的坐标空间中\n//   transformPoint: (source: IPoint, target: IPoint) => void;\n\n//   reset: () => IMatrix;\n\n//   // 是否只有translate\n//   onlyTranslate: () => boolean;\n\n//   clone: () => IMatrix;\n// }\n"]}