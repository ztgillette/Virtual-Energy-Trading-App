{"version":3,"sources":["../src/interface/plugin.ts"],"names":[],"mappings":"","file":"plugin.js","sourcesContent":["import type { Releaseable } from './common';\nimport type { IStage } from './stage';\n\nexport interface IPluginService extends Releaseable {\n  register: (plugin: IPlugin) => void;\n  unRegister: (plugin: IPlugin) => void;\n  active: (stage: IStage, params: { pluginList?: string[] }) => void;\n  actived: boolean;\n  stage: IStage;\n  findPluginsByName: (name: string) => IPlugin[];\n}\n\nexport interface IPlugin {\n  name: string;\n  activeEvent: 'onStartupFinished' | 'onRegister';\n  activate: (context: IPluginService) => void;\n  deactivate: (context: IPluginService) => void;\n}\n"]}