{"version":3,"sources":["../src/interface/graphic/text.ts"],"names":[],"mappings":";;;AAkCA,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,6DAAY,CAAA;IACZ,yEAAkB,CAAA;IAClB,qEAAgB,CAAA;AAClB,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B","file":"text.js","sourcesContent":["import type { IGraphicAttribute, IGraphic } from '../graphic';\n\nexport interface TextLayoutBBox {\n  width: number; // 包围盒的宽度\n  height: number; // 包围盒的高度\n  xOffset: number;\n  yOffset: number;\n}\n\nexport interface LayoutItemType {\n  str: string; // 这行的字符串\n  leftOffset?: number; // 该行距离左侧的偏移\n  topOffset?: number; // 该行距离右侧的偏移\n  width: number;\n  ascent: number;\n  descent: number;\n  keepCenterInLine: boolean;\n}\n\nexport interface SimplifyLayoutType {\n  lines: LayoutItemType[];\n}\n\nexport interface LayoutType {\n  bbox: TextLayoutBBox;\n  lines: LayoutItemType[];\n  fontFamily: string;\n  fontSize: number;\n  fontWeight?: string | number;\n  lineHeight: number;\n  textAlign: TextAlignType;\n  textBaseline: TextBaselineType;\n}\n\nexport enum MeasureModeEnum {\n  estimate = 0,\n  actualBounding = 1,\n  fontBounding = 2\n}\n\nexport type ITextAttribute = {\n  /**\n   * 文字内容\n   */\n  text: string | number | string[] | number[];\n  /**\n   * 单行的的最大长度，当超出这个长度，可以展示省略符或者换行、截断等\n   * 后续可能去除\n   */\n  maxLineWidth: number;\n  /**\n   * 单行的的最大长度，当超出这个长度，可以展示省略符或者换行、截断等\n   * 同 maxLineWidth\n   */\n  maxWidth: number;\n  /**\n   * 文字对齐方式\n   */\n  textAlign: TextAlignType;\n  /**\n   * 文字竖直方向的对齐方式\n   */\n  textBaseline: TextBaselineType;\n  /**\n   * 字号\n   */\n  fontSize: number;\n  /**\n   * 字体\n   */\n  fontFamily: string;\n  /**\n   * 字重\n   */\n  fontWeight: string | number;\n  /**\n   * 文字超出后的省略符\n   */\n  ellipsis: boolean | string;\n  /**\n   * 控制文本的小型大写字母（small-caps）显示\n   */\n  fontVariant: string;\n  /**\n   * 字体样式，是否为斜体等\n   */\n  fontStyle: string;\n  /**\n   * 行高（字符串类型表示比例值，如\"150%\"）\n   */\n  lineHeight: number | string;\n  /**\n   * 是否显示下划线\n   */\n  underline: number;\n  /**\n   * 是否显示中划线\n   */\n  lineThrough: number;\n  /**\n   * 在3d场景下是否根据z坐标缩放\n   */\n  scaleIn3d: boolean;\n  /**\n   * 文本的排布方向，如果需要文本纵向排布，可以配置为 'vertical'\n   */\n  direction: 'horizontal' | 'vertical';\n  /**\n   * 垂直布局的模式，0代表默认（横向textAlign，纵向textBaseline），1代表特殊（横向textBaseline，纵向textAlign）\n   */\n  verticalMode: number;\n  /*\n   * 单词断行\n   */\n  wordBreak: 'break-word' | 'break-all' | 'keep-all';\n  /**\n   * 内部配置，是否忽略一些bounds的buffer\n   */\n  ignoreBuf: boolean;\n  /**\n   * 高度限制控制显示内容及省略号\n   */\n  heightLimit: number;\n  /**\n   * 按照行数限制显示内容及省略号\n   */\n  lineClamp: number;\n  /**\n   * 同 whiteSpace: 'normal'\n   * 后续可能删除\n   */\n  wrap: boolean;\n  /**\n   * 设置如何处理空白字符\n   */\n  whiteSpace: 'normal' | 'no-wrap';\n  /**\n   * 省略号的位置，默认为'end'\n   */\n  suffixPosition: 'start' | 'end' | 'middle';\n  /**\n   * 下划线的虚线样式\n   */\n  underlineDash: number[];\n  /**\n   * 下划线的虚线偏移量\n   */\n  underlineOffset: number;\n  /**\n   * 关闭poptip\n   */\n  disableAutoClipedPoptip?: boolean;\n  /**\n   * @since 0.21.0\n   * 测量模式，默认使用actualBounding\n   */\n  measureMode?: MeasureModeEnum;\n\n  /**\n   * @since 0.21.0\n   * 保持在行中间的位置\n   */\n  keepCenterInLine?: boolean;\n};\nexport type ITextCache = {\n  // 单行文本的时候缓存（多行文本没有）\n  clipedText?: string;\n  clipedWidth?: number;\n  // 文本的布局缓存（单行文本也有）\n  layoutData?: LayoutType;\n  // 垂直布局的列表\n  verticalList?: { text: string; width?: number; direction: number }[][];\n};\n\nexport type ITextGraphicAttribute = Partial<IGraphicAttribute> & Partial<ITextAttribute>;\n\nexport type IWrapTextGraphicAttribute = ITextGraphicAttribute & {\n  heightLimit?: number;\n  lineClamp?: number;\n};\n\nexport interface IText extends IGraphic<ITextGraphicAttribute> {\n  // 判断是否被ellipisised\n  clipedText?: string;\n  clipedWidth?: number;\n  cliped?: boolean;\n  multilineLayout?: LayoutType;\n  font?: string;\n  isMultiLine: boolean;\n  cache?: ITextCache;\n\n  getBaselineMapAlign: () => Record<string, string>;\n  getAlignMapBaseline: () => Record<string, string>;\n}\n\nexport type TextAlignType = 'left' | 'right' | 'center' | 'start' | 'end';\nexport type TextBaselineType = 'top' | 'middle' | 'bottom' | 'alphabetic';\n"]}