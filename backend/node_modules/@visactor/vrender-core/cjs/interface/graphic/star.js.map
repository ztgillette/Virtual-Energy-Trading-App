{"version":3,"sources":["../src/interface/graphic/star.ts"],"names":[],"mappings":"","file":"star.js","sourcesContent":["import type { IPointLike } from '@visactor/vutils';\nimport type { IGraphicAttribute, IGraphic } from '../graphic';\n\nexport type IStarAttribute = {\n  /**\n   * Width of the star\n   */\n  width: number;\n\n  /**\n   * Height of the star\n   */\n  height: number;\n\n  /**\n   * Number of spikes/corners (must be >= 3)\n   */\n  spikes: number;\n\n  /**\n   * How much the corners protrude (0-1)\n   * 0 means a regular polygon, 1 means maximum protrusion\n   */\n  thickness: number;\n};\n\nexport type IStarGraphicAttribute = Partial<IGraphicAttribute> & Partial<IStarAttribute>;\n\nexport type IStar = IGraphic<IStarGraphicAttribute> & {\n  getCachedPoints: () => IPointLike[];\n};\n"]}