{"version":3,"sources":["../src/interface/animation/timeline.ts"],"names":[],"mappings":"","file":"timeline.js","sourcesContent":["import type { IAnimate } from './animate';\n\nexport interface ITimeline {\n  id: number;\n  isGlobal?: boolean;\n  // 包含的动画数量（animate数组的数量），包含所有动画\n  animateCount: number;\n  // 添加动画\n  addAnimate: (animate: IAnimate) => void;\n  // 移除动画\n  removeAnimate: (animate: IAnimate, release?: boolean) => void;\n  // 更新动画\n  tick: (delta: number) => void;\n  // 清除动画\n  clear: () => void;\n  // 暂停动画\n  pause: () => void;\n  // 恢复动画\n  resume: () => void;\n  // 获取动画总时长\n  getTotalDuration: () => number;\n  // 获取动画的播放速度\n  getPlaySpeed: () => number;\n  // 设置动画的播放速度\n  setPlaySpeed: (speed: number) => void;\n  // 获取动画的播放状态\n  getPlayState: () => 'playing' | 'paused' | 'stopped';\n  // 获取动画是否正在运行\n  isRunning: () => boolean;\n}\n"]}