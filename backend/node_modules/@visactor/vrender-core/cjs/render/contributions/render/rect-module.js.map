{"version":3,"sources":["../src/render/contributions/render/rect-module.ts"],"names":[],"mappings":";;;AAAA,iFAAiF;AACjF,yDAA4D;AAE5D,mDAIyB;AACzB,yDAA0F;AAC1F,+CAAwD;AACxD,qCAAgE;AAEhE,IAAI,cAAc,GAAG,KAAK,CAAC;AACd,QAAA,UAAU,GAAG,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACnD,IAAI,cAAc,EAAE;QAClB,OAAO;KACR;IACD,cAAc,GAAG,IAAI,CAAC;IAEtB,IAAI,CAAC,qCAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC1D,IAAI,CAAC,mBAAU,CAAC,CAAC,EAAE,CAAC,qCAAuB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAChE,IAAI,CAAC,sBAAa,CAAC,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAC;IAC1C,IAAI,CAAC,gDAAgC,CAAC,CAAC,MAAM,EAAE,CAAC;IAChD,IAAI,CAAC,iDAAiC,CAAC,CAAC,MAAM,EAAE,CAAC;IACjD,IAAI,CAAC,kCAAsB,CAAC,CAAC,SAAS,CAAC,gDAAgC,CAAC,CAAC;IACzE,IAAI,CAAC,kCAAsB,CAAC,CAAC,SAAS,CAAC,iDAAiC,CAAC,CAAC;IAC1E,IAAI,CAAC,kCAAsB,CAAC,CAAC,SAAS,CAAC,wDAAwC,CAAC,CAAC;IAEjF,IAAA,gDAAwB,EAAC,IAAI,EAAE,kCAAsB,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC","file":"rect-module.js","sourcesContent":["import { bindContributionProvider } from '../../../common/contribution-provider';\nimport { ContainerModule } from '../../../common/inversify';\nimport { DefaultCanvasArcRender } from './arc-render';\nimport {\n  DefaultBaseInteractiveRenderContribution,\n  SplitRectAfterRenderContribution,\n  SplitRectBeforeRenderContribution\n} from './contributions';\nimport { ArcRenderContribution, RectRenderContribution } from './contributions/constants';\nimport { DefaultCanvasRectRender } from './rect-render';\nimport { ArcRender, GraphicRender, RectRender } from './symbol';\n\nlet loadRectModule = false;\nexport const rectModule = new ContainerModule(bind => {\n  if (loadRectModule) {\n    return;\n  }\n  loadRectModule = true;\n  // rect 渲染器\n  bind(DefaultCanvasRectRender).toSelf().inSingletonScope();\n  bind(RectRender).to(DefaultCanvasRectRender).inSingletonScope();\n  bind(GraphicRender).toService(RectRender);\n  bind(SplitRectAfterRenderContribution).toSelf();\n  bind(SplitRectBeforeRenderContribution).toSelf();\n  bind(RectRenderContribution).toService(SplitRectAfterRenderContribution);\n  bind(RectRenderContribution).toService(SplitRectBeforeRenderContribution);\n  bind(RectRenderContribution).toService(DefaultBaseInteractiveRenderContribution);\n  // rect 渲染器注入contributions\n  bindContributionProvider(bind, RectRenderContribution);\n});\n"]}