{"version":3,"sources":["../src/render/contributions/render/text-render.ts"],"names":[],"mappings":"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","file":"text-render.js","sourcesContent":["import { inject, injectable, named } from '../../../common/inversify-lite';\nimport { getTheme } from '../../../graphic/theme';\nimport { TEXT_NUMBER_TYPE } from '../../../graphic/constants';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  ITextRenderContribution,\n  IContributionProvider\n} from '../../../interface';\nimport { textDrawOffsetX, textDrawOffsetY, textLayoutOffsetY } from '../../../common/text';\nimport type { IText, ITextGraphicAttribute } from '../../../interface/graphic/text';\nimport { BaseRender } from './base-render';\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { TextRenderContribution } from './contributions/constants';\nimport { matrixAllocate } from '../../../allocator/matrix-allocate';\nimport { isNil, max } from '@visactor/vutils';\nimport { calculateLineHeight } from '../../../common/utils';\nimport { defaultTextBackgroundRenderContribution } from './contributions/text-contribution-render';\n\n@injectable()\nexport class DefaultCanvasTextRender extends BaseRender<IText> implements IGraphicRender {\n  type: 'text';\n  numberType: number = TEXT_NUMBER_TYPE;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(TextRenderContribution)\n    protected readonly graphicRenderContributions: IContributionProvider<ITextRenderContribution>\n  ) {\n    super();\n    this.builtinContributions = [defaultTextBackgroundRenderContribution as any];\n    this.init(graphicRenderContributions);\n  }\n\n  drawShape(\n    text: IText,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    const textAttribute = getTheme(text, params?.theme).text;\n    const {\n      text: str,\n      underline = textAttribute.underline,\n      lineThrough = textAttribute.lineThrough,\n      keepDirIn3d = textAttribute.keepDirIn3d,\n      direction = textAttribute.direction,\n      // lineHeight = textAttribute.lineHeight,\n      // whiteSpace = textAttribute.whiteSpace,\n      fontSize = textAttribute.fontSize,\n      verticalMode = textAttribute.verticalMode,\n      x: originX = textAttribute.x,\n      y: originY = textAttribute.y\n    } = text.attribute;\n\n    const lineHeight = calculateLineHeight(text.attribute.lineHeight, fontSize) ?? fontSize;\n\n    const data = this.valid(text, textAttribute, fillCb, strokeCb);\n    if (!data) {\n      return;\n    }\n    const { fVisible, sVisible, doFill, doStroke } = data;\n\n    // 文字如果需要变换，那就需要将3dmatrix转成context的2dmatrix\n    const transform3dMatrixToContextMatrix = !keepDirIn3d;\n\n    const z = this.z || 0;\n\n    context.beginPath();\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(text, text.attribute, textAttribute);\n\n    this.beforeRenderStep(\n      text,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      textAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n\n    transform3dMatrixToContextMatrix && this.transformUseContext2d(text, textAttribute, z, context);\n\n    const drawText = (t: string, offsetX: number, offsetY: number, direction: number) => {\n      let _x = x + offsetX;\n      const _y = y + offsetY;\n      if (direction) {\n        context.highPerformanceSave();\n        _x += fontSize;\n        const matrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n        // matrix.translate(fontSize, 0);\n        matrix.rotateByCenter(Math.PI / 2, _x, _y);\n        context.transformFromMatrix(matrix, true);\n        matrixAllocate.free(matrix);\n      }\n\n      if (doStroke) {\n        if (strokeCb) {\n          strokeCb(context, text.attribute, textAttribute);\n        } else if (sVisible) {\n          context.setStrokeStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          context.strokeText(t, _x, _y, z);\n        }\n      }\n      if (doFill) {\n        if (fillCb) {\n          fillCb(context, text.attribute, textAttribute);\n        } else if (fVisible) {\n          context.setCommonStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          context.fillText(t, _x, _y, z);\n          // 垂直布局的情况下不支持下划线和中划线\n          // this.drawUnderLine(underline, lineThrough, text, _x, _y, 0, 0, z, textAttribute, context);\n        }\n      }\n\n      if (direction) {\n        context.highPerformanceRestore();\n        context.setTransformForCurrent();\n      }\n    };\n    context.setTextStyleWithoutAlignBaseline(text.attribute, textAttribute, z);\n    if (direction === 'horizontal') {\n      const { multilineLayout } = text;\n      if (!multilineLayout) {\n        context.highPerformanceRestore();\n        return;\n      } // 如果不存在的话，需要render层自行布局\n      const { xOffset, yOffset } = multilineLayout.bbox;\n      if (doStroke) {\n        if (strokeCb) {\n          strokeCb(context, text.attribute, textAttribute);\n        } else if (sVisible) {\n          context.setStrokeStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          multilineLayout.lines.forEach(line => {\n            context.strokeText(line.str, (line.leftOffset || 0) + xOffset + x, (line.topOffset || 0) + yOffset + y, z);\n          });\n        }\n      }\n      if (doFill) {\n        if (fillCb) {\n          fillCb(context, text.attribute, textAttribute);\n        } else if (fVisible) {\n          context.setCommonStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          multilineLayout.lines.forEach(line => {\n            context.fillText(line.str, (line.leftOffset || 0) + xOffset + x, (line.topOffset || 0) + yOffset + y, z);\n            this.drawUnderLine(\n              underline,\n              lineThrough,\n              text,\n              (line.leftOffset || 0) + xOffset + x,\n              (line.topOffset || 0) + yOffset + y,\n              line.descent,\n              (line.descent - line.ascent) / 2,\n              z,\n              textAttribute,\n              context,\n              {\n                width: line.width\n              }\n            );\n          });\n        }\n      }\n    } else {\n      let { textAlign = textAttribute.textAlign, textBaseline = textAttribute.textBaseline } = text.attribute;\n      if (!verticalMode) {\n        const t = textAlign;\n        textAlign = text.getBaselineMapAlign()[textBaseline] ?? ('left' as any);\n        textBaseline = text.getAlignMapBaseline()[t] ?? ('top' as any);\n      }\n      text.tryUpdateAABBBounds(); // 更新cache\n      const cache = text.cache;\n      const { verticalList } = cache;\n      context.textAlign = 'left';\n      context.textBaseline = 'top';\n      const totalHeight = lineHeight * verticalList.length;\n      let totalW = 0;\n      verticalList.forEach(verticalData => {\n        const _w = verticalData.reduce((a, b) => a + (b.width || 0), 0);\n        totalW = max(_w, totalW);\n      });\n      let offsetY = 0;\n      let offsetX = 0;\n      if (textBaseline === 'bottom') {\n        offsetX = -totalHeight;\n      } else if (textBaseline === 'middle') {\n        offsetX = -totalHeight / 2;\n      }\n      if (textAlign === 'center') {\n        offsetY -= totalW / 2;\n      } else if (textAlign === 'right') {\n        offsetY -= totalW;\n      }\n      verticalList.forEach((verticalData, i) => {\n        const currentW = verticalData.reduce((a, b) => a + (b.width || 0), 0);\n        const dw = totalW - currentW;\n        let currentOffsetY = offsetY;\n        if (textAlign === 'center') {\n          currentOffsetY += dw / 2;\n        } else if (textAlign === 'right') {\n          currentOffsetY += dw;\n        }\n        verticalData.forEach(item => {\n          const { text, width, direction } = item;\n          drawText(text, totalHeight - (i + 1) * lineHeight + offsetX, currentOffsetY, direction);\n          currentOffsetY += width;\n        });\n      });\n    }\n    transform3dMatrixToContextMatrix && this.restoreTransformUseContext2d(text, textAttribute, z, context);\n\n    this.afterRenderStep(\n      text,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      textAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n  }\n\n  draw(text: IText, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const textAttribute = getTheme(text, params?.theme).text;\n    const { keepDirIn3d = textAttribute.keepDirIn3d } = text.attribute;\n    // 文字如果需要变换，那就一定要计算3d矩阵\n    const computed3dMatrix = !keepDirIn3d;\n    this._draw(text, textAttribute, computed3dMatrix, drawContext, params);\n  }\n\n  drawUnderLine(\n    underline: number,\n    lineThrough: number,\n    text: IText,\n    anchorX: number,\n    anchorY: number,\n    offsetUnderLineY: number,\n    offsetThroughLineY: number,\n    z: number,\n    textAttribute: Required<ITextGraphicAttribute>,\n    context: IContext2d,\n    multiOption?: {\n      width: number;\n    }\n  ) {\n    if (lineThrough + underline <= 0) {\n      return;\n    }\n\n    const {\n      textAlign = textAttribute.textAlign,\n      // textBaseline = textAttribute.textBaseline,\n      // fontSize = textAttribute.fontSize,\n      fill = textAttribute.fill,\n      opacity = textAttribute.opacity,\n      underlineOffset = textAttribute.underlineOffset,\n      underlineDash = textAttribute.underlineDash,\n      fillOpacity = textAttribute.fillOpacity\n    } = text.attribute;\n    const isMulti = !isNil(multiOption);\n    const w = isMulti ? multiOption!.width : text.clipedWidth;\n    const offsetX = isMulti ? 0 : textDrawOffsetX(textAlign, w);\n    // const offsetY = textLayoutOffsetY(isMulti ? 'alphabetic' : textBaseline, fontSize, fontSize);\n    const attribute = { lineWidth: 0, stroke: fill, opacity, strokeOpacity: fillOpacity };\n    // let deltaY = isMulti ? -3 : 0;\n    if (underline) {\n      attribute.lineWidth = underline;\n      context.setStrokeStyle(text, attribute, anchorX, anchorY, textAttribute);\n      underlineDash && context.setLineDash(underlineDash);\n      context.beginPath();\n      // const dy = y + offsetY + fontSize + underlineOffset + deltaY;\n      const dy = anchorY + offsetUnderLineY + underlineOffset;\n      context.moveTo(anchorX + offsetX, dy, z);\n      context.lineTo(anchorX + offsetX + w, dy, z);\n      context.stroke();\n    }\n    // if (isMulti) {\n    //   deltaY = -1;\n    // }\n    if (lineThrough) {\n      attribute.lineWidth = lineThrough;\n      context.setStrokeStyle(text, attribute, anchorX, anchorY, textAttribute);\n      context.beginPath();\n      // const dy = y + offsetY + fontSize / 2 + deltaY;\n      const dy = anchorY + offsetThroughLineY;\n      context.moveTo(anchorX + offsetX, dy, z);\n      context.lineTo(anchorX + offsetX + w, dy, z);\n      context.stroke();\n    }\n  }\n}\n"]}