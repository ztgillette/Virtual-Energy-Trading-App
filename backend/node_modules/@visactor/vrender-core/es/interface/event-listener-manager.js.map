{"version":3,"sources":["../src/interface/event-listener-manager.ts"],"names":[],"mappings":"","file":"event-listener-manager.js","sourcesContent":["/**\n * Interface for event listener management with transformation capabilities\n */\nexport interface IEventListenerManager {\n  /**\n   * Set the event transformer function\n   * @param transformer Function that transforms events\n   */\n  setEventListenerTransformer: (transformer: (event: Event) => Event) => void;\n\n  /**\n   * Add an event listener with event transformation\n   * @param type Event type\n   * @param listener Event listener function or object\n   * @param options Event listener options\n   */\n  addEventListener: (\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ) => void;\n\n  /**\n   * Remove an event listener\n   * @param type Event type\n   * @param listener Event listener to remove\n   * @param options Event listener options\n   */\n  removeEventListener: (\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ) => void;\n\n  /**\n   * Dispatch an event\n   * @param event Event to dispatch\n   */\n  dispatchEvent: (event: Event) => boolean;\n\n  /**\n   * Clear all event listeners\n   */\n  clearAllEventListeners: () => void;\n}\n"]}