{"version":3,"sources":["../src/interface/curve.ts"],"names":[],"mappings":"","file":"curve.js","sourcesContent":["import type { IPoint, IPointLike } from '@visactor/vutils';\nimport type { ICurvePath } from './path';\nimport type { ICurveType, IDirection } from './common';\n\n/**\n * 用于segment的path2d接口，参数比普通的path多，部分path的方法不支持。\n */\nexport interface ISegPath2D extends ICurvePath<IPoint> {\n  direction: IDirection;\n  curveType: ICurveType;\n\n  endX: number;\n  endY: number;\n\n  tryUpdateLength: (direction?: IDirection) => number;\n  bezierCurveTo: (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    x: number,\n    y: number,\n    defined: boolean,\n    p?: IPointLike // 保存原始点\n  ) => void;\n  closePath: () => void;\n  ellipse: (\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    counterclockwise?: boolean\n  ) => void;\n  lineTo: (x: number, y: number, defined: boolean, p?: IPointLike) => void;\n  moveTo: (x: number, y: number, p?: IPointLike) => void;\n  quadraticCurveTo: (cpx: number, cpy: number, x: number, y: number) => void;\n}\n\nexport interface IGenSegmentParams {\n  direction?: IDirection;\n  startPoint?: IPointLike;\n}\n\nexport interface IBaseSegment {\n  context: ISegPath2D;\n  lineStart: () => void;\n  lineEnd: () => void;\n  areaStart: () => void;\n  areaEnd: () => void;\n  _x: number;\n  _y: number;\n  _x0: number;\n  _x1: number;\n  _y0: number;\n  _y1: number;\n  _line: number;\n  _point: number;\n}\n\nexport interface ILinearSegment extends IBaseSegment {\n  point: (point: IPointLike) => void;\n  tryUpdateLength: () => number;\n}\n\nexport interface ICurvedSegment extends IBaseSegment {\n  point: (point: IPointLike) => void;\n}\n"]}