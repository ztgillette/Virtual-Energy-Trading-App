{"version":3,"sources":["../src/allocator/matrix-allocate.ts"],"names":[],"mappings":"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","file":"matrix-allocate.js","sourcesContent":["import type { IMatrix, IMatrixLike } from '@visactor/vutils';\nimport { Matrix } from '@visactor/vutils';\nimport type { mat4, Releaseable, IAllocate } from '../interface';\nimport { identityMat4 } from '../common/matrix';\n\nexport const MatrixAllocate = Symbol.for('MatrixAllocate');\nexport const Mat4Allocate = Symbol.for('Mat4Allocate');\n\nexport function createMat4(): mat4 {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\nexport class DefaultMatrixAllocate implements IAllocate<IMatrix>, Releaseable {\n  protected pools: IMatrix[] = [];\n  allocate(a: number, b: number, c: number, d: number, e: number, f: number): IMatrix {\n    if (!this.pools.length) {\n      return new Matrix(a, b, c, d, e, f);\n    }\n    const m = this.pools.pop() as any;\n    m.a = a;\n    m.b = b;\n    m.c = c;\n    m.d = d;\n    m.e = e;\n    m.f = f;\n    return m;\n  }\n  allocateByObj(matrix: IMatrixLike): IMatrix {\n    if (!this.pools.length) {\n      return new Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n    }\n    const m = this.pools.pop() as any;\n    m.a = matrix.a;\n    m.b = matrix.b;\n    m.c = matrix.c;\n    m.d = matrix.d;\n    m.e = matrix.e;\n    m.f = matrix.f;\n    return m;\n  }\n  free(d: Matrix) {\n    this.pools.push(d);\n  }\n  get length(): number {\n    return this.pools.length;\n  }\n  release(...params: any): void {\n    this.pools = [];\n  }\n}\n\nexport class DefaultMat4Allocate implements IAllocate<mat4>, Releaseable {\n  protected pools: mat4[] = [];\n\n  static identity(out: mat4) {\n    return identityMat4(out);\n  }\n\n  allocate(): mat4 {\n    if (!this.pools.length) {\n      return createMat4();\n    }\n    const m = this.pools.pop() as mat4;\n    DefaultMat4Allocate.identity(m);\n    return m;\n  }\n  allocateByObj(d: mat4): mat4 {\n    let m: mat4;\n    if (!this.pools.length) {\n      m = createMat4();\n    } else {\n      m = this.pools.pop() as mat4;\n    }\n    for (let i = 0; i < m.length; i++) {\n      m[i] = d[i];\n    }\n    return m;\n  }\n  free(m: mat4) {\n    m && this.pools.push(m);\n  }\n  get length(): number {\n    return this.pools.length;\n  }\n  release(...params: any): void {\n    this.pools = [];\n  }\n}\n\nexport const matrixAllocate = new DefaultMatrixAllocate();\nexport const mat4Allocate = new DefaultMat4Allocate();\n"]}