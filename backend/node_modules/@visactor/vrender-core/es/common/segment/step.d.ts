import type { IPointLike } from '@visactor/vutils';
import type { ICurvedSegment, IGenSegmentParams, ILinearSegment, ISegPath2D } from '../../interface/curve';
export declare class Step implements ICurvedSegment {
    context: ISegPath2D;
    _t: number;
    private _lastDefined?;
    protected startPoint?: IPointLike;
    protected lastPoint?: IPointLike;
    constructor(context: ISegPath2D, t?: number, startPoint?: IPointLike);
    _x: number;
    _y: number;
    _x0: number;
    _x1: number;
    _y0: number;
    _y1: number;
    _line: number;
    _point: number;
    areaStart(): void;
    areaEnd(): void;
    lineStart(): void;
    lineEnd(): void;
    point(p: IPointLike): void;
    tryUpdateLength(): number;
}
export declare class StepClosed extends Step implements ILinearSegment {
    context: ISegPath2D;
    protected startPoint?: IPointLike;
    lineEnd(): void;
}
export declare function genStepSegments(points: IPointLike[], t: number, params?: IGenSegmentParams): ISegPath2D | null;
export declare function genStepTypeSegments(path: ILinearSegment, points: IPointLike[]): void;
export declare function genStepClosedSegments(points: IPointLike[], t: number, params?: IGenSegmentParams): ISegPath2D | null;
