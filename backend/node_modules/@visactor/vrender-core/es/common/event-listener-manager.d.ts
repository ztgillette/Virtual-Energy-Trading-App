import type { IEventListenerManager } from '../interface/event-listener-manager';
export declare class EventListenerManager implements IEventListenerManager {
    protected _listenerMap: Map<string, Map<EventListenerOrEventListenerObject, EventListener>>;
    protected _eventListenerTransformer: (event: Event) => Event;
    constructor();
    setEventListenerTransformer(transformer: (event: Event) => Event): void;
    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    dispatchEvent(event: Event): boolean;
    clearAllEventListeners(): void;
    protected _nativeAddEventListener(type: string, listener: EventListener, options?: boolean | AddEventListenerOptions): void;
    protected _nativeRemoveEventListener(type: string, listener: EventListener, options?: boolean | EventListenerOptions): void;
    protected _nativeDispatchEvent(event: Event): boolean;
}
