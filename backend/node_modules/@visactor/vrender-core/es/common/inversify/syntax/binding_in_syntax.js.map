{"version":3,"sources":["../src/common/inversify/syntax/binding_in_syntax.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD,MAAM,eAAe;IAGnB,YAAY,OAA8B;QACxC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,cAAc;QAGZ,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,IAA8B;QAC5C,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,OAAO,EAAE,eAAe,EAAE,CAAC","file":"binding_in_syntax.js","sourcesContent":["import type { interfaces } from '../interfaces';\nimport { BindingScopeEnum } from '../literal_types';\nimport { namedConstraint } from './constraint_helpers';\n\nclass BindingInSyntax<T> implements interfaces.BindingInSyntax<T> {\n  private _binding: interfaces.Binding<T>;\n\n  constructor(binding: interfaces.Binding<T>) {\n    this._binding = binding;\n  }\n\n  inRequestScope(): interfaces.BindingInSyntax<T> {\n    // this._binding.scope = BindingScopeEnum.Request;\n    // return new BindingWhenOnSyntax<T>(this._binding);\n    throw new Error('暂未实现');\n  }\n\n  inSingletonScope(): interfaces.BindingInSyntax<T> {\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return this;\n  }\n\n  inTransientScope(): interfaces.BindingInSyntax<T> {\n    this._binding.scope = BindingScopeEnum.Transient;\n    return this;\n  }\n\n  whenTargetNamed(name: string | number | symbol): interfaces.BindingOnSyntax<T> {\n    this._binding.constraint = namedConstraint(name);\n    return this;\n  }\n}\n\nexport { BindingInSyntax };\n"]}