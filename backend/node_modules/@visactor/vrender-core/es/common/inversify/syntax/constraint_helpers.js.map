{"version":3,"sources":["../src/common/inversify/syntax/constraint_helpers.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAE7C,MAAM,gBAAgB,GAAG,CAAC,GAA6B,EAAE,EAAE,CAAC,CAAC,KAAc,EAAE,EAAE;IAC7E,MAAM,UAAU,GAAkC,CAAC,OAAY,EAAE,EAAE;QACjE,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;YAClD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,OAAO,CAAC,uBAAuB,IAAI,IAAI,EAAE;YAC3C,OAAO,KAAK,CAAC;SACd;QACD,MAAM,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,CAAC;QAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,uBAAuB,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,uBAAuB,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE;gBACxF,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAGF,UAAU,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAE/C,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC","file":"constraint_helpers.js","sourcesContent":["import type { interfaces } from '../interfaces';\nimport { Metadata } from '../meta-data';\nimport { NAMED_TAG } from '../metadata_keys';\n\nconst taggedConstraint = (key: string | number | symbol) => (value: unknown) => {\n  const constraint: interfaces.ConstraintFunction = (request: any) => {\n    if (request == null) {\n      return false;\n    }\n    if (request.key === key && request.value === value) {\n      return true;\n    }\n    if (request.constructorArgsMetadata == null) {\n      return false;\n    }\n    const constructorArgsMetadata = request.constructorArgsMetadata;\n    for (let i = 0; i < constructorArgsMetadata.length; i++) {\n      if (constructorArgsMetadata[i].key === key && constructorArgsMetadata[i].value === value) {\n        return true;\n      }\n    }\n    return false;\n  };\n  // request !== null && request.target !== null && request.target.matchesTag(key)(value);\n\n  constraint.metaData = new Metadata(key, value);\n\n  return constraint;\n};\n\nexport const namedConstraint = taggedConstraint(NAMED_TAG);\n"]}