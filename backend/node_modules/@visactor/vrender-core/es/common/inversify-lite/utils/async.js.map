{"version":3,"sources":["../src/common/inversify-lite/utils/async.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,CAAI,MAAe;IACnC,MAAM,kBAAkB,GAAG,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,OAAO,MAAM,KAAK,UAAU,CAAC;IAE3G,OAAO,kBAAkB,IAAI,OAAQ,MAAyB,CAAC,IAAI,KAAK,UAAU,CAAC;AACrF,CAAC;AAED,SAAS,0BAA0B,CAAI,MAAe;IACpD,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC","file":"async.js","sourcesContent":["function isPromise<T>(object: unknown): object is Promise<T> {\n  const isObjectOrFunction = (typeof object === 'object' && object !== null) || typeof object === 'function';\n\n  return isObjectOrFunction && typeof (object as PromiseLike<T>).then === 'function';\n}\n\nfunction isPromiseOrContainsPromise<T>(object: unknown): object is Promise<T> | (T | Promise<T>)[] {\n  if (isPromise(object)) {\n    return true;\n  }\n\n  return Array.isArray(object) && object.some(isPromise);\n}\n\nexport { isPromise, isPromiseOrContainsPromise };\n"]}