{"version":3,"sources":["../src/common/inversify-lite/constants/error_msgs.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,+BAA+B,GAAG,oDAAoD,CAAC;AACpG,MAAM,CAAC,MAAM,mBAAmB,GAAG,sDAAsD,CAAC;AAC1F,MAAM,CAAC,MAAM,aAAa,GAAG,eAAe,CAAC;AAC7C,MAAM,CAAC,MAAM,aAAa,GAAG,eAAe,CAAC;AAC7C,MAAM,CAAC,MAAM,eAAe,GAAG,8CAA8C,CAAC;AAC9E,MAAM,CAAC,MAAM,aAAa,GAAG,qCAAqC,CAAC;AACnE,MAAM,CAAC,MAAM,cAAc,GAAG,mDAAmD,CAAC;AAClF,MAAM,CAAC,MAAM,6BAA6B,GAAG,6CAA6C,CAAC;AAC3F,MAAM,CAAC,MAAM,yBAAyB,GAAG,yDAAyD,CAAC;AACnG,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,IAAY,EAAE,EAAE,CAC1D,gEAAgE,IAAI,OAAO;IAC3E,wEAAwE;IACxE,2BAA2B,CAAC;AAC9B,MAAM,CAAC,MAAM,mBAAmB,GAAG,4BAA4B,CAAC;AAChE,MAAM,CAAC,MAAM,eAAe,GAAG,mDAAmD,CAAC;AACnF,MAAM,CAAC,MAAM,oBAAoB,GAAG,uBAAuB,CAAC;AAC5D,MAAM,CAAC,MAAM,2BAA2B,GAAG,mCAAmC,CAAC;AAC/E,MAAM,CAAC,MAAM,yBAAyB,GAAG,4DAA4D,CAAC;AACtG,MAAM,CAAC,MAAM,wBAAwB,GAAG,wDAAwD,CAAC;AACjG,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,GAAY,EAAE,EAAE,CAAC,oCAAoC,GAAG;uCAC9C,CAAC;AAExC,MAAM,CAAC,MAAM,qBAAqB,GAChC,gEAAgE,GAAG,4BAA4B,CAAC;AAElG,MAAM,CAAC,MAAM,2BAA2B,GACtC,yDAAyD;IACzD,+EAA+E,CAAC;AAElF,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,GAAG,MAAiB,EAAE,EAAE,CAChE,2DAA2D;IAC3D,GAAG,MAAM,CAAC,CAAC,CAAC,yEAAyE,CAAC;AAExF,MAAM,CAAC,MAAM,mCAAmC,GAC9C,4DAA4D,GAAG,oBAAoB,CAAC;AAEtF,MAAM,CAAC,MAAM,uCAAuC,GAClD,+CAA+C,GAAG,2CAA2C,CAAC;AAEhG,MAAM,CAAC,MAAM,8CAA8C,GACzD,sDAAsD,GAAG,cAAc,CAAC;AAE1E,MAAM,CAAC,MAAM,yCAAyC,GACpD,iDAAiD,GAAG,cAAc,CAAC;AAErE,MAAM,CAAC,MAAM,4BAA4B,GAAG,qEAAqE,CAAC;AAClH,MAAM,CAAC,MAAM,+BAA+B,GAAG,wEAAwE,CAAC;AACxH,MAAM,CAAC,MAAM,qBAAqB,GAChC,+FAA+F,CAAC;AAClG,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAa,EAAE,YAAoB,EAAE,EAAE,CAC1E,iCAAiC,KAAK,KAAK,YAAY,EAAE,CAAC;AAC5D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,KAAa,EAAE,YAAoB,EAAE,EAAE,CACvE,8BAA8B,KAAK,KAAK,YAAY,EAAE,CAAC;AACzD,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,KAAa,EAAE,YAAoB,EAAE,EAAE,CAC3E,mCAAmC,KAAK,KAAK,YAAY,EAAE,CAAC;AAE9D,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,WAAmB,EAAE,iBAAyB,EAAE,EAAE,CAC/F,+DAA+D,WAAW,+CAA+C;IACzH,uBAAuB,iBAAiB,IAAI,CAAC;AAE/C,MAAM,CAAC,MAAM,cAAc,GAAG,kCAAkC,CAAC","file":"error_msgs.js","sourcesContent":["export const DUPLICATED_INJECTABLE_DECORATOR = 'Cannot apply @injectable decorator multiple times.';\nexport const DUPLICATED_METADATA = 'Metadata key was used more than once in a parameter:';\nexport const NULL_ARGUMENT = 'NULL argument';\nexport const KEY_NOT_FOUND = 'Key Not Found';\nexport const AMBIGUOUS_MATCH = 'Ambiguous match found for serviceIdentifier:';\nexport const CANNOT_UNBIND = 'Could not unbind serviceIdentifier:';\nexport const NOT_REGISTERED = 'No matching bindings found for serviceIdentifier:';\nexport const MISSING_INJECTABLE_ANNOTATION = 'Missing required @injectable annotation in:';\nexport const MISSING_INJECT_ANNOTATION = 'Missing required @inject or @multiInject annotation in:';\nexport const UNDEFINED_INJECT_ANNOTATION = (name: string) =>\n  `@inject called with undefined this could mean that the class ${name} has ` +\n  'a circular dependency problem. You can use a LazyServiceIdentifer to  ' +\n  'overcome this limitation.';\nexport const CIRCULAR_DEPENDENCY = 'Circular dependency found:';\nexport const NOT_IMPLEMENTED = 'Sorry, this feature is not fully implemented yet.';\nexport const INVALID_BINDING_TYPE = 'Invalid binding type:';\nexport const NO_MORE_SNAPSHOTS_AVAILABLE = 'No snapshot available to restore.';\nexport const INVALID_MIDDLEWARE_RETURN = 'Invalid return type in middleware. Middleware must return!';\nexport const INVALID_FUNCTION_BINDING = 'Value provided to function binding must be a function!';\nexport const LAZY_IN_SYNC = (key: unknown) => `You are attempting to construct '${key}' in a synchronous way\n but it has asynchronous dependencies.`;\n\nexport const INVALID_TO_SELF_VALUE =\n  'The toSelf function can only be applied when a constructor is ' + 'used as service identifier';\n\nexport const INVALID_DECORATOR_OPERATION =\n  'The @inject @multiInject @tagged and @named decorators ' +\n  'must be applied to the parameters of a class constructor or a class property.';\n\nexport const ARGUMENTS_LENGTH_MISMATCH = (...values: unknown[]) =>\n  'The number of constructor arguments in the derived class ' +\n  `${values[0]} must be >= than the number of constructor arguments of its base class.`;\n\nexport const CONTAINER_OPTIONS_MUST_BE_AN_OBJECT =\n  'Invalid Container constructor argument. Container options ' + 'must be an object.';\n\nexport const CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE =\n  'Invalid Container option. Default scope must ' + 'be a string (\"singleton\" or \"transient\").';\n\nexport const CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE =\n  'Invalid Container option. Auto bind injectable must ' + 'be a boolean';\n\nexport const CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK =\n  'Invalid Container option. Skip base check must ' + 'be a boolean';\n\nexport const MULTIPLE_PRE_DESTROY_METHODS = 'Cannot apply @preDestroy decorator multiple times in the same class';\nexport const MULTIPLE_POST_CONSTRUCT_METHODS = 'Cannot apply @postConstruct decorator multiple times in the same class';\nexport const ASYNC_UNBIND_REQUIRED =\n  'Attempting to unbind dependency with asynchronous destruction (@preDestroy or onDeactivation)';\nexport const POST_CONSTRUCT_ERROR = (clazz: string, errorMessage: string) =>\n  `@postConstruct error in class ${clazz}: ${errorMessage}`;\nexport const PRE_DESTROY_ERROR = (clazz: string, errorMessage: string) =>\n  `@preDestroy error in class ${clazz}: ${errorMessage}`;\nexport const ON_DEACTIVATION_ERROR = (clazz: string, errorMessage: string) =>\n  `onDeactivation() error in class ${clazz}: ${errorMessage}`;\n\nexport const CIRCULAR_DEPENDENCY_IN_FACTORY = (factoryType: string, serviceIdentifier: string) =>\n  `It looks like there is a circular dependency in one of the '${factoryType}' bindings. Please investigate bindings with ` +\n  `service identifier '${serviceIdentifier}'.`;\n\nexport const STACK_OVERFLOW = 'Maximum call stack size exceeded';\n"]}