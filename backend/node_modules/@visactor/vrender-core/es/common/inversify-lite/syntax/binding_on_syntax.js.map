{"version":3,"sources":["../src/common/inversify-lite/syntax/binding_on_syntax.ts"],"names":[],"mappings":"AAGA,MAAM,eAAe;IAGnB,YAAY,OAA8B;QACxC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;CAaF;AAED,OAAO,EAAE,eAAe,EAAE,CAAC","file":"binding_on_syntax.js","sourcesContent":["import type { interfaces } from '../interfaces/interfaces';\n// import { BindingWhenSyntax } from './binding_when_syntax';\n\nclass BindingOnSyntax<T> implements interfaces.BindingOnSyntax<T> {\n  private _binding: interfaces.Binding<T>;\n\n  constructor(binding: interfaces.Binding<T>) {\n    this._binding = binding;\n  }\n\n  // public onActivation(handler: interfaces.BindingActivation<T>): interfaces.BindingWhenSyntax<T> {\n  //   console.log('onActivation');\n  //   this._binding.onActivation = handler;\n  //   return new BindingWhenSyntax<T>(this._binding);\n  // }\n\n  // public onDeactivation(handler: interfaces.BindingDeactivation<T>): interfaces.BindingWhenSyntax<T> {\n  //   console.log('onDeactivation');\n  //   this._binding.onDeactivation = handler;\n  //   return new BindingWhenSyntax<T>(this._binding);\n  // }\n}\n\nexport { BindingOnSyntax };\n"]}