{"version":3,"sources":["../src/common/performance-raf.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,IAAI,GAAG,GAAG,CAAC,CAAC;AAKZ,MAAM,OAAO,cAAc;IAA3B;QACE,0BAAqB,GAAsC,IAAI,GAAG,EAAE,CAAC;QAC7D,eAAU,GAAkB,IAAI,CAAC;QAsB/B,sBAAiB,GAAG,CAAC,IAAY,EAAE,EAAE;YAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,MAAM,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,GAAG,EAAE,CAAC;YACvC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEQ,kCAA6B,GAAG,GAAG,EAAE;YAC7C,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,EAAE;gBACrE,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1F,CAAC,CAAC;IACJ,CAAC;IAjCC,mBAAmB,CAAC,QAA8B;QAChD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAEhD,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,OAAO,GAAG,CAAC;IACb,CAAC;IAOD,sBAAsB,CAAC,KAAa;QAClC,IAAI,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACzC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CAeF","file":"performance-raf.js","sourcesContent":["import { application } from '../application';\n\nlet idx = 0;\n\n/**\n * 性能优化，将requestAnimationFrame的回调函数存储起来，在下一帧执行\n */\nexport class PerformanceRAF {\n  nextAnimationFrameCbs: Map<number, FrameRequestCallback> = new Map();\n  private _rafHandle: number | null = null;\n\n  addAnimationFrameCb(callback: FrameRequestCallback) {\n    this.nextAnimationFrameCbs.set(++idx, callback);\n    // 下一帧执行nextAnimationFrameCbs\n    this.tryRunAnimationFrameNextFrame();\n    return idx;\n  }\n\n  /**\n   * 移除指定索引的回调函数\n   * @param index raf索引，从1开始，相当于内部nextAnimationFrameCbs的idx + 1\n   * @returns 是否移除成功\n   */\n  removeAnimationFrameCb(index: number): boolean {\n    if (this.nextAnimationFrameCbs.has(index)) {\n      this.nextAnimationFrameCbs.delete(index);\n      return true;\n    }\n    return false;\n  }\n\n  protected runAnimationFrame = (time: number) => {\n    this._rafHandle = null;\n    const cbs = this.nextAnimationFrameCbs;\n    this.nextAnimationFrameCbs = new Map();\n    cbs.forEach(cb => cb(time));\n  };\n\n  protected tryRunAnimationFrameNextFrame = () => {\n    if (this._rafHandle !== null || this.nextAnimationFrameCbs.size === 0) {\n      return;\n    }\n    this._rafHandle = application.global.getRequestAnimationFrame()(this.runAnimationFrame);\n  };\n}\n"]}