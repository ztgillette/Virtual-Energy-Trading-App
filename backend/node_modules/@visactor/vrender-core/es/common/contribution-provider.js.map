{"version":3,"sources":["../src/common/contribution-provider.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,MAAM,oBAAoB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAEnE,MAAM,yBAAyB;IAK7B,YAAY,iBAAkD,EAAE,SAA+B;QAC7F,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS;gBACZ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACtE;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS;YACZ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACvE,CAAC;CACF;AAED,MAAM,UAAU,wBAAwB,CAAC,IAAqB,EAAE,EAAO;IACrE,IAAI,CAAC,oBAAoB,CAAC;SACvB,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,IAAI,yBAAyB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SAC/E,gBAAgB,EAAE;SAClB,eAAe,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,wCAAwC,CAAC,IAAqB,EAAE,EAAO;IACrF,IAAI,CAAC,oBAAoB,CAAC;SACvB,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,IAAI,yBAAyB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SAC/E,eAAe,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,OAAO,iBAAiB;IAG5B,MAAM,CAAC,QAAQ,CAAC,EAAqC;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,EAAqC,EAAE,KAAqC;QAC1F,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,uBAAuB;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;;AAdM,uBAAK,GAA2E,IAAI,GAAG,EAAE,CAAC","file":"contribution-provider.js","sourcesContent":["import type { interfaces } from '../common/inversify-lite';\nimport type { IContributionProvider } from '../interface';\n\nexport const ContributionProvider = Symbol('ContributionProvider');\n\nclass ContributionProviderCache<T> implements IContributionProvider<T> {\n  protected caches?: T[];\n  protected serviceIdentifier: interfaces.ServiceIdentifier<T>;\n  protected container: interfaces.Container;\n\n  constructor(serviceIdentifier: interfaces.ServiceIdentifier<T>, container: interfaces.Container) {\n    this.serviceIdentifier = serviceIdentifier;\n    this.container = container;\n    ContributionStore.setStore(this.serviceIdentifier, this);\n  }\n\n  getContributions(): T[] {\n    if (!this.caches) {\n      this.caches = [];\n      this.container &&\n        this.container.isBound(this.serviceIdentifier) &&\n        this.caches.push(...this.container.getAll(this.serviceIdentifier));\n    }\n    return this.caches;\n  }\n\n  refresh() {\n    if (!this.caches) {\n      return;\n    }\n    this.caches.length = 0;\n    this.container &&\n      this.container.isBound(this.serviceIdentifier) &&\n      this.caches.push(...this.container.getAll(this.serviceIdentifier));\n  }\n}\n\nexport function bindContributionProvider(bind: interfaces.Bind, id: any): void {\n  bind(ContributionProvider)\n    .toDynamicValue(({ container }) => new ContributionProviderCache(id, container))\n    .inSingletonScope()\n    .whenTargetNamed(id);\n}\n\nexport function bindContributionProviderNoSingletonScope(bind: interfaces.Bind, id: any): void {\n  bind(ContributionProvider)\n    .toDynamicValue(({ container }) => new ContributionProviderCache(id, container))\n    .whenTargetNamed(id);\n}\n\nexport class ContributionStore {\n  static store: Map<interfaces.ServiceIdentifier<any>, ContributionProviderCache<any>> = new Map();\n\n  static getStore(id: interfaces.ServiceIdentifier<any>): ContributionProviderCache<any> {\n    return this.store.get(id);\n  }\n\n  static setStore(id: interfaces.ServiceIdentifier<any>, cache: ContributionProviderCache<any>): void {\n    this.store.set(id, cache);\n  }\n\n  static refreshAllContributions(): void {\n    this.store.forEach(cache => {\n      cache.refresh();\n    });\n  }\n}\n"]}