{"version":3,"sources":["../src/render/contributions/render/rect3d-render.ts"],"names":[],"mappings":"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","file":"rect3d-render.js","sourcesContent":["import { injectable } from '../../../common/inversify-lite';\nimport { getTheme } from '../../../graphic/theme';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IFace3d,\n  IMarkAttribute,\n  IRect3d,\n  IThemeAttribute,\n  IGraphicRender,\n  IDrawContext,\n  IGraphicRenderDrawParams,\n  IRenderService\n} from '../../../interface';\nimport { rectFillVisible, rectStrokeVisible, runFill, runStroke } from './utils';\nimport { RECT3D_NUMBER_TYPE } from '../../../graphic/constants';\nimport { Base3dRender } from './base-3d-render';\n@injectable()\nexport class DefaultCanvasRect3dRender extends Base3dRender<IRect3d> implements IGraphicRender {\n  type = 'rect3d';\n  numberType: number = RECT3D_NUMBER_TYPE;\n  declare z: number;\n\n  drawShape(\n    rect: IRect3d,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    // const rectAttribute = graphicService.themeService.getCurrentTheme().rectAttribute;\n    const rectAttribute = getTheme(rect, params?.theme).rect;\n    const {\n      fill = rectAttribute.fill,\n      stroke = rectAttribute.stroke,\n      x1,\n      y1,\n      x: originX,\n      y: originY,\n      opacity = rectAttribute.opacity,\n      fillOpacity = rectAttribute.fillOpacity,\n      lineWidth = rectAttribute.lineWidth,\n      strokeOpacity = rectAttribute.strokeOpacity,\n      visible = rectAttribute.visible,\n      drawStrokeWhenZeroWH = rectAttribute.drawStrokeWhenZeroWH ?? false\n    } = rect.attribute;\n    let { width, height } = rect.attribute;\n\n    width = (width ?? x1 - originX) || 0;\n    height = (height ?? y1 - originY) || 0;\n\n    const z = this.z ?? 0;\n\n    // 不绘制或者透明\n    const fVisible = rectFillVisible(opacity, fillOpacity, width, height, fill);\n    const sVisible = rectStrokeVisible(opacity, strokeOpacity, width, height, drawStrokeWhenZeroWH);\n    const doFill = runFill(fill);\n    const doStroke = runStroke(stroke, lineWidth);\n\n    if (!(rect.valid && visible)) {\n      return;\n    }\n\n    if (!(doFill || doStroke)) {\n      return;\n    }\n\n    // 如果存在fillCb和strokeCb，那就不直接跳过\n    if (!(fVisible || sVisible || fillCb || strokeCb)) {\n      return;\n    }\n\n    const { light } = drawContext.stage || {};\n    const face3d = rect.findFace();\n\n    if (fill !== false) {\n      context.setCommonStyle(rect, rect.attribute, x, y, rectAttribute);\n      let fc = fill;\n      if (typeof fc !== 'string') {\n        fc = 'black';\n      }\n      this.fill(x, y, z, face3d, null, fc, context, light, null, null, fillCb);\n    }\n    if (stroke !== false) {\n      context.setStrokeStyle(rect, rect.attribute, x, y, rectAttribute);\n      this.stroke(x, y, z, face3d, context);\n    }\n  }\n\n  draw(rect: IRect3d, renderService: IRenderService, drawContext: IDrawContext) {\n    const rectAttribute = getTheme(rect).rect;\n    this._draw(rect, rectAttribute, false, drawContext);\n  }\n}\n"]}