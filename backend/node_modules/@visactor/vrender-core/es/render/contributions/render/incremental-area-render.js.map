{"version":3,"sources":["../src/render/contributions/render/incremental-area-render.ts"],"names":[],"mappings":"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","file":"incremental-area-render.js","sourcesContent":["import { injectable } from '../../../common/inversify-lite';\nimport type {\n  IArea,\n  IAreaGraphicAttribute,\n  IAreaSegment,\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IDrawContext\n} from '../../../interface';\nimport { AREA_NUMBER_TYPE } from '../../../graphic/constants';\nimport { getTheme } from '../../../graphic/theme';\nimport { fillVisible, runFill } from './utils';\nimport { DefaultCanvasAreaRender } from './area-render';\nimport { drawIncrementalAreaSegments } from '../../../common/render-curve';\n\n/**\n * 默认的基于canvas的line渲染器\n * 单例\n */\n@injectable()\nexport class DefaultIncrementalCanvasAreaRender extends DefaultCanvasAreaRender implements IGraphicRender {\n  declare type: 'area';\n  numberType: number = AREA_NUMBER_TYPE;\n\n  drawShape(\n    area: IArea,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      lineAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    if (area.incremental && drawContext.multiGraphicOptions) {\n      const { startAtIdx, length } = drawContext.multiGraphicOptions;\n      const { segments = [] } = area.attribute;\n      if (startAtIdx > segments.length) {\n        return;\n      }\n      const areaAttribute = getTheme(area).area;\n      const {\n        fill = areaAttribute.fill,\n        fillOpacity = areaAttribute.fillOpacity,\n        opacity = areaAttribute.opacity,\n        visible = areaAttribute.visible\n      } = area.attribute;\n      // 不绘制或者透明\n      const fVisible = fillVisible(opacity, fillOpacity, fill);\n      const doFill = runFill(fill);\n\n      if (!(area.valid && visible)) {\n        return;\n      }\n\n      if (!doFill) {\n        return;\n      }\n\n      // 如果存在fillCb和strokeCb，那就不直接跳过\n      if (!(fVisible || fillCb)) {\n        return;\n      }\n\n      // 不支持clipRange，不支持pick，仅支持最基础的线段绘制\n      for (let i = startAtIdx; i < startAtIdx + length; i++) {\n        this.drawIncreaseSegment(\n          area,\n          context,\n          segments[i - 1],\n          segments[i],\n          area.attribute.segments[i],\n          [areaAttribute, area.attribute],\n          x,\n          y\n        );\n      }\n    } else {\n      super.drawShape(area, context, x, y, drawContext, params, fillCb);\n    }\n  }\n\n  drawIncreaseSegment(\n    area: IArea,\n    context: IContext2d,\n    lastSeg: IAreaSegment,\n    seg: IAreaSegment,\n    attribute: Partial<IAreaGraphicAttribute>,\n    defaultAttribute: Required<IAreaGraphicAttribute> | Partial<IAreaGraphicAttribute>[],\n    offsetX: number,\n    offsetY: number\n  ) {\n    if (!seg) {\n      return;\n    }\n\n    context.beginPath();\n    drawIncrementalAreaSegments(context.camera ? context : context.nativeContext, lastSeg, seg, {\n      offsetX,\n      offsetY\n    });\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(area, attribute, defaultAttribute);\n    context.setCommonStyle(area, attribute, offsetX, offsetY, defaultAttribute);\n    context.fill();\n  }\n}\n"]}