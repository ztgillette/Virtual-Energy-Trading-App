{"version":3,"sources":["../src/render/contributions/render/draw-contribution.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,gCAAgC,CAAC;AAexF,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAEhE,OAAO,EAAE,oBAAoB,EAAE,MAAM,uCAAuC,CAAC;AAC7E,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAE3D,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAC9F,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,2BAA2B,EAAE,MAAM,UAAU,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAM5C,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAgBlC,YAIiD,aAA+B,EAK3D,gCAAyF;QAL7D,kBAAa,GAAb,aAAa,CAAkB;QAK3D,qCAAgC,GAAhC,gCAAgC,CAAyD;QAyM9G,mBAAc,GAAG,CAAC,QAAiB,EAAE,KAAa,EAAE,WAAyB,EAAE,KAAc,EAAE,EAAE;;YAC/F,QAAQ;gBACN,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAc,EAAE,EAAE;oBACvC,IAAI,WAAW,CAAC,KAAK,EAAE;wBACrB,OAAO;qBACR;oBACD,IAAI,IAAI,CAAC,WAAW,EAAE;wBACpB,IAAI,CAAC,WAAW,CAAC,IAAc,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;qBACtD;yBAAM;wBACL,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC;gBACJ,CAAC,CAAC,OAAO,CACL,KAAK,EACL,gBAAgB,CAAC,MAAM,EACvB,CAAC,IAAc,EAAE,EAAE;oBACjB,IAAI,WAAW,CAAC,KAAK,EAAE;wBACrB,OAAO;qBACR;oBACD,IAAI,IAAI,CAAC,WAAW,EAAE;wBACpB,IAAI,CAAC,WAAW,CAAC,IAAc,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;qBACtD;yBAAM;wBACL,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;qBACpC;gBACH,CAAC,EACD,KAAK,EACL,CAAC,CAAC,CAAA,MAAA,WAAW,CAAC,OAAO,0CAAE,MAAM,CAAA,CAC9B,CAAC;QACR,CAAC,CAAC;QAnOA,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,MAAM,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAChC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;gBAC7D,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aAClD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gCAAgC;aAClE,gBAAgB,EAAE;aAClB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,cAAc,CAAC,aAA6B,EAAE,WAAyB;QAErE,IAAI,WAAW,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aAAM;YAEL,IAAI,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,gCAAgC,CAAC;SAC3F;IACH,CAAC;IAED,IAAI,CAAC,aAA6B,EAAE,WAAyB;;QAC3D,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAChD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC;QAElG,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;QAE1C,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,WAAW,CAAC;QAE7D,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QAID,MAAM,WAAW,GAAwB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5G,IAAI,KAAK,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE;YACnD,MAAM,CAAC,GAAG,gBAAgB,CAAC,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAClE,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAClC;QAED,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;YAClB,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;YACxE,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;YACxE,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;YACvE,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;SACxE;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEzC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,CAAC,IAAI,EAAE,CAAC;QACf,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;QAEjH,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAS3B,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChD,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,EAAE,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;QACxF,OAAO,CAAC,IAAI,EAAE,CAAC;QAGf,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;QACtD,IAAI,MAAA,aAAa,CAAC,UAAU,0CAAE,KAAK,EAAE;YACnC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACtF;QASD,aAAa,CAAC,eAAe;aAC1B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;YACb,OAAO,CAAC,MAAA,CAAC,CAAC,SAAS,CAAC,MAAM,mCAAI,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAA,CAAC,CAAC,SAAS,CAAC,MAAM,mCAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC3G,CAAC,CAAC;aACD,OAAO,CAAC,KAAK,CAAC,EAAE;YACf,KAAK,CAAC,WAAW;gBACf,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAe,EAAE,WAAW,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3F,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAiB,EAAE,WAAW,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAOL,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,OAAO,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IAED,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAGS,gBAAgB,CAAC,KAAa;QACtC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC1B,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;QACpB,OAAO,MAAM,EAAE;YACb,MAAM,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,EAAE,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,EAAE;gBACL,OAAO,CAAC,CAAC;aACV;YACD,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;YACjB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,WAAyB,EAAE,YAAqB,EAAE,QAAkB;QAC7F,IAAI,WAAW,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7D,OAAO;SACR;QACD,IAAI,KAAK,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,SAAS,IAAI,IAAI,IAAI,WAAW,CAAC,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;YAChG,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YACzC,OAAO;SACR;QAED,IACE,IAAI,CAAC,cAAc;YACnB,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC;YAC3D,KAAK,CAAC,SAAS,CAAC,UAAU,KAAK,OAAO,EACtC;YACA,OAAO;SACR;QAED,IAAI,KAAK,GAAY,YAAY,CAAC;QAClC,IAAI,UAAmB,CAAC;QAExB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE5D,MAAM,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC;YAC7B,KAAK,GAAG,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAEhG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;SACvF;QAED,WAAW,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAEnF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE;YAClC,mBAAmB,EAAE;gBACnB,QAAQ;gBACR,KAAK;aACN;YACD,aAAa,EAAE,IAAI,CAAC,cAAc;SACnC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;IACH,CAAC;IAgCS,eAAe,CAAC,KAAa,EAAE,WAAyB;QAChE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC;QACrC,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;QAE5B,IAAI,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,EAAE;YACrB,gBAAgB,GAAG;gBACjB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC3C,MAAM,EAAE,SAAS,CAAC,IAAI;gBACtB,KAAK;aACN,CAAC;YACF,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;SAC7C;QAED,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,UAAU,EAAE,CAAC;QAClF,MAAM,GAAG,GAAG,gBAAgB,CAAC,gBAAgB,IAAI,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC5F,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnE,GAAG,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACxE,GAAW,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,kCACtC,WAAW,KACd,gBAAgB,EAAE,GAAG,EACrB,KAAK,EAAE,aAAa,EACpB,KAAK,EAAE,gBAAgB,CAAC,KAAK,EAC7B,OAAO,EAAE,kBAAkB,EAC3B,SAAS,EAAE,KAAK,CAAC,IAAI,EACrB,KAAK,EAAE,KAAK,IACZ,CAAC;QACH,gBAAgB,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAGxC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,WAAW,EAAE;YAEf,IAAI,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE;gBACtD,IAAI,CAAC,eAAe,CAAC,WAAqB,EAAE,WAAW,CAAC,CAAC;aAC1D;iBAAM;gBAEL,IAAI,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,UAAU,EAAE;oBACf,UAAU,GAAG;wBACX,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;wBAC3C,MAAM,EAAE,SAAS,CAAC,IAAI;qBACvB,CAAC;oBACF,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;iBAC7C;gBACD,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,UAAU,EAAE,CAAC;gBACtE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,kCAC9B,WAAW,KACd,gBAAgB,EAAE,GAAG,EACrB,KAAK,EAAE,aAAa,EACpB,KAAK,EAAE,UAAU,CAAC,KAAK,EACvB,OAAO,EAAE,YAAY,EACrB,SAAS,EAAE,WAAW,CAAC,IAAI,EAC3B,KAAK,EAAE,KAAK,IACZ,CAAC;aACJ;SACF;IACH,CAAC;IAED,qBAAqB,CAAC,OAAiB;QACrC,IAAI,QAAQ,CAAC;QACb,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAClD;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,OAAiB,EAAE,WAAyB,EAAE,MAAiC;QAExF,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;gBAC1D,IACE,gBAAgB,CAAC,cAAc;oBAC/B,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,CAAC,EAC9F;oBACA,OAAO;iBACR;aACF;SACF;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,IAAI,OAAO,GAAY,KAAK,CAAC;QAC7B,IAAI,UAAmB,CAAC;QAExB,IAAI,WAAW,CAAC,aAAa,EAAE;YAC7B,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;YAC9D,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/D;YACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;SACjD;QAYD,IAAI,OAAO,EAAE;YACX,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC9E;QAED,IACE,IAAI,CAAC,cAAc;YACnB,CAAC,CACC,OAAO,CAAC,WAAW;gBACnB,OAAO,CAAC,SAAS,CAAC,UAAU,KAAK,OAAO;gBACxC,eAAe,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAC3E,EACD;YACA,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;gBAC7B,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;gBAC9D,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACpE;YACD,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,SAAS,CAAC;QACzF,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,SAAS,EAAE;YAC1C,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;SAC9B;QACD,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;QACvC,IAAI,QAAQ,EAAE;YACZ,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;SAC/F;aAAM;YACL,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;SACxE;QAGD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YAC7B,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;YAC9D,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACpE;QAGD,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAI,gBAAgB,CAAC,aAAa,EAAE;oBAClC,IAAI,gBAAgB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE;wBACzF,OAAO;qBACR;iBACF;aACF;SACF;IACH,CAAC;IAES,kBAAkB,CAAC,IAAa;QACxC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;IAES,wBAAwB,CAAC,IAAY,EAAE,OAAiB;QAChE,IAAI,IAAI,CAAC;QACT,IAAI,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;YACjC,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAChF,IAAI,GAAG,gBAAgB,IAAI,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACvD;QACD,OAAO,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpF,CAAC;IAES,WAAW,CAAC,aAA6B,EAAE,OAAmB,EAAE,WAAyB;;QACjG,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC;QAEvC,MAAM,CAAC,GAAG,CAAC,CAAC;QACZ,MAAM,CAAC,GAAG,CAAC,CAAC;QACZ,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC9B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAChC,IAAI,KAAK,EAAE;YACT,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACvC,IAAI,MAAA,aAAa,CAAC,UAAU,0CAAE,KAAK,EAAE;gBACnC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aACpF;YACD,MAAM,KAAK,GAAG,MAAA,aAAa,CAAC,UAAU,0CAAE,KAAK,CAAC;YAC9C,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,MAAC,KAAa,CAAC,SAAS,CAAC,OAAO,mCAAI,CAAC,CAAC,CAAC;YACvE,IAAI,KAAK,IAAK,KAAa,CAAC,aAAa,IAAK,KAAa,CAAC,SAAS,EAAE;gBACrE,MAAM,GAAG,GAAI,KAAa,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,EAAE;oBAC9C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;iBAClD;aACF;iBAAM;gBACL,OAAO,CAAC,SAAS,GAAG,WAAW,CAC7B,OAAO,EACP,KAAK,EACL;oBACE,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,EAAE;iBAC5D,EACD,CAAC,EACD,CAAC,CACF,CAAC;gBACF,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;aACvC;SACF;IACH,CAAC;IAED,SAAS,CAAC,aAA6B,EAAE,UAAwB;QAC/D,OAAO;IACT,CAAC;CACF,CAAA;AAndY,uBAAuB;IADnC,UAAU,EAAE;IAqBR,WAAA,WAAW,CAAC,aAAa,CAAC,CAAA;IAG1B,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;IAC5B,WAAA,KAAK,CAAC,mBAAmB,CAAC,CAAA;;GAxBlB,uBAAuB,CAmdnC;SAndY,uBAAuB","file":"draw-contribution.js","sourcesContent":["import { injectable, inject, named, multiInject } from '../../../common/inversify-lite';\nimport type {\n  IContext2d,\n  MaybePromise,\n  IGraphic,\n  IGroup,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IContributionProvider,\n  IDrawItemInterceptorContribution,\n  IDrawContribution,\n  IGlobal\n} from '../../../interface';\nimport { findNextGraphic, foreach } from '../../../common/sort';\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { DefaultAttribute } from '../../../graphic/config';\nimport type { IAABBBounds, IBounds, IMatrix } from '@visactor/vutils';\nimport { Bounds, Logger, getRectIntersect, isArray, isRectIntersect } from '@visactor/vutils';\nimport { container } from '../../../container';\nimport { GraphicRender, IncrementalDrawContribution } from './symbol';\nimport { DrawItemInterceptor } from './draw-interceptor';\nimport { createColor } from '../../../common/canvas-utils';\nimport type { ILayerService } from '../../../interface/core';\nimport { boundsAllocate } from '../../../allocator/bounds-allocate';\nimport { matrixAllocate } from '../../../allocator/matrix-allocate';\nimport { application } from '../../../application';\n\n/**\n * 默认的渲染contribution，基于树状结构针对图元的渲染\n */\n@injectable()\nexport class DefaultDrawContribution implements IDrawContribution {\n  declare currentRenderMap: Map<number, IGraphicRender>;\n  declare defaultRenderMap: Map<number, IGraphicRender>;\n  declare styleRenderMap: Map<string, Map<number, IGraphicRender>>;\n  declare dirtyBounds: IBounds;\n  declare backupDirtyBounds: IBounds;\n  // 是否使用dirtyBounds\n  declare useDirtyBounds: boolean;\n  declare currentRenderService: IRenderService;\n  declare InterceptorContributions: IDrawItemInterceptorContribution[];\n\n  declare global: IGlobal;\n  declare layerService: ILayerService;\n\n  declare scrollMatrix?: IMatrix;\n\n  constructor(\n    // @inject(ContributionProvider)\n    // @named(GraphicRender)\n    // protected readonly contributions: ContributionProvider<IGraphicRender>,\n    @multiInject(GraphicRender) protected readonly contributions: IGraphicRender[],\n    // @inject(RenderSelector) protected readonly renderSelector: IRenderSelector, // 根据图元类型选择对应的renderItem进行渲染\n    // 拦截器\n    @inject(ContributionProvider)\n    @named(DrawItemInterceptor)\n    protected readonly drawItemInterceptorContributions: IContributionProvider<IDrawItemInterceptorContribution>\n  ) {\n    this.currentRenderMap = new Map();\n    this.defaultRenderMap = new Map();\n    this.styleRenderMap = new Map();\n    this.dirtyBounds = new Bounds();\n    this.backupDirtyBounds = new Bounds();\n    this.global = application.global;\n    this.layerService = application.layerService;\n    if (!isArray(this.contributions)) {\n      this.contributions = [this.contributions];\n    }\n    this.init();\n  }\n\n  reInit() {\n    this.init();\n    this.contributions.forEach(item => {\n      item.reInit();\n    });\n  }\n\n  init() {\n    this.contributions.forEach(item => {\n      if (item.style) {\n        const map = this.styleRenderMap.get(item.style) || new Map();\n        map.set(item.numberType, item);\n        this.styleRenderMap.set(item.style, map);\n      } else {\n        this.defaultRenderMap.set(item.numberType, item);\n      }\n    });\n    this.InterceptorContributions = this.drawItemInterceptorContributions\n      .getContributions()\n      .sort((a, b) => a.order - b.order);\n  }\n\n  prepareForDraw(renderService: IRenderService, drawContext: IDrawContext) {\n    // 有dirtyBounds用dirtyBounds\n    if (drawContext.updateBounds) {\n      this.useDirtyBounds = true;\n    } else {\n      // 没有的话，看看是否需要跳过outRange的渲染\n      this.useDirtyBounds = !drawContext.stage.params.optimize.disableCheckGraphicWidthOutRange;\n    }\n  }\n\n  draw(renderService: IRenderService, drawContext: IDrawContext): MaybePromise<void> {\n    this.prepareForDraw(renderService, drawContext);\n    drawContext.drawContribution = this;\n    this.currentRenderMap = this.styleRenderMap.get(drawContext.renderStyle) || this.defaultRenderMap;\n    // this.startAtId = drawParams.startAtId;\n    this.currentRenderService = renderService;\n    // this.drawParams = drawParams;\n    const { context, stage, viewBox, transMatrix } = drawContext;\n\n    if (!context) {\n      return;\n    }\n    // if (context.drawPromise) {\n    //   return;\n    // }\n    const dirtyBounds: IBounds | undefined = this.dirtyBounds.setValue(0, 0, viewBox.width(), viewBox.height());\n    if (stage.dirtyBounds && !stage.dirtyBounds.empty()) {\n      const b = getRectIntersect(dirtyBounds, stage.dirtyBounds, false);\n      dirtyBounds.x1 = Math.floor(b.x1);\n      dirtyBounds.y1 = Math.floor(b.y1);\n      dirtyBounds.x2 = Math.ceil(b.x2);\n      dirtyBounds.y2 = Math.ceil(b.y2);\n    }\n    // 如果dpr不是整数或者.5的小数，需要格式化dirtyBounds\n    const d = context.dpr % 1;\n    if (d || d !== 0.5) {\n      dirtyBounds.x1 = Math.floor(dirtyBounds.x1 * context.dpr) / context.dpr;\n      dirtyBounds.y1 = Math.floor(dirtyBounds.y1 * context.dpr) / context.dpr;\n      dirtyBounds.x2 = Math.ceil(dirtyBounds.x2 * context.dpr) / context.dpr;\n      dirtyBounds.y2 = Math.ceil(dirtyBounds.y2 * context.dpr) / context.dpr;\n    }\n    this.backupDirtyBounds.copy(dirtyBounds);\n    // TODO：不需要设置context.transform，后续translate会设置\n    context.reset(false);\n    context.save();\n    context.setClearMatrix(transMatrix.a, transMatrix.b, transMatrix.c, transMatrix.d, transMatrix.e, transMatrix.f);\n    // 初始化context\n    context.clearMatrix(false);\n    // context.setTransformForCurrent(true);\n\n    // const drawInArea =\n    //   dirtyBounds.width() * context.dpr < context.canvas.width ||\n    //   dirtyBounds.height() * context.dpr < context.canvas.height;\n    // context.save();\n\n    // 设置translate\n    context.translate(viewBox.x1, viewBox.y1, true);\n    context.beginPath();\n    context.rect(dirtyBounds.x1, dirtyBounds.y1, dirtyBounds.width(), dirtyBounds.height());\n    context.clip();\n\n    // 如果存在3d视角，那么不使用dirtyBounds\n    if (stage.camera) {\n      this.dirtyBounds.setValue(-Infinity, -Infinity, Infinity, Infinity);\n      this.backupDirtyBounds.setValue(-Infinity, -Infinity, Infinity, Infinity);\n    }\n\n    this.clearScreen(renderService, context, drawContext);\n    if (renderService.drawParams?.stage) {\n      renderService.drawParams.stage.hooks.afterClearScreen.call(renderService.drawParams);\n    }\n    // // 渲染的时候图元的起始位置就是x，y\n    // this.backupDirtyBounds.translate(-x, -y);\n    // this.dirtyBounds.translate(-x, -y);\n\n    // // 设置translate\n    // context.translate(x, y, true);\n\n    // context.save();\n    renderService.renderTreeRoots\n      .sort((a, b) => {\n        return (a.attribute.zIndex ?? DefaultAttribute.zIndex) - (b.attribute.zIndex ?? DefaultAttribute.zIndex);\n      })\n      .forEach(group => {\n        group.isContainer\n          ? this.renderGroup(group as IGroup, drawContext, matrixAllocate.allocate(1, 0, 0, 1, 0, 0))\n          : this.renderItem(group as IGraphic, drawContext);\n      });\n\n    // context.restore();\n    // context.restore();\n    // context.setClearMatrix(1, 0, 0, 1, 0, 0);\n    // this.break = false;\n    // context.inuse = false;\n    context.restore();\n    context.draw();\n  }\n\n  doRegister() {\n    throw new Error('暂不支持');\n  }\n\n  // 找到下一个graphic\n  protected _findNextGraphic(group: IGroup): IGraphic | null {\n    let parent = group.parent;\n    let id = group._uid;\n    while (parent) {\n      const g = findNextGraphic(parent, id, DefaultAttribute.zIndex);\n      if (g) {\n        return g;\n      }\n      id = parent._uid;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  renderGroup(group: IGroup, drawContext: IDrawContext, parentMatrix: IMatrix, skipSort?: boolean) {\n    if (drawContext.break || group.attribute.visibleAll === false) {\n      return;\n    }\n    if (group.incremental && (drawContext.startAtId == null || drawContext.startAtId === group._uid)) {\n      drawContext.break = true;\n      this._increaseRender(group, drawContext);\n      return;\n    }\n\n    if (\n      this.useDirtyBounds &&\n      !isRectIntersect(group.AABBBounds, this.dirtyBounds, false) &&\n      group.attribute.boundsMode !== 'empty'\n    ) {\n      return;\n    }\n\n    let nextM: IMatrix = parentMatrix;\n    let tempBounds: IBounds;\n\n    if (this.useDirtyBounds) {\n      tempBounds = boundsAllocate.allocateByObj(this.dirtyBounds);\n      // 变换dirtyBounds\n      const gm = group.transMatrix;\n      nextM = matrixAllocate.allocateByObj(parentMatrix).multiply(gm.a, gm.b, gm.c, gm.d, gm.e, gm.f);\n      // const m = group.globalTransMatrix.getInverse();\n      this.dirtyBounds.copy(this.backupDirtyBounds).transformWithMatrix(nextM.getInverse());\n    }\n\n    drawContext.isGroupScroll = !!(group.attribute.scrollX || group.attribute.scrollY);\n\n    this.renderItem(group, drawContext, {\n      renderInGroupParams: {\n        skipSort,\n        nextM\n      },\n      renderInGroup: this._renderInGroup\n    });\n\n    if (this.useDirtyBounds) {\n      this.dirtyBounds.copy(tempBounds);\n      boundsAllocate.free(tempBounds);\n      matrixAllocate.free(nextM);\n    }\n  }\n\n  _renderInGroup = (skipSort: boolean, group: IGroup, drawContext: IDrawContext, nextM: IMatrix) => {\n    skipSort\n      ? group.forEachChildren((item: IGraphic) => {\n          if (drawContext.break) {\n            return;\n          }\n          if (item.isContainer) {\n            this.renderGroup(item as IGroup, drawContext, nextM);\n          } else {\n            this.renderItem(item, drawContext);\n          }\n        })\n      : foreach(\n          group,\n          DefaultAttribute.zIndex,\n          (item: IGraphic) => {\n            if (drawContext.break) {\n              return;\n            }\n            if (item.isContainer) {\n              this.renderGroup(item as IGroup, drawContext, nextM);\n            } else {\n              this.renderItem(item, drawContext);\n            }\n          },\n          false,\n          !!drawContext.context?.camera\n        );\n  };\n\n  protected _increaseRender(group: IGroup, drawContext: IDrawContext) {\n    const { layer, stage } = drawContext;\n    const { subLayers } = layer;\n    // 获取渐进渲染层\n    let incrementalLayer = subLayers.get(group._uid);\n    if (!incrementalLayer) {\n      incrementalLayer = {\n        layer: this.layerService.createLayer(stage),\n        zIndex: subLayers.size,\n        group\n      };\n      subLayers.set(group._uid, incrementalLayer);\n    }\n    // 渲染\n    const incrementalContext = incrementalLayer.layer.getNativeHandler().getContext();\n    const idc = incrementalLayer.drawContribution || container.get(IncrementalDrawContribution);\n    idc.dirtyBounds.setValue(-Infinity, -Infinity, Infinity, Infinity);\n    idc.backupDirtyBounds.setValue(-Infinity, -Infinity, Infinity, Infinity);\n    (idc as any).draw(this.currentRenderService, {\n      ...drawContext,\n      drawContribution: idc,\n      clear: 'transparent',\n      layer: incrementalLayer.layer,\n      context: incrementalContext,\n      startAtId: group._uid,\n      break: false\n    });\n    incrementalLayer.drawContribution = idc;\n    // this.draw(this.currentRenderService, {...this.drawParams, startAtId: group._uid})\n    // this.draw(this.currentRenderService, {...this.drawParams, clear: 'transparent', layer: incrementalContext.layer, context: incrementalContext, startAtId: group._uid})\n    const nextGraphic = this._findNextGraphic(group);\n    if (nextGraphic) {\n      // 如果是下一个渐进渲染层，那就再来一次\n      if (nextGraphic.isContainer && nextGraphic.incremental) {\n        this._increaseRender(nextGraphic as IGroup, drawContext);\n      } else {\n        // 如果不是渐进渲染层，那就默认图层渲染\n        let afterLayer = subLayers.get(nextGraphic._uid);\n        if (!afterLayer) {\n          afterLayer = {\n            layer: this.layerService.createLayer(stage),\n            zIndex: subLayers.size\n          };\n          subLayers.set(nextGraphic._uid, afterLayer);\n        }\n        const afterContext = afterLayer.layer.getNativeHandler().getContext();\n        this.draw(this.currentRenderService, {\n          ...drawContext,\n          drawContribution: idc,\n          clear: 'transparent',\n          layer: afterLayer.layer,\n          context: afterContext,\n          startAtId: nextGraphic._uid,\n          break: false\n        });\n      }\n    }\n  }\n\n  getRenderContribution(graphic: IGraphic): IGraphicRender | null {\n    let renderer;\n    if (!renderer) {\n      renderer = this.selectRenderByNumberType(graphic.numberType, graphic);\n    }\n    if (!renderer) {\n      renderer = this.selectRenderByType(graphic.type);\n    }\n    return renderer;\n  }\n\n  renderItem(graphic: IGraphic, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    // 添加拦截器\n    if (this.InterceptorContributions.length) {\n      for (let i = 0; i < this.InterceptorContributions.length; i++) {\n        const drawContribution = this.InterceptorContributions[i];\n        if (\n          drawContribution.beforeDrawItem &&\n          drawContribution.beforeDrawItem(graphic, this.currentRenderService, drawContext, this, params)\n        ) {\n          return;\n        }\n      }\n    }\n\n    const renderer = this.getRenderContribution(graphic);\n    if (!renderer) {\n      return;\n    }\n\n    let retrans: boolean = false;\n    let tempBounds: IBounds;\n\n    if (drawContext.isGroupScroll) {\n      const { scrollX = 0, scrollY = 0 } = graphic.parent.attribute;\n      retrans = true;\n      if (!this.scrollMatrix) {\n        this.scrollMatrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n      }\n      this.scrollMatrix.translate(-scrollX, -scrollY);\n    }\n    // if (graphic.parent) {\n    //   const { scrollX = 0, scrollY = 0 } = graphic.parent.attribute;\n    //   if (!!(scrollX || scrollY)) {\n    //     retrans = true;\n    //     if (!this.scrollMatrix) {\n    //       this.scrollMatrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n    //     }\n    //     this.scrollMatrix.translate(-scrollX, -scrollY);\n    //   }\n    // }\n    // 需要二次变化，那就重新算一个变换后的Bounds\n    if (retrans) {\n      tempBounds = this.dirtyBounds.clone().transformWithMatrix(this.scrollMatrix);\n    }\n\n    if (\n      this.useDirtyBounds &&\n      !(\n        graphic.isContainer ||\n        graphic.attribute.boundsMode === 'empty' ||\n        isRectIntersect(graphic.AABBBounds, tempBounds ?? this.dirtyBounds, false)\n      )\n    ) {\n      if (retrans && graphic.parent) {\n        const { scrollX = 0, scrollY = 0 } = graphic.parent.attribute;\n        this.scrollMatrix && this.scrollMatrix.translate(scrollX, scrollY);\n      }\n      return;\n    }\n\n    const skipDraw = drawContext.startAtId != null && graphic._uid !== drawContext.startAtId;\n    if (graphic._uid === drawContext.startAtId) {\n      drawContext.startAtId = null;\n    }\n    params && (params.skipDraw = skipDraw);\n    if (skipDraw) {\n      graphic.isContainer && renderer.draw(graphic, this.currentRenderService, drawContext, params);\n    } else {\n      renderer.draw(graphic, this.currentRenderService, drawContext, params);\n    }\n\n    // retrans && this.dirtyBounds.copy(tempBounds);\n    if (retrans && graphic.parent) {\n      const { scrollX = 0, scrollY = 0 } = graphic.parent.attribute;\n      this.scrollMatrix && this.scrollMatrix.translate(scrollX, scrollY);\n    }\n\n    // 添加拦截器\n    if (this.InterceptorContributions.length) {\n      for (let i = 0; i < this.InterceptorContributions.length; i++) {\n        const drawContribution = this.InterceptorContributions[i];\n        if (drawContribution.afterDrawItem) {\n          if (drawContribution.afterDrawItem(graphic, this.currentRenderService, drawContext, this)) {\n            return;\n          }\n        }\n      }\n    }\n  }\n  // 根据type选择对应的render\n  protected selectRenderByType(type?: string): IGraphicRender | null {\n    Logger.getInstance().warn('未知错误，不应该走到这里');\n    return null;\n  }\n  // 根据type选择对应的render\n  protected selectRenderByNumberType(type: number, graphic: IGraphic): IGraphicRender | null {\n    let data;\n    if (graphic.attribute.renderStyle) {\n      const currentRenderMap = this.styleRenderMap.get(graphic.attribute.renderStyle);\n      data = currentRenderMap && currentRenderMap.get(type);\n    }\n    return data || this.currentRenderMap.get(type) || this.defaultRenderMap.get(type);\n  }\n\n  protected clearScreen(renderService: IRenderService, context: IContext2d, drawContext: IDrawContext) {\n    const { clear, viewBox } = drawContext;\n    // 已经translate过了\n    const x = 0;\n    const y = 0;\n    const width = viewBox.width();\n    const height = viewBox.height();\n    if (clear) {\n      context.clearRect(x, y, width, height);\n      if (renderService.drawParams?.stage) {\n        renderService.drawParams.stage.hooks.afterClearRect.call(renderService.drawParams);\n      }\n      const stage = renderService.drawParams?.stage;\n      stage && (context.globalAlpha = (stage as any).attribute.opacity ?? 1);\n      if (stage && (stage as any).backgroundImg && (stage as any).resources) {\n        const res = (stage as any).resources.get(clear);\n        if (res && res.state === 'success' && res.data) {\n          context.drawImage(res.data, x, y, width, height);\n        }\n      } else {\n        context.fillStyle = createColor(\n          context,\n          clear,\n          {\n            AABBBounds: { x1: x, y1: y, x2: x + width, y2: y + height }\n          },\n          0,\n          0\n        );\n        context.fillRect(x, y, width, height);\n      }\n    }\n  }\n\n  afterDraw(renderService: IRenderService, drawParams: IDrawContext) {\n    return;\n  }\n}\n"]}