{"version":3,"sources":["../src/render/contributions/render/glyph-module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AAEtD,IAAI,eAAe,GAAG,KAAK,CAAC;AAC5B,MAAM,CAAC,MAAM,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;IACpD,IAAI,eAAe,EAAE;QACnB,OAAO;KACR;IACD,eAAe,GAAG,IAAI,CAAC;IAEvB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAClE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC","file":"glyph-module.js","sourcesContent":["import { ContainerModule } from '../../../common/inversify';\nimport { DefaultCanvasGlyphRender } from './glyph-render';\nimport { GlyphRender, GraphicRender } from './symbol';\n\nlet loadGlyphModule = false;\nexport const glyphModule = new ContainerModule(bind => {\n  if (loadGlyphModule) {\n    return;\n  }\n  loadGlyphModule = true;\n  // glyph渲染器\n  bind(GlyphRender).to(DefaultCanvasGlyphRender).inSingletonScope();\n  bind(GraphicRender).toService(GlyphRender);\n});\n"]}