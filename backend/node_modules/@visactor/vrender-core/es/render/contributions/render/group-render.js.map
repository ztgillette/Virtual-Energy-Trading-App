{"version":3,"sources":["../src/render/contributions/render/group-render.ts"],"names":[],"mappings":"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","file":"group-render.js","sourcesContent":["import { inject, injectable, named } from '../../../common/inversify-lite';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IGroup,\n  IMarkAttribute,\n  IThemeAttribute,\n  IGroupRenderContribution,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IContributionProvider,\n  IGroupGraphicAttribute\n} from '../../../interface';\nimport { getTheme } from '../../../graphic/theme';\nimport { getModelMatrix } from '../../../graphic/graphic-service/graphic-service';\nimport { isArray } from '@visactor/vutils';\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { createRectPath } from '../../../common/shape/rect';\nimport { rectFillVisible, rectStrokeVisible, runFill, runStroke } from './utils';\nimport { GroupRenderContribution } from './contributions/constants';\nimport { mat4Allocate } from '../../../allocator/matrix-allocate';\nimport { GROUP_NUMBER_TYPE } from '../../../graphic/constants';\nimport { BaseRenderContributionTime } from '../../../common/enums';\nimport { defaultGroupBackgroundRenderContribution } from './contributions';\nimport { multiplyMat4Mat4 } from '../../../common/matrix';\nimport { application } from '../../../application';\n\n@injectable()\nexport class DefaultCanvasGroupRender implements IGraphicRender {\n  type: 'group';\n  numberType: number = GROUP_NUMBER_TYPE;\n\n  _groupRenderContribitions: IGroupRenderContribution[];\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(GroupRenderContribution)\n    protected readonly groupRenderContribitions: IContributionProvider<IGroupRenderContribution>\n  ) {}\n\n  reInit() {\n    this._groupRenderContribitions = this.groupRenderContribitions.getContributions() || [];\n    this._groupRenderContribitions.push(defaultGroupBackgroundRenderContribution);\n  }\n\n  drawShape(\n    group: IGroup,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    groupAttribute?: Required<IGroupGraphicAttribute>\n  ) {\n    // 提前判定，否则每次都要获取一堆属性\n    const { clip, fill, stroke, background } = group.attribute;\n\n    if (!(clip || fill || stroke || background)) {\n      return;\n    }\n\n    groupAttribute = groupAttribute ?? getTheme(group, params?.theme).group;\n\n    const {\n      opacity = groupAttribute.opacity,\n      width = groupAttribute.width,\n      height = groupAttribute.height,\n      fillOpacity = groupAttribute.fillOpacity,\n      strokeOpacity = groupAttribute.strokeOpacity,\n      cornerRadius = groupAttribute.cornerRadius,\n      path = groupAttribute.path,\n      lineWidth = groupAttribute.lineWidth,\n      visible = groupAttribute.visible,\n      fillStrokeOrder = groupAttribute.fillStrokeOrder,\n      cornerType = groupAttribute.cornerType,\n      x: originX = groupAttribute.x,\n      y: originY = groupAttribute.y\n    } = group.attribute;\n\n    // 不绘制或者透明\n    const fVisible = rectFillVisible(opacity, fillOpacity, width, height, fill);\n    const sVisible = rectStrokeVisible(opacity, strokeOpacity, width, height);\n    const doFill = runFill(fill, background);\n    const doStroke = runStroke(stroke, lineWidth);\n\n    if (!(group.valid && visible)) {\n      return;\n    }\n\n    if (!clip) {\n      if (!(doFill || doStroke)) {\n        return;\n      }\n\n      // 如果存在fillCb和strokeCb，那就不直接跳过\n      if (!(fVisible || sVisible || fillCb || strokeCb || background)) {\n        return;\n      }\n    }\n\n    if (path && path.length && drawContext.drawContribution) {\n      // 禁用fill和stroke\n      const disableFill = context.disableFill;\n      const disableStroke = context.disableStroke;\n      const disableBeginPath = context.disableBeginPath;\n      context.disableFill = true;\n      context.disableStroke = true;\n      context.disableBeginPath = true;\n      path.forEach(g => {\n        const rc = drawContext.drawContribution.getRenderContribution(g);\n        rc.draw(g, drawContext.renderService, drawContext, params);\n      });\n      context.disableFill = disableFill;\n      context.disableStroke = disableStroke;\n      context.disableBeginPath = disableBeginPath;\n    } else if (cornerRadius === 0 || (isArray(cornerRadius) && (<number[]>cornerRadius).every(num => num === 0))) {\n      // 不需要处理圆角\n      context.beginPath();\n      context.rect(x, y, width, height);\n    } else {\n      context.beginPath();\n      // 测试后，cache对于重绘性能提升不大，但是在首屏有一定性能损耗，因此rect不再使用cache\n      createRectPath(context, x, y, width, height, cornerRadius, cornerType !== 'bevel');\n    }\n\n    if (!this._groupRenderContribitions) {\n      this._groupRenderContribitions = this.groupRenderContribitions.getContributions() || [];\n      this._groupRenderContribitions.push(defaultGroupBackgroundRenderContribution);\n    }\n\n    const doFillOrStroke = {\n      doFill,\n      doStroke\n    };\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(group, group.attribute, groupAttribute);\n\n    this._groupRenderContribitions.forEach(c => {\n      if (c.time === BaseRenderContributionTime.beforeFillStroke) {\n        // c.useStyle && context.setCommonStyle(group, group.attribute, x, y, groupAttribute);\n        c.drawShape(\n          group,\n          context,\n          x,\n          y,\n          doFill,\n          doStroke,\n          fVisible,\n          sVisible,\n          groupAttribute,\n          drawContext,\n          fillCb,\n          strokeCb,\n          doFillOrStroke\n        );\n      }\n    });\n\n    // beforeFillStroke contribition可以操作clip范围\n    if (clip) {\n      context.clip();\n    }\n\n    const _runFill = () => {\n      if ((doFillOrStroke as any).doFill) {\n        if (fillCb) {\n          fillCb(context, group.attribute, groupAttribute);\n        } else if (fVisible) {\n          context.setCommonStyle(group, group.attribute, originX - x, originY - y, groupAttribute);\n          context.fill();\n        }\n      }\n    };\n\n    const _runStroke = () => {\n      if ((doFillOrStroke as any).doStroke) {\n        if (strokeCb) {\n          strokeCb(context, group.attribute, groupAttribute);\n        } else if (sVisible) {\n          context.setStrokeStyle(group, group.attribute, originX - x, originY - y, groupAttribute);\n          context.stroke();\n        }\n      }\n    };\n\n    if (!fillStrokeOrder) {\n      _runFill();\n      _runStroke();\n    } else {\n      _runStroke();\n      _runFill();\n    }\n\n    this._groupRenderContribitions.forEach(c => {\n      if (c.time === BaseRenderContributionTime.afterFillStroke) {\n        // c.useStyle && context.setCommonStyle(group, group.attribute, x, y, groupAttribute);\n        c.drawShape(\n          group,\n          context,\n          x,\n          y,\n          doFill,\n          doStroke,\n          fVisible,\n          sVisible,\n          groupAttribute,\n          drawContext,\n          fillCb,\n          strokeCb\n        );\n      }\n    });\n  }\n\n  draw(group: IGroup, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const { context } = drawContext;\n    if (!context) {\n      return;\n    }\n\n    const { clip, baseOpacity = 1, drawMode } = group.attribute;\n    const lastNativeContext = context.nativeContext;\n    const lastNativeCanvas = context.canvas.nativeCanvas;\n\n    if (drawMode > 0) {\n      const { x, y, width, height } = group.attribute;\n      // 绘制到新的Canvas上，然后再绘制回来\n      const canvas = context.canvas;\n      const newCanvas = application.global.createCanvas({ width: canvas.width, height: canvas.height, dpr: 1 });\n      const newContext = newCanvas.getContext('2d');\n      const transform = context.nativeContext.getTransform();\n      // 首先应用transform\n      newContext.setTransform(transform.a, transform.b, transform.c, transform.d, transform.e, transform.f);\n      // 然后将背景绘制到新的canvas上，只绘制group的Bounds区域\n      // 如果drawMode === 1，则需要背景\n      // 如果drawMode === 2，则不需要背景，只需要group即可\n      if (drawMode === 1) {\n        newContext.save();\n        newContext.clearRect(0, 0, canvas.width, canvas.height);\n        newContext.beginPath();\n\n        newContext.rect(x, y, width, height);\n        newContext.clip();\n        newContext.drawImage(\n          canvas.nativeCanvas,\n          0,\n          0,\n          canvas.width,\n          canvas.height,\n          0,\n          0,\n          canvas.displayWidth,\n          canvas.displayHeight\n        );\n        newContext.restore();\n      }\n      // 狸猫换太子，把新的context赋值给context\n      context.nativeContext = newContext;\n      canvas.nativeCanvas = newCanvas;\n    }\n    if (clip) {\n      context.save();\n    } else {\n      context.highPerformanceSave();\n    }\n    const baseGlobalAlpha = context.baseGlobalAlpha;\n    context.baseGlobalAlpha *= baseOpacity;\n\n    // const lastMatrix = context.modelMatrix;\n    // if (context.camera) {\n    //   const m = group.transMatrix;\n    //   const matrix = createMat4();\n    //   mat3Tomat4(matrix, m);\n    //   const lastModelMatrix = context.modelMatrix;\n    //   if (lastModelMatrix) {\n    //     if (matrix) {\n    //       const m = createMat4();\n    //       context.modelMatrix = multiplyMat4Mat4(m, lastModelMatrix, matrix);\n    //     }\n    //   } else {\n    //     context.modelMatrix = matrix;\n    //   }\n    // } else {\n    //   // group直接transform\n    //   context.transformFromMatrix(group.transMatrix, true);\n    // }\n    const lastModelMatrix = context.modelMatrix;\n    const camera = context.camera;\n    if (camera) {\n      const groupAttribute = getTheme(group, params?.theme).group;\n      const nextModelMatrix = mat4Allocate.allocate();\n      // 计算模型矩阵\n      const modelMatrix = mat4Allocate.allocate();\n      getModelMatrix(modelMatrix, group, groupAttribute);\n      if (lastModelMatrix) {\n        multiplyMat4Mat4(nextModelMatrix, lastModelMatrix, modelMatrix);\n      } else {\n        multiplyMat4Mat4(nextModelMatrix, nextModelMatrix, modelMatrix);\n      }\n      context.modelMatrix = nextModelMatrix;\n      mat4Allocate.free(modelMatrix);\n      context.setTransform(1, 0, 0, 1, 0, 0, true);\n    } else {\n      // group直接transform\n      context.transformFromMatrix(group.transMatrix, true);\n    }\n\n    context.beginPath();\n    // 如果跳过绘制，那就不绘制\n    if (params.skipDraw) {\n      this.drawShape(\n        group,\n        context,\n        0,\n        0,\n        drawContext,\n        params,\n        () => false,\n        () => false\n      );\n    } else {\n      this.drawShape(group, context, 0, 0, drawContext, null, null, null);\n    }\n\n    // 绘制子元素的时候要添加scroll\n    const { scrollX, scrollY } = group.attribute;\n    if (scrollX || scrollY) {\n      context.translate(scrollX, scrollY);\n    }\n    let p: any;\n    if (params && params.renderInGroup) {\n      p = params.renderInGroup(\n        params.renderInGroupParams?.skipSort,\n        group,\n        drawContext,\n        params.renderInGroupParams?.nextM\n      );\n    }\n\n    if (context.modelMatrix !== lastModelMatrix) {\n      mat4Allocate.free(context.modelMatrix);\n    }\n    context.modelMatrix = lastModelMatrix;\n\n    context.baseGlobalAlpha = baseGlobalAlpha;\n\n    if (drawMode > 0) {\n      const { x, y, width, height } = group.attribute;\n      // 将原始的context和canvas恢复，另外将newCanvas上的内容绘制到lastCanvas上\n      const newContext = context.nativeContext;\n      const newCanvas = context.canvas.nativeCanvas;\n      lastNativeContext.save();\n      lastNativeContext.setTransform(context.dpr, 0, 0, context.dpr, 0, 0, true);\n      // 如果drawMode === 1，则需要清一下之前的背景，否则背景就重复绘制了一次\n      if (drawMode === 1) {\n        newContext.rect(x, y, width, height);\n      }\n      lastNativeContext.drawImage(\n        newCanvas,\n        0,\n        0,\n        newCanvas.width,\n        newCanvas.height,\n        0,\n        0,\n        context.canvas.displayWidth,\n        context.canvas.displayHeight\n      );\n      const transform = newContext.getTransform();\n      lastNativeContext.setTransform(transform.a, transform.b, transform.c, transform.d, transform.e, transform.f);\n      context.nativeContext = lastNativeContext;\n      context.canvas.nativeCanvas = lastNativeCanvas;\n      lastNativeContext.restore();\n    }\n\n    if (p && p.then) {\n      p.then(() => {\n        if (clip) {\n          context.restore();\n        } else {\n          context.highPerformanceRestore();\n        }\n      });\n    } else {\n      if (clip) {\n        context.restore();\n      } else {\n        context.highPerformanceRestore();\n      }\n    }\n  }\n}\n"]}