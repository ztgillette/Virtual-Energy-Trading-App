import type { ISymbolClass } from '../../interface';
export declare const builtinSymbols: (import("./circle").CircleSymbol | import("./cross").CrossSymbol | import("./diamond").DiamondSymbol | import("./square").SquareSymbol | import("./triangle-up").TriangleUpSymbol | import("./star").StarSymbol | import("./arrow").ArrowSymbol | import("./wedge").WedgeSymbol | import("./stroke").StrokeSymbol | import("./wye").WyeSymbol | import("./triangle-left").TriangleLeftSymbol | import("./triangle-right").TriangleRightSymbol | import("./triangle-down").TriangleDownSymbol | import("./thin-triangle").ThinTriangleSymbol | import("./arrow2-left").Arrow2LeftSymbol | import("./arrow2-right").Arrow2RightSymbol | import("./arrow2-up").Arrow2UpSymbol | import("./arrow2-down").Arrow2DownSymbol | import("./line-v").LineVSymbol | import("./line-h").LineHSymbol | import("./close").CloseSymbol | import("./rect").RectSymbol)[];
export declare const builtinSymbolsMap: Record<string, ISymbolClass>;
export declare const builtInSymbolStrMap: Record<string, string>;
export * from './utils';
