import { BaseSymbol } from "./base";

export function arrow2Right(ctx, r, transX, transY) {
    const r2 = 2 * r;
    return ctx.moveTo(transX - r, transY - r2), ctx.lineTo(transX + r, transY), ctx.lineTo(transX - r, r2 + transY), 
    !0;
}

export class Arrow2RightSymbol extends BaseSymbol {
    constructor() {
        super(...arguments), this.type = "arrow2Right", this.pathStr = "M -0.25 -0.5 l 0.25 0 l -0.25 0.5";
    }
    draw(ctx, size, transX, transY) {
        return arrow2Right(ctx, this.parseSize(size) / 4, transX, transY);
    }
    drawOffset(ctx, size, transX, transY, offset) {
        return arrow2Right(ctx, this.parseSize(size) / 4 + offset, transX, transY);
    }
}

export default new Arrow2RightSymbol;
//# sourceMappingURL=arrow2-right.js.map
