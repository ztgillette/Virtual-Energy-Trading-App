{"version":3,"sources":["../src/graphic/shadow-root.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,UAAW,SAAQ,KAAK;IAInC,YAAY,OAAkB;QAC5B,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAJxB,SAAI,GAAgB,YAAY,CAAC;QAK/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEkB,mBAAmB;QACpC,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;SACvC;IACH,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;SACrC;IACH,CAAC;IAEQ,0BAA0B;QACjC,KAAK,CAAC,0BAA0B,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;SACrC;IACH,CAAC;IAIS,0BAA0B,CAAC,WAAoB,IAAI;QAC3D,IAAI,IAAI,CAAC,wBAAwB,EAAE,EAAE;YACnC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,QAAQ,IAAI,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACjD;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IACS,oBAAoB;QAC5B,IAAI,IAAI,CAAC,UAAU,EAAE;YAEnB,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;YACvD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAC9B,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf,CAAC;SACH;IACH,CAAC;IAGS,yBAAyB;QACjC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC7B,IAAI,CAAC,WAAW,CAAC,EAAE,EACnB,IAAI,CAAC,WAAW,CAAC,EAAE,EACnB,IAAI,CAAC,WAAW,CAAC,EAAE,EACnB,IAAI,CAAC,WAAW,CAAC,EAAE,CACpB,CAAC;SACH;QAGD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;SAC/E;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;CACF;AAED,MAAM,UAAU,gBAAgB,CAAC,OAAkB;IACjD,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AACjC,CAAC","file":"shadow-root.js","sourcesContent":["import type { IAABBBounds, Matrix } from '@visactor/vutils';\nimport type { GraphicType, IGraphic, IGroup } from '../interface';\nimport { Group } from './group';\n\nexport class ShadowRoot extends Group {\n  type: GraphicType = 'shadowroot';\n  declare shadowHost: IGraphic;\n\n  constructor(graphic?: IGraphic) {\n    super({ x: 0, y: 0 });\n    this.shadowHost = graphic;\n  }\n\n  protected override clearUpdateBoundTag(): void {\n    super.clearUpdateBoundTag();\n    if (this.shadowHost) {\n      this.shadowHost.clearUpdateBoundTag();\n    }\n  }\n\n  override addUpdateBoundTag() {\n    super.addUpdateBoundTag();\n\n    if (this.shadowHost) {\n      this.shadowHost.addUpdateBoundTag();\n    }\n  }\n\n  override addUpdateShapeAndBoundsTag() {\n    super.addUpdateShapeAndBoundsTag();\n    if (this.shadowHost) {\n      this.shadowHost.addUpdateBoundTag();\n    }\n  }\n\n  // 计算localMatrix不受影响\n  // 计算globalMatrix需要用到shadowHost的globalMatrix\n  protected tryUpdateGlobalTransMatrix(clearTag: boolean = true): Matrix {\n    if (this.shouldUpdateGlobalMatrix()) {\n      const m = this.transMatrix;\n      if (!this._globalTransMatrix) {\n        this._globalTransMatrix = m.clone();\n      } else {\n        this._globalTransMatrix.setValue(m.a, m.b, m.c, m.d, m.e, m.f);\n      }\n      this.doUpdateGlobalMatrix();\n      clearTag && this.clearUpdateGlobalPositionTag();\n    }\n    return this._globalTransMatrix;\n  }\n  protected doUpdateGlobalMatrix() {\n    if (this.shadowHost) {\n      // 基于shadowHost的matrix修改\n      const parentMatrix = this.shadowHost.globalTransMatrix;\n      this._globalTransMatrix.multiply(\n        parentMatrix.a,\n        parentMatrix.b,\n        parentMatrix.c,\n        parentMatrix.d,\n        parentMatrix.e,\n        parentMatrix.f\n      );\n    }\n  }\n  // 计算AABBBounds不受影响\n  // 计算globalAABBBounds\n  protected tryUpdateGlobalAABBBounds(): IAABBBounds {\n    if (!this._globalAABBBounds) {\n      this._globalAABBBounds = this._AABBBounds.clone();\n    } else {\n      this._globalAABBBounds.setValue(\n        this._AABBBounds.x1,\n        this._AABBBounds.y1,\n        this._AABBBounds.x2,\n        this._AABBBounds.y2\n      );\n    }\n    // 使用shadowHost的grloalAABBBounds\n    // todo: 考虑是否需要性能优化\n    if (this.shadowHost) {\n      this._globalAABBBounds.transformWithMatrix(this.shadowHost.globalTransMatrix);\n    }\n    return this._globalAABBBounds;\n  }\n}\n\nexport function createShadowRoot(graphic?: IGraphic): IGroup {\n  return new ShadowRoot(graphic);\n}\n"]}