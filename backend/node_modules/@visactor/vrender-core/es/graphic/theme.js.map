{"version":3,"sources":["../src/graphic/theme.ts"],"names":[],"mappings":"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","file":"theme.js","sourcesContent":["import { Logger } from '@visactor/vutils';\nimport type { IFullThemeSpec, IGraphic, IGroup, ITheme, IThemeSpec } from '../interface';\nimport {\n  DefaultArcAttribute,\n  DefaultAreaAttribute,\n  DefaultCircleAttribute,\n  DefaultGlyphAttribute,\n  DefaultGroupAttribute,\n  DefaultImageAttribute,\n  DefaultLineAttribute,\n  DefaultPathAttribute,\n  DefaultPolygonAttribute,\n  DefaultRectAttribute,\n  DefaultStarAttribute,\n  DefaultSymbolAttribute,\n  DefaultTextAttribute,\n  DefaultRichTextAttribute,\n  DefaultRichTextIconAttribute\n} from './config';\n\nconst defaultThemeObj = {\n  arc: DefaultArcAttribute,\n  area: DefaultAreaAttribute,\n  circle: DefaultCircleAttribute,\n  line: DefaultLineAttribute,\n  path: DefaultPathAttribute,\n  symbol: DefaultSymbolAttribute,\n  text: DefaultTextAttribute,\n  rect: DefaultRectAttribute,\n  polygon: DefaultPolygonAttribute,\n  star: DefaultStarAttribute,\n  richtext: DefaultRichTextAttribute,\n  richtextIcon: DefaultRichTextIconAttribute,\n  image: DefaultImageAttribute,\n  group: DefaultGroupAttribute,\n  glyph: DefaultGlyphAttribute\n};\n\nconst themeKeys = Object.keys(defaultThemeObj);\n\nexport function newThemeObj(): IFullThemeSpec {\n  return {\n    arc: Object.assign({}, defaultThemeObj.arc),\n    area: Object.assign({}, defaultThemeObj.area),\n    circle: Object.assign({}, defaultThemeObj.circle),\n    line: Object.assign({}, defaultThemeObj.line),\n    path: Object.assign({}, defaultThemeObj.path),\n    symbol: Object.assign({}, defaultThemeObj.symbol),\n    text: Object.assign({}, defaultThemeObj.text),\n    rect: Object.assign({}, defaultThemeObj.rect),\n    polygon: Object.assign({}, defaultThemeObj.polygon),\n    star: Object.assign({}, defaultThemeObj.star),\n    richtext: Object.assign({}, defaultThemeObj.richtext),\n    richtextIcon: Object.assign({}, defaultThemeObj.richtextIcon),\n    image: Object.assign({}, defaultThemeObj.image),\n    group: Object.assign({}, defaultThemeObj.group),\n    glyph: Object.assign({}, defaultThemeObj.glyph)\n  };\n}\n\n// /**\n//  * 将t合并到out中\n//  * @param out\n//  * @param t\n//  * @param rewrite 是否重写out的属性\n//  * @returns\n//  */\n// function combineTheme(out: IThemeSpec, t: IThemeSpec, rewrite: boolean = true) {\n//   if (!t) {\n//     return;\n//   }\n//   if (rewrite) {\n//     Object.keys(t).forEach(k => {\n//       if (out[k]) {\n//         Object.assign(out[k], t[k]);\n//       } else {\n//         out[k] = t[k];\n//       }\n//     });\n//   } else {\n//     Object.keys(t).forEach(k => {\n//       if (out[k]) {\n//         // Object.assign(out[k], t[k]);\n//         const outItem = out[k];\n//         const tItem = t[k];\n//         Object.keys(t[k]).forEach(kItem => {\n//           if (outItem[kItem] === undefined) {\n//             outItem[kItem] = tItem[kItem];\n//           }\n//         });\n//       } else {\n//         out[k] = t[k];\n//       }\n//     });\n//   }\n// }\n\nfunction combine(out: Record<string, any>, t: Record<string, any>) {\n  Object.keys(t).forEach(k => {\n    out[k] = t[k];\n  });\n}\n\nconst globalThemeObj = newThemeObj();\n\n// // 性能优化，没有修改的theme都使用这个\n// const defaultCommontTheme = newThemeObj();\n\n// function combineTheme(out: IThemeSpec, userTheme: IThemeSpec, defaultTheme: IFullThemeSpec) {\n\n// }\n\n// 优先级：\n// 1. userTheme\n// 2. commonTheme\n// 3. parentTheme\n// 4. defaultTheme\n\n// 使用原型链来保存主题，避免大量的merge操作\nexport class Theme implements ITheme {\n  // 当前的总theme，最终合并后的theme\n  combinedTheme: IFullThemeSpec;\n  // 记录累计应用的所有用户设置上的theme\n  userTheme?: IThemeSpec;\n\n  protected _defaultTheme: IFullThemeSpec;\n\n  dirty: boolean;\n\n  constructor() {\n    this.initTheme();\n    this.dirty = false;\n  }\n\n  initTheme() {\n    this._defaultTheme = {} as any;\n    themeKeys.forEach(key => {\n      (this._defaultTheme as any)[key] = Object.create((globalThemeObj as any)[key]);\n    });\n    this.combinedTheme = this._defaultTheme;\n  }\n\n  /**\n   * 获取group上应该有的主题配置\n   * @param group\n   * @returns\n   */\n  getTheme(group?: IGroup) {\n    if (!group) {\n      return this.combinedTheme;\n    }\n    if (!this.dirty) {\n      return this.combinedTheme;\n    }\n    let parentTheme = {};\n    const parentGroup = this.getParentWithTheme(group);\n    if (parentGroup) {\n      parentTheme = parentGroup.theme;\n    }\n    this.applyTheme(group, parentTheme);\n    return this.combinedTheme;\n  }\n\n  // 获取具有主题的parent\n  getParentWithTheme(group: IGroup) {\n    while (group.parent) {\n      group = group.parent;\n      if (group.theme) {\n        return group;\n      }\n    }\n    return null;\n  }\n\n  // 应用主题，从根节点一直触发到当前节点（如果上层节点需要的话）\n  applyTheme(group: IGroup, pt: IThemeSpec, force: boolean = false): IThemeSpec {\n    if (this.dirty) {\n      const parentGroup = this.getParentWithTheme(group);\n      if (parentGroup) {\n        const parentTheme = parentGroup.theme;\n        if (parentTheme.dirty || force) {\n          // 强制apply所有的上层\n          parentTheme.applyTheme(parentGroup, pt, true);\n        }\n      }\n      // 如果当前节点没有userTheme的话，直接复用上层的combinedTheme\n      // 或者直接用默认的theme\n      if (!this.userTheme) {\n        if (parentGroup) {\n          this.combinedTheme = parentGroup.theme.combinedTheme;\n        } else {\n          this.combinedTheme = this._defaultTheme;\n          Logger.getInstance().warn('未知错误，走到不应该走的区域里');\n        }\n        this.dirty = false;\n      } else {\n        this.doCombine(parentGroup && parentGroup.theme.combinedTheme);\n      }\n    }\n\n    return this.combinedTheme;\n  }\n\n  // 合并userTheme到combinedTheme\n  protected doCombine(parentCombinedTheme?: IThemeSpec) {\n    const userTheme = this.userTheme;\n    const combinedTheme = this.combinedTheme;\n\n    // 1. userTheme\n    // 2. combinedTheme\n    // 3. parentCombinedTheme\n    // 4. defaultTheme\n    themeKeys.forEach(k => {\n      // init defaultTheme\n      const obj = Object.create((globalThemeObj as any)[k]);\n      // merge parentCombinedTheme\n      if (parentCombinedTheme && (parentCombinedTheme as any)[k]) {\n        combine(obj, (parentCombinedTheme as any)[k]);\n      }\n      // merge combinedTheme\n      if ((combinedTheme as any)[k]) {\n        combine(obj, (combinedTheme as any)[k]);\n      }\n      // merge userTheme\n      if ((userTheme as any)[k]) {\n        combine(obj, (userTheme as any)[k]);\n      }\n      (this.combinedTheme as any)[k] = obj;\n    });\n    if (userTheme.common) {\n      themeKeys.forEach(k => {\n        combine((this.combinedTheme as any)[k], userTheme.common);\n      });\n    }\n    this.dirty = false;\n  }\n\n  setTheme(t: IThemeSpec, g: IGroup) {\n    // 设置自己的nextTheme\n    let userTheme = this.userTheme;\n    if (userTheme) {\n      Object.keys(t).forEach(k => {\n        if ((userTheme as any)[k]) {\n          Object.assign((userTheme as any)[k], (t as any)[k]);\n        } else {\n          // todo，这里调用次数不多，应该问题不大\n          (userTheme as any)[k] = Object.assign({}, (t as any)[k]);\n        }\n      });\n    } else {\n      userTheme = t;\n    }\n    this.userTheme = userTheme;\n    // 设置自己和子节点的theme都为dirty\n    this.dirty = true;\n    this.dirtyChildren(g);\n  }\n\n  resetTheme(t: IThemeSpec, g: IGroup) {\n    this.userTheme = t;\n    // 设置自己和子节点的theme都为dirty\n    this.dirty = true;\n    this.dirtyChildren(g);\n  }\n\n  dirtyChildren(g: IGroup) {\n    g.forEachChildren(item => {\n      if ((item as IGroup).isContainer) {\n        if ((item as IGroup).theme) {\n          (item as IGroup).theme.dirty = true;\n        }\n        this.dirtyChildren(item as IGroup);\n      }\n    });\n  }\n}\n\nexport const globalTheme = new Theme();\n\nexport function getTheme(graphic: IGraphic, theme?: IFullThemeSpec): IFullThemeSpec {\n  if (graphic.glyphHost) {\n    return getTheme(graphic.glyphHost);\n  }\n  if (theme) {\n    if (graphic.isContainer) {\n      // 暂时不支持Group\n      return theme;\n    }\n    return theme;\n  }\n\n  return (\n    getThemeFromGroup(graphic) ||\n    (graphic.attachedThemeGraphic && getTheme(graphic.attachedThemeGraphic as IGraphic)) ||\n    globalTheme.getTheme()\n  );\n}\n\nexport function getThemeFromGroup(graphic: IGraphic): IFullThemeSpec | null {\n  let g: IGroup;\n  if (graphic.isContainer) {\n    // 找到存在theme的group\n    g = graphic as IGroup;\n  } else {\n    g = graphic.parent;\n  }\n\n  if (g) {\n    while (g) {\n      if (g.theme) {\n        break;\n      }\n      g = g.parent;\n    }\n    if (!g) {\n      return globalTheme.getTheme();\n    }\n    if (!g.theme) {\n      g.createTheme();\n    }\n    return g.theme.getTheme(g as IGroup);\n  }\n  return null;\n}\n"]}