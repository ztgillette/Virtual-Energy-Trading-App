{"version":3,"sources":["../src/canvas/contributions/base-canvas.ts"],"names":[],"mappings":"AAEA,MAAM,aAAa,GAAG;IACpB,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,GAAG,EAAE,CAAC;CACP,CAAC;AAEF,MAAM,OAAgB,UAAU;IAoB9B,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;IACvC,CAAC;IAKD,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IACD,IAAI,CAAC,CAAC,EAAU;QACd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IACD,IAAI,CAAC,CAAC,EAAU;QACd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACD,IAAI,YAAY,CAAC,YAA+B;QAC9C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD,IAAI,MAAM,CAAC,MAAc;QACvB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;IACD,UAAU,CAAC,GAAY;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACD,IAAI,QAAQ,CAAC,QAAiB;QAC5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,IAAI,GAAG,CAAC,GAAW;QAEjB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAMD,YAAY,MAAwB;;QAClC,MAAM,EACJ,YAAY,EACZ,KAAK,GAAG,aAAa,CAAC,KAAK,EAC3B,MAAM,GAAG,aAAa,CAAC,MAAM,EAC7B,GAAG,GAAG,aAAa,CAAC,GAAG,EACvB,CAAC,EACD,CAAC,EACD,EAAE,EACF,eAAe,GAAG,IAAI,EACvB,GAAG,MAAM,CAAC;QACX,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,CAAC,aAAD,CAAC,cAAD,CAAC,GAAI,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,CAAC,aAAD,CAAC,cAAD,CAAC,GAAI,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,MAAM,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;QAGjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,MAAA,YAAY,CAAC,EAAE,mCAAI,EAAE,CAAC;QACjC,IAAI,EAAE,EAAE;YACN,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpB,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACD,IAAI;QACF,OAAO;IACT,CAAC;IACD,IAAI;QACF,OAAO;IACT,CAAC;IAID,aAAa;QACX,OAAO;IACT,CAAC;IAED,UAAU,CAAC,MAAiC;QAC1C,OAAO;IACT,CAAC;IAOD,MAAM,CAAC,KAAa,EAAE,MAAc;QAClC,OAAO;IACT,CAAC;IAKD,SAAS,CAAC,QAAiB,EAAE,OAAgB;QAC3C,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QACnD,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,aAAa,CAAC,OAAiF;QAC7F,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,qBAAqB;QACnB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,OAAO,CAAC,GAAG,MAAW;QACpB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACtG;IACH,CAAC;;AAjLM,cAAG,GAAY,SAAS,CAAC","file":"base-canvas.js","sourcesContent":["import type { CanvasConfigType, ICanvas, IContext2d, EnvType } from '../../interface';\n\nconst DefaultConfig = {\n  WIDTH: 500,\n  HEIGHT: 500,\n  DPR: 1\n};\n\nexport abstract class BaseCanvas implements ICanvas {\n  static env: EnvType = 'browser';\n  // 显示的宽高，如果是离屏canvas，就是pixelWidth / pixelRatio\n  protected _displayWidth: number; // 显示的宽度\n  protected _displayHeight: number; // 显示的高度\n  protected _id: number | string;\n  // 像素宽高\n  protected _pixelWidth: number; // 像素宽度\n  protected _pixelHeight: number; // 像素高度\n\n  protected _x: number;\n  protected _y: number;\n  protected _dpr: number;\n\n  protected _container?: HTMLElement | null;\n  protected _nativeCanvas: HTMLCanvasElement;\n  protected _context: IContext2d;\n  protected _visiable: boolean;\n  protected controled: boolean;\n\n  get displayWidth(): number {\n    return this._pixelWidth / this._dpr;\n  }\n\n  get displayHeight(): number {\n    return this._pixelHeight / this._dpr;\n  }\n  /**\n   * TODO\n   *  get\\set 方法看看是否可以删掉\n   */\n  get id(): number | string {\n    return this._id;\n  }\n  get x(): number {\n    return this._x;\n  }\n  set x(_x: number) {\n    this._x = _x;\n  }\n  get y(): number {\n    return this._y;\n  }\n  set y(_y: number) {\n    this._y = _y;\n  }\n  get nativeCanvas(): HTMLCanvasElement {\n    return this._nativeCanvas;\n  }\n  set nativeCanvas(nativeCanvas: HTMLCanvasElement) {\n    this._nativeCanvas = nativeCanvas;\n  }\n\n  get width(): number {\n    return this._pixelWidth;\n  }\n  set width(width: number) {\n    this._pixelWidth = width;\n    this._displayWidth = width / (this._dpr || 1);\n  }\n\n  get height(): number {\n    return this._pixelHeight;\n  }\n  set height(height: number) {\n    this._pixelHeight = height;\n    this._displayHeight = height / (this._dpr || 1);\n  }\n  getContext(str?: string): IContext2d {\n    return this._context;\n  }\n\n  get visiable(): boolean {\n    return this._visiable;\n  }\n  set visiable(visiable: boolean) {\n    this._visiable = visiable;\n    visiable ? this.show() : this.hide();\n  }\n\n  get dpr(): number {\n    return this._dpr;\n  }\n  set dpr(dpr: number) {\n    // this._lastPixelRatio = this._pixelRatio;\n    this._dpr = dpr;\n    this.resize(this._displayWidth, this._displayHeight);\n  }\n\n  /**\n   * 通过canvas生成一个wrap对象，初始化时不会再设置canvas的属性\n   * @param params\n   */\n  constructor(params: CanvasConfigType) {\n    const {\n      nativeCanvas,\n      width = DefaultConfig.WIDTH,\n      height = DefaultConfig.HEIGHT,\n      dpr = DefaultConfig.DPR,\n      x,\n      y,\n      id,\n      canvasControled = true\n    } = params;\n    const offsetX = 0;\n    const offsetY = 0;\n    this._x = x ?? offsetX;\n    this._y = y ?? offsetY;\n    this._pixelWidth = width * dpr;\n    this._pixelHeight = height * dpr;\n    this._visiable = params.visiable !== false;\n    this.controled = canvasControled;\n\n    // 离屏canvas\n    this._displayWidth = width;\n    this._displayHeight = height;\n    this._dpr = dpr;\n    this._nativeCanvas = nativeCanvas;\n    this._id = nativeCanvas.id ?? id;\n    if (id) {\n      nativeCanvas.id = id;\n    }\n\n    this.init(params);\n  }\n\n  getNativeCanvas(): HTMLCanvasElement {\n    return this._nativeCanvas;\n  }\n  hide() {\n    return;\n  }\n  show() {\n    return;\n  }\n\n  abstract init(params: CanvasConfigType): void;\n\n  applyPosition(): void {\n    return;\n  }\n\n  resetStyle(params: Partial<CanvasConfigType>): void {\n    return;\n  }\n\n  /**\n   * 设置canvas的size大小，设置context的scale\n   * @param width\n   * @param height\n   */\n  resize(width: number, height: number): void {\n    return;\n  }\n\n  toDataURL(): string;\n  toDataURL(mimeType: 'image/png'): string;\n  toDataURL(mimeType: 'image/jpeg', quality: number): string;\n  toDataURL(mimeType?: string, quality?: number) {\n    return '';\n  }\n\n  readPixels(x: number, y: number, w: number, h: number): ImageData | Promise<ImageData> {\n    return this._context.getImageData(x, y, w, h);\n  }\n\n  convertToBlob(options?: { type?: string | undefined; quality?: number | undefined } | undefined): Promise<Blob> {\n    throw new Error('暂未实现');\n  }\n\n  transferToImageBitmap(): ImageBitmap {\n    throw new Error('暂未实现');\n  }\n\n  release(...params: any): void {\n    if (this.controled) {\n      this._nativeCanvas.parentElement && this._nativeCanvas.parentElement.removeChild(this._nativeCanvas);\n    }\n  }\n}\n"]}