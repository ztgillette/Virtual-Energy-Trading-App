{"version":3,"sources":["../src/plugins/builtin-plugin/react-attribute-plugin.ts"],"names":[],"mappings":"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","file":"react-attribute-plugin.js","sourcesContent":["import { Generator } from '../../common/generator';\nimport type { IGraphic, IPlugin, IPluginService } from '../../interface';\nimport { application } from '../../application';\nimport { HtmlAttributePlugin } from './html-attribute-plugin';\nimport { isNil } from '@visactor/vutils';\nimport { Factory } from '../../factory';\n\nexport class ReactAttributePlugin extends HtmlAttributePlugin implements IPlugin {\n  name: 'ReactAttributePlugin' = 'ReactAttributePlugin';\n  activeEvent: 'onRegister' = 'onRegister';\n  declare pluginService: IPluginService;\n  _uid: number = Generator.GenAutoIncrementId();\n  key: string = this.name + this._uid;\n\n  htmlMap: Record<\n    string,\n    {\n      root?: any;\n      unmount?: () => void;\n      wrapContainer: HTMLElement;\n      nativeContainer: HTMLElement;\n      container: string | HTMLElement | null;\n      renderId: number;\n    }\n  > = {};\n\n  removeElement(id: string) {\n    if (!this.htmlMap || !this.htmlMap[id]) {\n      return;\n    }\n\n    const { root, wrapContainer, unmount } = this.htmlMap[id];\n\n    if (root) {\n      const raf = application.global.getRequestAnimationFrame();\n      raf(() => {\n        root.unmount();\n      });\n    } else if (unmount) {\n      unmount();\n    }\n\n    wrapContainer && application.global.removeDom(wrapContainer);\n\n    this.htmlMap[id] = null;\n  }\n\n  renderGraphicHTML(graphic: IGraphic) {\n    const { react } = graphic.attribute;\n    if (!react) {\n      return;\n    }\n    const stage = graphic.stage;\n    if (!stage) {\n      return;\n    }\n    const ReactDOM = stage.params.ReactDOM;\n    const { element, container } = react;\n    if (!(element && ReactDOM && (ReactDOM.createRoot || ReactDOM.render))) {\n      return;\n    }\n    const id = isNil(react.id) ? `${graphic.id ?? graphic._uid}_react` : react.id;\n\n    if (this.htmlMap && this.htmlMap[id] && container && container !== this.htmlMap[id].container) {\n      this.removeElement(id);\n    }\n\n    if (!this.htmlMap || !this.htmlMap[id]) {\n      // createa a wrapper contianer to be the root of react element\n      const { wrapContainer, nativeContainer } = this.getWrapContainer(stage, container);\n\n      if (wrapContainer) {\n        if (!this.htmlMap) {\n          this.htmlMap = {};\n        }\n        if (ReactDOM.createRoot) {\n          const root = ReactDOM.createRoot(wrapContainer);\n          root.render(element);\n\n          this.htmlMap[id] = { root, wrapContainer, nativeContainer, container, renderId: this.renderId };\n        } else {\n          ReactDOM.render(element, wrapContainer);\n\n          this.htmlMap[id] = {\n            wrapContainer,\n            nativeContainer,\n            container,\n            renderId: this.renderId,\n            unmount: () => {\n              ReactDOM.unmountComponentAtNode(wrapContainer);\n            }\n          };\n        }\n      }\n    } else {\n      // update react element\n      if (ReactDOM.createRoot) {\n        this.htmlMap[id].root.render(element);\n      } else {\n        ReactDOM.render(element, this.htmlMap[id].wrapContainer);\n      }\n    }\n\n    if (!this.htmlMap || !this.htmlMap[id]) {\n      return;\n    }\n\n    const { wrapContainer, nativeContainer } = this.htmlMap[id];\n\n    this.updateStyleOfWrapContainer(graphic, stage, wrapContainer, nativeContainer, react);\n    this.htmlMap[id].renderId = this.renderId;\n  }\n}\n\nexport const registerReactAttributePlugin = () => {\n  Factory.registerPlugin('ReactAttributePlugin', ReactAttributePlugin);\n};\n"]}