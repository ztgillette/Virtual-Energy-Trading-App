{"version":3,"sources":["../src/core/core-modules.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAC3E,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AACvE,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAEvC,eAAe,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;IAExC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEnD,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAChC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC5D,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAChE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAahE,CAAC,CAAC,CAAC","file":"core-modules.js","sourcesContent":["import { ContainerModule } from '../common/inversify-lite';\nimport { DefaultGlobal } from './global';\nimport { DefaultGraphicUtil, DefaultTransformUtil } from './graphic-utils';\nimport { DefaultLayerService } from './layer-service';\nimport { DefaultWindow, VWindow } from './window';\nimport { GraphicUtil, LayerService, TransformUtil } from './constants';\nimport { VGlobal } from '../constants';\n\nexport default new ContainerModule(bind => {\n  // global对象，全局单例模式\n  bind(VGlobal).to(DefaultGlobal).inSingletonScope();\n\n  bind(VWindow).to(DefaultWindow);\n  bind(GraphicUtil).to(DefaultGraphicUtil).inSingletonScope();\n  bind(TransformUtil).to(DefaultTransformUtil).inSingletonScope();\n  bind(LayerService).to(DefaultLayerService).inSingletonScope();\n\n  // bind(Stage).to(DefaultStage);\n  // bind<(params: Partial<IStageParams>) => IStage>(StageFactory).toFactory<IStage>((context: interface.Context) => {\n  //   return (params: Partial<IStageParams>) => {\n  //     const g = context.container.get<IGlobal>(Global);\n  //     const ws = context.container.get<IWindow>(VWindow);\n  //     const rs = context.container.get<IRenderService>(RenderService);\n  //     const layer = context.container.get<ILayer>(Layer);\n  //     return new DefaultStage(params, g, ws, rs, layer);\n  //   };\n  // });\n  // bind(Layer).to(DefaultLayer);\n});\n"]}