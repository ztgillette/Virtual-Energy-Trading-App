{"version":3,"sources":["../src/core/contributions/layerHandler/offscreen2d-contribution.ts"],"names":[],"mappings":"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","file":"offscreen2d-contribution.js","sourcesContent":["import { inject, injectable } from '../../../common/inversify-lite';\nimport { wrapCanvas } from '../../../canvas/util';\nimport type {\n  IGlobal,\n  ICanvas,\n  IContext2d,\n  IDrawToParams,\n  IGroup,\n  ILayer,\n  ILayerHandlerContribution,\n  ILayerHandlerInitParams,\n  IWindow,\n  ILayerHandlerDrawParams,\n  LayerMode\n} from '../../../interface';\nimport type { IBoundsLike } from '@visactor/vutils';\nimport { application } from '../../../application';\n\n@injectable()\nexport class OffscreenLayerHandlerContribution implements ILayerHandlerContribution {\n  declare layer: ILayer;\n  declare canvas: ICanvas;\n  declare context: IContext2d;\n  declare offscreen: boolean;\n  declare type: LayerMode;\n  // 所绑定的副layer handler\n  declare secondaryHandlers: ILayerHandlerContribution[];\n  declare global: IGlobal;\n\n  constructor() {\n    this.offscreen = true;\n    this.type = 'dynamic';\n    this.global = application.global;\n  }\n\n  setDpr(dpr: number) {\n    this.canvas.dpr = dpr;\n    return;\n  }\n\n  init(layer: ILayer, window: IWindow, params: ILayerHandlerInitParams): void {\n    this.layer = layer;\n    const nativeCanvas = this.global.createOffscreenCanvas({\n      width: params.width,\n      height: params.height,\n      dpr: window.dpr\n    });\n    const canvas = wrapCanvas({\n      nativeCanvas,\n      width: params.width,\n      height: params.height,\n      dpr: window.dpr,\n      canvasControled: true\n    });\n\n    this.canvas = canvas;\n    this.context = canvas.getContext();\n  }\n\n  resize(w: number, h: number) {\n    this.canvas.resize(w, h);\n    return;\n  }\n  resizeView(w: number, h: number) {\n    this.canvas.resize(w, h);\n    return;\n  }\n\n  render(group: IGroup[], params: ILayerHandlerDrawParams): void {\n    params.renderService.render(group, {\n      context: this.context,\n      viewBox: params.stage.window.getViewBox(),\n      transMatrix: params.stage.window.getViewBoxTransform(),\n      ...params,\n      clear: params.background ?? '#ffffff'\n    });\n  }\n\n  prepare(dirtyBounds: IBoundsLike, params: ILayerHandlerDrawParams) {\n    return;\n  }\n\n  release() {\n    this.canvas.release();\n  }\n\n  getContext(): IContext2d {\n    return this.context;\n  }\n\n  drawTo(target: IWindow, group: IGroup[], params: IDrawToParams & ILayerHandlerDrawParams) {\n    const context = target.getContext();\n    const targetDpr = target.dpr;\n\n    const { viewBox } = params;\n    const x = viewBox.x1;\n    const y = viewBox.y1;\n    const width = viewBox.width();\n    const height = viewBox.height();\n    // 这个context可能是外部的，不要使用内置的状态，直接用原生的context\n    context.nativeContext.save();\n    context.nativeContext.setTransform(targetDpr, 0, 0, targetDpr, 0, 0);\n    if (params.clear) {\n      context.clearRect(x, y, width, height);\n    }\n    context.drawImage(this.canvas.nativeCanvas, 0, 0, this.canvas.width, this.canvas.height, x, y, width, height);\n    context.nativeContext.restore();\n  }\n\n  merge(layerHandlers: ILayerHandlerContribution[]) {\n    return;\n  }\n}\n"]}