{"version":3,"sources":["../src/parser/data-view.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAatD,MAAM,CAAC,MAAM,cAAc,GAAW,CAAC,IAAgB,EAAE,OAA+B,EAAE,QAAkB,EAAE,EAAE;IAC9G,MAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;IAEjG,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC3B,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;KAC9D;IACD,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;QAChB,QAAQ,CAAC,OAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC1C,IAAI,EAAE,CAAC,MAAM,EAAE;gBACb,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC;gBAC/D,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;KACJ;IAED,IAAI,gBAAgB,EAAE;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACf,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAC3D,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","file":"data-view.js","sourcesContent":["import type { DataView } from '../data-view';\nimport type { Parser } from '.';\nimport { isBoolean, isArray } from '@visactor/vutils';\n\nexport interface IDataViewParserOptions {\n  dependencyUpdate?: boolean; // 是否依赖更新\n}\n\n/**\n * dataView数据 解析器\n * @param data\n * @param options\n * @param dataView\n * @returns\n */\nexport const dataViewParser: Parser = (data: DataView[], options: IDataViewParserOptions, dataView: DataView) => {\n  const dependencyUpdate = isBoolean(options?.dependencyUpdate) ? options?.dependencyUpdate : true;\n\n  if (!data || !isArray(data)) {\n    throw new TypeError('Invalid data: must be DataView array!');\n  }\n  if (isArray(dataView.rawData)) {\n    (<DataView[]>dataView.rawData).forEach(rd => {\n      if (rd.target) {\n        rd.target.removeListener('change', dataView.reRunAllTransform);\n        rd.target.removeListener('markRunning', dataView.markRunning);\n      }\n    });\n  }\n\n  if (dependencyUpdate) {\n    data.forEach(d => {\n      d.target.addListener('change', dataView.reRunAllTransform);\n      d.target.addListener('markRunning', dataView.markRunning);\n    });\n  }\n  return data;\n};\n"]}