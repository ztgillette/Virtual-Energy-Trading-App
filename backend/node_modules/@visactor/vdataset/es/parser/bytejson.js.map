{"version":3,"sources":["../src/parser/bytejson.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,IAAW,EAAE,OAAY,EAAE,QAAkB,EAAE,EAAE;IAC9E,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;IACnC,MAAM,MAAM,GAAU,EAAE,CAAC;IACzB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAC9B,IAAI,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;QACzB,IAAI,KAAK,GAAG,SAAS,CAAC;QACtB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,KAAK,GAAG,SAAS,CAAC;YAClB,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QAGD,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,KAAK,GAAG,OAAO,CAAC;YAChB,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YAEpB,MAAM,MAAM,GAAG,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3D,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAC1E,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;SAC1B;QAED,MAAM,EAAE,WAAW,KAAgB,IAAI,EAAf,MAAM,UAAK,IAAI,EAAjC,eAA0B,CAAO,CAAC;QACxC,MAAM,QAAQ,mCACT,MAAM,KACT,QAAQ,EAAE;gBACR,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,KAAK;aACnB,GACF,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","file":"bytejson.js","sourcesContent":["import type { DataView } from '../data-view';\nimport { DATAVIEW_TYPE } from '../constants';\n\nexport const byteJSONParser = (data: any[], options: any, dataView: DataView) => {\n  dataView.type = DATAVIEW_TYPE.BYTE;\n  const result: any[] = [];\n  const { layerType } = options;\n  data.forEach((item: any) => {\n    let lType = layerType;\n    let coord = [];\n    // 飞线\n    if (item.from) {\n      lType = 'FlyLine';\n      coord = [item.from, item.to];\n    }\n\n    // 点\n    if (item.lng) {\n      lType = 'Point';\n      coord = [item.lng, item.lat];\n    }\n\n    if (item.coordinates) {\n      // 通过嵌套层级判断 MultiLine/Line\n      const suffix = lType === 'Line' ? 'LineString' : 'Polygon';\n      lType = Array.isArray(item.coordinates[0][0]) ? `Multi${suffix}` : suffix;\n      coord = item.coordinates;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { coordinates, ...others } = item;\n    const dataItem = {\n      ...others,\n      geometry: {\n        type: lType,\n        coordinates: coord\n      }\n    };\n    result.push(dataItem);\n  });\n  return result;\n};\n"]}