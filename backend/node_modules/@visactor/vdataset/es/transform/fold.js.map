{"version":3,"sources":["../src/transform/fold.ts"],"names":[],"mappings":"AAeA,MAAM,CAAC,MAAM,IAAI,GAAc,CAAC,IAAmB,EAAE,OAAsB,EAAE,EAAE;IAC7E,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAChD,MAAM,OAAO,GAAU,EAAE,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrB,MAAM,IAAI,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;oBAC1B,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC5B;iBACF;aACF;YAED,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","file":"fold.js","sourcesContent":["import type { Transform } from '.';\n\nexport interface IFoldOptions {\n  fields: string[]; // 展开字段集\n  key: string; // key字段\n  value: string; // value字段\n  retains?: string[]; // 保留字段集，默认为除 fields 以外的所有字段\n}\n\n/**\n *\n * @param data 数据展开\n * @param options\n * @returns\n */\nexport const fold: Transform = (data: Array<object>, options?: IFoldOptions) => {\n  const { fields, key, value, retains } = options;\n  const results: any[] = [];\n  for (let i = 0; i < data.length; i++) {\n    fields.forEach(field => {\n      const item = {};\n      item[key] = field;\n      item[value] = data[i][field];\n      if (retains) {\n        retains.forEach(retain => {\n          item[retain] = data[i][retain];\n        });\n      } else {\n        for (const prop in data[i]) {\n          if (fields.indexOf(prop) === -1) {\n            item[prop] = data[i][prop];\n          }\n        }\n      }\n\n      results.push(item);\n    });\n  }\n  return results;\n};\n"]}