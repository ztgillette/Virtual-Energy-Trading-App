{"version":3,"sources":["../src/common/isShallowEqual.ts"],"names":[],"mappings":";;;;;;AAAA,wDAAgC;AAChC,0DAAkC;AAElC,SAAS,EAAE,CAAC,CAAM,EAAE,CAAM;IACxB,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC9C;IAED,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,MAAM,CAAC,GAAQ;IACtB,IAAI,IAAA,iBAAO,EAAC,GAAG,CAAC,EAAE;QAChB,OAAO,GAAG,CAAC,MAAM,CAAC;KACnB;IACD,IAAI,IAAA,kBAAQ,EAAC,GAAG,CAAC,EAAE;QACjB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;KAChC;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAgB,cAAc,CAAC,IAAS,EAAE,IAAS;IACjD,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;QAC1F,OAAO,KAAK,CAAC;KACd;IAED,IAAI,IAAA,iBAAO,EAAC,IAAI,CAAC,KAAK,IAAA,iBAAO,EAAC,IAAI,CAAC,EAAE;QACnC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;QACjC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,GAAG,GAAG,IAAI,CAAC;IAEf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;QACnC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAElB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACnB,GAAG,GAAG,KAAK,CAAC;YACZ,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC;AA9BD,wCA8BC","file":"isShallowEqual.js","sourcesContent":["import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction is(x: any, y: any) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  }\n  // eslint-disable-next-line no-self-compare\n  return x !== x && y !== y; //  NaN == NaN\n}\n\nfunction length(obj: any) {\n  if (isArray(obj)) {\n    return obj.length;\n  }\n  if (isObject(obj)) {\n    return Object.keys(obj).length;\n  }\n  return 0;\n}\n\nexport function isShallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  if (isArray(objA) !== isArray(objB)) {\n    return false;\n  }\n\n  if (length(objA) !== length(objB)) {\n    return false;\n  }\n\n  let ret = true;\n\n  Object.keys(objA).forEach((k: any) => {\n    const v = objA[k];\n\n    if (!is(v, objB[k])) {\n      ret = false;\n      return ret;\n    }\n    return true;\n  });\n\n  return ret;\n}\n"]}