{"version":3,"sources":["../src/common/range.ts"],"names":[],"mappings":";;;;;;AAAA,wDAAgC;AAEhC,SAAgB,KAAK,CAAC,KAAa,EAAE,IAAa,EAAE,IAAa;IAC/D,IAAI,CAAC,IAAA,iBAAO,EAAC,IAAI,CAAC,EAAE;QAClB,IAAI,GAAG,KAAK,CAAC;QACb,KAAK,GAAG,CAAC,CAAC;KACX;IACD,IAAI,CAAC,IAAA,iBAAO,EAAC,IAAI,CAAC,EAAE;QAClB,IAAI,GAAG,CAAC,CAAC;KACV;IAED,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3B,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;QACd,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;KAC7B;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAlBD,sBAkBC","file":"range.js","sourcesContent":["import isValid from './isValid';\n\nexport function range(start: number, stop?: number, step?: number): number[] {\n  if (!isValid(stop)) {\n    stop = start;\n    start = 0;\n  }\n  if (!isValid(step)) {\n    step = 1;\n  }\n\n  let i = -1;\n  const n = Math.max(0, Math.ceil((stop - start) / step)) | 0;\n  const range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n"]}