{"version":3,"sources":["../src/graphics/text/measure/textMeasure.ts"],"names":[],"mappings":"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","file":"textMeasure.js","sourcesContent":["import { isArray, isNil, isString, isValid } from '../../../common';\nimport type { Maybe } from '../../../type';\nimport { eastAsianCharacterInfo } from '../stringWidth';\nimport type { ITextMeasureOption, ITextMeasureSpec, ITextSize, TextMeasureInput, TextMeasureMethod } from './interface';\nimport { getContextFont } from './util';\n\nexport class TextMeasure<T extends Partial<ITextMeasureSpec>> {\n  /** 英文字母集 */\n  static readonly ALPHABET_CHAR_SET = 'abcdefghijklmnopqrstuvwxyz';\n\n  /** 数字集 */\n  static readonly NUMBERS_CHAR_SET = '0123456789';\n\n  /** 全角字符 */\n  static readonly FULL_SIZE_CHAR = '字';\n\n  /** 数字大小缓存 */\n  _numberCharSize: Maybe<ITextSize> = null;\n\n  /** 全角字符大小缓存 */\n  _fullCharSize: Maybe<ITextSize> = null;\n\n  /** 字母大小缓存 */\n  _letterCharSize: Maybe<ITextSize> = null;\n\n  /** 特殊字符缓存 */\n  _specialCharSizeMap: Record<string, ITextSize> = {};\n\n  /** 内置测量 canvas */\n  protected _canvas: Maybe<HTMLCanvasElement> = null;\n  protected _context: Maybe<CanvasRenderingContext2D> = null;\n  protected _contextSaved: boolean = false;\n\n  /** 是否不支持 canvas */\n  protected _notSupportCanvas: boolean = false;\n  /** 是否不支持 vrender */\n  protected _notSupportVRender: boolean = false;\n\n  /** 文字 spec */\n  protected readonly _userSpec: Partial<T> = {};\n  textSpec: ITextMeasureSpec;\n\n  protected readonly _option: ITextMeasureOption;\n\n  /** 标准测量方法 */\n  protected readonly _standardMethod: (text: TextMeasureInput) => ITextSize;\n\n  /** 特殊字符集 */\n  specialCharSet: string = '-/: .,@%\\'\"~';\n\n  constructor(option: ITextMeasureOption, textSpec?: Partial<T>) {\n    this._option = option;\n    this._userSpec = textSpec ?? {};\n    this.textSpec = this._initSpec();\n    if (isValid(option.specialCharSet)) {\n      this.specialCharSet = option.specialCharSet;\n    }\n    this._standardMethod = isValid(option.getTextBounds)\n      ? this.fullMeasure.bind(this)\n      : this.measureWithNaiveCanvas.bind(this);\n  }\n\n  /** 初始化测量相关上下文 */\n  initContext() {\n    if (this._notSupportCanvas) {\n      return false;\n    }\n    if (isNil(this._canvas)) {\n      if (isValid(this._option.getCanvasForMeasure)) {\n        this._canvas = this._option.getCanvasForMeasure();\n      }\n      if (\n        isNil(this._canvas) &&\n        typeof window !== 'undefined' &&\n        typeof window.document !== 'undefined' &&\n        globalThis &&\n        isValid(globalThis.document)\n      ) {\n        // 默认创建方法\n        this._canvas = globalThis.document.createElement('canvas');\n      }\n    }\n    if (isNil(this._context) && isValid(this._canvas)) {\n      const context = this._canvas.getContext('2d');\n      if (isValid(context)) {\n        context.save();\n        context.font = getContextFont(this.textSpec);\n        this._contextSaved = true;\n        this._context = context;\n      }\n    }\n    if (isNil(this._context)) {\n      this._notSupportCanvas = true;\n      return false;\n    }\n    return true;\n  }\n\n  protected _initSpec(): ITextMeasureSpec {\n    const { defaultFontParams = {} } = this._option;\n    const {\n      fontStyle = defaultFontParams.fontStyle,\n      fontVariant = defaultFontParams.fontVariant,\n      fontWeight = defaultFontParams.fontWeight ?? 'normal',\n      fontSize = defaultFontParams.fontSize ?? 12,\n      fontFamily = defaultFontParams.fontFamily ?? 'sans-serif',\n      align,\n      textAlign = align ?? 'center',\n      baseline,\n      textBaseline = baseline ?? 'middle',\n      ellipsis,\n      limit\n    } = this._userSpec;\n\n    let { lineHeight = fontSize } = this._userSpec;\n    if (isString(lineHeight) && lineHeight[lineHeight.length - 1] === '%') {\n      const scale = Number.parseFloat(lineHeight.substring(0, lineHeight.length - 1)) / 100;\n      lineHeight = fontSize * scale;\n    }\n\n    return {\n      fontStyle,\n      fontVariant,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      textAlign,\n      textBaseline,\n      ellipsis,\n      limit,\n      lineHeight\n    };\n  }\n\n  /** 计算文本宽高 */\n  measure(text: TextMeasureInput, method?: TextMeasureMethod): ITextSize {\n    switch (method) {\n      case 'vrender':\n      case 'canopus' as any:\n        return this.fullMeasure(text);\n      case 'canvas':\n        return this.measureWithNaiveCanvas(text);\n      case 'simple':\n        return this.quickMeasureWithoutCanvas(text);\n      case 'quick':\n      default:\n        return this.quickMeasure(text);\n    }\n  }\n\n  /** 精确计算文本宽高 */\n  fullMeasure(text: TextMeasureInput): ITextSize {\n    if (isNil(text)) {\n      return { width: 0, height: 0 };\n    }\n    if (isNil(this._option.getTextBounds) || !this._notSupportVRender) {\n      return this.measureWithNaiveCanvas(text); // 降级\n    }\n    const { fontFamily, fontSize, fontWeight, textAlign, textBaseline, ellipsis, limit, lineHeight } = this.textSpec;\n    let size: ITextSize;\n    try {\n      const bounds = this._option.getTextBounds({\n        text,\n        fontFamily,\n        fontSize,\n        fontWeight,\n        textAlign,\n        textBaseline,\n        ellipsis: !!ellipsis,\n        maxLineWidth: limit || Infinity,\n        lineHeight\n      });\n      size = { width: bounds.width(), height: bounds.height() };\n    } catch (e) {\n      this._notSupportVRender = true;\n      size = this.measureWithNaiveCanvas(text); // 降级\n    }\n    return size;\n  }\n\n  /** 通过原生 canvas 精确计算文本宽度，高度为估算 */\n  measureWithNaiveCanvas(text: TextMeasureInput): ITextSize {\n    return this._measureReduce(text, this._measureWithNaiveCanvas.bind(this));\n  }\n  protected _measureWithNaiveCanvas(text: string): ITextSize {\n    if (!this.initContext()) {\n      return this._quickMeasureWithoutCanvas(text); // 降级\n    }\n    const metrics = this._context!.measureText(text);\n    const { fontSize, lineHeight } = this.textSpec;\n    return {\n      width: metrics.width,\n      height: (lineHeight as number) ?? fontSize,\n      fontBoundingBoxAscent: metrics.fontBoundingBoxAscent,\n      fontBoundingBoxDescent: metrics.fontBoundingBoxDescent\n    };\n  }\n\n  /** 快速估算文本宽高 */\n  quickMeasure(text: TextMeasureInput): ITextSize {\n    return this._measureReduce(text, this._quickMeasure.bind(this));\n  }\n  protected _quickMeasure(text: string): ITextSize {\n    const totalSize: ITextSize = {\n      width: 0,\n      height: 0\n    };\n\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      // 先判断是否特殊字符\n      let size = this._measureSpecialChar(char);\n      // 再判断是否数字\n      if (isNil(size) && TextMeasure.NUMBERS_CHAR_SET.includes(char)) {\n        size = this._measureNumberChar();\n      }\n      // 再判断全角字符\n      if (isNil(size) && ['F', 'W'].includes(eastAsianCharacterInfo(char))) {\n        size = this._measureFullSizeChar();\n      }\n      // 最后按半角字符处理\n      if (isNil(size)) {\n        size = this._measureLetterChar();\n      }\n      totalSize.width += size.width;\n      totalSize.height = Math.max(totalSize.height, size.height);\n      !isNil(size.fontBoundingBoxAscent) && (totalSize.fontBoundingBoxAscent = size.fontBoundingBoxAscent);\n      !isNil(size.fontBoundingBoxDescent) && (totalSize.fontBoundingBoxDescent = size.fontBoundingBoxDescent);\n    }\n    return totalSize;\n  }\n\n  /** 不使用 canvas 来快速估算文本宽高 */\n  quickMeasureWithoutCanvas(text: TextMeasureInput): ITextSize {\n    return this._measureReduce(text, this._quickMeasureWithoutCanvas.bind(this));\n  }\n  protected _quickMeasureWithoutCanvas(text: string): ITextSize {\n    const totalSize: ITextSize = {\n      width: 0,\n      height: 0\n    };\n\n    const { fontSize, lineHeight } = this.textSpec;\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      // 判断全角字符\n      const size = ['F', 'W'].includes(eastAsianCharacterInfo(char)) ? 1 : 0.53;\n      totalSize.width += size * fontSize;\n    }\n    totalSize.height = (lineHeight as number) ?? fontSize;\n    return totalSize;\n  }\n\n  protected _measureReduce(text: TextMeasureInput, processor: (str: string) => ITextSize): ITextSize {\n    const { fontSize, lineHeight } = this.textSpec;\n    const defaultResult = { width: 0, height: 0 };\n\n    if (isNil(text)) {\n      return defaultResult;\n    } else if (isArray(text)) {\n      const textArr = text.filter(isValid).map(s => s.toString());\n      if (textArr.length === 0) {\n        return defaultResult;\n      } else if (textArr.length === 1) {\n        return processor(textArr[0]);\n      }\n      return {\n        width: textArr.reduce((maxWidth, cur) => Math.max(maxWidth, processor(cur).width), 0),\n        height: textArr.length * (((lineHeight as number) ?? fontSize) + 1) + 1 // 经验值\n      };\n    }\n    return processor(text.toString());\n  }\n\n  /** 测量一个数字 */\n  protected _measureNumberChar(): ITextSize {\n    if (isNil(this._numberCharSize)) {\n      const numberBounds = this._standardMethod(TextMeasure.NUMBERS_CHAR_SET);\n      this._numberCharSize = {\n        width: numberBounds.width / TextMeasure.NUMBERS_CHAR_SET.length, // 宽度取均值\n        height: numberBounds.height,\n        fontBoundingBoxAscent: numberBounds.fontBoundingBoxAscent,\n        fontBoundingBoxDescent: numberBounds.fontBoundingBoxDescent\n      };\n    }\n    return this._numberCharSize;\n  }\n\n  /** 测量一个全角字符 */\n  protected _measureFullSizeChar(): ITextSize {\n    if (isNil(this._fullCharSize)) {\n      this._fullCharSize = this._standardMethod(TextMeasure.FULL_SIZE_CHAR);\n    }\n    return this._fullCharSize;\n  }\n\n  /** 测量一个英文字符 */\n  protected _measureLetterChar(): ITextSize {\n    if (isNil(this._letterCharSize)) {\n      const alphabetBounds = this._standardMethod(TextMeasure.ALPHABET_CHAR_SET);\n      this._letterCharSize = {\n        width: alphabetBounds.width / TextMeasure.ALPHABET_CHAR_SET.length, // 宽度取均值\n        height: alphabetBounds.height,\n        fontBoundingBoxAscent: alphabetBounds.fontBoundingBoxAscent,\n        fontBoundingBoxDescent: alphabetBounds.fontBoundingBoxDescent\n      };\n    }\n    return this._letterCharSize;\n  }\n\n  /** 测量一个特殊字符 */\n  protected _measureSpecialChar(char: string): Maybe<ITextSize> {\n    if (isValid(this._specialCharSizeMap[char])) {\n      return this._specialCharSizeMap[char];\n    }\n    if (this.specialCharSet.includes(char)) {\n      this._specialCharSizeMap[char] = this._standardMethod(char);\n      return this._specialCharSizeMap[char];\n    }\n    return null;\n  }\n\n  release() {\n    if (isValid(this._canvas)) {\n      this._canvas = null;\n    }\n    if (isValid(this._context)) {\n      if (this._contextSaved) {\n        this._context.restore();\n        this._contextSaved = false;\n      }\n      this._context = null;\n    }\n  }\n}\n"]}