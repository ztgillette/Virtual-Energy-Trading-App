{"version":3,"sources":["../src/lru.ts"],"names":[],"mappings":"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","file":"lru.js","sourcesContent":["interface Threshold {\n  CLEAN_THRESHOLD?: number;\n  L_TIME?: number;\n  R_COUNT?: number;\n  R_TIMESTAMP_MAX_SIZE?: number;\n}\n// LRU清除\nexport class LRU {\n  private CLEAN_THRESHOLD = 1e3;\n  private L_TIME = 1000; // 1000ms以内\n  private R_COUNT = 1; // 使用次数为0\n  private R_TIMESTAMP_MAX_SIZE = 20; // timestamp最大长度\n\n  clearCache<TK, TV extends { timestamp: number[] }>(cache: Map<TK, TV>, params: Threshold): number {\n    const { CLEAN_THRESHOLD = this.CLEAN_THRESHOLD, L_TIME = this.L_TIME, R_COUNT = this.R_COUNT } = params;\n    if (cache.size < CLEAN_THRESHOLD) {\n      return 0;\n    }\n    // 开始清理，清理最近1000ms内使用次数为0的缓存\n    let clearNum = 0;\n    const clear = (key: TK) => {\n      clearNum++;\n      cache.delete(key);\n    };\n    const now = Date.now();\n    cache.forEach((item, key) => {\n      if (item.timestamp.length < R_COUNT) {\n        return clear(key);\n      } // 最近使用次数小于R_COUNT，清除\n      let useCount = 0;\n      while (now - item.timestamp[item.timestamp.length - 1 - useCount] < L_TIME) {\n        useCount++;\n        if (useCount >= R_COUNT) {\n          break;\n        }\n      }\n      if (useCount < R_COUNT) {\n        return clear(key);\n      } // 最近L_TIME以内使用次数小于R_COUNT，清除\n      // 清除L_TIME以外的key，避免数组过长\n      while (now - item.timestamp[0] > L_TIME) {\n        item.timestamp.shift();\n      }\n      return;\n    });\n    return clearNum;\n  }\n\n  addLimitedTimestamp<T extends { timestamp: number[] }>(cacheItem: T, t: number, params: Threshold) {\n    const { R_TIMESTAMP_MAX_SIZE = this.R_TIMESTAMP_MAX_SIZE } = params;\n    if (cacheItem.timestamp.length > R_TIMESTAMP_MAX_SIZE) {\n      // cacheItem.timestamp[cacheItem.timestamp.length-1] =\n      cacheItem.timestamp.shift();\n    }\n    cacheItem.timestamp.push(t);\n  }\n\n  clearTimeStamp<TK, TV extends { timestamp: number[] }>(cache: Map<TK, TV>, params: Threshold) {\n    const { L_TIME = this.L_TIME } = params;\n    const now = Date.now();\n    cache.forEach(item => {\n      while (now - item.timestamp[0] > L_TIME) {\n        item.timestamp.shift();\n      }\n    });\n  }\n\n  clearItemTimestamp<T extends { timestamp: number[] }>(cacheItem: T, params: Threshold) {\n    const { L_TIME = this.L_TIME } = params;\n    const now = Date.now();\n    while (now - cacheItem.timestamp[0] > L_TIME) {\n      cacheItem.timestamp.shift();\n    }\n  }\n}\n"]}