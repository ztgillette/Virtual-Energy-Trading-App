{"version":3,"sources":["../src/common/interpolate.ts"],"names":[],"mappings":"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","file":"interpolate.js","sourcesContent":["export function interpolateNumber(a: number, b: number): (x: number) => number {\n  return (t: number) => {\n    return a * (1 - t) + b * t;\n  };\n}\n\nexport function interpolateNumberRound(a: number, b: number): (x: number) => number {\n  return function (t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n\nexport function interpolateDate(a: Date, b: Date) {\n  const aVal = a.valueOf();\n  const bVal = b.valueOf();\n\n  const d = new Date();\n  return (t: number) => {\n    d.setTime(aVal * (1 - t) + bVal * t);\n    return d;\n  };\n}\n\nconst reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nconst reB = new RegExp(reA.source, 'g');\n\nfunction zero(b: any) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b: any) {\n  return function (t: any) {\n    return b(t) + '';\n  };\n}\n\nexport function interpolateString(a: any, b: any) {\n  let bi = (reA.lastIndex = reB.lastIndex = 0); // scan index for next number in b\n  let am: any; // current match in a\n  let bm: any; // current match in b\n  let bs; // string preceding current number in b, if any\n  let i = -1; // index in s\n  const s: any[] = []; // string constants and placeholders\n  const q: any[] = []; // number interpolators\n\n  // Coerce inputs to strings.\n  (a = a + ''), (b = b + '');\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) {\n        s[i] += bs;\n      } // coalesce with previous string\n      else {\n        s[++i] = bs;\n      }\n    }\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) {\n        s[i] += bm;\n      } // coalesce with previous string\n      else {\n        s[++i] = bm;\n      }\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({ i: i, x: interpolateNumber(am, bm) });\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) {\n      s[i] += bs;\n    } // coalesce with previous string\n    else {\n      s[++i] = bs;\n    }\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2\n    ? q[0]\n      ? one(q[0].x)\n      : zero(b)\n    : ((b = q.length),\n      function (t: any) {\n        for (let i = 0, o; i < b; ++i) {\n          s[(o = q[i]).i] = o.x(t);\n        }\n        return s.join('');\n      });\n}\n"]}