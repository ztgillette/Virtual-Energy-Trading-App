{"version":3,"sources":["../src/common/get.ts"],"names":[],"mappings":"AACA,OAAO,QAAQ,MAAM,YAAY,CAAC;AAElC,MAAM,GAAG,GAAG,CAAC,GAAc,EAAE,IAAuB,EAAE,YAAkB,EAAO,EAAE;IAC/E,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE,IAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAElE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;KACvC;IACD,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;AAChD,CAAC,CAAC;AAEF,eAAe,GAAG,CAAC","file":"get.js","sourcesContent":["import type { Dict } from '../type';\nimport isString from './isString';\n\nconst get = (obj: Dict<any>, path: string | string[], defaultValue?: any): any => {\n  const paths = isString(path) ? (path as string).split('.') : path;\n\n  for (let p = 0; p < paths.length; p++) {\n    obj = obj ? obj[paths[p]] : undefined;\n  }\n  return obj === undefined ? defaultValue : obj;\n};\n\nexport default get;\n"]}