{"version":3,"sources":["../src/canvas/contributions/node/canvas.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yDAAgE;AAEhE,uCAA0C;AAC1C,6CAA8C;AAGvC,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,yBAAU;IAOxC,YAAY,MAAwB;QAClC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,uBAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAC/C,CAAC;IAED,OAAO,CAAC,GAAG,MAAW;QACpB,IAAK,IAAI,CAAC,aAAqB,CAAC,OAAO,IAAI,IAAA,mBAAU,EAAE,IAAI,CAAC,aAAqB,CAAC,OAAO,CAAC,EAAE;YACzF,IAAI,CAAC,aAAqB,CAAC,OAAO,EAAE,CAAC;SACvC;IACH,CAAC;;AApBM,cAAG,GAAY,MAAM,CAAC;AADlB,UAAU;IADtB,IAAA,yBAAU,GAAE;;GACA,UAAU,CAsBtB;AAtBY,gCAAU","file":"canvas.js","sourcesContent":["import { injectable, BaseCanvas } from '@visactor/vrender-core';\nimport type { ICanvas, CanvasConfigType, EnvType } from '@visactor/vrender-core';\nimport { NodeContext2d } from './context';\nimport { isFunction } from '@visactor/vutils';\n\n@injectable()\nexport class NodeCanvas extends BaseCanvas implements ICanvas {\n  static env: EnvType = 'node';\n\n  /**\n   * 通过canvas生成一个wrap对象，初始化时不会再设置canvas的属性\n   * @param params\n   */\n  constructor(params: CanvasConfigType) {\n    super(params);\n  }\n\n  init() {\n    this._context = new NodeContext2d(this, this._dpr);\n    this.nativeCanvas.width = this._pixelWidth;\n    this.nativeCanvas.height = this._pixelHeight;\n  }\n\n  release(...params: any): void {\n    if ((this._nativeCanvas as any).release && isFunction((this._nativeCanvas as any).release)) {\n      (this._nativeCanvas as any).release();\n    }\n  }\n}\n"]}