{"version":3,"sources":["../src/event/extension/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IFederatedPointerEvent } from '@visactor/vrender-core';\nimport type { IPointLike } from '@visactor/vutils';\n\nexport type GestureDirection = 'none' | 'left' | 'right' | 'down' | 'up';\n\nexport interface GestureEvent extends IFederatedPointerEvent {\n  points: IPointLike[];\n  direction: GestureDirection;\n  deltaX: number;\n  deltaY: number;\n  scale: number;\n  center: IPointLike;\n  velocity: number;\n}\n\nexport interface GestureConfig {\n  press?: {\n    /**\n     * @default 251\n     * Minimal press time in ms.\n     * @see http://hammerjs.github.io/recognizer-press/\n     */\n    time?: number;\n    /**\n     * @default 10\n     * Maximal movement that is allowed while pressing.\n     * @see http://hammerjs.github.io/recognizer-press/\n     */\n    threshold?: number;\n  };\n  swipe?: {\n    /**\n     * Minimal distance required before recognizing.\n     * @default 10\n     * @see https://hammerjs.github.io/recognizer-swipe/\n     */\n    threshold?: number;\n    /**\n     * Minimal velocity required before recognizing, unit is in px per ms.\n     * @default 0.3\n     * @see http://hammerjs.github.io/recognizer-swipe/\n     */\n    velocity?: number;\n  };\n  tap?: {\n    /**\n     * max time between the multi-tap taps\n     * @default 300\n     */\n    interval?: number;\n  };\n}\n\nexport interface DefaultGestureConfig {\n  press: {\n    time: number;\n    threshold: number;\n  };\n  swipe: {\n    threshold: number;\n    velocity: number;\n  };\n  tap: {\n    interval: number;\n  };\n}\n\nexport interface EmitEventObject {\n  type: string;\n  ev: GestureEvent;\n}\n"]}