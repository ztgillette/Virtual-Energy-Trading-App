{"version":3,"sources":["../src/window/contributions/node-contribution.ts"],"names":[],"mappings":"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","file":"node-contribution.js","sourcesContent":["import {\n  inject,\n  injectable,\n  Generator,\n  BaseWindowHandlerContribution,\n  VGlobal,\n  ContainerModule,\n  WindowHandlerContribution\n} from '@visactor/vrender-core';\nimport type { IBoundsLike } from '@visactor/vutils';\nimport type {\n  EnvType,\n  IGlobal,\n  IContext2d,\n  ICanvas,\n  IDomRectLike,\n  IWindowHandlerContribution,\n  IWindowParams\n} from '@visactor/vrender-core';\nimport { NodeCanvas } from '../../canvas/contributions/node';\n\n@injectable()\nexport class NodeWindowHandlerContribution extends BaseWindowHandlerContribution implements IWindowHandlerContribution {\n  static env: EnvType = 'node';\n  type: EnvType = 'node';\n\n  canvas: ICanvas;\n  get container(): HTMLElement | null {\n    return null;\n  }\n\n  constructor(@inject(VGlobal) private readonly global: IGlobal) {\n    super();\n  }\n\n  getTitle(): string {\n    return '';\n  }\n\n  getWH(): { width: number; height: number } {\n    return {\n      width: this.canvas.displayWidth,\n      height: this.canvas.displayHeight\n    };\n  }\n\n  getXY(): { x: number; y: number } {\n    return { x: 0, y: 0 };\n  }\n\n  createWindow(params: IWindowParams): void {\n    // 如果没有传入canvas，那么就创建一个canvas\n    if (!params.canvas) {\n      this.createWindowByConfig(params);\n    } else {\n      this.createWindowByCanvas(params);\n    }\n  }\n  private createWindowByConfig(params: IWindowParams) {\n    // 创建canvas\n    const nativeCanvas = this.global.createCanvas({ width: params.width, height: params.height });\n\n    // 绑定\n    const options = {\n      width: params.width,\n      height: params.height,\n      dpr: params.dpr,\n      nativeCanvas,\n      id: Generator.GenAutoIncrementId().toString(),\n      canvasControled: true\n    };\n    this.canvas = new NodeCanvas(options);\n  }\n  private createWindowByCanvas(params: IWindowParams) {\n    // 获取canvas\n    const canvas = params!.canvas as HTMLCanvasElement | null;\n    const dpr = params.dpr ?? 1;\n    // 如果没有传入wh，或者是不受控制的canvas，那就用canvas的原始wh\n    let width = params.width;\n    let height = params.height;\n    if (width == null || height == null || !params.canvasControled) {\n      width = canvas.width / dpr;\n      height = canvas.height / dpr;\n    }\n\n    this.canvas = new NodeCanvas({\n      width: width,\n      height: height,\n      dpr: dpr,\n      nativeCanvas: canvas,\n      canvasControled: params.canvasControled\n    });\n  }\n  releaseWindow(): void {\n    this.canvas.release();\n  }\n  resizeWindow(width: number, height: number): void {\n    this.canvas.resize(width, height);\n  }\n  setDpr(dpr: number): void {\n    this.canvas.dpr = dpr;\n  }\n\n  getContext(): IContext2d {\n    return this.canvas.getContext();\n  }\n  getNativeHandler(): ICanvas {\n    return this.canvas;\n  }\n  getDpr(): number {\n    return this.canvas.dpr;\n  }\n\n  getImageBuffer(type: string = 'image/png'): any {\n    const canvas = this.canvas.nativeCanvas;\n    return canvas.toBuffer(type);\n  }\n\n  addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return;\n  }\n\n  dispatchEvent(event: any): boolean {\n    return true;\n  }\n\n  removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return;\n  }\n\n  getStyle(): CSSStyleDeclaration | Record<string, any> {\n    return;\n  }\n  setStyle(style: CSSStyleDeclaration | Record<string, any>): void {\n    return;\n  }\n\n  getBoundingClientRect(): IDomRectLike {\n    return null;\n  }\n\n  clearViewBox(color?: string): void {\n    return;\n  }\n}\n\nexport const nodeWindowModule = new ContainerModule(bind => {\n  // node\n  bind(NodeWindowHandlerContribution).toSelf();\n  bind(WindowHandlerContribution)\n    .toDynamicValue(ctx => ctx.container.get(NodeWindowHandlerContribution))\n    .whenTargetNamed(NodeWindowHandlerContribution.env);\n});\n"]}