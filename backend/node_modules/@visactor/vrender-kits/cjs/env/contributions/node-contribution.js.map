{"version":3,"sources":["../src/env/contributions/node-contribution.ts"],"names":[],"mappings":"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","file":"node-contribution.js","sourcesContent":["import { injectable, BaseEnvContribution, rafBasedSto } from '@visactor/vrender-core';\n// import { loadTaroContributions } from '../../../kits';\nimport type { EnvType, ICreateCanvasParams, IEnvContribution, IGlobal } from '@visactor/vrender-core';\n\ntype Canvas = any;\n\ntype NodePkg = {\n  createCanvas: (width: number, height: number, type?: 'pdf' | 'svg') => Canvas;\n  createImageData: (data: Uint8ClampedArray, width: number, height?: number) => ImageData;\n  loadImage: (src: string | any, options?: any) => Promise<any>;\n  Resvg?: any;\n};\n\n// let last = 0;\n// function nodeRequestAnimationFrame(callback: FrameRequestCallback) {\n//   const now = Date.now();\n//   const timeLeft = Math.max(0, 16 - (now - last));\n//   const id = setTimeout(function () {\n//     callback(now + timeLeft);\n//   }, timeLeft);\n//   last = now + timeLeft;\n//   return id;\n// }\n\n@injectable()\nexport class NodeEnvContribution extends BaseEnvContribution implements IEnvContribution {\n  type: EnvType = 'node';\n  pkg: NodePkg;\n  _lastTime: number = 0;\n  supportEvent: boolean = false;\n\n  configure(service: IGlobal, pkg: NodePkg) {\n    if (service.env === this.type) {\n      service.setActiveEnvContribution(this);\n      this.pkg = pkg;\n    }\n  }\n\n  /**\n   * 获取动态canvas的数量，offscreenCanvas或者framebuffer\n   */\n  getDynamicCanvasCount(): number {\n    return 0;\n  }\n\n  /**\n   * 获取静态canvas的数量，纯粹canvas\n   */\n  getStaticCanvasCount(): number {\n    return 999;\n  }\n\n  loadJson(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: Record<string, unknown> | null;\n  }> {\n    const jsonPromise = fetch(url).then(data => data.json()) as Promise<any>; // ignore_security_alert\n    jsonPromise\n      .then(json => {\n        return {\n          data: json,\n          state: 'success'\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          state: 'fail'\n        };\n      });\n    return jsonPromise;\n  }\n\n  loadArrayBuffer(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: ArrayBuffer | null;\n  }> {\n    const arrayBufferPromise = fetch(url).then(data => data.arrayBuffer()); // ignore_security_alert\n    return arrayBufferPromise\n      .then((arrayBuffer: ArrayBuffer) => {\n        return {\n          data: arrayBuffer,\n          loadState: 'success' as const\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          loadState: 'fail'\n        };\n      });\n  }\n\n  loadImage(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | null;\n  }> {\n    const { loadImage } = this.pkg;\n    if (loadImage) {\n      return loadImage(url)\n        .then((image: any) => {\n          const loadState: 'success' | 'fail' = image ? 'success' : 'fail';\n          return {\n            loadState,\n            data: image as HTMLImageElement\n          };\n        })\n        .catch(() => {\n          return {\n            loadState: 'fail',\n            data: null\n          } as any;\n        });\n    }\n    return Promise.reject(new Error('node-canvas loadImage could not be found!'));\n  }\n\n  // 此处的\n  loadSvg(svgStr: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | null;\n  }> {\n    // // eslint-disable-next-line @typescript-eslint/no-var-requires\n    // const { Resvg } = require('@resvg/resvg-js');\n    const Resvg = this.pkg.Resvg;\n    if (!Resvg) {\n      return Promise.reject(new Error('@resvg/resvg-js svgParser could not be found!'));\n    }\n    const resvg = new Resvg(svgStr);\n    const pngData = resvg.render().asPng();\n    return this.loadImage(pngData as unknown as string);\n  }\n\n  createCanvas(params: any): Canvas {\n    const canvas = this.pkg.createCanvas(params.width, params.height);\n    return canvas;\n  }\n\n  releaseCanvas(canvas: Canvas | any) {\n    return;\n  }\n\n  getDevicePixelRatio(): number {\n    return 1;\n  }\n\n  getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    // return function (callback: FrameRequestCallback) {\n    //   return setTimeout(callback, 1000 / 60, true);\n    // } as any;\n    return function (callback: FrameRequestCallback) {\n      return rafBasedSto.call(callback);\n    } as any;\n  }\n\n  getCancelAnimationFrame(): (h: number) => void {\n    return (h: number) => {\n      rafBasedSto.clear(h);\n    };\n  }\n\n  addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return;\n  }\n\n  removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return;\n  }\n\n  getElementById(str: string): HTMLElement | null {\n    return null;\n  }\n\n  getRootElement(): HTMLElement | null {\n    return null;\n  }\n\n  dispatchEvent(event: any): boolean {\n    return;\n  }\n\n  release(...params: any): void {\n    return;\n  }\n\n  createOffscreenCanvas(params: ICreateCanvasParams) {\n    return;\n  }\n}\n"]}