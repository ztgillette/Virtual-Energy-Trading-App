{"version":3,"sources":["../src/env/contributions/wx-contribution.ts"],"names":[],"mappings":"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","file":"wx-contribution.js","sourcesContent":["import { injectable, BaseEnvContribution, rafBasedSto } from '@visactor/vrender-core';\n// import { loadFeishuContributions } from '../../../kits';\nimport type {\n  ICanvasLike,\n  EnvType,\n  ICreateCanvasParams,\n  IEnvContribution,\n  IGlobal,\n  ITTCanvas\n} from '@visactor/vrender-core';\n\ndeclare const wx: {\n  getSystemInfoSync: () => { pixelRatio: number };\n  createCanvasContext: (id: string) => any;\n  createSelectorQuery: () => any;\n};\n\n// 飞书小程序canvas的wrap\nasync function makeUpCanvas(\n  domref: any,\n  canvasIdLists: string[],\n  canvasMap: Map<string, ITTCanvas>,\n  freeCanvasIdx: number,\n  freeCanvasList: ITTCanvas[],\n  component: any,\n  forceUpdate?: boolean\n) {\n  const dpr = wx.getSystemInfoSync().pixelRatio;\n\n  for (let i = 0; i < canvasIdLists.length; i++) {\n    const id = canvasIdLists[i];\n    if (!forceUpdate && canvasMap.has(id)) {\n      continue;\n    }\n    await new Promise(resolve => {\n      let data = wx.createSelectorQuery();\n      if (component) {\n        data = data.in(component);\n      }\n      // @ts-ignore\n      data\n        .select(`#${id}`) // 在 WXML 中填入的 id\n        .fields({ node: true, size: true })\n        .exec((res: any) => {\n          if (!res[0]) {\n            return;\n          }\n          const canvas = res[0].node;\n          const width = res[0].width;\n          const height = res[0].height;\n          canvas.width = width * dpr;\n          canvas.height = height * dpr;\n          canvasMap.set(id, canvas);\n          if (i >= freeCanvasIdx) {\n            freeCanvasList.push(canvas);\n          }\n          resolve(null);\n        });\n    });\n  }\n\n  // canvasIdLists.forEach((id, i) => {\n  //   const ctx = wx.createCanvasContext(id);\n  //   // TODO: 这里是一个临时方案，向 ctx 内部构造一个 canvas，传递宽高\n  //   ctx.canvas = {\n  //     width: domref.width * dpr,\n  //     height: domref.height * dpr\n  //   };\n\n  //   // 放到内容里\n  //   // // TODO: 这里是一个临时方案，兼容 createCircularGradient 方法\n  //   // ctx.createRadialGradient = (...cc) => ctx.createCircularGradient(...cc);\n\n  //   // // 封装 getImageData 为 promise\n  //   // ctx.getImageData = (x, y, width, height) =>\n  //   //   new Promise((resolve, reject) => {\n  //   //     try {\n  //   //       tt.canvasGetImageData({\n  //   //         canvasId: item.id,\n  //   //         x,\n  //   //         y,\n  //   //         width,\n  //   //         height,\n  //   //         success(res) {\n  //   //           resolve(res);\n  //   //         },\n  //   //       });\n  //   //     } catch (err) {\n  //   //       reject(err);\n  //   //     }\n  //   //   });\n\n  //   const canvas = {\n  //     width: domref.width,\n  //     height: domref.height,\n  //     offsetWidth: domref.width,\n  //     offsetHeight: domref.height,\n  //     id: id ?? '',\n  //     getContext: () => ctx,\n  //     // 构造 getBoundingClientRect 方法\n  //     getBoundingClientRect: () => ({\n  //       height: domref.height,\n  //       width: domref.width\n  //     })\n  //   };\n\n  //   canvasMap.set(id, canvas);\n  //   if (i >= freeCanvasIdx) {\n  //     freeCanvasList.push(canvas);\n  //   }\n  // });\n}\n\n@injectable()\nexport class WxEnvContribution extends BaseEnvContribution implements IEnvContribution {\n  type: EnvType = 'wx';\n  supportEvent: boolean = true;\n  // 所有添加进来的canvas\n  canvasMap: Map<string, ITTCanvas> = new Map();\n  // 所有可用的canvasList\n  freeCanvasList: ITTCanvas[] = [];\n  canvasIdx: number = 0;\n\n  constructor() {\n    super();\n    this.supportsTouchEvents = true;\n    try {\n      this.supportsPointerEvents = !!globalThis.PointerEvent;\n      this.supportsMouseEvents = !!globalThis.MouseEvent;\n    } catch (err) {\n      this.supportsPointerEvents = false;\n      this.supportsMouseEvents = false;\n    }\n    this.applyStyles = true;\n  }\n\n  // TODO：VGrammar在小程序环境会重复调用setEnv传入canvas，所以每次configure并不会释放\n  // 这里等待后续和VGrammar沟通\n  configure(\n    service: IGlobal,\n    params: { domref: any; canvasIdLists: string[]; freeCanvasIdx: number; component: any; forceUpdate?: boolean }\n  ) {\n    if (service.env === this.type) {\n      service.setActiveEnvContribution(this);\n      return makeUpCanvas(\n        params.domref,\n        params.canvasIdLists,\n        this.canvasMap,\n        params.freeCanvasIdx,\n        this.freeCanvasList,\n        params.component,\n        params.forceUpdate\n      ).then(() => {\n        // loadFeishuContributions();\n      });\n    }\n  }\n\n  loadImage(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    return Promise.resolve({\n      data: url as unknown as HTMLImageElement,\n      loadState: 'success'\n    });\n  }\n\n  loadSvg(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    // 飞书小组件不支持DOMParser和URL.createObjectURL，无法解析svg字符串，可以通过url使用svg资源\n    return Promise.reject();\n  }\n\n  createCanvas(params: ICreateCanvasParams): ITTCanvas {\n    const result = this.freeCanvasList[this.canvasIdx] || this.freeCanvasList[this.freeCanvasList.length - 1];\n    this.canvasIdx++;\n    return result;\n  }\n\n  createOffscreenCanvas(params: ICreateCanvasParams) {\n    return;\n  }\n\n  releaseCanvas(canvas: ICanvasLike | string) {\n    return;\n  }\n\n  getDevicePixelRatio(): number {\n    return wx.getSystemInfoSync().pixelRatio;\n  }\n\n  getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    // return requestAnimationFrame;\n\n    // 飞书小组件，在云文档浏览器环境中，没有requestAnimationFrame\n    // 但是在小组件工作台环境和模拟器中正常\n    // 反馈飞书修改，目前先使用setTimeout模拟，进行测试，飞书修复后替换回requestAnimationFrame\n    // return function (callback: FrameRequestCallback) {\n    //   return setTimeout(callback, 1000 / 60, true);\n    // } as any;\n    return function (callback: FrameRequestCallback) {\n      return rafBasedSto.call(callback);\n    } as any;\n  }\n\n  getCancelAnimationFrame(): (h: number) => void {\n    return (h: number) => {\n      rafBasedSto.clear(h);\n    };\n  }\n\n  addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  dispatchEvent(event: any): boolean {\n    return null;\n  }\n\n  // 只能索引canvas\n  getElementById(str: string): any | null {\n    return this.canvasMap.get(str);\n  }\n\n  getRootElement(): HTMLElement | null {\n    return null;\n  }\n\n  getDocument(): Document | null {\n    return null;\n  }\n\n  release(...params: any): void {\n    return;\n  }\n\n  mapToCanvasPoint(event: any) {\n    if (event?.type?.startsWith('mouse')) {\n      return event;\n    }\n    return event;\n  }\n}\n"]}