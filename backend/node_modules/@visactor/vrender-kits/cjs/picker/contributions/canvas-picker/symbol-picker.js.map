{"version":3,"sources":["../src/picker/contributions/canvas-picker/symbol-picker.ts"],"names":[],"mappings":"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","file":"symbol-picker.js","sourcesContent":["import {\n  inject,\n  injectable,\n  SymbolRender,\n  mat4Allocate,\n  getScaledStroke,\n  SYMBOL_NUMBER_TYPE\n} from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  ISymbol,\n  IThemeAttribute,\n  IGraphicPicker,\n  IGraphicRender,\n  IPickParams\n} from '@visactor/vrender-core';\nimport { Base3dPicker } from '../common/base-3d-picker';\n\n@injectable()\nexport class DefaultCanvasSymbolPicker extends Base3dPicker<ISymbol> implements IGraphicPicker {\n  type: string = 'symbol';\n  numberType: number = SYMBOL_NUMBER_TYPE;\n\n  constructor(@inject(SymbolRender) public readonly canvasRenderer: IGraphicRender) {\n    super();\n  }\n\n  contains(symbol: ISymbol, point: IPoint, params?: IPickParams): boolean {\n    const { pickContext } = params ?? {};\n    if (!pickContext) {\n      return false;\n    }\n\n    const parsedPath = symbol.getParsedPath();\n    if (!pickContext.camera) {\n      if (!symbol.AABBBounds.containsPoint(point)) {\n        return false;\n      }\n      if (parsedPath.isSvg || symbol.attribute.pickMode === 'imprecise') {\n        return true;\n      }\n    }\n\n    pickContext.highPerformanceSave();\n    // const symbolAttribute = graphicService.themeService.getCurrentTheme().symbolAttribute;\n    const symbolAttribute = symbol.getGraphicTheme();\n\n    const data = this.transform(symbol, symbolAttribute, pickContext);\n    const { x, y, z, lastModelMatrix } = data;\n    // let { x = symbolAttribute.x, y = symbolAttribute.y } = symbol.attribute;\n\n    // pickContext.highPerformanceSave();\n    // if (!symbol.transMatrix.onlyTranslate()) {\n    //   // 性能较差\n    //   x = 0;\n    //   y = 0;\n    //   pickContext.transformFromMatrix(symbol.transMatrix, true);\n    // } else {\n    //   const point = symbol.getOffsetXY(symbolAttribute);\n    //   x += point.x;\n    //   y += point.y;\n    //   // 当前context有rotate/scale，重置matrix\n    //   pickContext.setTransformForCurrent();\n    // }\n\n    let pickPoint = point;\n    if (pickContext.camera) {\n      pickPoint = point.clone();\n      const globalMatrix = symbol.parent.globalTransMatrix;\n      pickPoint.x = globalMatrix.a * point.x + globalMatrix.c * point.y + globalMatrix.e;\n      pickPoint.y = globalMatrix.b * point.x + globalMatrix.d * point.y + globalMatrix.f;\n    }\n\n    this.canvasRenderer.z = z;\n    // 详细形状判断\n    let picked = false;\n    this.canvasRenderer.drawShape(\n      symbol,\n      pickContext,\n      x,\n      y,\n      {} as any,\n      null,\n      (\n        context: IContext2d,\n        symbolAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        picked = context.isPointInPath(pickPoint.x, pickPoint.y);\n        return picked;\n      },\n      (\n        context: IContext2d,\n        symbolAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        const lineWidth = symbolAttribute.lineWidth || themeAttribute.lineWidth;\n        const pickStrokeBuffer = symbolAttribute.pickStrokeBuffer || themeAttribute.pickStrokeBuffer;\n        const keepStrokeScale = symbolAttribute.keepStrokeScale || themeAttribute.keepStrokeScale;\n        pickContext.lineWidth = keepStrokeScale\n          ? lineWidth + pickStrokeBuffer\n          : getScaledStroke(pickContext, lineWidth + pickStrokeBuffer, pickContext.dpr);\n        picked = context.isPointInStroke(pickPoint.x, pickPoint.y);\n        return picked;\n      }\n    );\n\n    this.canvasRenderer.z = 0;\n\n    if (pickContext.modelMatrix !== lastModelMatrix) {\n      mat4Allocate.free(pickContext.modelMatrix);\n    }\n    pickContext.modelMatrix = lastModelMatrix;\n    pickContext.highPerformanceRestore();\n    return picked;\n  }\n}\n"]}