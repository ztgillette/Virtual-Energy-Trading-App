{"version":3,"sources":["../src/picker/contributions/math-picker/text-picker.ts"],"names":[],"mappings":";;;;;;;;;AAAA,yDAAsE;AAK/D,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAA3B;QACL,SAAI,GAAW,MAAM,CAAC;QACtB,eAAU,GAAW,+BAAgB,CAAC;IAexC,CAAC;IAbC,QAAQ,CAAC,IAAW,EAAE,KAAa,EAAE,MAAoB;QACvD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAQD,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAjBY,qBAAqB;IADjC,IAAA,yBAAU,GAAE;GACA,qBAAqB,CAiBjC;AAjBY,sDAAqB","file":"text-picker.js","sourcesContent":["import { injectable, TEXT_NUMBER_TYPE } from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\nimport type { IGraphicPicker, IPickParams, IText } from '@visactor/vrender-core';\n\n@injectable()\nexport class DefaultMathTextPicker implements IGraphicPicker {\n  type: string = 'text';\n  numberType: number = TEXT_NUMBER_TYPE;\n\n  contains(text: IText, point: IPoint, params?: IPickParams): boolean {\n    if (!text.AABBBounds.containsPoint(point)) {\n      return false;\n    }\n\n    // const { pickContext } = params ?? {};\n    // if (!pickContext) {\n    //   return false;\n    // }\n\n    // TODO: 详细形状判断\n    return true;\n  }\n}\n"]}