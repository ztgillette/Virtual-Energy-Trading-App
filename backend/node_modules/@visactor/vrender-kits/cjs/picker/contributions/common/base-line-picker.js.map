{"version":3,"sources":["../src/picker/contributions/common/base-line-picker.ts"],"names":[],"mappings":"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","file":"base-line-picker.js","sourcesContent":["import { BaseRender, getScaledStroke, getTheme, mat4Allocate } from '@visactor/vrender-core';\nimport type {\n  IGraphicAttribute,\n  IGraphic,\n  IPickParams,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IGraphicRender\n} from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\n\nexport abstract class BaseLinePicker<T extends IGraphic<Partial<IGraphicAttribute>>> extends BaseRender<T> {\n  canvasRenderer!: IGraphicRender;\n\n  contains(graphic: IGraphic, point: IPoint, params?: IPickParams): boolean {\n    if (!graphic.AABBBounds.containsPoint(point)) {\n      return false;\n    }\n    if (graphic.attribute.pickMode === 'imprecise') {\n      return true;\n    }\n\n    const { pickContext } = params ?? {};\n    if (!pickContext) {\n      return false;\n    }\n\n    // const lineAttribute = graphicService.themeService.getCurrentTheme().lineAttribute;\n    pickContext.highPerformanceSave();\n    const lineAttribute = graphic.getGraphicTheme();\n\n    const data = this.transform(graphic, lineAttribute, pickContext);\n    const { x, y, z, lastModelMatrix } = data;\n\n    let pickPoint = point;\n    if (pickContext.camera) {\n      pickPoint = point.clone();\n      const globalMatrix = graphic.parent.globalTransMatrix;\n      pickPoint.x = globalMatrix.a * point.x + globalMatrix.c * point.y + globalMatrix.e;\n      pickPoint.y = globalMatrix.b * point.x + globalMatrix.d * point.y + globalMatrix.f;\n    }\n\n    this.canvasRenderer.z = z;\n    // 详细形状判断\n    let picked = false;\n    this.canvasRenderer.drawShape(\n      graphic,\n      pickContext,\n      x,\n      y,\n      {} as any,\n      null,\n      context => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        picked = context.isPointInPath(pickPoint.x, pickPoint.y);\n        return picked;\n      },\n      (\n        context: IContext2d,\n        lineAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        const lineWidth = lineAttribute.lineWidth || themeAttribute.lineWidth;\n        const pickStrokeBuffer = lineAttribute.pickStrokeBuffer || themeAttribute.pickStrokeBuffer;\n        const keepStrokeScale = lineAttribute.keepStrokeScale || themeAttribute.keepStrokeScale;\n        pickContext.lineWidth = keepStrokeScale\n          ? lineWidth + pickStrokeBuffer\n          : getScaledStroke(pickContext, lineWidth + pickStrokeBuffer, pickContext.dpr);\n        picked = context.isPointInStroke(pickPoint.x, pickPoint.y);\n        return picked;\n      }\n    );\n    this.canvasRenderer.z = 0;\n\n    if (pickContext.modelMatrix !== lastModelMatrix) {\n      mat4Allocate.free(pickContext.modelMatrix);\n    }\n    pickContext.modelMatrix = lastModelMatrix;\n    pickContext.highPerformanceRestore();\n    return picked;\n  }\n}\n"]}