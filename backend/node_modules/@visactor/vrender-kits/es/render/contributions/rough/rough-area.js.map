{"version":3,"sources":["../src/render/contributions/rough/rough-area.ts"],"names":[],"mappings":"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","file":"rough-area.js","sourcesContent":["import type {\n  IGraphicRender,\n  IAreaCacheItem,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IGraphicAttribute,\n  IArea,\n  IAreaGraphicAttribute,\n  IDrawContext\n} from '@visactor/vrender-core';\nimport { drawAreaSegments, DefaultCanvasAreaRender, CustomPath2D, injectable } from '@visactor/vrender-core';\nimport rough from 'roughjs';\nimport { defaultRouthThemeSpec } from './config';\n\n@injectable()\nexport class RoughCanvasAreaRender extends DefaultCanvasAreaRender implements IGraphicRender {\n  declare type: 'area';\n  declare numberType: number;\n  style: 'rough' = 'rough';\n\n  /**\n   * 绘制segment\n   * @param context\n   * @param cache\n   * @param fill\n   * @param stroke\n   * @param attribute\n   * @param defaultAttribute\n   * @param clipRange\n   * @param offsetX\n   * @param offsetY\n   * @param fillCb\n   * @param strokeCb\n   * @returns 返回true代表跳过后续绘制\n   */\n  protected drawSegmentItem(\n    context: IContext2d,\n    cache: IAreaCacheItem,\n    fill: boolean,\n    fillOpacity: number,\n    stroke: boolean,\n    strokeOpacity: number,\n    attribute: Partial<IAreaGraphicAttribute>,\n    defaultAttribute: Required<IAreaGraphicAttribute> | Partial<IAreaGraphicAttribute>[],\n    clipRange: number,\n    offsetX: number,\n    offsetY: number,\n    offsetZ: number,\n    area: IArea,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      lineAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute | IThemeAttribute[]\n    ) => boolean\n  ): boolean {\n    if (fillCb) {\n      return super.drawSegmentItem(\n        context,\n        cache,\n        fill,\n        fillOpacity,\n        stroke,\n        strokeOpacity,\n        attribute,\n        defaultAttribute,\n        clipRange,\n        offsetX,\n        offsetY,\n        offsetZ,\n        area,\n        drawContext,\n        fillCb\n      );\n    }\n    context.highPerformanceSave();\n    // 获取到原生canvas\n    const canvas = context.canvas.nativeCanvas;\n    const rc = rough.canvas(canvas, {});\n\n    const customPath = new CustomPath2D();\n\n    drawAreaSegments(customPath, cache, clipRange, {\n      offsetX,\n      offsetY\n    });\n\n    const {\n      maxRandomnessOffset = defaultRouthThemeSpec.maxRandomnessOffset,\n      roughness = defaultRouthThemeSpec.roughness,\n      bowing = defaultRouthThemeSpec.bowing,\n      curveFitting = defaultRouthThemeSpec.curveFitting,\n      curveTightness = defaultRouthThemeSpec.curveTightness,\n      curveStepCount = defaultRouthThemeSpec.curveStepCount,\n      fillStyle = defaultRouthThemeSpec.fillStyle,\n      fillWeight = defaultRouthThemeSpec.fillWeight,\n      hachureAngle = defaultRouthThemeSpec.hachureAngle,\n      hachureGap = defaultRouthThemeSpec.hachureGap,\n      simplification = defaultRouthThemeSpec.simplification,\n      dashOffset = defaultRouthThemeSpec.dashOffset,\n      dashGap = defaultRouthThemeSpec.dashGap,\n      zigzagOffset = defaultRouthThemeSpec.zigzagOffset,\n      seed = defaultRouthThemeSpec.seed,\n      fillLineDash = defaultRouthThemeSpec.fillLineDash,\n      fillLineDashOffset = defaultRouthThemeSpec.fillLineDashOffset,\n      disableMultiStroke = defaultRouthThemeSpec.disableMultiStroke,\n      disableMultiStrokeFill = defaultRouthThemeSpec.disableMultiStrokeFill,\n      preserveVertices = defaultRouthThemeSpec.preserveVertices,\n      fixedDecimalPlaceDigits = defaultRouthThemeSpec.fixedDecimalPlaceDigits\n    } = attribute as any;\n\n    let { fill: fillColor, stroke: strokeColor, lineWidth } = attribute;\n\n    if (Array.isArray(defaultAttribute)) {\n      defaultAttribute.forEach(item => {\n        fillColor = fillColor ?? item.fill;\n        strokeColor = strokeColor ?? item.stroke;\n        lineWidth = lineWidth ?? item.lineWidth;\n      });\n    } else {\n      fillColor = fillColor ?? defaultAttribute.fill;\n      strokeColor = strokeColor ?? defaultAttribute.stroke;\n      lineWidth = lineWidth ?? defaultAttribute.lineWidth;\n    }\n\n    rc.path(customPath.toString(), {\n      fill: fill ? (fillColor as string) : undefined,\n      strokeWidth: lineWidth,\n      maxRandomnessOffset,\n      roughness,\n      bowing,\n      curveFitting,\n      curveTightness,\n      curveStepCount,\n      fillStyle,\n      fillWeight,\n      hachureAngle,\n      hachureGap,\n      simplification,\n      dashOffset,\n      dashGap,\n      zigzagOffset,\n      seed,\n      fillLineDash,\n      fillLineDashOffset,\n      disableMultiStroke,\n      disableMultiStrokeFill,\n      preserveVertices,\n      fixedDecimalPlaceDigits\n    });\n\n    context.highPerformanceRestore();\n\n    return false;\n  }\n}\n"]}