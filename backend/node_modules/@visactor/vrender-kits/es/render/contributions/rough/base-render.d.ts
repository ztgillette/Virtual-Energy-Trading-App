import type { IRenderService } from '@visactor/vrender-core';
import { type IGraphicAttribute, type IContext2d, type IGraphic, type IMarkAttribute, type IThemeAttribute, type IDrawContext, type IGraphicRenderDrawParams, type IGraphicRender } from '@visactor/vrender-core';
export declare abstract class RoughBaseRender {
    canvasRenderer: IGraphicRender;
    drawShape(graphic: IGraphic, ctx: IContext2d, x: number, y: number, drawContext: IDrawContext, params?: IGraphicRenderDrawParams, fillCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean, strokeCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean): void;
    doDraw(graphic: IGraphic, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams): void;
    reInit(): void;
}
