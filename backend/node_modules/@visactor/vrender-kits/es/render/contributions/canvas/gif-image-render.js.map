{"version":3,"sources":["../src/render/contributions/canvas/gif-image-render.ts"],"names":[],"mappings":"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","file":"gif-image-render.js","sourcesContent":["import type {\n  IContext2d,\n  IContributionProvider,\n  IDrawContext,\n  IGraphicAttribute,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IImageRenderContribution,\n  IMarkAttribute,\n  IRenderService,\n  IThemeAttribute\n} from '@visactor/vrender-core';\nimport {\n  BaseRenderContributionTime,\n  ContributionProvider,\n  DefaultCanvasImageRender,\n  DefaultRectRenderContribution,\n  getTheme,\n  ImageRenderContribution,\n  inject,\n  injectable,\n  named\n} from '@visactor/vrender-core';\nimport { GIFIMAGE_NUMBER_TYPE } from '../../../graphic/constants';\nimport type { IGifImage } from '../../../interface/gif-image';\n\n@injectable()\nexport class DefaultCanvasGifImageRender extends DefaultCanvasImageRender implements IGraphicRender {\n  type: 'image';\n  numberType: number = GIFIMAGE_NUMBER_TYPE;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(ImageRenderContribution)\n    protected readonly imageRenderContribitions: IContributionProvider<IImageRenderContribution>\n  ) {\n    super(imageRenderContribitions);\n    this._renderContribitions = undefined;\n    this.builtinContributions = [defaultGifImageRenderContribution];\n    this.init(imageRenderContribitions);\n  }\n\n  drawShape(\n    image: IGifImage,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    // const imageAttribute = graphicService.themeService.getCurrentTheme().imageAttribute;\n    const imageAttribute = getTheme(image).image;\n    const {\n      x: originX = imageAttribute.x,\n      y: originY = imageAttribute.y,\n      fillStrokeOrder = imageAttribute.fillStrokeOrder\n    } = image.attribute;\n\n    const data = this.valid(image, imageAttribute, fillCb);\n    if (!data) {\n      return;\n    }\n    const { fVisible, sVisible, doFill, doStroke } = data;\n\n    // deal with cornerRadius\n    const needRestore = true;\n\n    const _runFill = () => {\n      if (doFill) {\n        if (fillCb) {\n          fillCb(context, image.attribute, imageAttribute);\n        } else if (fVisible) {\n        }\n      }\n    };\n\n    const _runStroke = () => {\n      if (doStroke) {\n        if (strokeCb) {\n          strokeCb(context, image.attribute, imageAttribute);\n        } else if (sVisible) {\n          context.setStrokeStyle(image, image.attribute, originX - x, originY - y, imageAttribute);\n          context.stroke();\n        }\n      }\n    };\n\n    if (!fillStrokeOrder) {\n      if (needRestore) {\n        context.save();\n        context.clip();\n      }\n      this.beforeRenderStep(image, context, x, y, doFill, false, fVisible, false, imageAttribute, drawContext, fillCb);\n      _runFill();\n      if (needRestore) {\n        context.restore();\n      }\n      _runStroke();\n    } else {\n      _runStroke();\n      if (needRestore) {\n        context.save();\n        context.clip();\n      }\n      this.beforeRenderStep(image, context, x, y, doFill, false, fVisible, false, imageAttribute, drawContext, fillCb);\n      _runFill();\n      if (needRestore) {\n        context.restore();\n      }\n    }\n\n    this.afterRenderStep(image, context, x, y, doFill, false, fVisible, false, imageAttribute, drawContext, fillCb);\n  }\n\n  draw(image: IGifImage, renderService: IRenderService, drawContext: IDrawContext) {\n    const { context } = renderService.drawParams;\n    if (!context) {\n      return;\n    }\n    const imageAttribute = getTheme(image).image;\n    this._draw(image, imageAttribute, false, drawContext);\n  }\n}\n\nexport class DefaultGifImageRenderContribution\n  extends DefaultRectRenderContribution\n  implements IImageRenderContribution\n{\n  time: BaseRenderContributionTime = BaseRenderContributionTime.afterFillStroke;\n  useStyle: boolean = true;\n  order: number = 0;\n  drawShape(\n    image: any,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    rectAttribute: any,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    if (image.renderFrame && image.playing) {\n      image.renderFrame(context, x, y);\n    }\n  }\n}\n\nexport const defaultGifImageRenderContribution = new DefaultGifImageRenderContribution();\n"]}