{"version":3,"sources":["../src/env/browser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,eAAe,EAAkB,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAErG,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,mBAAmB,EAAE,MAAM,8CAA8C,CAAC;AACnF,OAAO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC,CAAC;AAE9E,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;IAEzD,IAAI,CAAE,gBAAwB,CAAC,cAAc,EAAE;QAC5C,gBAAwB,CAAC,cAAc,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,sBAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;KACzD;AACH,CAAC,CAAC,CAAC;AAEF,gBAAwB,CAAC,cAAc,GAAG,KAAK,CAAC;AAEjD,MAAM,UAAU,cAAc,CAAC,SAAoB,EAAE,aAAsB,IAAI;IAC7E,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;QAC5B,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/B,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACpC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACpC,UAAU,IAAI,gBAAgB,CAAC,SAAS,CAAC,CAAC;KAC3C;AACH,CAAC;AAED,cAAc,CAAC,QAAQ,GAAG,KAAK,CAAC;AAEhC,MAAM,UAAU,cAAc;IAC5B,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5B,CAAC","file":"browser.js","sourcesContent":["import { container, ContainerModule, type Container, EnvContribution } from '@visactor/vrender-core';\n// import { browserEnvModule } from './contributions/module';\nimport { browserCanvasModule } from '../canvas/contributions/browser/modules';\nimport { loadCanvasPicker } from '../picker/canvas-module';\nimport { browserWindowModule } from '../window/contributions/browser-contribution';\nimport { BrowserEnvContribution } from './contributions/browser-contribution';\n\nexport const browserEnvModule = new ContainerModule(bind => {\n  // browser\n  if (!(browserEnvModule as any).isBrowserBound) {\n    (browserEnvModule as any).isBrowserBound = true;\n    bind(BrowserEnvContribution).toSelf().inSingletonScope();\n    bind(EnvContribution).toService(BrowserEnvContribution);\n  }\n});\n\n(browserEnvModule as any).isBrowserBound = false;\n\nexport function loadBrowserEnv(container: Container, loadPicker: boolean = true) {\n  if (!loadBrowserEnv.__loaded) {\n    loadBrowserEnv.__loaded = true;\n    container.load(browserEnvModule);\n    container.load(browserCanvasModule);\n    container.load(browserWindowModule);\n    loadPicker && loadCanvasPicker(container);\n  }\n}\n\nloadBrowserEnv.__loaded = false;\n\nexport function initBrowserEnv() {\n  loadBrowserEnv(container);\n}\n"]}