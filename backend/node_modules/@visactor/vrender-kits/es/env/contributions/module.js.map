{"version":3,"sources":["../src/env/contributions/module.ts"],"names":[],"mappings":"","file":"module.js","sourcesContent":["// import { ContainerModule, EnvContribution } from '@visactor/vrender-core';\n// import { BrowserEnvContribution } from './browser-contribution';\n// import { FeishuEnvContribution } from './feishu-contribution';\n// import { TaroEnvContribution } from './taro-contribution';\n// import { LynxEnvContribution } from './lynx-contribution';\n// import { WxEnvContribution } from './wx-contribution';\n// import { NodeEnvContribution } from './node-contribution';\n\n// let isBrowserBound = false;\n// export const browserEnvModule = new ContainerModule(bind => {\n//   // browser\n//   if (!isBrowserBound) {\n//     isBrowserBound = true;\n//     bind(BrowserEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(BrowserEnvContribution);\n//   }\n// });\n\n// let isFeishuBound = false;\n// export const feishuEnvModule = new ContainerModule(bind => {\n//   // feishu\n//   if (!isFeishuBound) {\n//     isFeishuBound = true;\n//     bind(FeishuEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(FeishuEnvContribution);\n//   }\n// });\n\n// let isTaroBound = false;\n// export const taroEnvModule = new ContainerModule(bind => {\n//   // taro\n//   if (!isTaroBound) {\n//     isTaroBound = true;\n//     bind(TaroEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(TaroEnvContribution);\n//   }\n// });\n\n// let isTTBound = false;\n// export const ttEnvModule = new ContainerModule(bind => {\n//   if (!isTTBound) {\n//     isTTBound = true;\n//     bind(TaroEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(TaroEnvContribution);\n//   }\n// });\n\n// let isLynxBound = false;\n// export const lynxEnvModule = new ContainerModule(bind => {\n//   // lynx\n//   if (!isLynxBound) {\n//     isLynxBound = true;\n//     bind(LynxEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(LynxEnvContribution);\n//   }\n// });\n\n// let isWxBound = false;\n// export const wxEnvModule = new ContainerModule(bind => {\n//   // wx\n//   if (!isWxBound) {\n//     isWxBound = true;\n//     bind(WxEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(WxEnvContribution);\n//   }\n// });\n\n// let isNodeBound = false;\n// export const nodeEnvModule = new ContainerModule(bind => {\n//   // node\n//   if (!isNodeBound) {\n//     isNodeBound = true;\n//     bind(NodeEnvContribution).toSelf().inSingletonScope();\n//     bind(EnvContribution).toService(NodeEnvContribution);\n//   }\n// });\n"]}