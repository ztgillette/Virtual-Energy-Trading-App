{"version":3,"sources":["../src/env/node.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,eAAe,EAAkB,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAGrG,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,EAAE,gBAAgB,EAAE,MAAM,2CAA2C,CAAC;AAC7E,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AAExE,MAAM,CAAC,MAAM,aAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;IAEtD,IAAI,CAAE,aAAqB,CAAC,WAAW,EAAE;QACtC,aAAqB,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;KACtD;AACH,CAAC,CAAC,CAAC;AAEF,aAAqB,CAAC,WAAW,GAAG,KAAK,CAAC;AAE3C,MAAM,UAAU,WAAW,CAAC,SAAoB,EAAE,aAAsB,IAAI;IAC1E,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;QACzB,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9B,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAElC;AACH,CAAC;AACD,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;AAE7B,MAAM,UAAU,WAAW;IACzB,WAAW,CAAC,SAAS,CAAC,CAAC;AACzB,CAAC","file":"node.js","sourcesContent":["import { container, ContainerModule, type Container, EnvContribution } from '@visactor/vrender-core';\n// import { loadMathPicker } from '../picker/math-module';\n// import { nodeEnvModule } from './contributions/module';\nimport { nodeCanvasModule } from '../canvas/contributions/node/modules';\nimport { nodeWindowModule } from '../window/contributions/node-contribution';\nimport { NodeEnvContribution } from './contributions/node-contribution';\n\nexport const nodeEnvModule = new ContainerModule(bind => {\n  // node\n  if (!(nodeEnvModule as any).isNodeBound) {\n    (nodeEnvModule as any).isNodeBound = true;\n    bind(NodeEnvContribution).toSelf().inSingletonScope();\n    bind(EnvContribution).toService(NodeEnvContribution);\n  }\n});\n\n(nodeEnvModule as any).isNodeBound = false;\n\nexport function loadNodeEnv(container: Container, loadPicker: boolean = true) {\n  if (!loadNodeEnv.__loaded) {\n    loadNodeEnv.__loaded = true;\n    container.load(nodeEnvModule);\n    container.load(nodeCanvasModule);\n    container.load(nodeWindowModule);\n    // loadPicker && loadMathPicker(container);\n  }\n}\nloadNodeEnv.__loaded = false;\n\nexport function initNodeEnv() {\n  loadNodeEnv(container);\n}\n"]}