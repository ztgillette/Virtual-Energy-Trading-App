{"version":3,"sources":["../src/canvas/contributions/harmony/context.ts"],"names":[],"mappings":"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","file":"context.js","sourcesContent":["// 参考konva\nimport { injectable, createColor, getScaledStroke, application } from '@visactor/vrender-core';\nimport type {\n  IContext2d,\n  EnvType,\n  ISetStrokeStyleParams,\n  IStrokeStyleParams,\n  ITextStyleParams\n} from '@visactor/vrender-core';\nimport { BrowserContext2d } from '../browser';\nimport { getContextFont } from '@visactor/vutils';\n\n@injectable()\nexport class HarmonyContext2d extends BrowserContext2d implements IContext2d {\n  static env: EnvType = 'harmony';\n\n  declare drawPromise?: Promise<any>;\n\n  declare _globalAlpha: number;\n\n  get globalAlpha(): number {\n    return this._globalAlpha;\n  }\n  set globalAlpha(ga: number) {\n    this.nativeContext.globalAlpha = ga * this.baseGlobalAlpha;\n    this._globalAlpha = ga * this.baseGlobalAlpha;\n  }\n\n  setLineDash(segments: number[]) {\n    const a = arguments;\n    const _context = this.nativeContext;\n\n    if (!!this.nativeContext.setLineDash) {\n      const lineDash = a[0];\n      // lynx环境中lineDash不能为[0, 0]\n      if (lineDash[0] === 0 && lineDash[1] === 0) {\n        return;\n      }\n      lineDash && _context.setLineDash(lineDash);\n    }\n  }\n\n  protected _setStrokeStyle(\n    params: ISetStrokeStyleParams,\n    attribute: IStrokeStyleParams,\n    // 用于渐变色\n    offsetX: number,\n    offsetY: number,\n    defaultParams?: IStrokeStyleParams\n  ) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.strokeAttributes;\n    }\n    const { strokeOpacity = defaultParams.strokeOpacity, opacity = defaultParams.opacity } = attribute;\n    if (strokeOpacity > 1e-12 && opacity > 1e-12) {\n      const {\n        lineWidth = defaultParams.lineWidth,\n        stroke = defaultParams.stroke,\n        lineJoin = defaultParams.lineJoin,\n        lineDash = defaultParams.lineDash,\n        lineCap = defaultParams.lineCap,\n        miterLimit = defaultParams.miterLimit,\n        keepStrokeScale = defaultParams.keepStrokeScale,\n        lineDashOffset = defaultParams.lineDashOffset\n      } = attribute;\n      _context.globalAlpha = strokeOpacity * opacity * this.baseGlobalAlpha;\n      _context.lineWidth = keepStrokeScale ? lineWidth : getScaledStroke(this, lineWidth, this.dpr);\n      _context.strokeStyle = createColor(this, stroke as any, params, offsetX, offsetY);\n      _context.lineJoin = lineJoin;\n      // lynx环境中lineDash不能为[0, 0]\n      if (!(lineDash[0] === 0 && lineDash[1] === 0)) {\n        lineDash && _context.setLineDash(lineDash);\n        _context.lineDashOffset = lineDashOffset;\n      }\n      _context.lineCap = lineCap;\n      _context.miterLimit = miterLimit;\n    }\n  }\n\n  measureText(\n    text: string,\n    method: 'native' | 'simple' | 'quick' = application.global.measureTextMethod\n  ): { width: number } {\n    this.setTransform(1, 0, 0, 1, 0, 0, true, application.global.devicePixelRatio);\n    const data = super.measureText(text, method);\n    return data;\n  }\n\n  setTextStyleWithoutAlignBaseline(params: Partial<ITextStyleParams>, defaultParams?: ITextStyleParams, z?: number) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.textAttributes;\n    }\n    const { scaleIn3d = defaultParams.scaleIn3d } = params;\n    let font = '';\n    if (params.font) {\n      font = params.font;\n    } else {\n      font = getContextFont(params, defaultParams, scaleIn3d && this.camera && this.camera.getProjectionScale(z));\n    }\n    _context.font = (font || '').replace('px', 'vp');\n    const { fontFamily = defaultParams.fontFamily, fontSize = defaultParams.fontSize } = params;\n    this.fontFamily = fontFamily;\n    this.fontSize = fontSize;\n    _context.textAlign = 'left';\n    _context.textBaseline = 'alphabetic';\n    // // 这里不使用defaultParams\n    // _context.textAlign = params.textAlign || 'left';\n    // _context.textBaseline = params.textBaseline || 'alphabetic';\n  }\n  setTextStyle(params: Partial<ITextStyleParams>, defaultParams?: ITextStyleParams, z?: number) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.textAttributes;\n    }\n    let font = '';\n    if (params.font) {\n      font = params.font;\n    } else {\n      font = getContextFont(params, defaultParams, this.camera && this.camera.getProjectionScale(z));\n    }\n    _context.font = (font || '').replace('px', 'vp');\n    const { fontFamily = defaultParams.fontFamily, fontSize = defaultParams.fontSize } = params;\n    this.fontFamily = fontFamily;\n    this.fontSize = fontSize;\n    _context.textAlign = params.textAlign ?? defaultParams.textAlign;\n    _context.textBaseline = params.textBaseline ?? defaultParams.textBaseline;\n  }\n\n  createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern {\n    return null;\n  }\n\n  drawImage(\n    image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap,\n    dstX: number,\n    dstY: number\n  ): void;\n  drawImage(\n    image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap,\n    dstX: number,\n    dstY: number,\n    dstW: number,\n    dstH: number\n  ): void;\n  drawImage(\n    image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap,\n    srcX: number,\n    srcY: number,\n    srcW: number,\n    srcH: number,\n    dstX: number,\n    dstY: number,\n    dstW: number,\n    dstH: number\n  ): void;\n  drawImage(): void {\n    const _context = this.nativeContext;\n    const a = arguments;\n    if (a[0].drawImage) {\n      a[0] = a[0].transferToImageBitmap();\n    }\n    if (a.length === 3) {\n      _context.drawImage(a[0], a[1], a[2]);\n    } else if (a.length === 5) {\n      _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n    } else if (a.length === 9) {\n      _context.drawImage(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n    }\n  }\n\n  draw() {\n    return;\n  }\n}\n"]}