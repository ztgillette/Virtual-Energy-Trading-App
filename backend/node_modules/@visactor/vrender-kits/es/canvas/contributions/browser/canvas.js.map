{"version":3,"sources":["../src/canvas/contributions/browser/canvas.ts"],"names":[],"mappings":"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","file":"canvas.js","sourcesContent":["import { injectable, application, BaseCanvas } from '@visactor/vrender-core';\nimport type { CanvasConfigType, ICanvas, EnvType } from '@visactor/vrender-core';\nimport { BrowserContext2d } from './context';\n\n@injectable()\nexport class BrowserCanvas extends BaseCanvas implements ICanvas {\n  static env: EnvType = 'browser';\n\n  /**\n   * 通过canvas生成一个wrap对象，初始化时不会再设置canvas的属性\n   * @param params\n   */\n  constructor(params: CanvasConfigType) {\n    super(params);\n  }\n\n  init(params: CanvasConfigType) {\n    const { container } = params;\n    if (typeof container === 'string') {\n      const _c = application.global.getElementById(container);\n      if (_c) {\n        this._container = _c;\n      }\n    } else {\n      this._container = container;\n    }\n    this._context = new BrowserContext2d(this, this._dpr);\n    this.initStyle();\n  }\n\n  protected initStyle() {\n    if (!this.controled) {\n      return;\n    }\n    const { nativeCanvas } = this;\n    nativeCanvas.width = this._pixelWidth;\n    nativeCanvas.height = this._pixelHeight;\n\n    const isOffscreen = !nativeCanvas.style;\n    if (!isOffscreen) {\n      this.setCanvasStyle(nativeCanvas, this._x, this._y, this._displayWidth, this._displayHeight);\n    }\n    // if (this.id != null) {\n    //   nativeCanvas.id = this.id.toString();\n    // }\n    if (this._container) {\n      this._container.appendChild(nativeCanvas);\n    }\n    if (!this.visiable) {\n      this.hide();\n    }\n  }\n\n  hide() {\n    this._nativeCanvas && (this._nativeCanvas.style.display = 'none');\n  }\n  show() {\n    this._nativeCanvas && (this._nativeCanvas.style.display = 'block');\n  }\n\n  applyPosition() {\n    const canvas = this._nativeCanvas;\n    canvas.style.position = 'absolute';\n    canvas.style.top = `${this._y}px`;\n    canvas.style.left = `${this._x}px`;\n  }\n\n  resetStyle(params: Partial<CanvasConfigType>) {\n    if (!this.controled) {\n      return;\n    }\n    const {\n      width = this._displayWidth,\n      height = this._displayHeight,\n      dpr = this._dpr,\n      x = this._x,\n      y = this._y\n    } = params;\n    const { nativeCanvas } = this;\n    nativeCanvas.width = width * dpr;\n    nativeCanvas.height = height * dpr;\n\n    const isOffscreen = !nativeCanvas.style;\n    if (!isOffscreen) {\n      this.setCanvasStyle(nativeCanvas, x, y, width, height);\n    }\n    params.id && (nativeCanvas.id = params.id);\n    if (!this.visiable) {\n      this.hide();\n    }\n    // this._context.setScale(dpr, dpr);\n  }\n\n  private setCanvasStyle(canvas: HTMLCanvasElement, x: number, y: number, w: number, h: number) {\n    if (!this.controled) {\n      return;\n    }\n    // canvas.style.padding = '0';\n    // canvas.style.margin = '0';\n    // canvas.style.border = '0';\n    // canvas.style.background = 'transparent';\n    // canvas.style.position = 'absolute';\n    // canvas.style.top = `${y}px`;\n    // canvas.style.left = `${x}px`;\n\n    canvas.style.width = `${w}px`;\n    canvas.style.height = `${h}px`;\n  }\n\n  toDataURL(): string;\n  toDataURL(mimeType: 'image/png'): string;\n  toDataURL(mimeType: 'image/jpeg', quality: number): string;\n  toDataURL(mimeType?: string, quality?: number) {\n    if (mimeType === 'image/jpeg') {\n      return this._nativeCanvas.toDataURL(mimeType, quality);\n    } else if (mimeType === 'image/png') {\n      return this._nativeCanvas.toDataURL(mimeType);\n    }\n    return this._nativeCanvas.toDataURL(mimeType, quality);\n  }\n\n  /**\n   * 设置canvas的size大小，设置context的scale\n   * @param width\n   * @param height\n   */\n  resize(width: number, height: number) {\n    if (!this.controled) {\n      return;\n    }\n    // 设置Canvas的w和h\n    this._pixelWidth = width * this._dpr;\n    this._pixelHeight = height * this._dpr;\n    this._displayWidth = width;\n    this._displayHeight = height;\n    // 可能是离屏canvas\n    if (this._nativeCanvas.style) {\n      this._nativeCanvas.style.width = `${width}px`;\n      this._nativeCanvas.style.height = `${height}px`;\n    }\n    this._nativeCanvas.width = this._pixelWidth;\n    this._nativeCanvas.height = this._pixelHeight;\n\n    // 设置context的dpr\n    const _context = this._context;\n    _context.dpr = this._dpr;\n    // _context.setScale(this._dpr, this._dpr);\n  }\n}\n"]}