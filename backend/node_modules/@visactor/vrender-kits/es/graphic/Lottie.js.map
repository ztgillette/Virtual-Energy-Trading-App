{"version":3,"sources":["../src/graphic/Lottie.ts"],"names":[],"mappings":"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","file":"Lottie.js","sourcesContent":["import { min } from '@visactor/vutils';\nimport { LOTTIE_NUMBER_TYPE } from './constants';\nimport type { IRectGraphicAttribute } from '@visactor/vrender-core';\nimport { getTheme, GraphicType, IContext2d, NOWORK_ANIMATE_ATTR, Rect, vglobal } from '@visactor/vrender-core';\nimport type { ILottie, ILottieGraphicAttribute } from './interface/lottie';\nimport type { AnimationItem } from 'lottie-web';\nimport bodymovin from 'lottie-web';\n\nexport class Lottie extends Rect implements ILottie {\n  type: any = 'lottie';\n  declare attribute: ILottieGraphicAttribute;\n  declare lottieInstance?: AnimationItem;\n  declare canvas?: any;\n\n  static NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;\n\n  constructor(params: ILottieGraphicAttribute) {\n    super(params);\n    this.numberType = LOTTIE_NUMBER_TYPE;\n    this.initLottieWeb(this.attribute.data);\n  }\n\n  setAttributes(params: Partial<ILottieGraphicAttribute>, forceUpdateTag?: boolean, context?: any): void {\n    if (params.data) {\n      this.initLottieWeb(params.data);\n    }\n    return super.setAttributes(params, forceUpdateTag, context);\n  }\n\n  setAttribute(key: string, value: any, forceUpdateTag?: boolean, context?: any): void {\n    if (key === 'data') {\n      this.initLottieWeb(value);\n    }\n    return super.setAttribute(key, value, forceUpdateTag, context);\n  }\n\n  getGraphicTheme(): Required<IRectGraphicAttribute> {\n    return getTheme(this).rect;\n  }\n\n  initLottieWeb(data: string) {\n    // 必须是浏览器环境才行\n    if (vglobal.env !== 'browser') {\n      return;\n    }\n    if (this.lottieInstance) {\n      this.releaseLottieInstance();\n    }\n    const theme = this.getGraphicTheme();\n    const { width = theme.width, height = theme.height } = this.attribute;\n    const canvas = vglobal.createCanvas({ width, height, dpr: vglobal.devicePixelRatio });\n    const params: any = {\n      // wrapper: svgContainer,\n      rendererSettings: {\n        context: canvas.getContext('2d')\n      },\n      animType: 'canvas',\n      loop: true\n    };\n    if (typeof data === 'string') {\n      params.path = data;\n    } else {\n      params.animationData = data;\n    }\n    this.lottieInstance = bodymovin.loadAnimation(params);\n    this.canvas = canvas;\n    this.lottieInstance.addEventListener('drawnFrame', this.renderNextFrame);\n  }\n\n  renderNextFrame = () => {\n    this.stage.renderNextFrame();\n  };\n\n  release(): void {\n    super.release();\n    this.releaseLottieInstance();\n  }\n\n  releaseLottieInstance() {\n    this.lottieInstance.removeEventListener('drawnFrame', this.renderNextFrame);\n    this.lottieInstance.destroy();\n    this.lottieInstance = null;\n  }\n}\n\nexport function createLottie(attributes: ILottieGraphicAttribute): ILottie {\n  return new Lottie(attributes);\n}\n"]}