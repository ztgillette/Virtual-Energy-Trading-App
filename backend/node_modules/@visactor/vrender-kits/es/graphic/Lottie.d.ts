import type { IRectGraphicAttribute } from '@visactor/vrender-core';
import { Rect } from '@visactor/vrender-core';
import type { ILottie, ILottieGraphicAttribute } from './interface/lottie';
import type { AnimationItem } from 'lottie-web';
export declare class Lottie extends Rect implements ILottie {
    type: any;
    attribute: ILottieGraphicAttribute;
    lottieInstance?: AnimationItem;
    canvas?: any;
    static NOWORK_ANIMATE_ATTR: {
        strokeSeg: number;
        boundsPadding: number;
        pickMode: number;
        boundsMode: number;
        customPickShape: number;
        pickable: number;
        childrenPickable: number;
        visible: number;
        zIndex: number;
        layout: number;
        keepDirIn3d: number;
        globalZIndex: number;
        outerBorder: number;
        innerBorder: number;
        lineDash: number;
        lineCap: number;
        lineJoin: number;
        miterLimit: number;
        strokeBoundsBuffer: number;
        scaleCenter: number;
        anchor: number;
        anchor3d: number;
        postMatrix: number;
        backgroundMode: number;
        background: number;
        texture: number;
        cursor: number;
        html: number;
    };
    constructor(params: ILottieGraphicAttribute);
    setAttributes(params: Partial<ILottieGraphicAttribute>, forceUpdateTag?: boolean, context?: any): void;
    setAttribute(key: string, value: any, forceUpdateTag?: boolean, context?: any): void;
    getGraphicTheme(): Required<IRectGraphicAttribute>;
    initLottieWeb(data: string): void;
    renderNextFrame: () => void;
    release(): void;
    releaseLottieInstance(): void;
}
export declare function createLottie(attributes: ILottieGraphicAttribute): ILottie;
