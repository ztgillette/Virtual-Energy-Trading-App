{"version":3,"sources":["../src/graphic/gif-image.ts"],"names":[],"mappings":"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","file":"gif-image.js","sourcesContent":["import type { IImageGraphicAttribute, ISetAttributeContext } from '@visactor/vrender-core';\nimport { application, Image, ResourceLoader } from '@visactor/vrender-core';\nimport type { ITimeline } from '@visactor/vrender-core';\nimport { isString } from '@visactor/vutils';\nimport type { ParsedFrame } from 'gifuct-js';\nimport { decompressFrames, parseGIF } from 'gifuct-js';\nimport type { IGifImage, IGifImageGraphicAttribute } from '../interface/gif-image';\nimport { GIFIMAGE_NUMBER_TYPE } from './constants';\n\nexport class GifImage extends Image implements IGifImage {\n  type: any = 'gif-image';\n  declare attribute: IGifImageGraphicAttribute;\n\n  frameImageData?: ImageData;\n  tempCanvas?: HTMLCanvasElement;\n  tempCtx?: CanvasRenderingContext2D;\n  gifCanvas?: HTMLCanvasElement;\n  gifCtx?: CanvasRenderingContext2D;\n  loadedFrames?: ParsedFrame[];\n  frameIndex?: number;\n  playing?: boolean;\n  lastTime?: number;\n\n  constructor(params: IGifImageGraphicAttribute) {\n    super(params);\n    this.numberType = GIFIMAGE_NUMBER_TYPE;\n    this.loadGif();\n  }\n\n  loadGif() {\n    if (isString(this.attribute.gifImage)) {\n      ResourceLoader.GetFile(this.attribute.gifImage, 'arrayBuffer')\n        .then((res: ArrayBuffer) => {\n          const gif = parseGIF(res);\n          const frames = decompressFrames(gif, true);\n          this.renderGIF(frames);\n        })\n        .catch(e => {\n          console.error('Gif load error: ', e);\n        });\n    } else if (this.attribute.gifImage instanceof ArrayBuffer) {\n      const gif = parseGIF(this.attribute.gifImage);\n      const frames = decompressFrames(gif, true);\n      this.renderGIF(frames);\n    }\n  }\n\n  renderGIF(frames: ParsedFrame[]) {\n    this.loadedFrames = frames;\n    this.frameIndex = 0;\n\n    if (!this.tempCanvas) {\n      this.tempCanvas = application.global.createCanvas({});\n      this.tempCtx = this.tempCanvas.getContext('2d');\n    }\n\n    if (!this.gifCanvas) {\n      this.gifCanvas = application.global.createCanvas({});\n      this.gifCtx = this.gifCanvas.getContext('2d');\n    }\n\n    this.gifCanvas.width = frames[0].dims.width;\n    this.gifCanvas.height = frames[0].dims.height;\n\n    this.playing = true;\n    this.lastTime = new Date().getTime();\n    const animation = this.animate();\n    if (this.attribute.timeline) {\n      animation.setTimeline(this.attribute.timeline);\n    }\n    animation.to({}, 1000, 'linear').loop(Infinity);\n  }\n\n  renderFrame(context: CanvasRenderingContext2D, x: number, y: number) {\n    // get the frame\n    const frame = this.loadedFrames[this.frameIndex || 0];\n\n    if (frame.disposalType === 2) {\n      this.gifCtx.clearRect(0, 0, this.gifCanvas.width, this.gifCanvas.height);\n    }\n\n    // draw image into gifCanvas\n    this.drawPatch(frame);\n\n    // draw gifCanvas into stage\n    this.manipulate(context, x, y);\n\n    // update the frame index\n    const diff = new Date().getTime() - this.lastTime;\n    if (frame.delay < diff) {\n      this.frameIndex++;\n      this.lastTime = new Date().getTime();\n    }\n    if (this.frameIndex >= this.loadedFrames.length) {\n      this.frameIndex = 0;\n    }\n  }\n\n  drawPatch(frame: ParsedFrame) {\n    const dims = frame.dims;\n\n    if (\n      !this.frameImageData ||\n      dims.width !== this.frameImageData.width ||\n      dims.height !== this.frameImageData.height\n    ) {\n      this.tempCanvas.width = dims.width;\n      this.tempCanvas.height = dims.height;\n      this.frameImageData = this.tempCtx.createImageData(dims.width, dims.height);\n    }\n\n    // set the patch data as an override\n    this.frameImageData.data.set(frame.patch);\n\n    // draw the patch back over the canvas\n    this.tempCtx.putImageData(this.frameImageData, 0, 0);\n\n    this.gifCtx.drawImage(this.tempCanvas, dims.left, dims.top);\n  }\n\n  manipulate(context: CanvasRenderingContext2D, x: number, y: number) {\n    context.drawImage(\n      this.gifCanvas,\n      0,\n      0,\n      this.gifCanvas.width,\n      this.gifCanvas.height,\n      x,\n      y,\n      this.attribute.width,\n      this.attribute.height\n    );\n  }\n\n  setAttribute(key: string, value: any, forceUpdateTag?: boolean, context?: ISetAttributeContext): void {\n    super.setAttribute(key, value, forceUpdateTag, context);\n    if (key === 'gifImage') {\n      this.loadGif();\n    }\n  }\n\n  setAttributes(\n    params: Partial<IGifImageGraphicAttribute>,\n    forceUpdateTag?: boolean,\n    context?: ISetAttributeContext\n  ): void {\n    super.setAttributes(params, forceUpdateTag, context);\n    if (params.gifImage) {\n      this.loadGif();\n    }\n  }\n}\n\nexport function createGifImage(attributes: IGifImageGraphicAttribute): IGifImage {\n  return new GifImage(attributes);\n}\n"]}