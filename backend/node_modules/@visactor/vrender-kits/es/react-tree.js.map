{"version":3,"sources":["../src/react-tree.ts"],"names":[],"mappings":"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","file":"react-tree.js","sourcesContent":["import { isArray } from '@visactor/vutils';\nimport { REACT_TO_CANOPUS_EVENTS } from './jsx';\n\n// temp devode for react jsx customLayout\nexport function decodeReactDom(dom: any) {\n  if (!dom || !dom.$$typeof) {\n    // not react\n    return dom;\n  }\n  const type = dom.type;\n  const { attribute, children, stateProxy, id, name } = dom.props;\n  const g = type({ attribute });\n  const out = parseToGraphic(g, dom.props, children);\n  if (out) {\n    return out;\n  }\n  if (stateProxy) {\n    g.stateProxy = stateProxy;\n  }\n\n  g.id = id;\n  g.name = name;\n  parseChildren(children, g);\n  return g;\n}\n\nfunction parseChildren(children: any, g: any) {\n  if (isArray(children)) {\n    children.forEach((item: any) => {\n      if (isArray(item)) {\n        parseChildren(item, g);\n      } else {\n        const c = decodeReactDom(item);\n        c && c.type && g.add(c);\n      }\n    });\n  } else if (children) {\n    g.add(decodeReactDom(children));\n  }\n}\n\nfunction parseToGraphic(g: any, props: any, childrenList: any): any {\n  let isGraphic: boolean = false;\n  let out;\n  switch (g.type) {\n    case 'richtext':\n      break;\n    case 'rich/text':\n      out = g.attribute || {};\n      childrenList && (out.text = childrenList);\n      g.attribute = out;\n      break;\n    case 'rich/image':\n      out = g.attribute || {};\n      break;\n    default:\n      isGraphic = true;\n  }\n\n  if (isGraphic) {\n    Object.keys(props).forEach(k => {\n      const en = REACT_TO_CANOPUS_EVENTS[k];\n      if (en) {\n        g.on(en, props[k]);\n      }\n    });\n  } else if (g.type === 'richtext') {\n    g.attribute.textConfig = childrenList\n      .map((item: any) => {\n        return decodeReactDom(item);\n      })\n      .filter((item: any) => item);\n  }\n  return out;\n}\n"]}