{"version":3,"sources":["../src/picker/canvas-picker-service.ts"],"names":[],"mappings":"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","file":"canvas-picker-service.js","sourcesContent":["import type { IMatrix, IPointLike } from '@visactor/vutils';\n// eslint-disable-next-line\nimport {\n  ContributionProvider,\n  inject,\n  injectable,\n  named,\n  DefaultPickService,\n  DrawContribution,\n  PickItemInterceptor,\n  canvasAllocate,\n  application,\n  PickServiceInterceptor\n} from '@visactor/vrender-core';\nimport type {\n  ICanvas,\n  IContext2d,\n  IGraphic,\n  EnvType,\n  IGlobal,\n  IGraphicPicker,\n  IPickerService,\n  IDrawContribution,\n  IContributionProvider,\n  IPickItemInterceptorContribution,\n  IPickParams,\n  PickResult,\n  IPickServiceInterceptorContribution\n} from '@visactor/vrender-core';\nimport {\n  CanvasArcPicker,\n  CanvasAreaPicker,\n  CanvasCirclePicker,\n  CanvasImagePicker,\n  CanvasLinePicker,\n  CanvasPathPicker,\n  CanvasPickerContribution,\n  CanvasPolygonPicker,\n  CanvasRectPicker,\n  CanvasSymbolPicker,\n  CanvasTextPicker,\n  CanvasRichTextPicker\n} from './contributions/constants';\n\n// 默认的pick-service，提供基本的最优选中策略，尽量不需要用户自己实现contribution\n// 用户可以写plugin\n@injectable()\nexport class DefaultCanvasPickerService extends DefaultPickService implements IPickerService {\n  declare type: 'default';\n  // pcik canvas\n  declare pickCanvas: ICanvas;\n  declare pickContext: IContext2d;\n  declare pickerMap: Map<number, IGraphicPicker>;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(CanvasPickerContribution)\n    protected readonly contributions: IContributionProvider<IGraphicPicker>,\n\n    @inject(DrawContribution)\n    public readonly drawContribution: IDrawContribution,\n    // 拦截器\n    @inject(ContributionProvider)\n    @named(PickItemInterceptor)\n    protected readonly pickItemInterceptorContributions: IContributionProvider<IPickItemInterceptorContribution>,\n\n    @inject(ContributionProvider)\n    @named(PickServiceInterceptor)\n    protected readonly pickServiceInterceptorContributions: IContributionProvider<IPickServiceInterceptorContribution>\n  ) {\n    super(pickItemInterceptorContributions, pickServiceInterceptorContributions);\n    this.global.hooks.onSetEnv.tap('canvas-picker-service', (_, env, global) => {\n      this.configure(global, env);\n    });\n    this.configure(this.global, this.global.env);\n    this.pickerMap = new Map();\n    this.init();\n  }\n\n  init() {\n    this.contributions.getContributions().forEach(item => {\n      this.pickerMap.set(item.numberType, item);\n    });\n    super._init();\n  }\n\n  configure(global: IGlobal, env: EnvType) {\n    // if (!this.global.env) return;\n    // this.contributions.getContributions().forEach(handlerContribution => {\n    //   handlerContribution.configure(this, this.global);\n    // });\n\n    // 创建pick canvas\n    this.pickCanvas = canvasAllocate.shareCanvas();\n    this.pickContext = this.pickCanvas.getContext('2d');\n  }\n\n  // todo: switch统一改为数字map\n  pickItem(graphic: IGraphic, point: IPointLike, parentMatrix: IMatrix | null, params: IPickParams): PickResult | null {\n    if (graphic.attribute.pickable === false) {\n      return null;\n    }\n    // 添加拦截器\n    if (this.InterceptorContributions.length) {\n      for (let i = 0; i < this.InterceptorContributions.length; i++) {\n        const drawContribution = this.InterceptorContributions[i];\n        if (drawContribution.beforePickItem) {\n          const ret = drawContribution.beforePickItem(graphic, this, point, params, { parentMatrix });\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    }\n    const picker = this.pickerMap.get(graphic.numberType);\n    if (!picker) {\n      return null;\n    }\n    const pd = picker.contains(graphic, point, params);\n    const g = pd ? graphic : null;\n\n    const data = {\n      graphic: g,\n      params: pd\n    };\n    if (g) {\n      return data;\n    }\n    // 添加拦截器\n    if (this.InterceptorContributions.length) {\n      for (let i = 0; i < this.InterceptorContributions.length; i++) {\n        const drawContribution = this.InterceptorContributions[i];\n        if (drawContribution.afterPickItem) {\n          const ret = drawContribution.afterPickItem(graphic, this, point, params, { parentMatrix });\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    }\n    return data;\n  }\n}\n"]}