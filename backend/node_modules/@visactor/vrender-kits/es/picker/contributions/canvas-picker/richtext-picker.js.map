{"version":3,"sources":["../src/picker/contributions/canvas-picker/richtext-picker.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,oBAAoB,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAG3F,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IAItC,YAAoD,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAHlF,SAAI,GAAW,UAAU,CAAC;QAC1B,eAAU,GAAW,oBAAoB,CAAC;IAE2C,CAAC;IAEtF,QAAQ,CAAC,QAAmB,EAAE,KAAa,EAAE,MAAoB;QAC/D,IAAI,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAA;AAZY,2BAA2B;IADvC,UAAU,EAAE;IAKE,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;;GAJxB,2BAA2B,CAYvC;SAZY,2BAA2B","file":"richtext-picker.js","sourcesContent":["import type { IPoint } from '@visactor/vutils';\nimport { inject, injectable, RICHTEXT_NUMBER_TYPE, RichTextRender } from '@visactor/vrender-core';\nimport type { IGraphicPicker, IGraphicRender, IPickParams, IRichText } from '@visactor/vrender-core';\n@injectable()\nexport class DefaultCanvasRichTextPicker implements IGraphicPicker {\n  type: string = 'richtext';\n  numberType: number = RICHTEXT_NUMBER_TYPE;\n\n  constructor(@inject(RichTextRender) public readonly canvasRenderer: IGraphicRender) {}\n\n  contains(richtext: IRichText, point: IPoint, params?: IPickParams): boolean {\n    if (richtext.AABBBounds.containsPoint(point)) {\n      return true;\n    }\n    return false;\n  }\n}\n"]}