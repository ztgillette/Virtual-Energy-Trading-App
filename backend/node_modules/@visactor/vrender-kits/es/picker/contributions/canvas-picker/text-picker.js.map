{"version":3,"sources":["../src/picker/contributions/canvas-picker/text-picker.ts"],"names":[],"mappings":"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","file":"text-picker.js","sourcesContent":["import {\n  inject,\n  injectable,\n  getTheme,\n  TextRender,\n  textDrawOffsetX,\n  textLayoutOffsetY,\n  mat4Allocate,\n  TEXT_NUMBER_TYPE\n} from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IText,\n  IThemeAttribute,\n  IGraphicPicker,\n  IGraphicRender,\n  IPickParams\n} from '@visactor/vrender-core';\nimport { Base3dPicker } from '../common/base-3d-picker';\n\n@injectable()\nexport class DefaultCanvasTextPicker extends Base3dPicker<IText> implements IGraphicPicker {\n  type: string = 'text';\n  numberType: number = TEXT_NUMBER_TYPE;\n\n  constructor(@inject(TextRender) public readonly canvasRenderer: IGraphicRender) {\n    super();\n  }\n\n  contains(text: IText, point: IPoint, params?: IPickParams): boolean {\n    // const { textAttribute } = graphicService.themeService.getCurrentTheme();\n    // const {\n    //   x = textAttribute.x,\n    //   y = textAttribute.y,\n    // } = text.attribute;\n    const { pickContext } = params ?? {};\n    if (!pickContext) {\n      return false;\n    }\n\n    const bounds = text.AABBBounds;\n\n    if (!pickContext.camera) {\n      if (!bounds.containsPoint(point)) {\n        return false;\n      }\n      return true;\n    }\n\n    // const symbolAttribute = graphicService.themeService.getCurrentTheme().symbolAttribute;\n    pickContext.highPerformanceSave();\n    const textAttribute = text.getGraphicTheme();\n\n    const { keepDirIn3d = textAttribute.keepDirIn3d } = text.attribute;\n    // 文字如果需要变换，那就一定要计算3d矩阵\n    const computed3dMatrix = !keepDirIn3d;\n\n    const data = this.transform(text, textAttribute, pickContext, computed3dMatrix);\n    const { x, y, z, lastModelMatrix } = data;\n\n    this.canvasRenderer.z = z;\n    let pickPoint = point;\n    if (pickContext.camera) {\n      pickPoint = point.clone();\n      const globalMatrix = text.parent.globalTransMatrix;\n      pickPoint.x = globalMatrix.a * point.x + globalMatrix.c * point.y + globalMatrix.e;\n      pickPoint.y = globalMatrix.b * point.x + globalMatrix.d * point.y + globalMatrix.f;\n    }\n\n    // 详细形状判断\n    let picked = false;\n    this.canvasRenderer.drawShape(\n      text,\n      pickContext,\n      x,\n      y,\n      {} as any,\n      null,\n      (\n        context: IContext2d,\n        symbolAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        const {\n          fontSize = textAttribute.fontSize,\n          textBaseline = textAttribute.textBaseline,\n          textAlign = textAttribute.textAlign\n        } = text.attribute;\n        // 拾取基于xy的rect\n        const bounds = text.AABBBounds;\n        const height = bounds.height();\n        const width = bounds.width();\n        const offsetY = textLayoutOffsetY(textBaseline, height, fontSize);\n        const offsetX = textDrawOffsetX(textAlign, width);\n        context.rect(offsetX + x, offsetY + y, width, height, z);\n        picked = context.isPointInPath(pickPoint.x, pickPoint.y);\n        return picked;\n      },\n      (\n        context: IContext2d,\n        symbolAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        // if (picked) {\n        //   return true;\n        // }\n        // const lineWidth = symbolAttribute.lineWidth || themeAttribute.lineWidth;\n        // pickContext.lineWidth = getScaledStroke(pickContext, lineWidth, pickContext.dpr);\n        // picked = context.isPointInStroke(pickPoint.x, pickPoint.y);\n        return picked;\n      }\n    );\n\n    this.canvasRenderer.z = 0;\n    if (pickContext.modelMatrix !== lastModelMatrix) {\n      mat4Allocate.free(pickContext.modelMatrix);\n    }\n    pickContext.modelMatrix = lastModelMatrix;\n    pickContext.highPerformanceRestore();\n\n    return picked;\n  }\n}\n"]}