{"version":3,"sources":["../src/picker/contributions/canvas-picker/symbol-module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,wBAAwB,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAC5E,OAAO,EAAE,yBAAyB,EAAE,MAAM,iBAAiB,CAAC;AAE5D,IAAI,cAAc,GAAG,KAAK,CAAC;AAC3B,MAAM,CAAC,MAAM,sBAAsB,GAAG,IAAI,eAAe,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAC1F,IAAI,cAAc,EAAE;QAClB,OAAO;KACR;IACD,cAAc,GAAG,IAAI,CAAC;IAEtB,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,yBAAyB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC1E,IAAI,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC","file":"symbol-module.js","sourcesContent":["import { ContainerModule } from '@visactor/vrender-core';\nimport { CanvasPickerContribution, CanvasSymbolPicker } from '../constants';\nimport { DefaultCanvasSymbolPicker } from './symbol-picker';\n\nlet loadSymbolPick = false;\nexport const symbolCanvasPickModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n  if (loadSymbolPick) {\n    return;\n  }\n  loadSymbolPick = true;\n  // symbol picker\n  bind(CanvasSymbolPicker).to(DefaultCanvasSymbolPicker).inSingletonScope();\n  bind(CanvasPickerContribution).toService(CanvasSymbolPicker);\n});\n"]}