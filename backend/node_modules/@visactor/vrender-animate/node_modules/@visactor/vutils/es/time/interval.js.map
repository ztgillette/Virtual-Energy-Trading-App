{"version":3,"sources":["../src/time/interval.ts"],"names":[],"mappings":"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","file":"interval.js","sourcesContent":["export const SECOND = 1000;\nexport const MINUTE = 60 * SECOND;\nexport const HOUR = 60 * MINUTE;\nexport const DAY = 24 * HOUR;\nexport const MONTH = DAY * 31;\nexport const YEAR = DAY * 365;\n\nexport const yearFloor = (date: Date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const yearOffset = (date: Date, step: number) => {\n  date.setFullYear(date.getFullYear() + step);\n  return date;\n};\n\nexport const yearCount = (start: Date, end: Date) => {\n  return end.getFullYear() - start.getFullYear();\n};\nexport const yearField = (date: Date) => date.getFullYear();\n\nexport const utcYearFloor = (date: Date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const utcYearOffset = (date: Date, step: number) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n  return date;\n};\n\nexport const utcYearCount = (start: Date, end: Date) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n};\nexport const utcYearField = (date: Date) => date.getUTCFullYear();\n\nexport const monthFloor = (date: Date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const monthOffset = (date: Date, step: number) => {\n  date.setMonth(date.getMonth() + step);\n\n  return date;\n};\n\nexport const monthCount = (start: Date, end: Date) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n};\nexport const monthField = (date: Date) => date.getMonth();\n\nexport const utcMonthFloor = (date: Date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const utcMonthOffset = (date: Date, step: number) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n\n  return date;\n};\n\nexport const utcMonthCount = (start: Date, end: Date) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n};\nexport const utcMonthField = (date: Date) => date.getUTCMonth();\n\nexport const dayFloor = (date: Date) => {\n  date.setHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const dayOffset = (date: Date, step: number) => {\n  date.setDate(date.getDate() + step);\n  return date;\n};\nexport const dayCount = (start: Date, end: Date) => {\n  return (+end - +start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * MINUTE) / DAY;\n};\nexport const dayField = (date: Date) => date.getDate() - 1;\n\nexport const utcDayFloor = (date: Date) => {\n  date.setUTCHours(0, 0, 0, 0);\n\n  return date;\n};\nexport const utcDayOffset = (date: Date, step: number) => {\n  date.setUTCDate(date.getUTCDate() + step);\n  return date;\n};\n\nexport const utcDayCount = (start: Date, end: Date) => {\n  return (+end - +start) / DAY;\n};\nexport const utcDayField = (date: Date) => date.getUTCDate() - 1;\n\nexport const hourFloor = (date: Date) => {\n  date.setTime(+date - date.getMilliseconds() - date.getSeconds() * SECOND - date.getMinutes() * MINUTE);\n\n  return date;\n};\nexport const hourOffset = (date: Date, step: number) => {\n  date.setHours(date.getHours() + step);\n  return date;\n};\n\nexport const hourCount = (start: Date, end: Date) => {\n  return (+end - +start) / HOUR;\n};\nexport const hourField = (date: Date) => date.getHours();\n\nexport const utcHourFloor = (date: Date) => {\n  date.setTime(+date - date.getUTCMilliseconds() - date.getUTCSeconds() * SECOND - date.getUTCMinutes() * MINUTE);\n\n  return date;\n};\nexport const utcHourOffset = (date: Date, step: number) => {\n  date.setUTCHours(date.getUTCHours() + step);\n  return date;\n};\n\nexport const utcHourField = (date: Date) => date.getUTCHours();\n\nexport const minuteFloor = (date: Date) => {\n  date.setTime(+date - date.getMilliseconds() - date.getSeconds() * SECOND);\n\n  return date;\n};\nexport const minuteOffset = (date: Date, step: number) => {\n  date.setMinutes(date.getMinutes() + step);\n  return date;\n};\n\nexport const minuteCount = (start: Date, end: Date) => {\n  return (+end - +start) / MINUTE;\n};\n\nexport const minuteField = (date: Date) => {\n  return date.getMinutes();\n};\n\nexport const utcMinuteFloor = (date: Date) => {\n  date.setTime(+date - date.getUTCMilliseconds() - date.getUTCSeconds() * SECOND);\n\n  return date;\n};\nexport const utcMinuteOffset = (date: Date, step: number) => {\n  date.setUTCMinutes(date.getUTCMinutes() + step);\n  return date;\n};\n\nexport const utcMinuteField = (date: Date) => {\n  return date.getUTCMinutes();\n};\n\nexport const secondFloor = (date: Date) => {\n  date.setTime(+date - date.getMilliseconds());\n\n  return date;\n};\nexport const secondOffset = (date: Date, step: number) => {\n  date.setSeconds(date.getSeconds() + step);\n  return date;\n};\n\nexport const secondCount = (start: Date, end: Date) => {\n  return (+end - +start) / SECOND;\n};\nexport const secondField = (date: Date) => date.getSeconds();\n\nexport const utcSecondFloor = (date: Date) => {\n  date.setTime(+date - date.getUTCMilliseconds());\n\n  return date;\n};\nexport const utcSecondOffset = (date: Date, step: number) => {\n  date.setUTCSeconds(date.getUTCSeconds() + step);\n  return date;\n};\n\nexport const utcSecondField = (date: Date) => date.getUTCSeconds();\n\nexport const millisecondsFloor = (date: Date) => {\n  return date;\n};\nexport const millisecondsOffset = (date: Date, step: number) => {\n  date.setTime(+date + step);\n  return date;\n};\nexport const millisecondsCount = (start: Date, end: Date) => +end - +start;\n\nexport const generateCeil = (floor: (d: Date) => Date, offset: (d: Date, step: number) => Date) => {\n  return (date: Date) => {\n    const n = new Date(+date - 1);\n\n    offset(n, 1);\n    floor(n);\n\n    return n;\n  };\n};\n\nexport const generateCount = (floor: (d: Date) => Date, count: (start: Date, end: Date) => number) => {\n  return (start: Date | number, end: Date | number) => {\n    const a = new Date();\n    const b = new Date();\n\n    a.setTime(+start);\n    b.setTime(+end);\n\n    floor(a);\n    floor(b);\n\n    return Math.floor(count(a, b));\n  };\n};\n\nexport const generateStepInterval = (\n  step: number,\n  {\n    floor,\n    offset,\n    field,\n    count\n  }: {\n    floor: (d: Date) => Date;\n    offset: (d: Date, step: number) => Date;\n    count: (start: Date, end: Date) => number;\n    field?: (d: Date) => number;\n  }\n) => {\n  const s = Math.floor(step);\n\n  if (!Number.isFinite(s) || s <= 0) {\n    return null;\n  }\n  if (s <= 1) {\n    return {\n      floor,\n      offset,\n      ceil: generateCeil(floor, offset)\n    };\n  }\n  const stepCount = generateCount(floor, count);\n  const testFunc = field\n    ? (d: Date) => {\n        return field(d) % s === 0;\n      }\n    : (d: Date) => {\n        return stepCount(0, d) % s === 0;\n      };\n\n  const stepFloor = (date: Date) => {\n    if (!Number.isNaN(+date)) {\n      floor(date);\n      while (!testFunc(date)) {\n        date.setTime(+date - 1);\n        floor(date);\n      }\n    }\n\n    return date;\n  };\n\n  const stepOffset = (date: Date, stepCount: number) => {\n    if (!Number.isNaN(+date)) {\n      if (s < 0) {\n        while (++stepCount <= 0) {\n          offset(date, -1);\n          while (!testFunc(date)) {\n            offset(date, -1);\n          }\n        }\n      } else {\n        while (--stepCount >= 0) {\n          offset(date, +1);\n          while (!testFunc(date)) {\n            offset(date, +1);\n          }\n        }\n      }\n    }\n\n    return date;\n  };\n\n  return {\n    floor: stepFloor,\n    offset: stepOffset,\n    ceil: generateCeil(stepFloor, stepOffset)\n  };\n};\n\nexport const getIntervalOptions = (type: string, isUTC?: boolean) => {\n  if (type === 'year' && isUTC) {\n    return { floor: utcYearFloor, offset: utcYearOffset, count: utcYearCount, field: utcYearField };\n  }\n  if (type === 'month' && isUTC) {\n    return { floor: utcMonthFloor, offset: utcMonthOffset, count: utcMonthCount, field: utcMonthField };\n  }\n  if (type === 'day' && isUTC) {\n    return { floor: utcDayFloor, offset: utcDayOffset, count: utcDayCount, field: utcDayField };\n  }\n  if (type === 'hour' && isUTC) {\n    return { floor: utcHourFloor, offset: utcHourOffset, count: hourCount, field: utcHourField };\n  }\n  if (type === 'minute' && isUTC) {\n    return { floor: utcMinuteFloor, offset: utcMinuteOffset, count: minuteCount, field: utcMinuteField };\n  }\n  if (type === 'second' && isUTC) {\n    return { floor: utcSecondFloor, offset: utcSecondOffset, count: secondCount, field: utcSecondField };\n  }\n  if (type === 'year') {\n    return { floor: yearFloor, offset: yearOffset, count: yearCount, field: yearField };\n  }\n  if (type === 'month') {\n    return { floor: monthFloor, offset: monthOffset, count: monthCount, field: monthField };\n  }\n  if (type === 'day') {\n    return { floor: dayFloor, offset: dayOffset, count: dayCount, field: dayField };\n  }\n  if (type === 'hour') {\n    return { floor: hourFloor, offset: hourOffset, count: hourCount, field: hourField };\n  }\n  if (type === 'minute') {\n    return { floor: minuteFloor, offset: minuteOffset, count: minuteCount, field: minuteField };\n  }\n  if (type === 'second') {\n    return { floor: secondFloor, offset: secondOffset, count: secondCount, field: secondField };\n  }\n\n  return { floor: millisecondsFloor, offset: millisecondsOffset, count: millisecondsCount };\n};\n"]}