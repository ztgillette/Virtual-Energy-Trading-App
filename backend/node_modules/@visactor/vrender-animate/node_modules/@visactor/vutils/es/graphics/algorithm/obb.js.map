{"version":3,"sources":["../src/graphics/algorithm/obb.ts"],"names":[],"mappings":"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","file":"obb.js","sourcesContent":["import type { Point, OBB } from './interface';\nimport { lengthFromPointToLine, crossProductPoint } from '../../math';\n\nlet dirX: number;\nlet dirY: number;\nlet normalX: number;\nlet normalY: number;\nlet len: number;\nlet lineWidthDiv2: number;\nlet width: number;\nlet height: number;\nexport function getOBBFromLine(point1: Point, point2: Point, lineWidth: number): OBB {\n  dirX = point2.x - point1.x;\n  dirY = point2.y - point1.y;\n  (normalX = dirY), (normalY = -dirX);\n  width = len = Math.sqrt(normalX * normalX + normalY * normalY);\n  height = lineWidth;\n  normalX /= len;\n  normalY /= len;\n  lineWidthDiv2 = lineWidth / 2;\n  dirX = lineWidthDiv2 * normalX;\n  dirY = lineWidthDiv2 * normalY;\n  const point11: Point = { x: point1.x + dirX, y: point1.y + dirY };\n  const point12: Point = { x: point1.x - dirX, y: point1.y - dirY };\n  const point13: Point = { x: point2.x + dirX, y: point2.y + dirY };\n  const point14: Point = { x: point2.x - dirX, y: point2.y - dirY };\n\n  return {\n    point1: point11,\n    point2: point12,\n    point3: point13,\n    point4: point14,\n    width,\n    height,\n    left: Math.min(point1.x, point2.x) - Math.abs(dirX),\n    top: Math.min(point1.y, point2.y) - Math.abs(dirY)\n  };\n}\n\nconst point1: Point = { x: 0, y: 0 };\nconst point2: Point = { x: 0, y: 0 };\nexport function pointInOBB(point: Point, obb: OBB): boolean {\n  point1.x = (obb.point1.x + obb.point2.x) / 2;\n  point1.y = (obb.point1.y + obb.point2.y) / 2;\n  point2.x = (obb.point3.x + obb.point4.x) / 2;\n  point2.y = (obb.point3.y + obb.point4.y) / 2;\n\n  return pointInLine(point, point1, point2, obb.height);\n}\n\nexport function pointInLine(point: Point, point1: Point, point2: Point, lineWidth: number): boolean {\n  return lengthFromPointToLine(point, point1, point2) <= lineWidth / 2 && pointBetweenLine(point, point1, point2);\n}\n\nconst dir1: Point = { x: 0, y: 0 };\nconst dir2: Point = { x: 0, y: 0 };\nconst normal: Point = { x: 0, y: 0 };\nexport function pointBetweenLine(point: Point, point1: Point, point2: Point) {\n  dir1.x = point1.x - point.x;\n  dir1.y = point1.y - point.y;\n  dir2.x = point2.x - point.x;\n  dir2.y = point2.y - point.y;\n  normal.x = point1.y - point2.y;\n  normal.y = point2.x - point1.x;\n  return crossProductPoint(dir1, normal) * crossProductPoint(dir2, normal) < 0;\n}\n"]}