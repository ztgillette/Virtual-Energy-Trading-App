{"version":3,"sources":["../src/graphics/graph-util.ts"],"names":[],"mappings":";;;AASA,SAAS,cAAc,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAe;IAC/F,OAAO,CACL,EAAE;QACF,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAClC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACtC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACpC,CAAC,QAAQ,IAAI,EAAE,CAAC;QAChB,KAAK;QACL,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CACzC,CAAC;AACJ,CAAC;AAED,MAAa,WAAW;IAMtB,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;IACD,SAAS,CAAC,MAA0B;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;IAED,WAAW,CAAC,EAAe;QACzB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;YACpE,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAEO,mBAAmB,CAAC,EAAe;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC;YAChF,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK;YAC1C,MAAM,EAAE,EAAE,CAAC,QAAQ;SACpB,CAAC;IACJ,CAAC;IAEO,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAe;QAE9C,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;SACpD;QACD,OAAO;YACL,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;YAC1D,MAAM,EAAE,QAAQ;SACjB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,MAA0B;QAC/C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACzB,WAAW,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;SAChD;QACD,OAAO,WAAW,CAAC,QAAQ,CAAC;IAC9B,CAAC;CACF;AA3DD,kCA2DC","file":"graph-util.js","sourcesContent":["interface ITextConfig {\n  text: string;\n  fontSize: number;\n  fontStyle?: string;\n  fontVariant?: string;\n  fontWeight?: number | string;\n  fontFamily?: string;\n}\n\nfunction getContextFont({ fontStyle, fontVariant, fontWeight, fontSize, fontFamily }: ITextConfig): string {\n  return (\n    '' +\n    (fontStyle ? fontStyle + ' ' : '') +\n    (fontVariant ? fontVariant + ' ' : '') +\n    (fontWeight ? fontWeight + ' ' : '') +\n    (fontSize || 12) +\n    'px ' +\n    (fontFamily ? fontFamily : 'sans-serif')\n  );\n}\n\nexport class GraphicUtil {\n  canvas?: HTMLCanvasElement;\n  ctx?: CanvasRenderingContext2D | null;\n\n  static instance?: GraphicUtil;\n\n  constructor(canvas?: HTMLCanvasElement) {\n    this.canvas = canvas;\n    if (canvas) {\n      this.ctx = canvas.getContext('2d');\n    }\n  }\n  setCanvas(canvas?: HTMLCanvasElement) {\n    this.canvas = canvas;\n    if (canvas) {\n      this.ctx = canvas.getContext('2d');\n    }\n  }\n\n  measureText(tc: ITextConfig) {\n    if (!this.canvas) {\n      console.warn('[warn] no canvas, measureText might be not accurate');\n      return this.estimate(tc);\n    }\n    return this.measureTextByCanvas(tc);\n  }\n\n  private measureTextByCanvas(tc: ITextConfig): { width: number; height: number } {\n    if (!this.ctx) {\n      console.error('[error!!!]measureTextByCanvas can not be called without canvas');\n      return { width: -1, height: tc.fontSize };\n    }\n    this.ctx.font = getContextFont(tc);\n    return {\n      width: this.ctx.measureText(tc.text).width,\n      height: tc.fontSize\n    };\n  }\n\n  private estimate({ text, fontSize }: ITextConfig): { width: number; height: number } {\n    // 假设只有英文和中文字符\n    let eCharLen = 0; // 英文字符\n    let cCharLen = 0; // 中文字符\n    // 判断ascii码，如果是\n    for (let i = 0; i < text.length; i++) {\n      text.charCodeAt(i) < 128 ? eCharLen++ : cCharLen++;\n    }\n    return {\n      width: ~~(0.8 * eCharLen * fontSize + cCharLen * fontSize),\n      height: fontSize\n    };\n  }\n\n  static getDefaultUtils(canvas?: HTMLCanvasElement) {\n    if (!GraphicUtil.instance) {\n      GraphicUtil.instance = new GraphicUtil(canvas);\n    }\n    return GraphicUtil.instance;\n  }\n}\n"]}