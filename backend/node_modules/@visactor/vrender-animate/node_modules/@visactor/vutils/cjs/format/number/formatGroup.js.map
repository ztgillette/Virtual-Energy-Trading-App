{"version":3,"sources":["../src/format/number/formatGroup.ts"],"names":[],"mappings":";;;AAOA,SAAgB,WAAW,CAAC,QAAkB,EAAE,SAAiB;IAC/D,OAAO,UAAU,KAAa,EAAE,KAAa;QAC3C,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACrB,MAAM,CAAC,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACrB,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE;gBAC1B,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC;aACjC;YACD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE;gBAC7B,MAAM;aACP;YACD,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;SAC/C;QAED,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC,CAAC;AACJ,CAAC;AArBD,kCAqBC","file":"formatGroup.js","sourcesContent":["/* Adapted from d3-time-format by Mike Bostock\n * https://github.com/d3/d3-format\n * Licensed under the ISC\n\n * License: https://github.com/d3/d3-format/blob/main/LICENSE\n * @license\n */\nexport function formatGroup(grouping: number[], thousands: string) {\n  return function (value: string, width: number) {\n    let i = value.length;\n    const t = [];\n    let j = 0;\n    let g = grouping[0];\n    let length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) {\n        g = Math.max(1, width - length);\n      }\n      t.push(value.substring((i -= g), i + g));\n      if ((length += g + 1) > width) {\n        break;\n      }\n      g = grouping[(j = (j + 1) % grouping.length)];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n"]}