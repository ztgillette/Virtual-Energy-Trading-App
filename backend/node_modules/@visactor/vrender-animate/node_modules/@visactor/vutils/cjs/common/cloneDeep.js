"use strict";

var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

const isArray_1 = __importDefault(require("./isArray")), isBoolean_1 = __importDefault(require("./isBoolean")), isDate_1 = __importDefault(require("./isDate")), isNumber_1 = __importDefault(require("./isNumber")), isString_1 = __importDefault(require("./isString")), isValid_1 = __importDefault(require("./isValid"));

function cloneDeep(value, ignoreWhen, excludeKeys) {
    let result;
    if (!(0, isValid_1.default)(value) || "object" != typeof value || ignoreWhen && ignoreWhen(value)) return value;
    const isArr = (0, isArray_1.default)(value), length = value.length;
    result = isArr ? new Array(length) : "object" == typeof value ? {} : (0, isBoolean_1.default)(value) || (0, 
    isNumber_1.default)(value) || (0, isString_1.default)(value) ? value : (0, isDate_1.default)(value) ? new Date(+value) : void 0;
    const props = isArr ? void 0 : Object.keys(Object(value));
    let index = -1;
    if (result) for (;++index < (props || value).length; ) {
        const key = props ? props[index] : index, subValue = value[key];
        excludeKeys && excludeKeys.includes(key.toString()) ? result[key] = subValue : result[key] = cloneDeep(subValue, ignoreWhen, excludeKeys);
    }
    return result;
}

exports.default = cloneDeep;
//# sourceMappingURL=cloneDeep.js.map