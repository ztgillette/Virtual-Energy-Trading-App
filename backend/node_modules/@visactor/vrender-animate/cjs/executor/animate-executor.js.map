{"version":3,"sources":["../src/executor/animate-executor.ts"],"names":[],"mappings":";;;AAaA,6CAAkE;AASlE,MAAa,eAAe;IAG1B,MAAM,CAAC,sBAAsB,CAAC,IAAY,EAAE,OAAoC;QAC9E,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACpD,CAAC;IAkBD,YAAY,MAAgB;QAbpB,cAAS,GAAe,EAAE,CAAC;QAG3B,oBAAe,GAAmB,EAAE,CAAC;QAErC,kBAAa,GAAmB,EAAE,CAAC;QAGnC,aAAQ,GAAY,KAAK,CAAC;QAG1B,iBAAY,GAAW,CAAC,CAAC;QAG/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAKD,OAAO,CAAC,EAAe;QACrB,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAG9B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC1C,EAAE,EAAE,CAAC;aACN;SACF;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAChC,EAAE,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAKD,KAAK,CAAC,EAAe;QACnB,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC9B,EAAE,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAKO,eAAe,CAAC,OAAiB;QACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QAGpB,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QAGD,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE;YACjB,IAAI,CAAC,YAAY,EAAE,CAAC;YAGpB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACjC;YAGD,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,MAAwB,EAAE,UAAmB,EAAE,KAAgB;;QACzE,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC5E,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAIpE,MAAM,YAAY,qBAA6B,MAAM,CAAE,CAAC;QACxD,YAAY,CAAC,aAAa,GAAG,CAAC,CAAC;QAC/B,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;QAEnC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAElE,IAAI,UAAU,EAAE;YACd,MAAM,UAAU,GAAI,YAAmC,CAAC,UAAU,CAAC;YACnE,IAAI,CAAC,IAAA,gBAAO,EAAC,UAAU,CAAC,EAAE;gBACvB,YAAmC,CAAC,UAAU,GAAG,CAAC,UAAU,CAAC,CAAC;aAChE;YACD,IAAI,SAAS,GAAG,CAAC,CAAC;YAChB,YAAmC,CAAC,UAAoC,GACvE,YAAmC,CAAC,UACtC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACZ,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBACvD,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBACjE,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC/D,SAAS,IAAI,KAAK,GAAG,QAAQ,GAAG,UAAU,CAAC;gBAC3C,uCACK,KAAK,KACR,KAAK;oBACL,UAAU;oBACV,QAAQ,IACR;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,QAAQ,EAAE;gBACZ,aAAa,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAE,QAAmB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAChG;YACD,YAAY,CAAC,aAAa,GAAG,aAAa,CAAC;YAE3C,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,SAAS,EAAE;gBACb,MAAM,UAAU,GAAG,SAAS,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACxE,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD;YACC,YAAmC,CAAC,UAAoC,GACvE,YAAmC,CAAC,UACtC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACZ,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC3B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;iBACrB;gBACD,uCACK,KAAK,KACR,KAAK,EAAG,KAAK,CAAC,KAAgB,GAAG,KAAK,EACtC,UAAU,EAAG,KAAK,CAAC,UAAqB,GAAG,KAAK,EAChD,QAAQ,EAAG,KAAK,CAAC,QAAmB,GAAG,KAAK,EAC5C,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;;wBAC5B,MAAM,MAAM,GAAG,MAAA,MAAM,CAAC,MAAM,mCAAI,eAAe,CAAC,iBAAiB,CAAC,MAAC,MAAM,CAAC,IAAY,mCAAI,QAAQ,CAAC,CAAC;wBACpG,MAAM,UAAU,GACd,MAAM,IAAI,IAAA,mBAAU,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACzG,uCACK,MAAM,KACT,MAAM;4BACN,UAAU,IACV;oBACJ,CAAC,CAAC,IACF;YACJ,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,aAAa,GAAG,aAAa,GAAG,KAAK,CAAC;YAClD,YAAmC,CAAC,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC;SACpE;aAAM;YACL,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAE,MAA+B,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAClF,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAE,MAA+B,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAC5F,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAE,MAA+B,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;YAC1F,MAAM,QAAQ,GAAG,KAAK,GAAG,UAAU,GAAG,QAAQ,CAAC;YAE/C,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,QAAQ,EAAE;gBACZ,aAAa,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAE,QAAmB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/F;YACD,YAAY,CAAC,aAAa,GAAG,aAAa,CAAC;YAC3C,YAAY,CAAC,MAAM;gBACjB,MAAC,MAA+B,CAAC,MAAM,mCACvC,eAAe,CAAC,iBAAiB,CAAC,MAAC,MAA+B,CAAC,IAAI,mCAAI,QAAQ,CAAC,CAAC;YAEvF,MAAM,UAAU,GACd,YAAY,CAAC,MAAM,IAAI,IAAA,mBAAU,EAAC,YAAY,CAAC,MAAM,CAAC;gBACpD,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBACtE,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,CAAC;YACR,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;YAErC,IAAI,SAAS,EAAE;gBACb,MAAM,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,QAAQ,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC5F,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,YAAY,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;gBACnC,YAAY,CAAC,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;gBAC7C,YAAY,CAAC,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;gBACzC,YAAY,CAAC,aAAa,GAAG,aAAa,GAAG,KAAK,CAAC;gBAClD,YAAqC,CAAC,SAAS,GAAG,SAAS,CAAC;aAC9D;SACF;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,OAAO,CAAC,MAA6C;QACnD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvB;IACH,CAAC;IAKD,QAAQ,CAAC,MAAwB;QAC/B,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACtD;QAGD,MAAM,UAAU,GAAG,YAAY,IAAI,MAAM,CAAC;QAG1C,IAAI,gBAA4B,CAAC;QAGjC,IAAI,UAAU,IAAI,MAAM,CAAC,WAAW,EAAE;YACpC,gBAAgB,GAAG,CAAC,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAK,IAAI,CAAC,OAAO,CAAC,WAAW,EAAiB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;;gBACjG,OAAQ,MAA6B,CAAC,WAAW,CAAC,MAAA,MAAC,KAAK,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;SACJ;QAGD,IAAI,UAAU,IAAK,MAA6B,CAAC,IAAI,EAAE;YACrD,gBAAgB,GAAG,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAK,IAAI,CAAC,OAAO,CAAC,WAAW,EAAiB,CAAC;YAClF,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;gBAC7B,OAAQ,MAA6B,CAAC,IAAI,CACxC,MAAA,MAAC,CAAC,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAC7B,MAAA,MAAC,CAAC,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAC7B,CAAC,EACD,CAAC,EACD,EAAE,CACH,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QAID,MAAM,EAAE,GAAG,UAAU;YACnB,CAAC,CAAC,CAAC,KAAe,EAAE,KAAa,EAAE,KAAa,EAAE,EAAE;gBAChD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;gBAEjE,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAkC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAClG,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBAC/B;YACH,CAAC;YACH,CAAC,CAAC,CAAC,KAAe,EAAE,KAAa,EAAE,KAAa,EAAE,EAAE;gBAChD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;gBAEjE,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAoC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACtG,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC;QAGN,IAAI,gBAAgB,EAAE;YACpB,gBAAgB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;SACvF;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;YAClC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,KAAiB,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;SACtG;QAED,OAAO;IACT,CAAC;IAKO,qBAAqB,CAC3B,MAA4B,EAC5B,OAAiB,EACjB,KAAa,EACb,KAAa;;QAEb,MAAM,EACJ,IAAI,GAAG,QAAQ,EACf,OAAO,EACP,gBAAgB,EAChB,MAAM,GAAG,QAAQ,EACjB,KAAK,GAAG,CAAC,EACT,UAAU,GAAG,CAAC,EACd,QAAQ,GAAG,GAAG,EACd,SAAS,GAAG,CAAC,EACb,aAAa,GAAG,CAAC,EACjB,IAAI,EACJ,MAAM,EACN,QAAQ,GAAG,CAAC,EACZ,OAAO,EACP,MAAM,EACN,UAAU,EACV,cAAc,EACf,GAAG,MAAa,CAAC;QAGlB,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAyB,CAAC;QACzD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE5B,MAAM,UAAU,GAAG,IAAA,mBAAU,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAG9F,MAAM,KAAK,GAAG,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAA,OAAO,CAAC,OAAO,0CAAE,QAAQ,CAAC;QAC3C,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,KAAK,GAAG,MAAA,KAAK,CAAC,QAAQ,CAAC,mCAAI,KAAK,CAAC;SAClC;QAGD,OAAO,CAAC,OAAO,CAAC,SAAmB,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,KAAK,GAAG,aAAa,GAAG,UAAU,CAAC;QAChD,IAAI,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAU/B,IAAI,eAAe,GAAG,IAAI,CAAC;QAC3B,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;QACtB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,eAAe,EAAE;gBACpB,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACjE;YACD,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;SAC/B;QACD,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,eAAe,EAAE;gBACpB,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACjE;YACD,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;SAC7B;QAED,IAAI,CAAC,iBAAiB,CACpB,OAAO,EACP,MAAM,EACN,UAAU,EACV,IAAI,EACJ,KAAK,EACL,QAAkB,EAClB,MAAM,EACN,gBAAgB,EAChB,cAAc,EACd,OAAO,EACP,IAAI,EACJ,OAAO,CACR,CAAC;QAEF,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,aAAa,EAAE;YACjB,UAAU,GAAG,aAAa,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;SAClD;QAGD,MAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAClH,IAAI,eAAe,GAAG,CAAC,EAAE;YACvB,UAAU,IAAI,eAAyB,CAAC;SACzC;QAED,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1B;QAGD,IAAI,IAAI,IAAK,IAAe,GAAG,CAAC,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,IAAc,CAAC,CAAC;SAC9B;QAGD,IAAI,MAAM,EAAE;YACV,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtB;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,iBAAiB,CACvB,OAAiB,EACjB,MAAmE,EACnE,UAAkB,EAClB,IAAgC,EAChC,KAA0B,EAC1B,QAAgB,EAChB,MAAkB,EAClB,gBAAqB,EACrB,cAAmB,EACnB,OAAY,EACZ,IAAY,EACZ,OAAiB;;QAGjB,IAAI,MAAM,IAAI,UAAU,EAAE;YACxB,MAAM,YAAY,mBAChB,KAAK,EAAE,CAAA,MAAA,OAAO,CAAC,KAAK,0CAAE,KAAK,KAAI,CAAC,EAChC,MAAM,EAAE,CAAA,MAAA,OAAO,CAAC,KAAK,0CAAE,MAAM,KAAI,CAAC,EAClC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAChD,CAAC;YACF,MAAM,UAAU,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,OAAO,CAAC,IAAI,CACV,IAAI,EACJ,MAAA,CAAC,YAAY,KAAI,MAAA,YAAY,CAAC,IAAI,0CAAG,CAAC,CAAC,CAAA,CAAC,mCAAI,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,EACtE,OAAO,EACP,YAAY,CACb;gBACH,CAAC,CAAC,OAAO,CAAC;YACZ,YAAY,CAAC,OAAO,GAAG,UAAU,CAAC;YAClC,YAAY,CAAC,cAAc,GAAG,cAAc,CAAC;YAC7C,IAAI,UAAU,KAAK,CAAC,EAAE;gBAEpB,IAAI,CAAC,qBAAqB,CACxB,OAAO,EACP,MAAqC,EACrC,IAAI,EACJ,KAAK,EACL,QAAkB,EAClB,MAAM,EACN,YAAY,CACb,CAAC;aACH;iBAAM,IAAI,UAAU,KAAK,CAAC,EAAE;gBAE3B,IAAI,CAAC,iCAAiC,CACpC,OAAO,EACP,MAAuC,EACvC,KAAK,EACL,QAAkB,EAClB,MAAM,EACN,YAAY,CACb,CAAC;aACH;SACF;aAAM,IAAI,IAAI,KAAK,IAAI,EAAE;YACxB,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,QAAkB,EAAE,MAAM,CAAC,CAAC;SAC/C;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,QAAkB,EAAE,MAAM,CAAC,CAAC;SACjD;IACH,CAAC;IAKO,mBAAmB,CAAC,MAA0B,EAAE,OAAiB,EAAE,KAAa,EAAE,KAAa;;QACrG,MAAM,EAAE,UAAU,EAAE,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,MAAa,CAAC;QAG3G,MAAM,KAAK,GAAG,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAA,OAAO,CAAC,OAAO,0CAAE,QAAQ,CAAC;QAC3C,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,KAAK,GAAG,MAAA,KAAK,CAAC,QAAQ,CAAC,mCAAI,KAAK,CAAC;SAClC;QAGD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAyB,CAAC;QACzD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAG5B,OAAO,CAAC,OAAO,CAAC,SAAmB,CAAC,CAAC;QACrC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC;QAGpC,IAAI,IAAI,IAAK,IAAe,GAAG,CAAC,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,IAAc,CAAC,CAAC;SAC9B;QAGD,IAAI,MAAM,EAAE;YACV,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtB;QAGD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAErE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAGH,IAAI,aAAa,EAAE;YACjB,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;SACnD;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAKO,uBAAuB,CAC7B,KAA0B,EAC1B,OAAiB,EACjB,OAAiB,EACjB,cAAmB;;QAEnB,MAAM,EAAE,OAAO,EAAE,QAAQ,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC;QAIrE,MAAM,UAAU,GAAG,IAAA,mBAAU,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9F,MAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAGlH,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1B;QAGD,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAElE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;YAC5B,MAAM,EAAE,IAAI,GAAG,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,GAAG,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;YAG1F,IAAI,eAAe,GAAG,IAAI,CAAC;YAC3B,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;YACtB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE;gBACV,IAAI,CAAC,eAAe,EAAE;oBACpB,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;iBACjE;gBACD,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;aAC/B;YACD,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,CAAC,eAAe,EAAE;oBACpB,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;iBACjE;gBACD,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;aAC7B;YACD,MAAM,MAAM,GAAG,MAAA,MAAM,CAAC,MAAM,mCAAI,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACxE,MAAM,UAAU,GAAI,MAAc,CAAC,UAAU,CAAC;YAC9C,IAAI,CAAC,iBAAiB,CACpB,OAAO,EACP,MAAM,EACN,UAAU,EACV,IAAI,EACJ,KAAK,EACL,QAAkB,EAClB,MAAM,EACN,gBAAgB,EAChB,cAAc,EACd,OAAO,EACP,IAAI,EACJ,OAAO,CACR,CAAC;QACJ,CAAC,CAAC,CAAC;QAGH,IAAI,eAAe,GAAG,CAAC,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC/B;IACH,CAAC;IAKO,iCAAiC,CACvC,OAAiB,EACjB,YAA2C,EAC3C,KAA0B,EAC1B,QAAgB,EAChB,MAAkB,EAClB,YAAiB;QAGjB,MAAM,IAAI,GAAwB,EAAE,CAAC;QACrC,MAAM,EAAE,GAAG,KAAK,CAAC;QAGjB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,yBAAyB,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YACpE,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;IAKO,qBAAqB,CAC3B,OAAiB,EACjB,wBAAqD,EACrD,IAAgC,EAChC,KAA0B,EAC1B,QAAgB,EAChB,MAAkB,EAClB,YAAiB;QAIjB,MAAM,EAAE,GAAG,KAAK,CAAC;QASjB,MAAM,aAAa,GAAG,IAAI,wBAAwB,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QAG7F,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9B,CAAC;IAKO,sBAAsB,CAC5B,OAAyE,EACzE,OAAiB;QAEjB,MAAM,KAAK,GAAwB,EAAE,CAAC;QACtC,IAAI,IAAI,GAA+B,IAAI,CAAC;QAE5C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;gBACL,IAAI;gBACJ,KAAK;aACN,CAAC;SACH;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAE3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;;gBACjC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,MAAM,CAAC,EAAE,KAAK,SAAS,EAAE;oBAC3B,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,UAAU,EAAE;wBACnC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,MAAA,MAAC,OAAO,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;qBAC1E;yBAAM;wBACL,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;qBACxB;iBACF;gBACD,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,IAAI,EAAE;wBACT,IAAI,GAAG,EAAE,CAAC;qBACX;oBACD,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;wBACrC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAA,MAAC,OAAO,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;qBAC3E;yBAAM;wBACL,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;qBACzB;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;;gBACpB,MAAM,KAAK,GAAG,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,SAAS,0CAAG,GAAG,CAAC,CAAC;gBAChD,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;iBACpB;YACH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO;YACL,IAAI;YACJ,KAAK;SACN,CAAC;IACJ,CAAC;IAKO,YAAY,CAAI,KAA2C,EAAE,OAAkB,EAAE,YAAgB;;QACvG,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO,YAAiB,CAAC;SAC1B;QAED,IAAI,OAAO,KAAK,KAAK,UAAU,IAAI,OAAO,EAAE;YAC1C,OAAQ,KAAiC,CAAC,MAAA,MAAC,OAAO,CAAC,OAAe,0CAAE,IAAI,0CAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;SAC7F;QAED,OAAO,KAAU,CAAC;IACpB,CAAC;IAED,WAAW,CAAC,MAA6C,EAAE,OAAiB,EAAE,QAAgB,CAAC,EAAE,QAAgB,CAAC;QAChH,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7F;QACD,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAKD,YAAY,CAAC,MAAwB,EAAE,OAAiB,EAAE,QAAgB,CAAC,EAAE,QAAgB,CAAC;QAC5F,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QAED,MAAM,UAAU,GAAG,YAAY,IAAI,MAAM,CAAC;QAC1C,IAAI,OAAO,GAAoB,IAAI,CAAC;QAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAE1D,IAAI,UAAU,EAAE;YAEd,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAkC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SAC/F;aAAM;YAEL,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAoC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACnG;QAGD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAKD,IAAI,CAAC,IAA4C;QAE/C,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACrC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;QAGD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QAGtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;IACH,CAAC;;AAtuBH,0CAuuBC;AAtuBQ,iCAAiB,GAAgD,EAAE,CAAC","file":"animate-executor.js","sourcesContent":["import type { IGraphic, EasingType, IAnimate } from '@visactor/vrender-core';\nimport type {\n  IAnimationConfig,\n  IAnimationTimeline,\n  IAnimationTypeConfig,\n  MarkFunctionCallback,\n  MarkFunctionValueType,\n  IAnimationTimeSlice,\n  IAnimationChannelAttrs,\n  IAnimationChannelAttributes,\n  IAnimationCustomConstructor,\n  IAnimationChannelInterpolator\n} from './executor';\nimport { cloneDeep, isArray, isFunction } from '@visactor/vutils';\n\ninterface IAnimateExecutor {\n  execute: (params: IAnimationConfig) => void;\n  executeItem: (params: IAnimationConfig, graphic: IGraphic, index?: number) => IAnimate[];\n  onStart: (cb?: () => void) => void;\n  onEnd: (cb?: () => void) => void;\n}\n\nexport class AnimateExecutor implements IAnimateExecutor {\n  static builtInAnimateMap: Record<string, IAnimationCustomConstructor> = {};\n\n  static registerBuiltInAnimate(name: string, animate: IAnimationCustomConstructor) {\n    AnimateExecutor.builtInAnimateMap[name] = animate;\n  }\n\n  declare _target: IGraphic;\n\n  // 所有动画实例\n  private _animates: IAnimate[] = [];\n\n  // 动画开始回调\n  private _startCallbacks: (() => void)[] = [];\n  // 动画结束回调\n  private _endCallbacks: (() => void)[] = [];\n\n  // 是否已经开始动画\n  private _started: boolean = false;\n\n  // 当前正在运行的动画数量\n  private _activeCount: number = 0;\n\n  constructor(target: IGraphic) {\n    this._target = target;\n  }\n\n  get started(): boolean {\n    return this._started;\n  }\n\n  /**\n   * 注册一个回调，当动画开始时调用\n   */\n  onStart(cb?: () => void): void {\n    if (cb) {\n      this._startCallbacks.push(cb);\n\n      // 如果动画已经开始，立即调用回调\n      if (this._started && this._activeCount > 0) {\n        cb();\n      }\n    } else {\n      this._startCallbacks.forEach(cb => {\n        cb();\n      });\n    }\n  }\n\n  /**\n   * 注册一个回调，当所有动画结束时调用\n   */\n  onEnd(cb?: () => void): void {\n    if (cb) {\n      this._endCallbacks.push(cb);\n    } else {\n      this._endCallbacks.forEach(cb => {\n        cb();\n      });\n    }\n  }\n\n  /**\n   * 跟踪动画并附加生命周期钩子\n   */\n  private _trackAnimation(animate: IAnimate): void {\n    this._animates.push(animate);\n    this._activeCount++;\n\n    // 如果这是第一个正在运行的动画，触发onStart回调\n    if (this._activeCount === 1 && !this._started) {\n      this._started = true;\n      this.onStart();\n    }\n\n    // 处理动画完成\n    animate.onEnd(() => {\n      this._activeCount--;\n\n      // 从跟踪的动画中移除\n      const index = this._animates.indexOf(animate);\n      if (index >= 0) {\n        this._animates.splice(index, 1);\n      }\n\n      // 如果所有动画都已完成，触发onEnd回调\n      if (this._activeCount === 0 && this._started) {\n        this._started = false;\n        this.onEnd();\n      }\n    });\n  }\n\n  parseParams(params: IAnimationConfig, isTimeline: boolean, child?: IGraphic): IAnimationConfig {\n    const totalTime = this.resolveValue(params.totalTime, undefined, undefined);\n    const startTime = this.resolveValue(params.startTime, undefined, 0);\n\n    // execute只在mark层面调用，所以性能影响可以忽略\n    // TODO 存在性能问题，如果后续调用频繁，需要重新修改\n    const parsedParams: Record<string, any> = { ...params };\n    parsedParams.oneByOneDelay = 0;\n    parsedParams.startTime = startTime;\n    parsedParams.totalTime = totalTime;\n\n    const oneByOne = this.resolveValue(params.oneByOne, child, false);\n\n    if (isTimeline) {\n      const timeSlices = (parsedParams as IAnimationTimeline).timeSlices;\n      if (!isArray(timeSlices)) {\n        (parsedParams as IAnimationTimeline).timeSlices = [timeSlices];\n      }\n      let sliceTime = 0;\n      ((parsedParams as IAnimationTimeline).timeSlices as IAnimationTimeSlice[]) = (\n        (parsedParams as IAnimationTimeline).timeSlices as IAnimationTimeSlice[]\n      ).map(slice => {\n        const delay = this.resolveValue(slice.delay, child, 0);\n        const delayAfter = this.resolveValue(slice.delayAfter, child, 0);\n        const duration = this.resolveValue(slice.duration, child, 300);\n        sliceTime += delay + duration + delayAfter;\n        return {\n          ...slice,\n          delay,\n          delayAfter,\n          duration\n        };\n      });\n      let oneByOneDelay = 0;\n      if (oneByOne) {\n        oneByOneDelay = typeof oneByOne === 'number' ? (oneByOne as number) : oneByOne ? sliceTime : 0;\n      }\n      parsedParams.oneByOneDelay = oneByOneDelay;\n\n      let scale = 1;\n      if (totalTime) {\n        const _totalTime = sliceTime + oneByOneDelay * (this._target.count - 2);\n        scale = totalTime ? totalTime / _totalTime : 1;\n      }\n      ((parsedParams as IAnimationTimeline).timeSlices as IAnimationTimeSlice[]) = (\n        (parsedParams as IAnimationTimeline).timeSlices as IAnimationTimeSlice[]\n      ).map(slice => {\n        let effects = slice.effects;\n        if (!Array.isArray(effects)) {\n          effects = [effects];\n        }\n        return {\n          ...slice,\n          delay: (slice.delay as number) * scale,\n          delayAfter: (slice.delayAfter as number) * scale,\n          duration: (slice.duration as number) * scale,\n          effects: effects.map(effect => {\n            const custom = effect.custom ?? AnimateExecutor.builtInAnimateMap[(effect.type as any) ?? 'fromTo'];\n            const customType =\n              custom && isFunction(custom) ? (/^class\\s/.test(Function.prototype.toString.call(custom)) ? 1 : 2) : 0;\n            return {\n              ...effect,\n              custom,\n              customType\n            };\n          })\n        };\n      });\n      parsedParams.oneByOneDelay = oneByOneDelay * scale;\n      (parsedParams as IAnimationTimeline).startTime = startTime * scale;\n    } else {\n      const delay = this.resolveValue((params as IAnimationTypeConfig).delay, child, 0);\n      const delayAfter = this.resolveValue((params as IAnimationTypeConfig).delayAfter, child, 0);\n      const duration = this.resolveValue((params as IAnimationTypeConfig).duration, child, 300);\n      const loopTime = delay + delayAfter + duration;\n\n      let oneByOneDelay = 0;\n      if (oneByOne) {\n        oneByOneDelay = typeof oneByOne === 'number' ? (oneByOne as number) : oneByOne ? loopTime : 0;\n      }\n      parsedParams.oneByOneDelay = oneByOneDelay;\n      parsedParams.custom =\n        (params as IAnimationTypeConfig).custom ??\n        AnimateExecutor.builtInAnimateMap[(params as IAnimationTypeConfig).type ?? 'fromTo'];\n\n      const customType =\n        parsedParams.custom && isFunction(parsedParams.custom)\n          ? /^class\\s/.test(Function.prototype.toString.call(parsedParams.custom))\n            ? 1\n            : 2\n          : 0;\n      parsedParams.customType = customType;\n\n      if (totalTime) {\n        const _totalTime = delay + delayAfter + duration + oneByOneDelay * (this._target.count - 2);\n        const scale = totalTime ? totalTime / _totalTime : 1;\n        parsedParams.delay = delay * scale;\n        parsedParams.delayAfter = delayAfter * scale;\n        parsedParams.duration = duration * scale;\n        parsedParams.oneByOneDelay = oneByOneDelay * scale;\n        (parsedParams as IAnimationTypeConfig).startTime = startTime;\n      }\n    }\n\n    return parsedParams;\n  }\n\n  execute(params: IAnimationConfig | IAnimationConfig[]) {\n    if (Array.isArray(params)) {\n      params.forEach(param => this._execute(param));\n    } else {\n      this._execute(params);\n    }\n  }\n\n  /**\n   * 执行动画，针对一组元素\n   */\n  _execute(params: IAnimationConfig) {\n    if (params.selfOnly) {\n      return this._executeItem(params, this._target, 0, 1);\n    }\n\n    // 判断是否为timeline配置\n    const isTimeline = 'timeSlices' in params;\n\n    // 筛选符合条件的子图元\n    let filteredChildren: IGraphic[];\n\n    // 如果设置了partitioner，则进行筛选\n    if (isTimeline && params.partitioner) {\n      filteredChildren = (filteredChildren ?? (this._target.getChildren() as IGraphic[])).filter(child => {\n        return (params as IAnimationTimeline).partitioner((child.context as any)?.data?.[0], child, {});\n      });\n    }\n\n    // 如果需要排序，则进行排序\n    if (isTimeline && (params as IAnimationTimeline).sort) {\n      filteredChildren = filteredChildren ?? (this._target.getChildren() as IGraphic[]);\n      filteredChildren.sort((a, b) => {\n        return (params as IAnimationTimeline).sort(\n          (a.context as any)?.data?.[0],\n          (b.context as any)?.data?.[0],\n          a,\n          b,\n          {}\n        );\n      });\n    }\n\n    //\n\n    const cb = isTimeline\n      ? (child: IGraphic, index: number, count: number) => {\n          const parsedParams = this.parseParams(params, isTimeline, child);\n          // 执行单个图元的timeline动画\n          const animate = this.executeTimelineItem(parsedParams as IAnimationTimeline, child, index, count);\n          if (animate) {\n            this._trackAnimation(animate);\n          }\n        }\n      : (child: IGraphic, index: number, count: number) => {\n          const parsedParams = this.parseParams(params, isTimeline, child);\n          // 执行单个图元的config动画\n          const animate = this.executeTypeConfigItem(parsedParams as IAnimationTypeConfig, child, index, count);\n          if (animate) {\n            this._trackAnimation(animate);\n          }\n        };\n\n    // 执行每个图元的动画\n    if (filteredChildren) {\n      filteredChildren.forEach((child, index) => cb(child, index, filteredChildren.length));\n    } else if (this._target.count <= 1) {\n      cb(this._target, 0, 1);\n    } else {\n      this._target.forEachChildren((child, index) => cb(child as IGraphic, index, this._target.count - 1));\n    }\n\n    return;\n  }\n\n  /**\n   * 执行 TypeConfig 类型的动画\n   */\n  private executeTypeConfigItem(\n    params: IAnimationTypeConfig,\n    graphic: IGraphic,\n    index: number,\n    count: number\n  ): IAnimate {\n    const {\n      type = 'fromTo',\n      channel,\n      customParameters,\n      easing = 'linear',\n      delay = 0,\n      delayAfter = 0,\n      duration = 300,\n      startTime = 0,\n      oneByOneDelay = 0,\n      loop,\n      bounce,\n      priority = 0,\n      options,\n      custom,\n      customType, // 0: undefined, 1: class, 2: function\n      controlOptions\n    } = params as any;\n\n    // 创建动画实例\n    const animate = graphic.animate() as unknown as IAnimate;\n    animate.priority = priority;\n\n    const delayValue = isFunction(delay) ? delay(graphic.context?.data?.[0], graphic, {}) : delay;\n\n    // 如果设置了indexKey，则使用indexKey作为index\n    const datum = graphic.context?.data?.[0];\n    const indexKey = graphic.context?.indexKey;\n    if (datum && indexKey) {\n      index = datum[indexKey] ?? index;\n    }\n\n    // 设置开始时间\n    animate.startAt(startTime as number);\n    const wait = index * oneByOneDelay + delayValue;\n    wait > 0 && animate.wait(wait);\n\n    // 放到startAt中，否则label无法确定主图元何时开始\n    // // 添加延迟\n    // if (delayValue > 0) {\n    //   animate.wait(delayValue);\n    // }\n\n    // 根据 channel 配置创建属性对象\n    // 根据 channel 配置创建属性对象\n    let parsedFromProps = null;\n    let props = params.to;\n    let from = params.from;\n    if (!props) {\n      if (!parsedFromProps) {\n        parsedFromProps = this.createPropsFromChannel(channel, graphic);\n      }\n      props = parsedFromProps.props;\n    }\n    if (!from) {\n      if (!parsedFromProps) {\n        parsedFromProps = this.createPropsFromChannel(channel, graphic);\n      }\n      from = parsedFromProps.from;\n    }\n\n    this._handleRunAnimate(\n      animate,\n      custom,\n      customType,\n      from,\n      props,\n      duration as number,\n      easing,\n      customParameters,\n      controlOptions,\n      options,\n      type,\n      graphic\n    );\n\n    let totalDelay = 0;\n    if (oneByOneDelay) {\n      totalDelay = oneByOneDelay * (count - index - 1);\n    }\n\n    // 添加后延迟\n    const delayAfterValue = isFunction(delayAfter) ? delayAfter(graphic.context?.data?.[0], graphic, {}) : delayAfter;\n    if (delayAfterValue > 0) {\n      totalDelay += delayAfterValue as number;\n    }\n\n    if (totalDelay > 0) {\n      animate.wait(totalDelay);\n    }\n\n    // 设置循环\n    if (loop && (loop as number) > 0) {\n      animate.loop(loop as number);\n    }\n\n    // 设置反弹\n    if (bounce) {\n      animate.bounce(true);\n    }\n\n    return animate;\n  }\n\n  private _handleRunAnimate(\n    animate: IAnimate,\n    custom: IAnimationCustomConstructor | IAnimationChannelInterpolator,\n    customType: number, // 0: undefined, 1: class, 2: function\n    from: Record<string, any> | null,\n    props: Record<string, any>,\n    duration: number,\n    easing: EasingType,\n    customParameters: any,\n    controlOptions: any,\n    options: any,\n    type: string,\n    graphic: IGraphic\n  ) {\n    // 处理自定义动画\n    if (custom && customType) {\n      const customParams = {\n        width: graphic.stage?.width || 0,\n        height: graphic.stage?.height || 0,\n        group: this._target.parent,\n        ...this.resolveValue(customParameters, graphic)\n      };\n      const objOptions = isFunction(options)\n        ? options.call(\n            null,\n            (customParams && customParams.data?.[0]) ?? graphic.context?.data?.[0],\n            graphic,\n            customParams\n          )\n        : options;\n      customParams.options = objOptions;\n      customParams.controlOptions = controlOptions;\n      if (customType === 1) {\n        // 自定义动画构造器 - 创建自定义动画类\n        this.createCustomAnimation(\n          animate,\n          custom as IAnimationCustomConstructor,\n          from,\n          props,\n          duration as number,\n          easing,\n          customParams\n        );\n      } else if (customType === 2) {\n        // 自定义插值器 - 创建自定义插值动画\n        this.createCustomInterpolatorAnimation(\n          animate,\n          custom as IAnimationChannelInterpolator,\n          props,\n          duration as number,\n          easing,\n          customParams\n        );\n      }\n    } else if (type === 'to') {\n      animate.to(props, duration as number, easing);\n    } else if (type === 'from') {\n      animate.from(props, duration as number, easing);\n    }\n  }\n\n  /**\n   * 执行 Timeline 类型的动画\n   */\n  private executeTimelineItem(params: IAnimationTimeline, graphic: IGraphic, index: number, count: number): IAnimate {\n    const { timeSlices, startTime = 0, loop, bounce, oneByOneDelay, priority, controlOptions } = params as any;\n\n    // 如果设置了indexKey，则使用indexKey作为index\n    const datum = graphic.context?.data?.[0];\n    const indexKey = graphic.context?.indexKey;\n    if (datum && indexKey) {\n      index = datum[indexKey] ?? index;\n    }\n\n    // 创建动画实例\n    const animate = graphic.animate() as unknown as IAnimate;\n    animate.priority = priority;\n\n    // 设置开始时间\n    animate.startAt(startTime as number);\n    animate.wait(index * oneByOneDelay);\n\n    // 设置循环\n    if (loop && (loop as number) > 0) {\n      animate.loop(loop as number);\n    }\n\n    // 设置反弹\n    if (bounce) {\n      animate.bounce(true);\n    }\n\n    // 处理时间切片\n    const slices = Array.isArray(timeSlices) ? timeSlices : [timeSlices];\n\n    slices.forEach(slice => {\n      this.applyTimeSliceToAnimate(slice, animate, graphic, controlOptions);\n    });\n\n    // 后等待\n    if (oneByOneDelay) {\n      animate.wait(oneByOneDelay * (count - index - 1));\n    }\n\n    return animate;\n  }\n\n  /**\n   * 将时间切片应用到动画实例\n   */\n  private applyTimeSliceToAnimate(\n    slice: IAnimationTimeSlice,\n    animate: IAnimate,\n    graphic: IGraphic,\n    controlOptions: any\n  ) {\n    const { effects, duration = 300, delay = 0, delayAfter = 0 } = slice;\n\n    // 解析时间参数\n    // const durationValue = duration as number;\n    const delayValue = isFunction(delay) ? delay(graphic.context?.data?.[0], graphic, {}) : delay;\n    const delayAfterValue = isFunction(delayAfter) ? delayAfter(graphic.context?.data?.[0], graphic, {}) : delayAfter;\n\n    // 添加延迟\n    if (delayValue > 0) {\n      animate.wait(delayValue);\n    }\n\n    // 处理动画效果\n    const effectsArray = Array.isArray(effects) ? effects : [effects];\n\n    effectsArray.forEach(effect => {\n      const { type = 'fromTo', channel, customParameters, easing = 'linear', options } = effect;\n\n      // 根据 channel 配置创建属性对象\n      let parsedFromProps = null;\n      let props = effect.to;\n      let from = effect.from;\n      if (!props) {\n        if (!parsedFromProps) {\n          parsedFromProps = this.createPropsFromChannel(channel, graphic);\n        }\n        props = parsedFromProps.props;\n      }\n      if (!from) {\n        if (!parsedFromProps) {\n          parsedFromProps = this.createPropsFromChannel(channel, graphic);\n        }\n        from = parsedFromProps.from;\n      }\n      const custom = effect.custom ?? AnimateExecutor.builtInAnimateMap[type];\n      const customType = (effect as any).customType;\n      this._handleRunAnimate(\n        animate,\n        custom,\n        customType,\n        from,\n        props,\n        duration as number,\n        easing,\n        customParameters,\n        controlOptions,\n        options,\n        type,\n        graphic\n      );\n    });\n\n    // 添加后延迟\n    if (delayAfterValue > 0) {\n      animate.wait(delayAfterValue);\n    }\n  }\n\n  /**\n   * 创建自定义插值器动画\n   */\n  private createCustomInterpolatorAnimation(\n    animate: IAnimate,\n    interpolator: IAnimationChannelInterpolator,\n    props: Record<string, any>,\n    duration: number,\n    easing: EasingType,\n    customParams: any\n  ) {\n    // 获取动画目标的当前属性作为起始值\n    const from: Record<string, any> = {};\n    const to = props;\n\n    // 为每个属性填充起始值\n    Object.keys(to).forEach(key => {\n      from[key] = animate.target.getComputedAttribute(key);\n    });\n\n    animate.interpolateUpdateFunction = (from, to, ratio, step, target) => {\n      interpolator(ratio, from, to, step, target, animate.target, customParams);\n    };\n\n    animate.to(props, duration, easing);\n  }\n\n  /**\n   * 创建自定义动画类\n   */\n  private createCustomAnimation(\n    animate: IAnimate,\n    CustomAnimateConstructor: IAnimationCustomConstructor,\n    from: Record<string, any> | null,\n    props: Record<string, any>,\n    duration: number,\n    easing: EasingType,\n    customParams: any\n  ) {\n    // 获取动画目标的当前属性作为起始值\n    // const from: Record<string, any> = {};\n    const to = props;\n\n    // // 为每个属性填充起始值\n    // Object.keys(to).forEach(key => {\n    //   from[key] = animate.target.getComputedAttribute(key);\n    // });\n\n    // 实例化自定义动画类\n    // 自定义动画自己去计算from\n    const customAnimate = new CustomAnimateConstructor(from, to, duration, easing, customParams);\n\n    // 播放自定义动画\n    animate.play(customAnimate);\n  }\n\n  /**\n   * 从 channel 配置创建属性对象\n   */\n  private createPropsFromChannel(\n    channel: IAnimationChannelAttrs | IAnimationChannelAttributes | undefined,\n    graphic: IGraphic\n  ): { from: Record<string, any> | null; props: Record<string, any> } {\n    const props: Record<string, any> = {};\n    let from: Record<string, any> | null = null;\n\n    if (!channel) {\n      return {\n        from,\n        props\n      };\n    }\n\n    if (!Array.isArray(channel)) {\n      // 如果是对象，解析 from/to 配置\n      Object.keys(channel).forEach(key => {\n        const config = channel[key];\n        if (config.to !== undefined) {\n          if (typeof config.to === 'function') {\n            props[key] = config.to((graphic.context as any)?.data?.[0], graphic, {});\n          } else {\n            props[key] = config.to;\n          }\n        }\n        if (config.from !== undefined) {\n          if (!from) {\n            from = {};\n          }\n          if (typeof config.from === 'function') {\n            from[key] = config.from((graphic.context as any)?.data?.[0], graphic, {});\n          } else {\n            from[key] = config.from;\n          }\n        }\n      });\n    } else {\n      channel.forEach(key => {\n        const value = graphic.context?.diffAttrs?.[key];\n        if (value !== undefined) {\n          props[key] = value;\n        }\n      });\n    }\n\n    return {\n      from,\n      props\n    };\n  }\n\n  /**\n   * 解析函数或值类型的配置项\n   */\n  private resolveValue<T>(value: MarkFunctionValueType<T> | undefined, graphic?: IGraphic, defaultValue?: T): T {\n    if (value === undefined) {\n      return defaultValue as T;\n    }\n\n    if (typeof value === 'function' && graphic) {\n      return (value as MarkFunctionCallback<T>)((graphic.context as any)?.data?.[0], graphic, {});\n    }\n\n    return value as T;\n  }\n\n  executeItem(params: IAnimationConfig | IAnimationConfig[], graphic: IGraphic, index: number = 0, count: number = 1) {\n    if (Array.isArray(params)) {\n      return params.map(param => this._executeItem(param, graphic, index, count)).filter(Boolean);\n    }\n    return [this._executeItem(params, graphic, index, count)].filter(Boolean);\n  }\n\n  /**\n   * 执行动画（具体执行到内部的单个图元）\n   */\n  _executeItem(params: IAnimationConfig, graphic: IGraphic, index: number = 0, count: number = 1): IAnimate | null {\n    if (!graphic) {\n      return null;\n    }\n\n    const isTimeline = 'timeSlices' in params;\n    let animate: IAnimate | null = null;\n\n    const parsedParams = this.parseParams(params, isTimeline);\n\n    if (isTimeline) {\n      // 处理 Timeline 类型的动画配置\n      animate = this.executeTimelineItem(parsedParams as IAnimationTimeline, graphic, index, count);\n    } else {\n      // 处理 TypeConfig 类型的动画配置\n      animate = this.executeTypeConfigItem(parsedParams as IAnimationTypeConfig, graphic, index, count);\n    }\n\n    // 跟踪动画以进行生命周期管理\n    if (animate) {\n      this._trackAnimation(animate);\n    }\n\n    return animate;\n  }\n\n  /**\n   * 停止所有由该执行器管理的动画\n   */\n  stop(type?: 'start' | 'end' | Record<string, any>): void {\n    // animate.stop会从数组里删除，所以需要while循环，不能forEach\n    while (this._animates.length > 0) {\n      const animate = this._animates.pop();\n      animate?.stop(type);\n    }\n\n    // 清空动画实例数组\n    this._animates = [];\n    this._activeCount = 0;\n\n    // 如果动画正在运行，触发结束回调\n    if (this._started) {\n      this._started = false;\n      this.onEnd();\n    }\n  }\n}\n"]}