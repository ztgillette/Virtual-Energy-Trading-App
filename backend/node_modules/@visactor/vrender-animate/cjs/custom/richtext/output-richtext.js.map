{"version":3,"sources":["../src/custom/richtext/output-richtext.ts"],"names":[],"mappings":"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","file":"output-richtext.js","sourcesContent":["import { ACustomAnimate } from '../custom-animate';\nimport type { IRichTextCharacter, IAnimate, IStep, EasingType } from '@visactor/vrender-core';\nimport { RichText } from '@visactor/vrender-core';\n\n/**\n * 富文本退出动画，实现类似打字机的字符逐个消失效果\n * 支持通过beforeText和afterText参数添加前缀和后缀\n * 支持通过showCursor参数显示光标，cursorChar自定义光标字符\n * 支持通过fadeOutChars参数开启字符透明度渐变效果\n * 支持通过direction参数控制消失方向（从头到尾或从尾到头）\n */\nexport class OutputRichText extends ACustomAnimate<{ textConfig: IRichTextCharacter[] }> {\n  declare valid: boolean;\n\n  private fromTextConfig: IRichTextCharacter[] = [];\n  private toTextConfig: IRichTextCharacter[] = [];\n  private originalTextConfig: IRichTextCharacter[] = [];\n  private showCursor: boolean = false;\n  private cursorChar: string = '|';\n  private blinkCursor: boolean = true;\n  private beforeText: string = '';\n  private afterText: string = '';\n  private fadeOutChars: boolean = false;\n  private fadeOutDuration: number = 0.3; // 透明度渐变持续时间，以动画总时长的比例表示\n  private direction: 'forward' | 'backward' = 'backward'; // 字符消失方向，默认从尾到头（backward）\n\n  constructor(\n    from: { textConfig: IRichTextCharacter[] },\n    to: { textConfig: IRichTextCharacter[] },\n    duration: number,\n    easing: EasingType,\n    params?: {\n      showCursor?: boolean;\n      cursorChar?: string;\n      blinkCursor?: boolean;\n      beforeText?: string;\n      afterText?: string;\n      fadeOutChars?: boolean;\n      fadeOutDuration?: number;\n      direction?: 'forward' | 'backward';\n    }\n  ) {\n    super(from, to, duration, easing, params);\n\n    // 配置光标相关选项\n    if (params?.showCursor !== undefined) {\n      this.showCursor = params.showCursor;\n    }\n    if (params?.cursorChar !== undefined) {\n      this.cursorChar = params.cursorChar;\n    }\n    if (params?.blinkCursor !== undefined) {\n      this.blinkCursor = params.blinkCursor;\n    }\n\n    // 配置前缀和后缀文本\n    if (params?.beforeText !== undefined) {\n      this.beforeText = params.beforeText;\n    }\n    if (params?.afterText !== undefined) {\n      this.afterText = params.afterText;\n    }\n\n    // 配置字符透明度渐变效果\n    if (params?.fadeOutChars !== undefined) {\n      this.fadeOutChars = params.fadeOutChars;\n    }\n    if (params?.fadeOutDuration !== undefined) {\n      this.fadeOutDuration = params.fadeOutDuration;\n    }\n\n    // 配置方向\n    if (params?.direction !== undefined) {\n      this.direction = params.direction;\n    }\n\n    this.propKeys = ['textConfig'];\n  }\n\n  onFirstRun(): void {\n    const fromProps = this.getLastProps();\n    const toProps = this.getEndProps();\n\n    // 存储原始配置（这里是起始状态，显示所有文本）\n    this.originalTextConfig = fromProps.textConfig ? [...fromProps.textConfig] : [];\n\n    // 初始化解析结果\n    this.valid = true;\n\n    // 确保from不为空\n    if (!this.originalTextConfig || this.originalTextConfig.length === 0) {\n      this.valid = false;\n      return;\n    }\n\n    // 将文本拆分为单个字符，使用RichText的静态方法\n    this.fromTextConfig = RichText.TransformTextConfig2SingleCharacter(this.originalTextConfig);\n\n    // 目标状态是空文本（或指定的目标）\n    this.toTextConfig =\n      toProps.textConfig && toProps.textConfig.length > 0\n        ? RichText.TransformTextConfig2SingleCharacter(toProps.textConfig)\n        : [];\n  }\n\n  onEnd(cb?: (animate: IAnimate, step: IStep) => void): void {\n    super.onEnd(cb);\n    if (!cb) {\n      // 动画结束时，应用最终textConfig（通常是空的或特定的toTextConfig）\n      if (this.toTextConfig.length > 0) {\n        this.target.setAttribute('textConfig', this.toTextConfig);\n      } else {\n        this.target.setAttribute('textConfig', []);\n      }\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this.valid) {\n      return;\n    }\n\n    // 获取当前应该显示的字符\n    const fromItems = this.fromTextConfig.length;\n\n    // 计算文本显示比例上限 - 如果有渐变效果，需要为尾部字符的渐变留出时间\n    const maxTextHideRatio = this.fadeOutChars ? 1 - this.fadeOutDuration : 1;\n\n    // 根据方向确定字符消失的顺序\n    let displayedLength: number;\n\n    if (this.direction === 'forward') {\n      // 从前往后消失（类似于正向打字效果）\n      if (this.fadeOutChars) {\n        // 当ratio达到maxTextHideRatio时，应该已经隐藏全部文本\n        const adjustedRatio = Math.min(1, ratio / maxTextHideRatio);\n        displayedLength = Math.round(fromItems * (1 - adjustedRatio));\n      } else {\n        // 无渐变效果时，正常隐藏\n        displayedLength = Math.round(fromItems * (1 - ratio));\n      }\n\n      // 构建从头开始删除的文本配置\n      let currentTextConfig =\n        this.direction === 'forward'\n          ? this.fromTextConfig.slice(fromItems - displayedLength) // 从头开始隐藏，保留尾部\n          : this.fromTextConfig.slice(0, displayedLength); // 从尾开始隐藏，保留头部\n\n      // 应用透明度渐变效果\n      if (this.fadeOutChars) {\n        currentTextConfig = this.applyFadeEffect(currentTextConfig, ratio, fromItems, displayedLength);\n      }\n\n      // 如果启用了光标\n      if (this.showCursor && displayedLength > 0) {\n        currentTextConfig = this.addCursor(currentTextConfig, ratio);\n      }\n\n      // 更新富文本的textConfig属性\n      this.target.setAttribute('textConfig', currentTextConfig);\n    } else {\n      // 从后往前消失（类似于退格删除效果）\n      if (this.fadeOutChars) {\n        // 当ratio达到maxTextHideRatio时，应该已经隐藏全部文本\n        const adjustedRatio = Math.min(1, ratio / maxTextHideRatio);\n        displayedLength = Math.round(fromItems * (1 - adjustedRatio));\n      } else {\n        // 无渐变效果时，正常隐藏\n        displayedLength = Math.round(fromItems * (1 - ratio));\n      }\n\n      // 构建从尾开始删除的文本配置\n      let currentTextConfig = this.fromTextConfig.slice(0, displayedLength);\n\n      // 应用透明度渐变效果\n      if (this.fadeOutChars) {\n        currentTextConfig = this.applyFadeEffect(currentTextConfig, ratio, fromItems, displayedLength);\n      }\n\n      // 如果启用了光标\n      if (this.showCursor && displayedLength > 0) {\n        currentTextConfig = this.addCursor(currentTextConfig, ratio);\n      }\n\n      // 更新富文本的textConfig属性\n      this.target.setAttribute('textConfig', currentTextConfig);\n    }\n  }\n\n  // 应用透明度渐变效果\n  private applyFadeEffect(\n    textConfig: IRichTextCharacter[],\n    ratio: number,\n    totalItems: number,\n    displayedLength: number\n  ): IRichTextCharacter[] {\n    // 计算边界字符的索引，这是正在淡出的字符\n    let fadeIndex: number;\n\n    if (this.direction === 'forward') {\n      // 从前往后消失，当前正在淡出的是第displayedLength个字符\n      fadeIndex = totalItems - displayedLength;\n    } else {\n      // 从后往前消失，当前正在淡出的是第displayedLength个字符\n      fadeIndex = displayedLength;\n    }\n\n    // 计算边界字符的透明度\n    const fadeProgress = (ratio - (1 - this.fadeOutDuration)) / this.fadeOutDuration;\n    const fadeOpacity = Math.max(0, 1 - Math.min(1, fadeProgress));\n\n    return textConfig.map((item, index) => {\n      if (this.direction === 'forward') {\n        // 从前往后消失，第一个字符最先淡出\n        if (index === 0 && 'text' in item) {\n          return {\n            ...item,\n            opacity: fadeOpacity\n          };\n        }\n      } else {\n        // 从后往前消失，最后一个字符最先淡出\n        if (index === textConfig.length - 1 && 'text' in item) {\n          return {\n            ...item,\n            opacity: fadeOpacity\n          };\n        }\n      }\n      return item;\n    });\n  }\n\n  // 添加光标\n  private addCursor(textConfig: IRichTextCharacter[], ratio: number): IRichTextCharacter[] {\n    // 判断是否应该显示光标\n    let shouldShowCursor = true;\n\n    if (this.blinkCursor) {\n      // 闪烁效果：在动画期间，光标每半个周期闪烁一次\n      const blinkRate = 0.1; // 光标闪烁频率（每10%动画进度闪烁一次）\n      shouldShowCursor = Math.floor(ratio / blinkRate) % 2 === 0;\n    }\n\n    if (shouldShowCursor && textConfig.length > 0) {\n      // 确定光标位置（根据direction）\n      const cursorIndex = this.direction === 'forward' ? 0 : textConfig.length - 1;\n      const cursorItem = textConfig[cursorIndex];\n\n      if ('text' in cursorItem) {\n        // 复制数组\n        const result = [...textConfig];\n\n        if (this.direction === 'forward') {\n          // 光标在前面\n          result[cursorIndex] = {\n            ...cursorItem,\n            text: this.cursorChar + String(cursorItem.text)\n          };\n        } else {\n          // 光标在后面\n          result[cursorIndex] = {\n            ...cursorItem,\n            text: String(cursorItem.text) + this.cursorChar\n          };\n        }\n\n        return result;\n      }\n    }\n\n    return textConfig;\n  }\n}\n"]}