{"version":3,"sources":["../src/custom/clip-graphic.ts"],"names":[],"mappings":"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","file":"clip-graphic.js","sourcesContent":["import type { IArcGraphicAttribute, IGraphic, IGroup, IRectGraphicAttribute } from '@visactor/vrender-core';\nimport { application, AttributeUpdateType, type EasingType } from '@visactor/vrender-core';\nimport { ACustomAnimate } from './custom-animate';\n\nexport class ClipGraphicAnimate extends ACustomAnimate<any> {\n  private _group?: IGroup;\n  private _clipGraphic?: IGraphic;\n  protected clipFromAttribute?: any;\n  protected clipToAttribute?: any;\n\n  private _lastClip?: boolean;\n  private _lastPath?: IGraphic[];\n\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: { group: IGroup; clipGraphic: IGraphic }\n  ) {\n    super(null, {}, duration, easing, params);\n    this.clipFromAttribute = from;\n    this.clipToAttribute = to;\n    this._group = params?.group;\n    this._clipGraphic = params?.clipGraphic;\n  }\n\n  onBind() {\n    super.onBind();\n    if (this._group && this._clipGraphic) {\n      this._lastClip = this._group.attribute.clip;\n      this._lastPath = this._group.attribute.path;\n      this._group.setAttributes(\n        {\n          clip: true,\n          path: [this._clipGraphic]\n        },\n        false,\n        { type: AttributeUpdateType.ANIMATE_BIND }\n      );\n    }\n  }\n\n  onEnd() {\n    if (this._group) {\n      this._group.setAttributes(\n        {\n          clip: this._lastClip,\n          path: this._lastPath\n        },\n        false,\n        { type: AttributeUpdateType.ANIMATE_END }\n      );\n    }\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this._clipGraphic) {\n      return;\n    }\n    const res: any = {};\n    Object.keys(this.clipFromAttribute).forEach(k => {\n      res[k] = this.clipFromAttribute[k] + (this.clipToAttribute[k] - this.clipFromAttribute[k]) * ratio;\n    });\n    this._clipGraphic.setAttributes(res, false, {\n      type: AttributeUpdateType.ANIMATE_UPDATE,\n      animationState: { ratio, end }\n    });\n  }\n}\n\nexport class ClipAngleAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      center?: { x: number; y: number };\n      startAngle?: number;\n      radius?: number;\n      orient?: 'clockwise' | 'anticlockwise';\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = groupAttribute.width ?? 0;\n    const height = groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const startAngle = params?.startAngle ?? 0;\n    const orient = params?.orient ?? 'clockwise';\n\n    let arcStartAngle = 0;\n    let arcEndAngle = 0;\n    if (orient === 'anticlockwise') {\n      arcEndAngle = animationType === 'in' ? startAngle + Math.PI * 2 : startAngle;\n      arcEndAngle = startAngle + Math.PI * 2;\n    } else {\n      arcStartAngle = startAngle;\n      arcEndAngle = animationType === 'out' ? startAngle + Math.PI * 2 : startAngle;\n    }\n    const arc = application.graphicService.creator.arc({\n      x: params?.center?.x ?? width / 2,\n      y: params?.center?.y ?? height / 2,\n      outerRadius: params?.radius ?? (width + height) / 2,\n      innerRadius: 0,\n      startAngle: arcStartAngle,\n      endAngle: arcEndAngle,\n      fill: true\n    });\n    let fromAttributes: Partial<IArcGraphicAttribute>;\n    let toAttributes: Partial<IArcGraphicAttribute>;\n    if (orient === 'anticlockwise') {\n      fromAttributes = { startAngle: startAngle + Math.PI * 2 };\n      toAttributes = { startAngle: startAngle };\n    } else {\n      fromAttributes = { endAngle: startAngle };\n      toAttributes = { endAngle: startAngle + Math.PI * 2 };\n    }\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: arc }\n    );\n  }\n}\n\nexport class ClipRadiusAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      center?: { x: number; y: number };\n      startRadius?: number;\n      endRadius?: number;\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = groupAttribute.width ?? 0;\n    const height = groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const startRadius = params?.startRadius ?? 0;\n    const endRadius = params?.endRadius ?? Math.sqrt((width / 2) ** 2 + (height / 2) ** 2);\n\n    const arc = application.graphicService.creator.arc({\n      x: params?.center?.x ?? width / 2,\n      y: params?.center?.y ?? height / 2,\n      outerRadius: animationType === 'out' ? endRadius : startRadius,\n      innerRadius: 0,\n      startAngle: 0,\n      endAngle: Math.PI * 2,\n      fill: true\n    });\n    const fromAttributes: Partial<IArcGraphicAttribute> = { outerRadius: startRadius };\n    const toAttributes: Partial<IArcGraphicAttribute> = { outerRadius: endRadius };\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: arc }\n    );\n  }\n}\n\nexport class ClipDirectionAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      direction?: 'x' | 'y';\n      orient?: 'positive' | 'negative';\n      width?: number;\n      height?: number;\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = params?.width ?? groupAttribute.width ?? 0;\n    const height = params?.height ?? groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const direction = params?.direction ?? 'x';\n    const orient = params?.orient ?? 'positive';\n\n    const rect = application.graphicService.creator.rect({\n      x: 0,\n      y: 0,\n      width: animationType === 'in' && direction === 'x' ? 0 : width,\n      height: animationType === 'in' && direction === 'y' ? 0 : height,\n      fill: true\n    });\n    let fromAttributes: Partial<IRectGraphicAttribute> = {};\n    let toAttributes: Partial<IRectGraphicAttribute> = {};\n    if (direction === 'y') {\n      if (orient === 'negative') {\n        fromAttributes = { y: height, height: 0 };\n        toAttributes = { y: 0, height: height };\n      } else {\n        fromAttributes = { height: 0 };\n        toAttributes = { height: height };\n      }\n    } else {\n      if (orient === 'negative') {\n        fromAttributes = { x: width, width: 0 };\n        toAttributes = { x: 0, width: width };\n      } else {\n        fromAttributes = { width: 0 };\n        toAttributes = { width: width };\n      }\n    }\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: rect }\n    );\n  }\n}\n"]}