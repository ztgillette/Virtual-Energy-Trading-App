{"version":3,"sources":["../src/custom/disappear/base/CustomEffectBase.ts"],"names":[],"mappings":"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","file":"CustomEffectBase.js","sourcesContent":["import type { EasingType } from '@visactor/vrender-core';\nimport { DisappearAnimateBase } from './DisappearAnimateBase';\n\n/**\n * 仅支持WebGL的特效基类\n * 适用于复杂的GPU计算特效，如粒子系统、复杂着色器特效等\n */\nexport abstract class WebGLEffectBase extends DisappearAnimateBase {\n  constructor(from: null, to: null, duration: number, easing: EasingType, params: any) {\n    super(from, to, duration, easing, params);\n  }\n\n  // 必须实现WebGL相关方法\n  protected abstract getShaderSources(): { vertex: string; fragment: string };\n  protected abstract applyWebGLEffect(canvas: HTMLCanvasElement): HTMLCanvasElement;\n\n  // Canvas 2D回退：简单的透明度动画或返回原图\n  protected applyCanvas2DEffect(canvas: HTMLCanvasElement): HTMLCanvasElement {\n    console.warn(`${this.constructor.name}: WebGL不可用，使用简单透明度回退动画`);\n\n    const outputCanvas = this.createOutputCanvas(canvas);\n    if (!outputCanvas) {\n      return canvas;\n    }\n\n    const { ctx } = outputCanvas;\n\n    // 简单的透明度渐变作为回退\n    ctx.globalAlpha = Math.max(0, 1 - this.currentAnimationRatio);\n    ctx.drawImage(canvas, 0, 0);\n\n    return outputCanvas.canvas;\n  }\n}\n\n/**\n * 仅支持Canvas 2D的特效基类\n * 适用于简单的2D图像处理特效，如模糊、颜色调整等\n */\nexport abstract class Canvas2DEffectBase extends DisappearAnimateBase {\n  constructor(from: null, to: null, duration: number, easing: EasingType, params: any) {\n    super(from, to, duration, easing, params);\n  }\n\n  // 必须实现Canvas 2D方法\n  protected abstract applyCanvas2DEffect(canvas: HTMLCanvasElement): HTMLCanvasElement;\n\n  // 不支持WebGL，返回null\n  protected getShaderSources(): { vertex: string; fragment: string } | null {\n    return null;\n  }\n\n  protected applyWebGLEffect(canvas: HTMLCanvasElement): HTMLCanvasElement | null {\n    return null;\n  }\n}\n\n/**\n * 混合实现特效基类\n * 既支持WebGL也支持Canvas 2D，根据环境自动选择\n */\nexport class HybridEffectBase extends DisappearAnimateBase {\n  constructor(from: null, to: null, duration: number, easing: EasingType, params: any) {\n    super(from, to, duration, easing, params);\n  }\n\n  // 可选实现WebGL方法\n  protected getShaderSources(): { vertex: string; fragment: string } | null {\n    return null; // 子类可以重写\n  }\n\n  protected applyWebGLEffect(canvas: HTMLCanvasElement): HTMLCanvasElement | null {\n    return null; // 子类可以重写\n  }\n\n  // 可选实现Canvas 2D方法\n  protected applyCanvas2DEffect(canvas: HTMLCanvasElement): HTMLCanvasElement | null {\n    return null; // 子类可以重写\n  }\n\n  // 重写检查方法，使用更准确的检测\n  protected supportsWebGL(): boolean {\n    return this.getShaderSources !== HybridEffectBase.prototype.getShaderSources && this.getShaderSources() !== null;\n  }\n\n  protected supportsCanvas2D(): boolean {\n    return this.applyCanvas2DEffect !== HybridEffectBase.prototype.applyCanvas2DEffect;\n  }\n\n  /**\n   * 重写渲染方法，支持用户配置的 useWebGL 控制\n   */\n  protected afterStageRender(stage: any, canvas: HTMLCanvasElement): HTMLCanvasElement | void | null | false {\n    let result: HTMLCanvasElement | null = null;\n\n    // 根据用户配置决定渲染策略\n    if (this.params?.options?.useWebGL !== false) {\n      // 用户允许使用WebGL，按照父类的自动判别逻辑\n      // 优先尝试WebGL实现\n      if (this.supportsWebGL()) {\n        if (!this.gl && !this.initWebGL(canvas)) {\n          console.warn('WebGL初始化失败，尝试Canvas 2D回退');\n        }\n\n        if (this.gl) {\n          result = this.applyWebGLEffect(canvas);\n          if (result) {\n            return result;\n          }\n          console.warn('WebGL特效执行失败，尝试Canvas 2D回退');\n        }\n      }\n\n      // WebGL不可用或执行失败，尝试Canvas 2D回退\n      if (this.supportsCanvas2D()) {\n        result = this.applyCanvas2DEffect(canvas);\n        if (result) {\n          return result;\n        }\n        console.warn('Canvas 2D特效执行失败');\n      }\n    } else {\n      // 用户禁用WebGL，直接使用Canvas 2D\n      if (this.supportsCanvas2D()) {\n        result = this.applyCanvas2DEffect(canvas);\n        if (result) {\n          return result;\n        }\n        console.warn('Canvas 2D特效执行失败');\n      } else {\n        console.warn(`${this.constructor.name}: useWebGL=false 但未实现Canvas 2D方法`);\n      }\n    }\n\n    // 如果都不支持或都失败了，给出明确的错误信息\n    if (!this.supportsWebGL() && !this.supportsCanvas2D()) {\n      console.error(\n        `特效类 ${this.constructor.name} 未实现任何渲染方法。请实现 applyWebGLEffect 或 applyCanvas2DEffect 方法。`\n      );\n    }\n\n    // 返回原图作为最后的回退\n    return canvas;\n  }\n}\n"]}