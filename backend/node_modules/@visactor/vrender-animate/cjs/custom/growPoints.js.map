{"version":3,"sources":["../src/custom/growPoints.ts"],"names":[],"mappings":"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","file":"growPoints.js","sourcesContent":["import { pointInterpolation, type IGraphic, type IGroup, type EasingType } from '@visactor/vrender-core';\nimport type { IPointLike } from '@visactor/vutils';\nimport { isValidNumber } from '@visactor/vutils';\nimport { ACustomAnimate } from './custom-animate';\n\ninterface IAnimationParameters {\n  width: number;\n  height: number;\n  group: IGroup;\n  elementIndex: number;\n  elementCount: number;\n  view: any;\n}\n\ntype TypeAnimation<T extends IGraphic> = (\n  graphic: T,\n  options: any,\n  animationParameters: IAnimationParameters\n) => { from?: { [channel: string]: any }; to?: { [channel: string]: any } };\n\nexport interface IGrowPointsAnimationOptions {\n  orient?: 'positive' | 'negative';\n}\n\nexport interface IGrowPointsOverallAnimationOptions extends IGrowPointsAnimationOptions {\n  center?: IPointLike;\n}\n\nconst getCenterPoints = (\n  graphic: IGraphic,\n  options: IGrowPointsOverallAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  const points: IPointLike[] = attrs.points;\n  const center: IPointLike = { x: 0, y: 0 };\n  points.forEach(point => {\n    center.x += point.x;\n    center.y += point.y;\n  });\n  center.x /= points.length;\n  center.y /= points.length;\n\n  if (options && options.center) {\n    if (isValidNumber(options.center.x)) {\n      center.x = options.center.x;\n    }\n    if (isValidNumber(options.center.y)) {\n      center.y = options.center.y;\n    }\n  }\n\n  if (graphic.type === 'area') {\n    center.x1 = center.x;\n    center.y1 = center.y;\n  }\n\n  return points.map(point => Object.assign({}, point, center));\n};\n\nexport const growPointsIn: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsOverallAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: getCenterPoints(graphic, options, animationParameters) },\n    to: { points: attrs.points }\n  };\n};\n\nexport const growPointsOut: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsOverallAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: attrs.points },\n    to: { points: getCenterPoints(graphic, options, animationParameters) }\n  };\n};\n\nexport class GworPointsBase extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: any) {\n    super(from, to, duration, easing, params);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const fromPoints = this.from?.points as unknown as IPointLike[];\n    const toPoints = this.to?.points as unknown as IPointLike[];\n    if (!fromPoints || !toPoints) {\n      return;\n    }\n\n    (this.target.attribute as any).points = fromPoints.map((point, index) => {\n      const newPoint = pointInterpolation(fromPoints[index], toPoints[index], ratio);\n      return newPoint;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 增长渐入\n */\nexport class GrowPointsIn extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line', 'polygon'].includes(this.target.type)) {\n      const { from, to } = growPointsIn(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from;\n      this.to = to;\n\n      // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n      const finalAttribute = this.target.getFinalAttribute();\n      if (finalAttribute) {\n        this.target.setAttributes(finalAttribute);\n      }\n      if (this.params.controlOptions?.immediatelyApply !== false) {\n        this.target.setAttributes(from);\n      }\n    } else {\n      this.valid = false;\n    }\n  }\n}\n\nexport class GrowPointsOut extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line'].includes(this.target.type)) {\n      const attrs = this.target.getFinalAttribute();\n      const { from, to } = growPointsOut(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from || attrs;\n      this.to = to;\n    } else {\n      this.valid = false;\n    }\n  }\n}\n\nconst changePointsX = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  const points = attrs.points;\n  return points.map((point: IPointLike) => {\n    if (options && options.orient === 'negative') {\n      let groupRight = graphic.stage.viewWidth;\n\n      if (graphic.parent.parent.parent) {\n        groupRight = graphic.parent.parent.parent.AABBBounds.width();\n      }\n\n      return {\n        ...point,\n        x: groupRight,\n        y: point.y,\n        x1: groupRight,\n        y1: point.y1,\n        defined: point.defined !== false\n      } as IPointLike;\n    }\n    return {\n      ...point,\n      x: 0,\n      y: point.y,\n      x1: 0,\n      y1: point.y1,\n      defined: point.defined !== false\n    } as IPointLike;\n  });\n};\n\nconst growPointsXIn: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: changePointsX(graphic, options, animationParameters) },\n    to: { points: attrs.points }\n  };\n};\n\nconst growPointsXOut: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: attrs.points },\n    to: { points: changePointsX(graphic, options, animationParameters) }\n  };\n};\n\nexport class GrowPointsXIn extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line', 'polygon'].includes(this.target.type)) {\n      const { from, to } = growPointsXIn(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from;\n      this.to = to;\n\n      // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n      const finalAttribute = this.target.getFinalAttribute();\n      if (finalAttribute) {\n        this.target.setAttributes(finalAttribute);\n      }\n      if (this.params.controlOptions?.immediatelyApply !== false) {\n        this.target.setAttributes(from);\n      }\n    } else {\n      this.valid = false;\n    }\n  }\n}\n\nexport class GrowPointsXOut extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line'].includes(this.target.type)) {\n      const attrs = this.target.getFinalAttribute();\n      const { from, to } = growPointsXOut(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from || attrs;\n      this.to = to;\n    } else {\n      this.valid = false;\n    }\n  }\n}\n\nconst changePointsY = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  const points = attrs.points;\n  return points.map((point: IPointLike) => {\n    if (options && options.orient === 'negative') {\n      let groupBottom = graphic.stage.viewHeight;\n      if (graphic.parent.parent.parent) {\n        groupBottom = graphic.parent.parent.parent.AABBBounds.height();\n      }\n\n      return {\n        ...point,\n        x: point.x,\n        y: groupBottom,\n        x1: point.x1,\n        y1: groupBottom,\n        defined: point.defined !== false\n      } as IPointLike;\n    }\n    return {\n      ...point,\n      x: point.x,\n      y: 0,\n      x1: point.x1,\n      y1: 0,\n      defined: point.defined !== false\n    } as IPointLike;\n  });\n};\n\nconst growPointsYIn: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: changePointsY(graphic, options, animationParameters) },\n    to: { points: attrs.points }\n  };\n};\n\nconst growPointsYOut: TypeAnimation<IGraphic> = (\n  graphic: IGraphic,\n  options: IGrowPointsAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = graphic.getFinalAttribute();\n  return {\n    from: { points: attrs.points },\n    to: { points: changePointsY(graphic, options, animationParameters) }\n  };\n};\n\nexport class GrowPointsYIn extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line', 'polygon'].includes(this.target.type)) {\n      const { from, to } = growPointsYIn(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from;\n      this.to = to;\n\n      // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n      const finalAttribute = this.target.getFinalAttribute();\n      if (finalAttribute) {\n        this.target.setAttributes(finalAttribute);\n      }\n\n      if (this.params.controlOptions?.immediatelyApply !== false) {\n        this.target.setAttributes(from);\n      }\n    } else {\n      this.valid = false;\n    }\n  }\n}\n\nexport class GrowPointsYOut extends GworPointsBase {\n  onBind(): void {\n    super.onBind();\n    if (['area', 'line', 'polygon'].includes(this.target.type)) {\n      const { from, to } = growPointsYOut(this.target, this.params.options, this.params);\n      this.props = to;\n      this.propKeys = Object.keys(to).filter(key => to[key] != null);\n      this.from = from ?? (this.target.attribute as any);\n      this.to = to;\n    } else {\n      this.valid = false;\n    }\n  }\n}\n"]}