{"version":3,"sources":["../src/step.ts"],"names":[],"mappings":"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","file":"step.js","sourcesContent":["import {\n  ColorStore,\n  ColorType,\n  Generator,\n  type IGraphic,\n  type IAnimate,\n  type IStep,\n  type EasingType,\n  type EasingTypeFunc,\n  type IAnimateStepType\n} from '@visactor/vrender-core';\nimport { Easing } from './utils/easing';\nimport { commonInterpolateUpdate, interpolateUpdateStore } from './interpolate/store';\nimport { isString } from '@visactor/vutils';\n\nfunction noop() {\n  //...\n}\n\nexport class Step implements IStep {\n  id: number;\n  type: IAnimateStepType;\n  prev?: IStep;\n  duration: number;\n  next?: IStep;\n  props?: Record<string, any>;\n  propKeys?: string[];\n  interpolateUpdateFunctions?: ((\n    key: string,\n    from: number,\n    to: number,\n    ratio: number,\n    step: IStep,\n    target: IGraphic\n  ) => void)[];\n  easing: EasingTypeFunc;\n  animate: IAnimate;\n  target: IGraphic;\n  fromProps: Record<string, any>;\n  fromParsedProps: Record<string, any>;\n  toParsedProps: Record<string, any>;\n\n  // 内部状态\n  protected _startTime: number = 0;\n  _hasFirstRun: boolean = false;\n\n  protected _endCb?: (animate: IAnimate, step: IStep) => void;\n\n  syncAttributeUpdate: () => void;\n\n  constructor(type: IAnimateStepType, props: Record<string, any>, duration: number, easing: EasingType) {\n    this.type = type;\n    this.props = props;\n    this.duration = duration;\n    // 设置缓动函数\n    if (easing) {\n      this.easing = typeof easing === 'function' ? easing : Easing[easing] ?? Easing.linear;\n    } else {\n      this.easing = Easing.linear;\n    }\n    if (type === 'wait') {\n      this.onUpdate = noop;\n    }\n    this.id = Generator.GenAutoIncrementId();\n    this.syncAttributeUpdate = noop;\n  }\n\n  bind(target: IGraphic, animate: IAnimate): void {\n    this.target = target;\n    this.animate = animate;\n    this.onBind();\n    this.syncAttributeUpdate();\n  }\n\n  append(step: IStep): void {\n    this.next = step;\n    step.prev = this;\n\n    // 更新绝对时间\n    step.setStartTime(this.getStartTime() + this.duration, false);\n  }\n\n  // 更新下游节点的开始时间\n  private updateDownstreamStartTimes(): void {\n    let currentStep = this.next;\n    let currentStartTime = this._startTime + this.duration;\n\n    while (currentStep) {\n      currentStep.setStartTime(currentStartTime, false);\n      currentStartTime += currentStep.duration;\n      currentStep = currentStep.next;\n    }\n    this.animate.updateDuration();\n  }\n\n  getLastProps(): any {\n    if (this.prev) {\n      return this.prev.props || {};\n    }\n    return this.animate.getStartProps();\n  }\n\n  setDuration(duration: number, updateDownstream: boolean = true): void {\n    this.duration = duration;\n\n    // 如果有后续节点，更新所有后续节点的开始时间\n    if (updateDownstream) {\n      this.updateDownstreamStartTimes();\n    }\n  }\n\n  getDuration(): number {\n    return this.duration;\n  }\n\n  determineInterpolateUpdateFunction(): void {\n    // 根据属性类型确定插值更新函数\n    // 这里可以进行优化，例如缓存不同类型属性的插值更新函数\n    if (!this.props) {\n      return;\n    }\n\n    const funcs: ((key: string, from: number, to: number, ratio: number, step: IStep, target: IGraphic) => void)[] = [];\n    this.propKeys.forEach(key => {\n      // 普通颜色特殊处理，需要提前解析成number[]\n      if (key === 'fill' || key === 'stroke') {\n        const from = this.fromProps[key];\n        const to = this.props[key];\n        if (isString(from) && isString(to)) {\n          const fromArray = ColorStore.Get(from, ColorType.Color255);\n          const toArray = ColorStore.Get(to, ColorType.Color255);\n          if (!this.fromParsedProps) {\n            this.fromParsedProps = {};\n          }\n          if (!this.toParsedProps) {\n            this.toParsedProps = {};\n          }\n          this.fromParsedProps[key] = fromArray;\n          this.toParsedProps[key] = toArray;\n          funcs.push((interpolateUpdateStore as any)[key === 'fill' ? 'fillPure' : 'strokePure']);\n        } else if ((interpolateUpdateStore as any)[key]) {\n          funcs.push((interpolateUpdateStore as any)[key]);\n        } else {\n          funcs.push(commonInterpolateUpdate);\n        }\n      } else if ((interpolateUpdateStore as any)[key]) {\n        funcs.push((interpolateUpdateStore as any)[key]);\n      } else {\n        funcs.push(commonInterpolateUpdate);\n      }\n    });\n    this.interpolateUpdateFunctions = funcs;\n  }\n\n  setStartTime(time: number, updateDownstream: boolean = true): void {\n    this._startTime = time;\n    if (updateDownstream) {\n      this.updateDownstreamStartTimes();\n    }\n  }\n\n  getStartTime(): number {\n    return this._startTime;\n  }\n\n  onBind(): void {\n    // 在第一次绑定到Animate的时候触发\n    if (this.target.type === 'glyph') {\n      this.syncAttributeUpdate = this._syncAttributeUpdate;\n    }\n  }\n\n  _syncAttributeUpdate = (): void => {\n    this.target.setAttributes(this.target.attribute);\n  };\n\n  /**\n   * 首次运行逻辑\n   * 如果跳帧了就不一定会执行\n   */\n  onFirstRun(): void {\n    // 首次运行逻辑\n  }\n\n  /**\n   * 开始执行的时候调用\n   * 如果跳帧了就不一定会执行\n   */\n  onStart(): void {\n    if (!this._hasFirstRun) {\n      this._hasFirstRun = true;\n      // 获取上一步的属性值作为起始值\n      this.fromProps = this.getLastProps();\n      const startProps = this.animate.getStartProps();\n      this.propKeys &&\n        this.propKeys.forEach(key => {\n          this.fromProps[key] = this.fromProps[key] ?? startProps[key];\n        });\n      this.determineInterpolateUpdateFunction();\n      this.tryPreventConflict();\n      this.trySyncStartProps();\n      this.onFirstRun();\n    }\n  }\n\n  protected tryPreventConflict(): void {\n    // 屏蔽掉之前动画冲突的属性\n    const animate = this.animate;\n    const target = this.target;\n    target.animates.forEach((a: any) => {\n      if (a === animate || a.priority > animate.priority || a.priority === Infinity) {\n        return;\n      }\n      const fromProps = a.getStartProps();\n      this.propKeys.forEach(key => {\n        if (fromProps[key] != null) {\n          a.preventAttr(key);\n        }\n      });\n    });\n  }\n\n  /**\n   * 删除自身属性，会直接从props等内容里删除掉\n   */\n  deleteSelfAttr(key: string): void {\n    delete this.props[key];\n    // fromProps在动画开始时才会计算，这时可能不在\n    this.fromProps && delete this.fromProps[key];\n    const index = this.propKeys.indexOf(key);\n    if (index !== -1) {\n      this.propKeys.splice(index, 1);\n      this.interpolateUpdateFunctions?.splice(index, 1);\n    }\n  }\n\n  /**\n   * 尝试同步startProps，因为当前animate的startProps仅包含当前animate的信息，不排除过程中有其他animate的干扰\n   * 所以为了避免属性突变，需要确保startProps的属性值是最新的\n   */\n  trySyncStartProps(): void {\n    this.propKeys.forEach(key => {\n      this.fromProps[key] = this.animate.target.getComputedAttribute(key);\n    });\n  }\n\n  /**\n   * 更新执行的时候调用\n   * 如果跳帧了就不一定会执行\n   */\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    // TODO 需要修复，只有在开始的时候才调用\n    this.onStart();\n    if (!this.props || !this.propKeys) {\n      return;\n    }\n    // 应用缓动函数\n    const easedRatio = this.easing(ratio);\n    this.animate.interpolateUpdateFunction\n      ? this.animate.interpolateUpdateFunction(this.fromProps, this.props, easedRatio, this, this.target)\n      : this.interpolateUpdateFunctions.forEach((func, index) => {\n          // 如果这个属性被屏蔽了，直接跳过\n          if (!this.animate.validAttr(this.propKeys[index])) {\n            return;\n          }\n          const key = this.propKeys[index];\n          const fromValue = this.fromProps[key];\n          const toValue = this.props[key];\n          func(key, fromValue, toValue, easedRatio, this, this.target);\n        });\n    this.onUpdate(end, easedRatio, out);\n    this.syncAttributeUpdate();\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // ...\n  }\n\n  /**\n   * 结束执行的时候调用\n   * 如果跳帧了就不一定会执行\n   */\n  onEnd(cb?: (animate: IAnimate, step: IStep) => void): void {\n    this.target.setAttributes(this.props);\n    if (cb) {\n      this._endCb = cb;\n    } else if (this._endCb) {\n      this._endCb(this.animate, this);\n    }\n  }\n\n  /**\n   * 获取结束的属性，包含前序的终值，是merge过的\n   * @returns\n   */\n  getEndProps(): Record<string, any> {\n    return this.props;\n  }\n\n  /**\n   * 获取开始的属性，是前序的终值\n   * @returns\n   */\n  getFromProps(): Record<string, any> {\n    return this.fromProps;\n  }\n\n  /**\n   * 获取结束的属性，包含前序的终值，是merge过的，同getEndProps\n   * @returns\n   */\n  getMergedEndProps(): Record<string, any> | void {\n    return this.getEndProps();\n  }\n\n  stop(): void {\n    // ...\n  }\n\n  release(): void {\n    // ...\n  }\n}\n\nexport class WaitStep extends Step {\n  constructor(type: IAnimateStepType, props: Record<string, any>, duration: number, easing: EasingType) {\n    super(type, props, duration, easing);\n  }\n\n  onStart(): void {\n    super.onStart();\n\n    const fromProps = this.getFromProps();\n    this.target.setAttributes(fromProps);\n  }\n\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    this.onStart();\n    // 其他的不执行\n  }\n\n  determineInterpolateUpdateFunction(): void {\n    return;\n  }\n}\n"]}