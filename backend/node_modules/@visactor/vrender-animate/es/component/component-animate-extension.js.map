{"version":3,"sources":["../src/component/component-animate-extension.ts"],"names":[],"mappings":"","file":"component-animate-extension.js","sourcesContent":["// import type { IGraphic } from '@visactor/vrender-core';\n// import type { IAnimationConfig } from '../executor/executor';\n// import { ComponentAnimator } from './component-animator';\n\n// /**\n//  * Component animation extension that can be mixed in to component classes\n//  */\n// export class ComponentAnimateExtension {\n//   private _componentAnimator: ComponentAnimator;\n\n//   /**\n//    * Get the component animator for this component\n//    * @returns The ComponentAnimator instance\n//    */\n//   getComponentAnimator(): ComponentAnimator {\n//     if (!this._componentAnimator) {\n//       this._componentAnimator = new ComponentAnimator(this as unknown as IGraphic);\n//     }\n//     return this._componentAnimator;\n//   }\n\n//   /**\n//    * Create a new animation sequence for this component\n//    * @returns A new ComponentAnimator instance\n//    */\n//   createAnimationSequence(): ComponentAnimator {\n//     return new ComponentAnimator(this as unknown as IGraphic);\n//   }\n\n//   /**\n//    * Create an animation for the component with the given preset\n//    * @param preset Animation preset name ('appear', 'disappear', etc.)\n//    * @param options Animation options\n//    * @returns The ComponentAnimator instance\n//    */\n//   animate(preset: string, options?: Record<string, any>): ComponentAnimator {\n//     const animator = this.getComponentAnimator();\n\n//     // Call the appropriate animation setup method based on preset\n//     switch (preset) {\n//       case 'appear':\n//         this.setupAppearAnimation(animator, options);\n//         break;\n//       case 'disappear':\n//         this.setupDisappearAnimation(animator, options);\n//         break;\n//       default:\n//         throw new Error(`Unknown animation preset: ${preset}`);\n//     }\n\n//     // Start the animation immediately\n//     animator.start();\n\n//     return animator;\n//   }\n\n//   /**\n//    * Create an appear animation\n//    * @param options Animation options\n//    * @returns The ComponentAnimator instance (not started)\n//    */\n//   createAppearAnimation(options?: Record<string, any>): ComponentAnimator {\n//     const animator = this.createAnimationSequence();\n//     this.setupAppearAnimation(animator, options);\n//     return animator;\n//   }\n\n//   /**\n//    * Create a disappear animation\n//    * @param options Animation options\n//    * @returns The ComponentAnimator instance (not started)\n//    */\n//   createDisappearAnimation(options?: Record<string, any>): ComponentAnimator {\n//     const animator = this.createAnimationSequence();\n//     this.setupDisappearAnimation(animator, options);\n//     return animator;\n//   }\n\n//   /**\n//    * Execute an animation with the given config directly on the component\n//    * @param config Animation configuration\n//    * @returns This component\n//    */\n//   executeAnimation(config: IAnimationConfig): this {\n//     this.getComponentAnimator()\n//       .animate(this as unknown as IGraphic, config)\n//       .start();\n//     return this;\n//   }\n\n//   /**\n//    * Set up appear animation for this component\n//    * This is a placeholder method that component classes should override\n//    * @param animator The ComponentAnimator to set up\n//    * @param options Animation options\n//    */\n//   protected setupAppearAnimation(animator: ComponentAnimator, options?: Record<string, any>): void {\n//     // To be overridden by concrete component classes\n//     console.warn('setupAppearAnimation not implemented for this component');\n//   }\n\n//   /**\n//    * Set up disappear animation for this component\n//    * This is a placeholder method that component classes should override\n//    * @param animator The ComponentAnimator to set up\n//    * @param options Animation options\n//    */\n//   protected setupDisappearAnimation(animator: ComponentAnimator, options?: Record<string, any>): void {\n//     // To be overridden by concrete component classes\n//     console.warn('setupDisappearAnimation not implemented for this component');\n//   }\n// }\n\n// /**\n//  * Type for components that can be animated\n//  */\n// export interface IAnimatableComponent {\n//   animate: (preset: string, options?: Record<string, any>) => ComponentAnimator;\n//   createAppearAnimation: (options?: Record<string, any>) => ComponentAnimator;\n//   createDisappearAnimation: (options?: Record<string, any>) => ComponentAnimator;\n//   executeAnimation: (config: IAnimationConfig) => IAnimatableComponent;\n// }\n"]}