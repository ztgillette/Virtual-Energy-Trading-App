{"version":3,"sources":["../src/custom/custom-animate.ts"],"names":[],"mappings":"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","file":"custom-animate.js","sourcesContent":["import type { ComponentAnimator } from '../component';\nimport type { EasingType, IAnimateStepType, ICustomAnimate, Stage } from '@visactor/vrender-core';\nimport { Step } from '../step';\n\nexport abstract class ACustomAnimate<T> extends Step implements ICustomAnimate {\n  type: IAnimateStepType = 'customAnimate';\n  declare customFrom: T;\n  declare params?: any;\n  declare props?: T;\n  declare from?: T;\n  declare to?: T;\n\n  // 为了兼容旧的api，from和to是可选的，且尽量不需要From，因为为了避免突变，From都应该从当前位置开始\n  // 所以From并不会真正设置到fromProps中，而是作为customFrom参数\n  constructor(customFrom: T, customTo: T, duration: number, easing: EasingType, params?: any) {\n    super('customAnimate', customTo, duration, easing);\n    this.customFrom = customFrom;\n    this.params = params;\n    this.from = customFrom;\n    this.to = customTo;\n  }\n\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    // TODO 需要修复，只有在开始的时候才调用\n    this.onStart();\n    if (!this.props || !this.propKeys) {\n      return;\n    }\n    // 应用缓动函数\n    const easedRatio = this.easing(ratio);\n    this.onUpdate(end, easedRatio, out);\n    this.syncAttributeUpdate();\n  }\n\n  protected setProps(props: T) {\n    this.props = props;\n    this.propKeys = Object.keys(props);\n    this.animate.reSyncProps();\n  }\n}\n\nexport abstract class AComponentAnimate<T> extends ACustomAnimate<T> {\n  protected _animator: ComponentAnimator;\n\n  completeBind(animator: ComponentAnimator): void {\n    this.setStartTime(0);\n    this._animator && this._animator.start();\n    this.setDuration(animator.getDuration());\n  }\n\n  stop(): void {\n    this._animator && this._animator.stop();\n  }\n}\n\nexport abstract class AStageAnimate<T> extends ACustomAnimate<T> {\n  willCallBeforeStageRender: boolean = true;\n  willCallAfterStageRender: boolean = true;\n  constructor(customFrom: T, customTo: T, duration: number, easing: EasingType, params?: any) {\n    super(customFrom, customTo, duration, easing, params);\n    this.props = {} as T;\n  }\n\n  // 用户重载\n  protected beforeStageRender(stage: Stage, canvas: HTMLCanvasElement): HTMLCanvasElement | void | null | false {\n    return false;\n  }\n\n  // 用户重载\n  protected afterStageRender(stage: Stage, canvas: HTMLCanvasElement): HTMLCanvasElement | void | null | false {\n    return false;\n  }\n\n  onFirstRun(): void {\n    super.onFirstRun();\n    this.target.stage.setBeforeRender(this._beforeStageRender);\n    this.target.stage.setAfterRender(this._afterStageRender);\n    // 禁用脏矩形，因为stage动画可能会批量修改整体画面\n    this.target.stage.disableDirtyBounds();\n  }\n\n  stop() {\n    super.stop();\n    this.target.stage.removeBeforeRender(this._beforeStageRender);\n    this.target.stage.removeAfterRender(this._afterStageRender);\n  }\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    super.onUpdate(end, ratio, out);\n    this.willCallBeforeStageRender = true;\n    this.willCallAfterStageRender = true;\n  }\n\n  protected _beforeStageRender = () => {\n    if (!this.willCallBeforeStageRender) {\n      return;\n    }\n    this.willCallBeforeStageRender = false;\n    const stage = this.target.stage as any;\n    const canvas = stage.window.getContext().canvas.nativeCanvas;\n    const outputCanvas = this.beforeStageRender(stage, canvas);\n    if (outputCanvas) {\n      this.renderToStage(stage, outputCanvas);\n    }\n  };\n\n  protected _afterStageRender = () => {\n    if (!this.willCallAfterStageRender) {\n      return;\n    }\n    this.willCallAfterStageRender = false;\n    const stage = this.target.stage as any;\n    const canvas = stage.window.getContext().canvas.nativeCanvas;\n    const outputCanvas = this.afterStageRender(stage, canvas);\n    if (outputCanvas) {\n      this.renderToStage(stage, outputCanvas);\n    }\n  };\n\n  protected renderToStage(stage: Stage, canvas: HTMLCanvasElement): HTMLCanvasElement | void | null | false {\n    const stageCanvas = stage.window.getContext().canvas.nativeCanvas;\n    const ctx = stageCanvas.getContext('2d');\n    if (!ctx) {\n      return false;\n    }\n    ctx.clearRect(0, 0, stageCanvas.width, stageCanvas.height);\n    ctx.drawImage(canvas, 0, 0);\n    return stageCanvas;\n  }\n}\n"]}