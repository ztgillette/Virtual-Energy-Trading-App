{"version":3,"sources":["../src/custom/update.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAclD,MAAM,OAAO,MAAO,SAAQ,cAAsC;IAIhE,YAAY,IAAU,EAAE,EAAQ,EAAE,QAAgB,EAAE,MAAkB,EAAE,MAAgC;QACtG,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAE5C,CAAC;IAED,MAAM;;QACJ,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,MAAA,IAAI,CAAC,MAAM,CAAC,OAAO,mCAAK,EAAU,CAAC;QAC5D,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAa,CAAC;QAEvC,SAAS,qBAAQ,SAAS,CAAE,CAAC;QAC7B,IAAI,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,0CAAE,MAAM,EAAE;YACpC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;gBAClD,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,GAAY,EAAE,KAAa,EAAE,GAAwB;QAC1D,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjC,OAAO;SACR;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,yBAAyB;YACpC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;YACnG,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBAEtD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;oBACjD,OAAO;iBACR;gBACD,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACjC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACtC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;CACF","file":"update.js","sourcesContent":["import type { EasingType } from '@visactor/vrender-core';\nimport { ACustomAnimate } from './custom-animate';\n\nexport interface IUpdateAnimationOptions {\n  diffAttrs: Record<string, any>;\n  animationState: string;\n  diffState: string;\n  data: Record<string, any>[];\n}\n\n/**\n * 文本输入动画，实现类似打字机的字符逐个显示效果\n * 支持通过beforeText和afterText参数添加前缀和后缀\n * 支持通过showCursor参数显示光标，cursorChar自定义光标字符\n */\nexport class Update extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  // params: IUpdateAnimationOptions;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IUpdateAnimationOptions) {\n    super(from, to, duration, easing, params);\n    // this.params = params;\n  }\n\n  onBind() {\n    super.onBind();\n    let { diffAttrs = {} } = this.target.context ?? ({} as any);\n    const { options } = this.params as any;\n\n    diffAttrs = { ...diffAttrs };\n    if (options?.excludeChannels?.length) {\n      options.excludeChannels.forEach((channel: string) => {\n        delete diffAttrs[channel];\n      });\n    }\n\n    this.props = diffAttrs;\n  }\n\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    this.onStart();\n    if (!this.props || !this.propKeys) {\n      return;\n    }\n    // 应用缓动函数\n    const easedRatio = this.easing(ratio);\n    this.animate.interpolateUpdateFunction\n      ? this.animate.interpolateUpdateFunction(this.fromProps, this.props, easedRatio, this, this.target)\n      : this.interpolateUpdateFunctions.forEach((func, index) => {\n          // 如果这个属性被屏蔽了，直接跳过\n          if (!this.animate.validAttr(this.propKeys[index])) {\n            return;\n          }\n          const key = this.propKeys[index];\n          const fromValue = this.fromProps[key];\n          const toValue = this.props[key];\n          func(key, fromValue, toValue, easedRatio, this, this.target);\n        });\n    this.onUpdate(end, easedRatio, out);\n  }\n}\n"]}