{"version":3,"sources":["../src/custom/story.ts"],"names":[],"mappings":"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","file":"story.js","sourcesContent":["import { FadeIn } from './fade';\nimport type { EasingType, IGraphicAttribute } from '@visactor/vrender-core';\nimport { ACustomAnimate } from './custom-animate';\nimport { AnimateExecutor } from '../executor/animate-executor';\nimport { ColorStore, ColorType, interpolateColor } from '@visactor/vrender-core';\n\nexport class StoryFadeIn extends FadeIn {}\n\n// 滑动动画的参数接口\nexport interface ISlideAnimationOptions {\n  direction?: 'top' | 'bottom' | 'left' | 'right';\n  distance?: number;\n  fromOpacity?: number; // 透明度初始值，默认0\n}\n\n// 缩放动画的参数接口\nexport interface IGrowAnimationOptions {\n  fromScale?: number;\n  direction?: 'x' | 'y' | 'xy';\n  fromOpacity?: number; // 透明度初始值，默认0\n}\n\n// 旋转动画的参数接口\nexport interface ISpinAnimationOptions {\n  fromAngle?: number;\n  fromScale?: number;\n  fromOpacity?: number; // 透明度初始值，默认0\n}\n\n// 描边动画的参数接口\nexport interface IStrokeAnimationOptions {\n  lineWidth?: number; // 描边宽度，默认2\n  strokeColor?: string; // 描边颜色，默认黑色\n  fromOpacity?: number; // 透明度初始值，默认1\n  dashLength?: number; // 虚线长度，默认为元素周长\n  showFill?: boolean; // 是否显示填充，默认false\n  fillOpacity?: number; // 填充透明度，仅当showFill为true时有效\n}\n\n// 脉冲/强调动画的参数接口\nexport interface IPulseAnimationOptions {\n  pulseCount?: number; // 脉冲次数\n  pulseOpacity?: number; // 脉冲透明度，默认0.3\n  pulseScale?: number; // 缩放比例，默认1.05\n  pulseColor?: string; // 脉冲颜色，默认为元素自身颜色\n  pulseColorIntensity?: number; // 脉冲颜色强度，0-1，默认0.2\n  strokeOnly?: boolean; // 是否只应用于描边，默认false\n  fillOnly?: boolean; // 是否只应用于填充，默认false\n  useScale?: boolean; // 是否使用缩放效果，默认true\n  useOpacity?: boolean; // 是否使用透明度效果，默认true\n  useColor?: boolean; // 是否使用颜色效果，默认false\n  useStroke?: boolean; // 是否使用描边效果，默认true\n  useFill?: boolean; // 是否使用填充效果，默认true\n}\n\n/**\n * 滑动入场动画，包括从上到下，从下到上，从左到右，从右到左的位置，以及透明度属性插值\n */\nexport class SlideIn extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: ISlideAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 用于入场的时候设置属性\n    const attrs = this.target.getFinalAttribute();\n\n    const direction = (this.params?.direction as 'top' | 'bottom' | 'left' | 'right') || 'right';\n    const distance = this.params?.distance || 50;\n    const fromOpacity = this.params?.fromOpacity ?? 0; // 使用透明度初始值参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = { opacity: fromOpacity, baseOpacity: fromOpacity };\n    const to: Record<string, number> = { opacity: 1, baseOpacity: 1 };\n\n    // 根据方向设置对应的属性\n    if (direction === 'top') {\n      from.y = (attrs.y ?? 0) - distance;\n      to.y = attrs.y ?? 0;\n      this.propKeys = ['opacity', 'baseOpacity', 'y'];\n    } else if (direction === 'bottom') {\n      from.y = (attrs.y ?? 0) + distance;\n      to.y = attrs.y ?? 0;\n      this.propKeys = ['opacity', 'baseOpacity', 'y'];\n    } else if (direction === 'left') {\n      from.x = (attrs.x ?? 0) - distance;\n      to.x = attrs.x ?? 0;\n      this.propKeys = ['opacity', 'baseOpacity', 'x'];\n    } else {\n      // right\n      from.x = (attrs.x ?? 0) + distance;\n      to.x = attrs.x ?? 0;\n      this.propKeys = ['opacity', 'baseOpacity', 'x'];\n    }\n\n    this.from = from;\n    this.to = to;\n    this.props = to;\n\n    // 将初始属性应用到目标对象\n    this.target.setAttributes(from as any);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 缩放入场动画，包括scaleX、scaleY属性从某个比例缩放到1，该比例可以小于1也可以大于1，以及透明度属性插值\n */\nexport class GrowIn extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IGrowAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 用于入场的时候设置属性\n    const attrs = this.target.getFinalAttribute();\n\n    const fromScale = this.params?.fromScale ?? 0;\n    const direction = this.params?.direction || 'xy';\n    const fromOpacity = this.params?.fromOpacity ?? 0; // 使用透明度初始值参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = { opacity: fromOpacity, baseOpacity: fromOpacity };\n    const to: Record<string, number> = { opacity: 1, baseOpacity: 1 };\n    this.propKeys = ['opacity', 'baseOpacity'];\n\n    // 根据方向设置对应的缩放属性\n    if (direction === 'x' || direction === 'xy') {\n      from.scaleX = fromScale;\n      to.scaleX = attrs.scaleX ?? 1;\n      this.propKeys.push('scaleX');\n    }\n\n    if (direction === 'y' || direction === 'xy') {\n      from.scaleY = fromScale;\n      to.scaleY = attrs.scaleY ?? 1;\n      this.propKeys.push('scaleY');\n    }\n\n    this.from = from;\n    this.to = to;\n    this.props = to;\n\n    // 将初始属性应用到目标对象\n    this.target.setAttributes(from as any);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 旋转入场动画，包括rotate属性从某个角度度旋转到0，以及缩放属性从某个比例缩放到1，该比例可以小于1也可以大于1\n */\nexport class SpinIn extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: ISpinAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 用于入场的时候设置属性\n    const attrs = this.target.getFinalAttribute();\n\n    const fromAngle = this.params?.fromAngle ?? Math.PI * 2; // 默认旋转一圈\n    const fromScale = this.params?.fromScale ?? 0;\n    const fromOpacity = this.params?.fromOpacity ?? 0; // 使用透明度初始值参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = {\n      opacity: fromOpacity,\n      baseOpacity: fromOpacity,\n      angle: fromAngle,\n      scaleX: fromScale,\n      scaleY: fromScale\n    };\n\n    const to: Record<string, number> = {\n      opacity: 1,\n      baseOpacity: 1,\n      angle: attrs.angle ?? 0,\n      scaleX: attrs.scaleX ?? 1,\n      scaleY: attrs.scaleY ?? 1\n    };\n\n    this.propKeys = ['opacity', 'baseOpacity', 'angle', 'scaleX', 'scaleY'];\n    this.from = from;\n    this.to = to;\n    this.props = to;\n\n    // 将初始属性应用到目标对象\n    this.target.setAttributes(from as any);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 描边入场动画，使用lineDashOffset实现描边效果\n * 通过调整虚线偏移量，创建线条逐渐显示的动画效果\n */\nexport class StrokeIn extends ACustomAnimate<Record<string, any>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, any>;\n  declare to: Record<string, any>;\n  private perimeter: number = 0;\n  private originalAttributes: Record<string, any> = {};\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IStrokeAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 保存原始属性\n    this.originalAttributes = { ...this.target.getAttributes() };\n\n    // 获取图形周长\n    if (this.target.type === 'rect') {\n      const attr = this.target.attribute as any;\n      const width = attr.width ?? 100;\n      const height = attr.height ?? 100;\n      this.perimeter = 2 * (width + height);\n    } else if (this.target.type === 'circle') {\n      const attr = this.target.attribute as any;\n      const radius = attr.radius ?? 50;\n      this.perimeter = 2 * Math.PI * radius;\n    } else if (this.target.type === 'ellipse') {\n      const attr = this.target.attribute as any;\n      const radiusX = attr.radiusX ?? 50;\n      const radiusY = attr.radiusY ?? 50;\n      // 椭圆周长近似计算\n      this.perimeter = 2 * Math.PI * Math.sqrt((radiusX * radiusX + radiusY * radiusY) / 2);\n    } else {\n      // 对于其他形状，使用默认值\n      this.perimeter = 1000;\n    }\n\n    const lineWidth = this.params?.lineWidth ?? 2;\n    const strokeColor = this.params?.strokeColor ?? 'black';\n    const fromOpacity = this.params?.fromOpacity ?? 1;\n    const dashLength = this.params?.dashLength ?? this.perimeter;\n    const showFill = this.params?.showFill ?? false;\n    const fillOpacity = this.params?.fillOpacity ?? 0;\n\n    // 设置初始状态\n    this.from = {\n      lineDash: [dashLength, dashLength],\n      lineDashOffset: dashLength,\n      lineWidth,\n      stroke: strokeColor,\n      strokeOpacity: fromOpacity\n    };\n\n    // 设置目标状态\n    this.to = {\n      lineDash: [dashLength, dashLength],\n      lineDashOffset: 0,\n      lineWidth,\n      stroke: strokeColor,\n      strokeOpacity: fromOpacity\n    };\n\n    // 如果需要显示填充，添加填充相关属性\n    if (showFill) {\n      this.from.fillOpacity = fillOpacity;\n      this.to.fillOpacity = this.originalAttributes.fillOpacity ?? 1;\n    } else {\n      this.from.fillOpacity = 0;\n      this.to.fillOpacity = 0;\n    }\n\n    this.propKeys = ['lineDash', 'lineDashOffset', 'lineWidth', 'stroke', 'strokeOpacity', 'fillOpacity'];\n    this.props = this.to;\n\n    // 应用初始属性\n    this.target.setAttributes(this.from);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n\n    // 更新lineDashOffset\n    attribute.lineDashOffset = this.from.lineDashOffset + (this.to.lineDashOffset - this.from.lineDashOffset) * ratio;\n\n    // 更新fillOpacity (如果需要显示填充)\n    if (this.params?.showFill) {\n      attribute.fillOpacity = this.from.fillOpacity + (this.to.fillOpacity - this.from.fillOpacity) * ratio;\n    }\n  }\n\n  onEnd(): void {\n    super.onEnd();\n    // 动画结束后，是否要恢复原始属性\n    if (!this.params?.showFill) {\n      // 如果不显示填充，恢复原始的stroke属性但保持fillOpacity为0\n      const originalAttrs = { ...this.originalAttributes };\n      originalAttrs.fillOpacity = 0;\n      this.target.setAttributes(originalAttrs);\n    }\n  }\n}\n\n/**\n * 描边出场动画，使用lineDashOffset实现描边消失效果\n */\nexport class StrokeOut extends ACustomAnimate<Record<string, any>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, any>;\n  declare to: Record<string, any>;\n  private perimeter: number = 0;\n  private originalAttributes: Record<string, any> = {};\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IStrokeAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onFirstRun(): void {\n    // 保存原始属性\n    this.originalAttributes = { ...this.target.getAttributes() };\n\n    // 获取图形周长\n    if (this.target.type === 'rect') {\n      const attr = this.target.attribute as any;\n      const width = attr.width ?? 100;\n      const height = attr.height ?? 100;\n      this.perimeter = 2 * (width + height);\n    } else if (this.target.type === 'circle') {\n      const attr = this.target.attribute as any;\n      const radius = attr.radius ?? 50;\n      this.perimeter = 2 * Math.PI * radius;\n    } else if (this.target.type === 'ellipse') {\n      const attr = this.target.attribute as any;\n      const radiusX = attr.radiusX ?? 50;\n      const radiusY = attr.radiusY ?? 50;\n      // 椭圆周长近似计算\n      this.perimeter = 2 * Math.PI * Math.sqrt((radiusX * radiusX + radiusY * radiusY) / 2);\n    } else {\n      // 对于其他形状，使用默认值\n      this.perimeter = 1000;\n    }\n\n    const lineWidth = this.params?.lineWidth ?? 2;\n    const strokeColor = this.params?.strokeColor ?? 'black';\n    const fromOpacity = this.params?.fromOpacity ?? 1;\n    const dashLength = this.params?.dashLength ?? this.perimeter;\n    const showFill = this.params?.showFill ?? false;\n\n    // 设置初始状态 - 完全显示的描边\n    this.from = {\n      lineDash: [dashLength, dashLength],\n      lineDashOffset: 0,\n      lineWidth,\n      stroke: strokeColor,\n      strokeOpacity: fromOpacity\n    };\n\n    // 设置目标状态 - 完全消失的描边\n    this.to = {\n      lineDash: [dashLength, dashLength],\n      lineDashOffset: -dashLength,\n      lineWidth,\n      stroke: strokeColor,\n      strokeOpacity: fromOpacity\n    };\n\n    // 处理填充\n    if (showFill) {\n      this.from.fillOpacity = this.originalAttributes.fillOpacity ?? 1;\n      this.to.fillOpacity = 0;\n    } else {\n      this.from.fillOpacity = 0;\n      this.to.fillOpacity = 0;\n    }\n\n    this.propKeys = ['lineDash', 'lineDashOffset', 'lineWidth', 'stroke', 'strokeOpacity', 'fillOpacity'];\n    this.props = this.to;\n\n    // 应用初始属性\n    this.target.setAttributes(this.from);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n\n    // 更新lineDashOffset\n    attribute.lineDashOffset = this.from.lineDashOffset + (this.to.lineDashOffset - this.from.lineDashOffset) * ratio;\n\n    // 更新fillOpacity (如果有)\n    if (this.params?.showFill) {\n      attribute.fillOpacity = this.from.fillOpacity + (this.to.fillOpacity - this.from.fillOpacity) * ratio;\n    }\n  }\n}\n\n// 复合动画的参数接口\nexport interface IMoveScaleAnimationOptions {\n  slideDirection?: 'top' | 'bottom' | 'left' | 'right';\n  slideDistance?: number;\n  fromScale?: number;\n  scaleDirection?: 'x' | 'y' | 'xy';\n  slideRatio?: number; // 滑动动画占总时长的比例，默认0.5\n  fromOpacity?: number; // 透明度初始值，默认0\n}\n\n/**\n * 移动+缩放入场动画\n * 先走SlideIn，然后走GrowIn\n */\nexport class MoveScaleIn extends ACustomAnimate<any> {\n  declare valid: boolean;\n  private readonly slideInDuration: number;\n  private readonly growInDuration: number;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IMoveScaleAnimationOptions) {\n    super(from, to, duration, easing, params);\n    const slideRatio = params?.slideRatio ?? 0.5;\n    this.slideInDuration = duration * slideRatio;\n    this.growInDuration = duration * (1 - slideRatio);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 创建AnimateExecutor来运行序列动画\n    const executor = new AnimateExecutor(this.target);\n\n    // 第一步：滑动入场（包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SlideIn,\n      customParameters: {\n        direction: this.params?.slideDirection || 'right',\n        distance: this.params?.slideDistance || 50,\n        fromOpacity: this.params?.fromOpacity ?? 0\n      },\n      duration: this.slideInDuration,\n      easing: this.easing\n    });\n\n    // 第二步：缩放入场（不包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: GrowIn,\n      customParameters: {\n        fromScale: this.params?.fromScale || 0.5,\n        direction: this.params?.scaleDirection || 'xy',\n        fromOpacity: 1 // 设置初始透明度为1，使第二阶段不进行透明度插值\n      },\n      duration: this.growInDuration,\n      easing: this.easing,\n      delay: this.slideInDuration // 等第一步完成后再开始\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 动画逻辑由子动画处理\n  }\n}\n\n// 移动旋转动画的参数接口\nexport interface IMoveRotateAnimationOptions {\n  slideDirection?: 'top' | 'bottom' | 'left' | 'right';\n  slideDistance?: number;\n  fromAngle?: number;\n  fromScale?: number;\n  slideRatio?: number; // 滑动动画占总时长的比例，默认0.5\n  fromOpacity?: number; // 透明度初始值，默认0\n}\n\n/**\n * 移动+旋转入场动画\n * 先走SlideIn，然后走SpinIn\n */\nexport class MoveRotateIn extends ACustomAnimate<any> {\n  declare valid: boolean;\n  private readonly slideInDuration: number;\n  private readonly spinInDuration: number;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IMoveRotateAnimationOptions) {\n    super(from, to, duration, easing, params);\n    const slideRatio = params?.slideRatio ?? 0.5;\n    this.slideInDuration = duration * slideRatio;\n    this.spinInDuration = duration * (1 - slideRatio);\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 创建AnimateExecutor来运行序列动画\n    const executor = new AnimateExecutor(this.target);\n\n    // 第一步：滑动入场（包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SlideIn,\n      customParameters: {\n        direction: this.params?.slideDirection || 'right',\n        distance: this.params?.slideDistance || 50,\n        fromOpacity: this.params?.fromOpacity ?? 0\n      },\n      duration: this.slideInDuration,\n      easing: this.easing\n    });\n\n    // 第二步：旋转入场（不包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SpinIn,\n      customParameters: {\n        fromAngle: this.params?.fromAngle || Math.PI,\n        fromScale: this.params?.fromScale || 0.5,\n        fromOpacity: 1 // 设置初始透明度为1，使第二阶段不进行透明度插值\n      },\n      duration: this.spinInDuration,\n      easing: this.easing,\n      delay: this.slideInDuration // 等第一步完成后再开始\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 动画逻辑由子动画处理\n  }\n}\n\n/**\n * 滑动出场动画，包括从当前位置滑动到指定方向，以及透明度属性插值\n */\nexport class SlideOut extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(\n    from: null,\n    to: null,\n    duration: number,\n    easing: EasingType,\n    params?: ISlideAnimationOptions & { toOpacity?: number }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  onFirstRun(): void {\n    // 用于出场的时候设置属性\n    const attrs = this.target.getAttributes();\n\n    const direction = (this.params?.direction as 'top' | 'bottom' | 'left' | 'right') || 'right';\n    const distance = this.params?.distance || 50;\n    const fromOpacity = this.params?.fromOpacity ?? 1; // 使用透明度初始值参数\n    const toOpacity = this.params?.toOpacity ?? 0; // 使用目标透明度参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = { opacity: fromOpacity, baseOpacity: fromOpacity };\n    const to: Record<string, number> = { opacity: toOpacity, baseOpacity: toOpacity };\n\n    // 根据方向设置对应的属性\n    if (direction === 'top') {\n      from.y = attrs.y ?? 0;\n      to.y = (attrs.y ?? 0) - distance;\n      this.propKeys = ['opacity', 'baseOpacity', 'y'];\n    } else if (direction === 'bottom') {\n      from.y = attrs.y ?? 0;\n      to.y = (attrs.y ?? 0) + distance;\n      this.propKeys = ['opacity', 'baseOpacity', 'y'];\n    } else if (direction === 'left') {\n      from.x = attrs.x ?? 0;\n      to.x = (attrs.x ?? 0) - distance;\n      this.propKeys = ['opacity', 'baseOpacity', 'x'];\n    } else {\n      // right\n      from.x = attrs.x ?? 0;\n      to.x = (attrs.x ?? 0) + distance;\n      this.propKeys = ['opacity', 'baseOpacity', 'x'];\n    }\n\n    this.from = from;\n    this.to = to;\n    this.props = to;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 缩放出场动画，包括scaleX、scaleY属性从当前比例缩放到指定比例，以及透明度属性插值\n */\nexport class GrowOut extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(\n    from: null,\n    to: null,\n    duration: number,\n    easing: EasingType,\n    params?: IGrowAnimationOptions & { toOpacity?: number }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  onFirstRun(): void {\n    // 用于出场的时候设置属性\n    const attrs = this.target.getAttributes();\n\n    const toScale = this.params?.fromScale ?? 0; // 使用fromScale作为目标比例\n    const direction = this.params?.direction || 'xy';\n    const fromOpacity = this.params?.fromOpacity ?? 1; // 使用透明度初始值参数\n    const toOpacity = this.params?.toOpacity ?? 0; // 使用目标透明度参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = { opacity: fromOpacity, baseOpacity: fromOpacity };\n    const to: Record<string, number> = { opacity: toOpacity, baseOpacity: toOpacity };\n    this.propKeys = ['opacity', 'baseOpacity'];\n\n    // 根据方向设置对应的缩放属性\n    if (direction === 'x' || direction === 'xy') {\n      from.scaleX = attrs.scaleX ?? 1;\n      to.scaleX = toScale;\n      this.propKeys.push('scaleX');\n    }\n\n    if (direction === 'y' || direction === 'xy') {\n      from.scaleY = attrs.scaleY ?? 1;\n      to.scaleY = toScale;\n      this.propKeys.push('scaleY');\n    }\n\n    this.from = from;\n    this.to = to;\n    this.props = to;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 旋转出场动画，包括rotate属性从当前角度旋转到指定角度，以及缩放属性从当前比例缩放到指定比例\n */\nexport class SpinOut extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n  declare propKeys: string[];\n  declare from: Record<string, number>;\n  declare to: Record<string, number>;\n\n  constructor(\n    from: null,\n    to: null,\n    duration: number,\n    easing: EasingType,\n    params?: ISpinAnimationOptions & { toOpacity?: number }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  onFirstRun(): void {\n    // 用于出场的时候设置属性\n    const attrs = this.target.getAttributes();\n\n    const toAngle = this.params?.fromAngle ?? Math.PI * 2; // 默认旋转一圈\n    const toScale = this.params?.fromScale ?? 0;\n    const fromOpacity = this.params?.fromOpacity ?? 1; // 使用透明度初始值参数\n    const toOpacity = this.params?.toOpacity ?? 0; // 使用目标透明度参数\n\n    // 初始化from和to对象\n    const from: Record<string, number> = {\n      opacity: fromOpacity,\n      baseOpacity: fromOpacity,\n      angle: attrs.angle ?? 0,\n      scaleX: attrs.scaleX ?? 1,\n      scaleY: attrs.scaleY ?? 1\n    };\n\n    const to: Record<string, number> = {\n      opacity: toOpacity,\n      baseOpacity: toOpacity,\n      angle: toAngle,\n      scaleX: toScale,\n      scaleY: toScale\n    };\n\n    this.propKeys = ['opacity', 'baseOpacity', 'angle', 'scaleX', 'scaleY'];\n    this.from = from;\n    this.to = to;\n    this.props = to;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 移动+缩放出场动画\n * 先走GrowOut，然后走SlideOut\n */\nexport class MoveScaleOut extends ACustomAnimate<any> {\n  declare valid: boolean;\n  private readonly growOutDuration: number;\n  private readonly slideOutDuration: number;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IMoveScaleAnimationOptions) {\n    super(from, to, duration, easing, params);\n    const slideRatio = params?.slideRatio ?? 0.5;\n    this.growOutDuration = duration * (1 - slideRatio);\n    this.slideOutDuration = duration * slideRatio;\n  }\n\n  onFirstRun(): void {\n    // 创建AnimateExecutor来运行序列动画\n    const executor = new AnimateExecutor(this.target);\n\n    // 第一步：缩放出场（不包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: GrowOut,\n      customParameters: {\n        fromScale: this.params?.fromScale || 0.5,\n        direction: this.params?.scaleDirection || 'xy',\n        fromOpacity: 1, // 保持透明度为1，不做变化\n        toOpacity: 1 // 确保第一阶段不改变透明度\n      },\n      duration: this.growOutDuration,\n      easing: this.easing\n    });\n\n    // 第二步：滑动出场（包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SlideOut,\n      customParameters: {\n        direction: this.params?.slideDirection || 'right',\n        distance: this.params?.slideDistance || 50,\n        fromOpacity: 1 // 起始透明度为1\n      },\n      duration: this.slideOutDuration,\n      easing: this.easing,\n      delay: this.growOutDuration // 等第一步完成后再开始\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 动画逻辑由子动画处理\n  }\n}\n\n/**\n * 移动+旋转出场动画\n * 先走SpinOut，然后走SlideOut\n */\nexport class MoveRotateOut extends ACustomAnimate<any> {\n  declare valid: boolean;\n  private readonly spinOutDuration: number;\n  private readonly slideOutDuration: number;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IMoveRotateAnimationOptions) {\n    super(from, to, duration, easing, params);\n    const slideRatio = params?.slideRatio ?? 0.5;\n    this.spinOutDuration = duration * (1 - slideRatio);\n    this.slideOutDuration = duration * slideRatio;\n  }\n\n  onFirstRun(): void {\n    // 创建AnimateExecutor来运行序列动画\n    const executor = new AnimateExecutor(this.target);\n\n    // 第一步：旋转出场（不包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SpinOut,\n      customParameters: {\n        fromAngle: this.params?.fromAngle || Math.PI,\n        fromScale: this.params?.fromScale || 0.5,\n        fromOpacity: 1, // 保持透明度为1，不做变化\n        toOpacity: 1 // 确保第一阶段不改变透明度\n      },\n      duration: this.spinOutDuration,\n      easing: this.easing\n    });\n\n    // 第二步：滑动出场（包含透明度变化）\n    executor.execute({\n      type: 'custom',\n      custom: SlideOut,\n      customParameters: {\n        direction: this.params?.slideDirection || 'right',\n        distance: this.params?.slideDistance || 50,\n        fromOpacity: 1 // 起始透明度为1\n      },\n      duration: this.slideOutDuration,\n      easing: this.easing,\n      delay: this.spinOutDuration // 等第一步完成后再开始\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 动画逻辑由子动画处理\n  }\n}\n\n/**\n * 脉冲/强调动画，通过循环变化透明度、颜色和缩放来吸引注意力\n */\nexport class PulseAnimate extends ACustomAnimate<Record<string, any>> {\n  declare valid: boolean;\n  private originalAttributes: Record<string, any> = {};\n  private pulseCount: number = 3; // 默认3次脉冲\n  private pulseOpacity: number = 0.3;\n  private pulseScale: number = 1.05;\n  private pulseColor: string | null = null;\n  private pulseColorIntensity: number = 0.2;\n  private strokeOnly: boolean = false;\n  private fillOnly: boolean = false;\n  private useScale: boolean = true;\n  private useOpacity: boolean = true;\n  private useStroke: boolean = true;\n  private useFill: boolean = true;\n  private useColor: boolean = false;\n  private originalFill: string | null = null;\n  private originalStroke: string | null = null;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IPulseAnimationOptions) {\n    super(from, to, duration, easing, params);\n\n    // 配置脉冲参数\n    if (params?.pulseCount !== undefined) {\n      this.pulseCount = params.pulseCount;\n    }\n    if (params?.pulseScale !== undefined) {\n      this.pulseScale = params.pulseScale;\n    }\n    if (params?.pulseColor !== undefined) {\n      this.pulseColor = params.pulseColor;\n    }\n    if (params?.pulseColorIntensity !== undefined) {\n      this.pulseColorIntensity = params.pulseColorIntensity;\n    }\n    if (params?.strokeOnly !== undefined) {\n      this.strokeOnly = params.strokeOnly;\n    }\n    if (params?.fillOnly !== undefined) {\n      this.fillOnly = params.fillOnly;\n    }\n    if (params?.useScale !== undefined) {\n      this.useScale = params.useScale;\n    }\n    if (params?.useOpacity !== undefined) {\n      this.useOpacity = params.useOpacity;\n    }\n    if (params?.useStroke !== undefined) {\n      this.useStroke = params.useStroke;\n    }\n    if (params?.useFill !== undefined) {\n      this.useFill = params.useFill;\n    }\n    if (params?.useColor !== undefined) {\n      this.useColor = params.useColor;\n    }\n  }\n\n  onBind(): void {\n    super.onBind();\n    // 保存原始属性\n    this.originalAttributes = { ...this.target.getAttributes() };\n\n    // 保存颜色相关的属性\n    if (this.useColor) {\n      this.originalFill = this.originalAttributes.fill || null;\n      this.originalStroke = this.originalAttributes.stroke || null;\n\n      // 如果没有指定脉冲颜色，使用元素自身的颜色\n      if (!this.pulseColor) {\n        if (this.fillOnly && this.originalFill) {\n          this.pulseColor = this.originalFill;\n        } else if (this.strokeOnly && this.originalStroke) {\n          this.pulseColor = this.originalStroke;\n        } else if (this.originalFill) {\n          this.pulseColor = this.originalFill;\n        } else if (this.originalStroke) {\n          this.pulseColor = this.originalStroke;\n        } else {\n          this.pulseColor = '#FFFFFF'; // 默认白色\n        }\n      }\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 使用ratio计算脉冲效果\n    // ratio从0到1表示整个动画的进度\n\n    // 计算脉冲值：通过将单个进度映射到多个脉冲周期\n    // 将0-1的ratio映射到0到pulseCount*2*PI的角度，用于sin函数\n    const angle = ratio * Math.PI * this.pulseCount;\n    // 将sin值（-1到1）映射到0到1的范围\n    const pulseValue = Math.abs(Math.sin(angle));\n\n    // 应用属性\n    const attribute: Record<string, any> = this.target.attribute;\n\n    // 应用透明度 pulse\n    if (this.useOpacity) {\n      // 确保即使是最小值也是基于原始透明度的百分比\n      const opacity = 1 + (this.pulseOpacity - 1) * pulseValue;\n      if (this.useStroke) {\n        attribute.strokeOpacity = (this.originalAttributes.strokeOpacity || 1) * opacity;\n      }\n      if (this.useFill) {\n        attribute.fillOpacity = (this.originalAttributes.fillOpacity || 1) * opacity;\n      }\n    }\n\n    // 应用缩放脉冲\n    if (this.useScale) {\n      // 计算缩放比例: 从1到pulseScale之间变化\n      const scale = 1 + (this.pulseScale - 1) * pulseValue;\n      attribute.scaleX = (this.originalAttributes.scaleX || 1) * scale;\n      attribute.scaleY = (this.originalAttributes.scaleY || 1) * scale;\n    }\n\n    // 应用颜色脉冲\n    if (this.useColor && this.pulseColor) {\n      this.applyColorPulse(attribute, pulseValue);\n    }\n\n    // 确保更新渲染\n    this.target.addUpdateShapeAndBoundsTag();\n    this.target.addUpdatePositionTag();\n  }\n\n  // 应用颜色脉冲\n  private applyColorPulse(attribute: Record<string, any>, pulseValue: number): void {\n    // 根据pulseColorIntensity调整颜色变化强度\n    const colorRatio = this.pulseColorIntensity * pulseValue;\n\n    // 应用填充颜色脉冲\n    if (this.useFill && this.originalFill && this.pulseColor) {\n      attribute.fill = interpolateColor(this.originalFill, this.pulseColor, colorRatio, true);\n    }\n\n    // 应用描边颜色脉冲\n    if (this.useStroke && this.originalStroke && this.pulseColor) {\n      attribute.stroke = interpolateColor(this.originalStroke, this.pulseColor, colorRatio, true);\n    }\n  }\n\n  onEnd(): void {\n    super.onEnd();\n    // 恢复原始属性\n    this.target.setAttributes(this.originalAttributes);\n  }\n}\n"]}