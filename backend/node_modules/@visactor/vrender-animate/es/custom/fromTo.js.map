{"version":3,"sources":["../src/custom/fromTo.ts"],"names":[],"mappings":"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","file":"fromTo.js","sourcesContent":["import type { EasingType } from '@visactor/vrender-core';\nimport { ACustomAnimate } from './custom-animate';\n\nexport class FromTo extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n\n  keys: string[];\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: any) {\n    super(from, to, duration, easing, params);\n    this.from = from ?? {};\n  }\n\n  onBind(): void {\n    super.onBind();\n\n    // 如果存在from，不存在to，那么需要设置给props\n    Object.keys(this.from).forEach(key => {\n      if (this.props[key] == null) {\n        this.props[key] = this.target.getGraphicAttribute(key);\n      }\n    });\n\n    const finalAttribute = this.target.getFinalAttribute();\n    // 如果入场动画，那么需要设置属性\n    if (this.target.context?.animationState === 'appear') {\n      if (finalAttribute) {\n        this.target.setAttributes(finalAttribute);\n      }\n    }\n    if (this.params.controlOptions?.immediatelyApply !== false) {\n      this.target.setAttributes(this.from);\n    }\n  }\n\n  onFirstRun(): void {\n    // 获取上一步的属性值作为起始值\n    this.from = { ...this.getLastProps(), ...this.from };\n    const startProps = this.animate.getStartProps();\n    this.propKeys &&\n      this.propKeys.forEach(key => {\n        this.from[key] = this.from[key] ?? startProps[key];\n      });\n    // TODO：比较hack\n    // 如果是入场动画，那么还需要设置属性\n    // if (this.target.context?.animationState === 'appear') {\n    //   // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n    //   const finalAttribute = this.target.getFinalAttribute();\n    //   this.target.setAttributes(finalAttribute);\n    // }\n    this.target.setAttributes(this.from);\n  }\n\n  deleteSelfAttr(key: string): void {\n    super.deleteSelfAttr(key);\n    delete this.from[key];\n  }\n\n  /**\n   * 更新执行的时候调用\n   * 如果跳帧了就不一定会执行\n   */\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    // TODO 需要修复，只有在开始的时候才调用\n    this.onStart();\n    if (!this.props || !this.propKeys) {\n      return;\n    }\n    // 应用缓动函数\n    const easedRatio = this.easing(ratio);\n    this.animate.interpolateUpdateFunction\n      ? this.animate.interpolateUpdateFunction(this.from, this.props, easedRatio, this, this.target)\n      : this.interpolateUpdateFunctions.forEach((func, index) => {\n          // 如果这个属性被屏蔽了，直接跳过\n          if (!this.animate.validAttr(this.propKeys[index])) {\n            return;\n          }\n          const key = this.propKeys[index];\n          const fromValue = this.from[key];\n          const toValue = this.props[key];\n          func(key, fromValue, toValue, easedRatio, this, this.target);\n        });\n    this.onUpdate(end, easedRatio, out);\n    this.syncAttributeUpdate();\n  }\n}\n"]}