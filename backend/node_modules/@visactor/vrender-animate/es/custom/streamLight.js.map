{"version":3,"sources":["../src/custom/streamLight.ts"],"names":[],"mappings":"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","file":"streamLight.js","sourcesContent":["import type {\n  EasingType,\n  IArea,\n  IAreaCacheItem,\n  ICubicBezierCurve,\n  ICurve,\n  ICustomPath2D,\n  IGraphic,\n  ILine,\n  ILineAttribute,\n  IRect,\n  IRectAttribute\n} from '@visactor/vrender-core';\nimport { application, AttributeUpdateType, CustomPath2D, divideCubic } from '@visactor/vrender-core';\nimport { ACustomAnimate } from './custom-animate';\nimport type { IPoint } from '@visactor/vutils';\nimport { PointService } from '@visactor/vutils';\n\nexport class StreamLight extends ACustomAnimate<any> {\n  declare valid: boolean;\n  declare target: IGraphic;\n\n  declare rect: IRect;\n  declare line: ILine;\n  declare area: IArea;\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: { attribute?: Partial<IRectAttribute | ILineAttribute>; streamLength?: number; isHorizontal?: boolean }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  getEndProps(): Record<string, any> {\n    return {};\n  }\n\n  onStart(): void {\n    if (!this.target) {\n      return;\n    }\n    if (this.target.type === 'rect') {\n      this.onStartRect();\n    } else if (this.target.type === 'line') {\n      this.onStartLineOrArea('line');\n    } else if (this.target.type === 'area') {\n      this.onStartLineOrArea('area');\n    }\n  }\n\n  onStartLineOrArea(type: 'line' | 'area') {\n    const root = this.target.attachShadow();\n    const line = application.graphicService.creator[type]({\n      ...this.params?.attribute\n    });\n    this[type] = line;\n    line.pathProxy = new CustomPath2D();\n    root.add(line);\n  }\n\n  onStartRect(): void {\n    const root = this.target.attachShadow();\n\n    const isHorizontal = this.params?.isHorizontal ?? true;\n    const sizeAttr = isHorizontal ? 'height' : 'width';\n    const otherSizeAttr = isHorizontal ? 'width' : 'height';\n    const size = this.target.AABBBounds[sizeAttr]();\n    const y = isHorizontal ? 0 : this.target.AABBBounds.y1;\n\n    const rect = application.graphicService.creator.rect({\n      [sizeAttr]: size,\n      fill: '#bcdeff',\n      shadowBlur: 30,\n      shadowColor: '#bcdeff',\n      ...this.params?.attribute,\n      x: 0,\n      y,\n      [otherSizeAttr]: 0\n    });\n    this.rect = rect;\n    root.add(rect);\n  }\n\n  onBind(): void {\n    return;\n  }\n\n  onEnd(): void {\n    this.target.detachShadow();\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.rect) {\n      return this.onUpdateRect(end, ratio, out);\n    } else if (this.line || this.area) {\n      return this.onUpdateLineOrArea(end, ratio, out);\n    }\n  }\n\n  protected onUpdateRect(end: boolean, ratio: number, out: Record<string, any>): void {\n    const isHorizontal = this.params?.isHorizontal ?? true;\n    const parentAttr = (this.target as any).attribute;\n    if (isHorizontal) {\n      const parentWidth = parentAttr.width ?? Math.abs(parentAttr.x1 - parentAttr.x) ?? 250;\n      const streamLength = this.params?.streamLength ?? parentWidth;\n      const maxLength = this.params?.attribute?.width ?? 60;\n      // 起点，rect x右端点 对齐 parent左端点\n      // 如果parent.x1 < parent.x, 需要把rect属性移到parent x1的位置上, 因为初始 rect.x = parent.x\n      const startX = -maxLength;\n      // 插值\n      const currentX = startX + (streamLength - startX) * ratio;\n      // 位置限定 > 0\n      const x = Math.max(currentX, 0);\n      // 宽度计算\n      const w = Math.min(Math.min(currentX + maxLength, maxLength), streamLength - currentX);\n      // 如果 rect右端点 超出 parent右端点, 宽度动态调整\n      const width = w + x > parentWidth ? Math.max(parentWidth - x, 0) : w;\n      this.rect.setAttributes(\n        {\n          x: x + Math.min(parentAttr.x1 - parentAttr.x, 0),\n          width\n        } as any,\n        false,\n        {\n          type: AttributeUpdateType.ANIMATE_PLAY,\n          animationState: {\n            ratio,\n            end\n          }\n        }\n      );\n    } else {\n      const parentHeight = parentAttr.height ?? Math.abs(parentAttr.y1 - parentAttr.y) ?? 250;\n      const streamLength = this.params?.streamLength ?? parentHeight;\n      const maxLength = this.params?.attribute?.height ?? 60;\n      // 起点，y上端点 对齐 parent下端点\n      const startY = parentHeight;\n      // 插值\n      const currentY = startY - (streamLength + maxLength) * ratio;\n      // 位置限定 < parentHeight\n      let y = Math.min(currentY, parentHeight);\n      // 高度最小值\n      const h = Math.min(parentHeight - currentY, maxLength);\n      // 如果 rect上端点=y 超出 parent上端点 = 0, 则高度不断变小\n      let height;\n      if (y <= 0) {\n        // 必须先得到高度再将y置为0, 顺序很重要\n        height = Math.max(y + h, 0);\n        y = 0;\n      } else {\n        height = h;\n      }\n      this.rect.setAttributes(\n        {\n          y: y + Math.min(parentAttr.y1 - parentAttr.y, 0),\n          height\n        } as any,\n        false,\n        {\n          type: AttributeUpdateType.ANIMATE_PLAY,\n          animationState: {\n            ratio,\n            end\n          }\n        }\n      );\n    }\n  }\n\n  protected onUpdateLineOrArea(end: boolean, ratio: number, out: Record<string, any>) {\n    const target = this.line || this.area;\n    if (!target) {\n      return;\n    }\n    const customPath = target.pathProxy as ICustomPath2D;\n    const targetLine = this.target as ILine | IArea;\n    if (targetLine.cache || targetLine.cacheArea) {\n      this._onUpdateLineOrAreaWithCache(customPath, targetLine, end, ratio, out);\n    } else {\n      this._onUpdateLineWithoutCache(customPath, targetLine, end, ratio, out);\n    }\n    const targetAttrs = targetLine.attribute;\n    target.setAttributes({\n      stroke: targetAttrs.stroke,\n      ...target.attribute\n    });\n    target.addUpdateBoundTag();\n  }\n\n  // 针对有cache的linear\n  protected _onUpdateLineOrAreaWithCache(\n    customPath: ICustomPath2D,\n    g: ILine | IArea,\n    end: boolean,\n    ratio: number,\n    out: Record<string, any>\n  ) {\n    customPath.clear();\n    if (g.type === 'line') {\n      let cache = g.cache;\n      if (!Array.isArray(cache)) {\n        cache = [cache];\n      }\n      const totalLen = cache.reduce((l: any, c: any) => l + c.getLength(), 0);\n      const curves: ICurve<IPoint>[] = [];\n      cache.forEach((c: any) => {\n        c.curves.forEach((ci: any) => curves.push(ci));\n      });\n      return this._updateCurves(customPath, curves, totalLen, ratio);\n    } else if (g.type === 'area' && g.cacheArea?.top?.curves) {\n      const cache = g.cacheArea as IAreaCacheItem;\n      const totalLen = cache.top.curves.reduce((a, b) => a + b.getLength(), 0);\n      return this._updateCurves(customPath, cache.top.curves, totalLen, ratio);\n    }\n  }\n\n  protected _updateCurves(customPath: ICustomPath2D, curves: ICurve<IPoint>[], totalLen: number, ratio: number) {\n    const startLen = totalLen * ratio;\n    const endLen = Math.min(startLen + (this.params?.streamLength ?? 10), totalLen);\n    let lastLen = 0;\n    let start = false;\n    for (let i = 0; i < curves.length; i++) {\n      if (curves[i].defined !== false) {\n        const curveItem = curves[i];\n        const len = curveItem.getLength();\n        const startPercent = 1 - (lastLen + len - startLen) / len;\n        let endPercent = 1 - (lastLen + len - endLen) / len;\n        let curveForStart: ICubicBezierCurve;\n        if (lastLen < startLen && lastLen + len > startLen) {\n          start = true;\n          if (curveItem.p2 && curveItem.p3) {\n            const [_, curve2] = divideCubic(curveItem as ICubicBezierCurve, startPercent);\n            customPath.moveTo(curve2.p0.x, curve2.p0.y);\n            curveForStart = curve2;\n            // console.log(curve2.p0.x, curve2.p0.y);\n          } else {\n            const p = curveItem.getPointAt(startPercent);\n            customPath.moveTo(p.x, p.y);\n          }\n        }\n        if (lastLen < endLen && lastLen + len > endLen) {\n          if (curveItem.p2 && curveItem.p3) {\n            if (curveForStart) {\n              endPercent = (endLen - startLen) / curveForStart.getLength();\n            }\n            const [curve1] = divideCubic(curveForStart || (curveItem as ICubicBezierCurve), endPercent);\n            customPath.bezierCurveTo(curve1.p1.x, curve1.p1.y, curve1.p2.x, curve1.p2.y, curve1.p3.x, curve1.p3.y);\n          } else {\n            const p = curveItem.getPointAt(endPercent);\n            customPath.lineTo(p.x, p.y);\n          }\n          break;\n        } else if (start) {\n          if (curveItem.p2 && curveItem.p3) {\n            const curve = curveForStart || curveItem;\n            customPath.bezierCurveTo(curve.p1.x, curve.p1.y, curve.p2.x, curve.p2.y, curve.p3.x, curve.p3.y);\n          } else {\n            customPath.lineTo(curveItem.p1.x, curveItem.p1.y);\n          }\n        }\n        lastLen += len;\n      }\n    }\n  }\n\n  // 只针对最简单的linear\n  protected _onUpdateLineWithoutCache(\n    customPath: ICustomPath2D,\n    line: ILine,\n    end: boolean,\n    ratio: number,\n    out: Record<string, any>\n  ) {\n    const { points, curveType } = line.attribute;\n    if (!points || points.length < 2 || curveType !== 'linear') {\n      return;\n    }\n    let totalLen = 0;\n    for (let i = 1; i < points.length; i++) {\n      totalLen += PointService.distancePP(points[i], points[i - 1]);\n    }\n    const startLen = totalLen * ratio;\n    const endLen = Math.min(startLen + (this.params?.streamLength ?? 10), totalLen);\n    const nextPoints = [];\n    let lastLen = 0;\n    for (let i = 1; i < points.length; i++) {\n      const len = PointService.distancePP(points[i], points[i - 1]);\n      if (lastLen < startLen && lastLen + len > startLen) {\n        nextPoints.push(PointService.pointAtPP(points[i - 1], points[i], 1 - (lastLen + len - startLen) / len));\n      }\n      if (lastLen < endLen && lastLen + len > endLen) {\n        nextPoints.push(PointService.pointAtPP(points[i - 1], points[i], 1 - (lastLen + len - endLen) / len));\n        break;\n      } else if (nextPoints.length) {\n        nextPoints.push(points[i]);\n      }\n      lastLen += len;\n    }\n\n    if (!nextPoints.length || nextPoints.length < 2) {\n      return;\n    }\n    customPath.clear();\n    customPath.moveTo(nextPoints[0].x, nextPoints[0].y);\n    for (let i = 1; i < nextPoints.length; i++) {\n      customPath.lineTo(nextPoints[i].x, nextPoints[i].y);\n    }\n  }\n}\n"]}