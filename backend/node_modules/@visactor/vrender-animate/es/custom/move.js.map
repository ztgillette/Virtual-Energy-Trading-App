{"version":3,"sources":["../src/custom/move.ts"],"names":[],"mappings":"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","file":"move.js","sourcesContent":["import type { EasingType, IGraphic, IGroup } from '@visactor/vrender-core';\nimport { isFunction, isValidNumber } from '@visactor/vutils';\nimport { ACustomAnimate } from './custom-animate';\n\nexport type FunctionCallback<T> = (...args: any[]) => T;\n\nexport interface IMoveAnimationOptions {\n  direction?: 'x' | 'y' | 'xy';\n  orient?: 'positive' | 'negative';\n  offset?: number;\n  point?: { x?: number; y?: number } | FunctionCallback<{ x?: number; y?: number }>;\n  excludeChannels?: string[];\n  layoutRect?: { width: number; height: number };\n}\n\ninterface IAnimationParameters {\n  width: number;\n  height: number;\n  group: IGroup;\n  elementIndex: number;\n  elementCount: number;\n  view: any;\n}\n\n// When user did not provide proper x/y value, move animation will never work properly,\n//  due to that, default x/y value won't be set.\n\nexport const moveIn = (\n  graphic: IGraphic,\n  options: IMoveAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const { offset = 0, orient, direction, point: pointOpt, excludeChannels = [], layoutRect = {} } = options ?? {};\n  let changedX = 0;\n  let changedY = 0;\n\n  if (orient === 'negative') {\n    changedX = (layoutRect as any).width ?? graphic.stage.viewWidth;\n    changedY = (layoutRect as any).height ?? graphic.stage.viewHeight;\n  }\n\n  changedX += offset;\n  changedY += offset;\n  const point = isFunction(pointOpt)\n    ? pointOpt.call(null, graphic.context?.data?.[0], graphic, animationParameters)\n    : pointOpt;\n  const finalAttrsX = graphic.getGraphicAttribute('x');\n  const finalAttrsY = graphic.getGraphicAttribute('y');\n  const fromX = excludeChannels.includes('x') ? finalAttrsX : point && isValidNumber(point.x) ? point.x : changedX;\n  const fromY = excludeChannels.includes('y') ? finalAttrsY : point && isValidNumber(point.y) ? point.y : changedY;\n\n  switch (direction) {\n    case 'x':\n      return {\n        from: { x: excludeChannels.includes('x') ? finalAttrsX : fromX },\n        to: { x: finalAttrsX }\n      };\n    case 'y':\n      return {\n        from: { y: fromY },\n        to: { y: finalAttrsY }\n      };\n    case 'xy':\n    default:\n      return {\n        from: { x: fromX, y: fromY },\n        to: {\n          x: finalAttrsX,\n          y: finalAttrsY\n        }\n      };\n  }\n};\n\nexport const moveOut = (\n  graphic: IGraphic,\n  options: IMoveAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const { offset = 0, orient, direction, point: pointOpt } = options ?? {};\n\n  const groupBounds = animationParameters.group ? animationParameters.group.AABBBounds : null;\n  const groupWidth = groupBounds.width() ?? animationParameters.width;\n  const groupHeight = groupBounds.height() ?? animationParameters.height;\n  const changedX = (orient === 'negative' ? groupWidth : 0) + offset;\n  const changedY = (orient === 'negative' ? groupHeight : 0) + offset;\n  const point = isFunction(pointOpt)\n    ? pointOpt.call(null, graphic.context?.data?.[0], graphic, animationParameters)\n    : pointOpt;\n  const fromX = point && isValidNumber(point.x) ? point.x : changedX;\n  const fromY = point && isValidNumber(point.y) ? point.y : changedY;\n\n  switch (direction) {\n    case 'x':\n      return {\n        from: { x: graphic.getGraphicAttribute('x') },\n        to: { x: fromX }\n      };\n    case 'y':\n      return {\n        from: { y: graphic.getGraphicAttribute('y') },\n        to: { y: fromY }\n      };\n    case 'xy':\n    default:\n      return {\n        from: {\n          x: graphic.getGraphicAttribute('x'),\n          y: graphic.getGraphicAttribute('y')\n        },\n        to: { x: fromX, y: fromY }\n      };\n  }\n};\n\nexport class MoveBase extends ACustomAnimate<Record<string, number>> {\n  declare valid: boolean;\n\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: any) {\n    super(from, to, duration, easing, params);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.addUpdatePositionTag();\n    this.target.addUpdateShapeAndBoundsTag();\n  }\n}\n\n/**\n * 增长渐入\n */\nexport class MoveIn extends MoveBase {\n  onBind(): void {\n    super.onBind();\n    const { from, to } = moveIn(this.target, this.params.options, this.params);\n    this.props = to;\n    this.propKeys = Object.keys(to).filter(key => (to as any)[key] != null);\n    this.from = from;\n    this.to = to;\n\n    // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n    const finalAttribute = this.target.getFinalAttribute();\n    if (finalAttribute) {\n      this.target.setAttributes(finalAttribute);\n    }\n\n    if (this.params.controlOptions?.immediatelyApply !== false) {\n      this.target.setAttributes(from);\n    }\n  }\n}\n\nexport class MoveOut extends MoveBase {\n  onBind(): void {\n    super.onBind();\n    const { from, to } = moveOut(this.target, this.params.options, this.params);\n    this.props = to;\n    this.propKeys = Object.keys(to).filter(key => (to as any)[key] != null);\n    this.from = from;\n    this.to = to;\n  }\n}\n"]}