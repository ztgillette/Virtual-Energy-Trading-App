import type { IGraphicAnimateParams, IAnimate } from '@visactor/vrender-core';
import { Animate } from './animate';
import { DefaultTimeline } from './timeline';
import { DefaultTicker } from './ticker/default-ticker';
import type { IAnimationConfig } from './executor/executor';
import { AnimateExecutor } from './executor/animate-executor';
export declare class AnimateExtension {
    finalAttribute: Record<string, any>;
    _animateExecutor: AnimateExecutor | null;
    animates: Map<string | number, IAnimate>;
    getAttributes(final?: boolean): any;
    animate(params?: IGraphicAnimateParams): Animate;
    createTimeline(): DefaultTimeline;
    createTicker(stage: any): DefaultTicker;
    setFinalAttributes(finalAttribute: Record<string, any>): void;
    initFinalAttributes(finalAttribute: Record<string, any>): void;
    initAnimateExecutor(): void;
    executeAnimation(config: IAnimationConfig): this;
    executeAnimations(configs: IAnimationConfig[]): this;
    protected getFinalAttribute(): Record<string, any>;
    getGraphicAttribute(key: string, prev?: boolean): any;
    pauseAnimation(deep?: boolean): void;
    resumeAnimation(deep?: boolean): void;
    stopAnimation(deep?: boolean): void;
}
