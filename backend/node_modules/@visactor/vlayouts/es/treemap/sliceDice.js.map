{"version":3,"sources":["../src/treemap/sliceDice.ts"],"names":[],"mappings":"AAYA,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,OAAO,KAAK,MAAM,SAAS,CAAC;AAE5B,MAAM,CAAC,OAAO,WAAW,MAA0B,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;IACjG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAClE,CAAC","file":"sliceDice.js","sourcesContent":["/* Adapted from d3-hierarchy by Mike Bostock\n * https://observablehq.com/collection/@d3/d3-hierarchy\n * Licensed under the ISC\n\n * url: https://github.com/d3/d3-hierarchy/blob/main/src/treemap/sliceDice.js\n * License: https://github.com/d3/d3-hierarchy/blob/main/LICENSE\n * @license\n */\n\n/**\n * split rect in vertical, horizontal direction alternatively\n */\nimport dice from './dice';\nimport type { TreemapNodeElement } from './interface';\nimport slice from './slice';\n\nexport default function (parent: TreemapNodeElement, x0: number, y0: number, x1: number, y1: number) {\n  (parent.depth % 2 === 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n"]}