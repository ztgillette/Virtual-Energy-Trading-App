export const flattenNodes = (nodes, output = [], options) => {
    const hasMaxDepth = (null == options ? void 0 : options.maxDepth) >= 0;
    return nodes.forEach((node => {
        (!hasMaxDepth || node.depth <= options.maxDepth) && (output.push((null == options ? void 0 : options.callback) ? options.callback(node) : node), 
        node.children && (hasMaxDepth && node.depth === options.maxDepth ? (node.children = null, 
        node.isLeaf = !0) : flattenNodes(node.children, output, options)));
    })), output;
};