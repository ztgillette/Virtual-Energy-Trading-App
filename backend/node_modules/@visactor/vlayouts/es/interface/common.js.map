{"version":3,"sources":["../src/interface/common.ts"],"names":[],"mappings":"","file":"common.js","sourcesContent":["export type ViewBoxOptions = { width: number; height: number } | { x0: number; x1: number; y0: number; y1: number };\n\nexport interface HierarchicalDatum {\n  value?: number;\n  children?: HierarchicalDatum[];\n}\n\nexport type HierarchicalData = HierarchicalDatum[];\n\nexport interface HierarchicalNodeElement<Datum> {\n  key: string;\n  parentKey?: string;\n  flattenIndex: number;\n  index: number;\n  /** the depth of node, from source to target */\n  depth: number;\n  maxDepth: number;\n  /** whether or not this node is a leaf node */\n  isLeaf?: boolean;\n  value: number;\n  datum: Datum[];\n\n  children?: HierarchicalNodeElement<Datum>[];\n}\n\nexport type TextAlignType = 'left' | 'right' | 'center' | 'start' | 'end';\nexport type TextBaselineType = 'top' | 'middle' | 'bottom' | 'alphabetic';\n\nexport interface HierarchyLabelAttrs {\n  x?: number;\n  y?: number;\n  text?: string;\n  textAlign?: TextAlignType;\n  textBaseline?: TextBaselineType;\n  angle?: number;\n  maxLineWidth?: number;\n}\n"]}