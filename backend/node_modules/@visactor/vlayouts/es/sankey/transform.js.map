{"version":3,"sources":["../src/sankey/transform.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAExC,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,OAAiH,EACjH,YAAuC,EACvC,EAAE;IACF,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;IAEzC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CACvB,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAC5D,OAAO,IAAI,OAAO;QAChB,CAAC,CAAC;YACE,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;SACvB;QACH,CAAC,CAAC;YACE,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;SACf,CACN,CAAC;IACF,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC1B,CAAC,CAAC","file":"transform.js","sourcesContent":["import type { SankeyData, SankeyOptions } from './interface';\nimport { SankeyLayout } from './layout';\n\nexport const transform = (\n  options: SankeyOptions & ({ width: number; height: number } | { x0: number; x1: number; y0: number; y1: number }),\n  upstreamData: SankeyData | SankeyData[]\n) => {\n  const layout = new SankeyLayout(options);\n\n  const res = layout.layout(\n    Array.isArray(upstreamData) ? upstreamData[0] : upstreamData,\n    'width' in options\n      ? {\n          width: options.width,\n          height: options.height\n        }\n      : {\n          x0: options.x0,\n          x1: options.x1,\n          y0: options.y0,\n          y1: options.y1\n        }\n  );\n  return res ? [res] : [];\n};\n"]}