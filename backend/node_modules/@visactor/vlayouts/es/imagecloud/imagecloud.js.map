{"version":3,"sources":["../src/imagecloud/imagecloud.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,OAA0B,EAAE,YAAmB,EAAE,UAAgB,EAAO,EAAE;;IAClG,MAAM,IAAI,GAAqB,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;IACxF,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IAEpB,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QAC7E,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;QAChE,OAAO,EAAE,CAAC;KACX;IAED,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;QAClB,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;KAC3E;IAED,IAAI,OAAO,CAAC,cAAc,EAAE;QAC1B,OAAO,CAAC,cAAc,EAAE,CAAC;KAC1B;IAGD,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9C,OAAO,EAAE,CAAC;KACX;IAED,IAAI,iBAAiB,CAAC;IAEtB,MAAM,UAAU,GAAG,MAAA,MAAA,OAAO,CAAC,YAAY,0CAAE,UAAU,mCAAI,QAAQ,CAAC;IAEhE,QAAQ,UAAU,EAAE;QAClB,KAAK,MAAM;YACT,iBAAiB,GAAG,UAAU,CAAC;YAC/B,MAAM;QACR,KAAK,OAAO;YACV,iBAAiB,GAAG,WAAW,CAAC;YAChC,MAAM;QACR,KAAK,QAAQ,CAAC;QACd;YACE,iBAAiB,GAAG,YAAY,CAAC;YACjC,MAAM;KACT;IAED,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAE5B,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;QACvB,OAAO;YACL,WAAW,EAAE,MAAM;SACpB,CAAC;KACH;IAED,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC;AACzB,CAAC,CAAC","file":"imagecloud.js","sourcesContent":["import { Logger, isFunction, isNil } from '@visactor/vutils';\nimport { SpiralLayout } from './layout/spiral';\nimport type { ImageCloudOptions } from './interface';\nimport { GridLayout } from './layout/grid/grid';\nimport { StackLayout } from './layout/stack';\n\nexport const transform = (options: ImageCloudOptions, upstreamData: any[], parameters?: any): any => {\n  const size: [number, number] = isFunction(options.size) ? options.size() : options.size;\n  options.size = size;\n  /** options 配置错误提示 */\n  if (!size || isNil(size[0]) || isNil(size[1]) || size[0] <= 0 || size[1] <= 0) {\n    const logger = Logger.getInstance();\n    logger.info('Wordcloud size dimensions must be greater than 0');\n    return [];\n  }\n\n  options.size = [Math.ceil(size[0]), Math.ceil(size[1])];\n\n  if (!options.image) {\n    Logger.getInstance().error('Imagecloud: image source must be specified.');\n  }\n\n  if (options.onBeforeLayout) {\n    options.onBeforeLayout();\n  }\n\n  // 第一次数据流到这里data为空，如果不做判断，走到布局算法会报错\n  if (!upstreamData || upstreamData.length === 0) {\n    return [];\n  }\n\n  let layoutConstructor;\n\n  const layoutMode = options.layoutConfig?.layoutMode ?? 'spiral';\n\n  switch (layoutMode) {\n    case 'grid':\n      layoutConstructor = GridLayout;\n      break;\n    case 'stack':\n      layoutConstructor = StackLayout;\n      break;\n    case 'spiral':\n    default:\n      layoutConstructor = SpiralLayout;\n      break;\n  }\n\n  const layout = new layoutConstructor(options);\n  layout.layout(upstreamData);\n\n  if (layout.unfinished()) {\n    return {\n      progressive: layout\n    };\n  }\n\n  return layout.output();\n};\n"]}