{"version":3,"sources":["../src/sunburst/layout.ts"],"names":[],"mappings":"AAEA,OAAO,IAAI,MAAM,iBAAiB,CAAC;AACnC,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AACxD,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AACpH,MAAM,MAAM,GAAG;IACb,EAAE,EAAE,YAAY;IAChB,EAAE,EAAE,UAAU;IACd,EAAE,EAAE,aAAa;IACjB,EAAE,EAAE,aAAa;CAClB,CAAC;AAEF,MAAM,OAAO,cAAc;IAwBzB,YAAY,OAAyB;QAmK7B,gBAAW,GAAG,CAAC,MAA2B,EAAE,EAAE;YACpD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAEjC,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACnB,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACrD,MAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAEtD,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;gBAE7F,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAE5G,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAC9B,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAEhC,IAAI,WAAW,EAAE;wBACf,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;qBAC/G;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAtLA,IAAI,CAAC,OAAO,GAAG,OAAO;YACpB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,cAAc,EAAE,OAAO,CAAC;YAC3D,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;QAErD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACvC,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAElG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IACtB,CAAC;IAEO,YAAY,CAClB,OAA0F,EAC1F,QAAgB;QAEhB,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QACzE,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1E,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAClE,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC7C,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;QAC1C,MAAM,iBAAiB,GAAG,YAAY;YACpC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACvD,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACtC,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,MAAM,iBAAiB,GAAG,YAAY;YACpC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACvD,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACtC,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;QAExC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACtD,MAAM,EAAE,GAAI,iBAA8B,CAAC,KAAK,CAAC,CAAC;gBAClD,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;;gBACvD,OAAO,YAAY;oBACjB,CAAC,CAAC,MAAC,iBAA8B,CAAC,KAAK,CAAC,mCAAI,SAAS;oBACrD,CAAC,CAAC,KAAK,GAAG,QAAQ;wBAClB,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAA,SAAS,CAAC,KAAK,CAAC,mCAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;wBAC/F,CAAC,CAAE,iBAA4B,CAAC;YACpC,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,YAAY,EAAE;YACvB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACvD,OAAO,KAAK,CAAE,iBAA8B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAE,iBAA8B,CAAC,KAAK,CAAC,CAAC;YAC5G,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;;gBACtD,OAAO,KAAK,KAAK,CAAC;oBAChB,CAAC,CAAE,iBAA4B;oBAC/B,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAA,SAAS,CAAC,KAAK,CAAC,mCAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAC7C,MAAM,EAAE,GAAG,iBAA2B,CAAC;YACvC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACtD,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;;gBACvD,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAA,SAAS,CAAC,KAAK,CAAC,mCAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC1G,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,MAAM,CACJ,IAAsB,EACtB,MAA8F;QAE9F,MAAM,OAAO,GACX,OAAO,IAAI,MAAM;YACf,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE;YACnG,CAAC,CAAC;gBACE,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;gBAClC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;gBAClC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;gBAClC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;gBAClC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;gBACtC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;aACxC,CAAC;QAER,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACzB,OAAO,EAAE,CAAC;SACX;QAED,MAAM,KAAK,GAA0B,EAAE,CAAC;QACxC,MAAM,GAAG,GAAG,kBAAkB,CAAyC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEnH,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;QAE9B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAClB,YAAY,EAAE,CAAC,CAAC;YAChB,QAAQ,EAAE,CAAC,CAAC;YACZ,GAAG,EAAE,IAAI;YACT,KAAK,EAAE,CAAC,CAAC;YACT,KAAK,EAAE,CAAC,CAAC;YACT,KAAK,EAAE,GAAG,CAAC,GAAG;YACd,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;YACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;SAChC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,OAAO,CAAC,KAA4B,EAAE,MAA2B;QACvE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAEzB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;YACnB,IAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,MAAM,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,KAA0B,EAAE,WAAgC;;QAC/E,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtD,MAAM,CAAC,GACL,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO;YAC5B,CAAC,CAAE,KAAK,CAAC,WAAsB;YAC/B,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,KAAK;gBAC7B,CAAC,CAAC,KAAK,CAAC,WAAW;gBACnB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAA,WAAW,CAAC,MAAM,mCAAI,CAAC,CAAC,CAAC;QAC/E,MAAM,GAAG,GAAG,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAE/F,KAAK,CAAC,KAAK,GAAG;YACZ,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,YAAY,EAAE,QAAQ;SACvB,CAAC;QAEF,IAAI,WAAW,CAAC,MAAM,KAAK,YAAY,EAAE;YACvC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACxC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;YACjC,KAAK,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SAC5E;aAAM;YACL,MAAM,YAAY,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC3C,MAAM,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAEjF,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE;gBAC5D,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC1C,KAAK,CAAC,KAAK,CAAC,SAAS;oBACnB,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;aAC5F;iBAAM;gBACL,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC;gBAChC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;aAC3C;YAED,KAAK,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;SACvG;IACH,CAAC;;AA1KM,6BAAc,GAA6B;IAChD,UAAU,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;IACvB,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;IAC5B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IACtB,SAAS,EAAE,CAAC;IACZ,WAAW,EAAE,CAAC;IACd,WAAW,EAAE,KAAK;CACnB,CAAC","file":"layout.js","sourcesContent":["import type { SunburstOptions, SunburstNodeElement, SunburstLabelConfig } from './interface';\nimport type { HierarchicalDatum, HierarchicalData } from '../interface/common';\nimport dice from '../treemap/dice';\nimport { calculateNodeValue } from '../utils/hierarchy';\nimport { field, isArray, isBoolean, isFunction, isNil, polarToCartesian, range, toPercent } from '@visactor/vutils';\nconst keyMap = {\n  x0: 'startAngle',\n  x1: 'endAngle',\n  y0: 'innerRadius',\n  y1: 'outerRadius'\n};\n\nexport class SunburstLayout {\n  private options: SunburstOptions;\n\n  private _getNodeKey?: (datum: HierarchicalDatum) => string;\n\n  private _maxDepth: number;\n\n  private _parsedCenter: [number, number];\n\n  private _parsedInnerRadius: number[];\n\n  private _parsedOutterRadius: number[];\n\n  private _maxRadius: number;\n\n  static defaultOpionts: Partial<SunburstOptions> = {\n    startAngle: Math.PI / 2,\n    endAngle: (-3 * Math.PI) / 2,\n    center: ['50%', '50%'],\n    gapRadius: 0,\n    innerRadius: 0,\n    outerRadius: '70%'\n  };\n\n  constructor(options?: SunburstOptions) {\n    this.options = options\n      ? Object.assign({}, SunburstLayout.defaultOpionts, options)\n      : Object.assign({}, SunburstLayout.defaultOpionts);\n\n    const keyOption = this.options.nodeKey;\n    const keyFunc = isFunction(keyOption) ? keyOption : keyOption ? field(keyOption as string) : null;\n\n    this._getNodeKey = keyFunc;\n    this._maxDepth = -1;\n  }\n\n  private _parseRadius(\n    viewBox: { x0: number; x1: number; y0: number; y1: number; width: number; height: number },\n    maxDepth: number\n  ) {\n    const cx = viewBox.x0 + toPercent(this.options.center[0], viewBox.width);\n    const cy = viewBox.y0 + toPercent(this.options.center[1], viewBox.height);\n    const maxRadius = Math.min(viewBox.width / 2, viewBox.height / 2);\n    const innerRadius = this.options.innerRadius;\n    const outerRadius = this.options.outerRadius;\n    const isInnerArray = isArray(innerRadius);\n    const parsedInnerRadius = isInnerArray\n      ? innerRadius.map(entry => toPercent(entry, maxRadius))\n      : toPercent(innerRadius, maxRadius);\n    const isOuterArray = isArray(outerRadius);\n    const gapRadius = this.options.gapRadius;\n    const parsedOuterRadius = isOuterArray\n      ? outerRadius.map(entry => toPercent(entry, maxRadius))\n      : toPercent(outerRadius, maxRadius);\n    const rangeArr = range(0, maxDepth + 1);\n\n    if (isInnerArray) {\n      this._parsedInnerRadius = rangeArr.map((entry, index) => {\n        const ir = (parsedInnerRadius as number[])[index];\n        return isNil(ir) ? maxRadius : ir;\n      });\n\n      this._parsedOutterRadius = rangeArr.map((entry, index) => {\n        return isOuterArray\n          ? (parsedOuterRadius as number[])[index] ?? maxRadius\n          : index < maxDepth\n          ? this._parsedInnerRadius[index + 1] - (isArray(gapRadius) ? gapRadius[index] ?? 0 : gapRadius)\n          : (parsedOuterRadius as number);\n      });\n    } else if (isOuterArray) {\n      this._parsedOutterRadius = rangeArr.map((entry, index) => {\n        return isNil((parsedOuterRadius as number[])[index]) ? maxRadius : (parsedOuterRadius as number[])[index];\n      });\n\n      this._parsedInnerRadius = rangeArr.map((entry, index) => {\n        return index === 0\n          ? (parsedInnerRadius as number)\n          : this._parsedOutterRadius[index - 1] - (isArray(gapRadius) ? gapRadius[index] ?? 0 : gapRadius);\n      });\n    } else {\n      const ir = toPercent(innerRadius, maxRadius);\n      const or = parsedOuterRadius as number;\n      const step = (or - ir) / (maxDepth + 1);\n\n      this._parsedInnerRadius = rangeArr.map((entry, index) => {\n        return ir + index * step;\n      });\n      this._parsedOutterRadius = rangeArr.map((entry, index) => {\n        return this._parsedInnerRadius[index] + step - (isArray(gapRadius) ? gapRadius[index] ?? 0 : gapRadius);\n      });\n    }\n\n    this._parsedCenter = [cx, cy];\n    this._maxRadius = maxRadius;\n  }\n\n  layout(\n    data: HierarchicalData,\n    config: { x0: number; x1: number; y0: number; y1: number } | { width: number; height: number }\n  ) {\n    const viewBox =\n      'width' in config\n        ? { x0: 0, x1: config.width, y0: 0, y1: config.height, width: config.width, height: config.height }\n        : {\n            x0: Math.min(config.x0, config.x1),\n            x1: Math.max(config.x0, config.x1),\n            y0: Math.min(config.y0, config.y1),\n            y1: Math.max(config.y0, config.y1),\n            width: Math.abs(config.x1 - config.x0),\n            height: Math.abs(config.y1 - config.y0)\n          };\n\n    if (!data || !data.length) {\n      return [];\n    }\n\n    const nodes: SunburstNodeElement[] = [];\n    const res = calculateNodeValue<HierarchicalDatum, SunburstNodeElement>(data, nodes, 0, -1, null, this._getNodeKey);\n\n    this._parseRadius(viewBox, res.maxDepth);\n    this._maxDepth = res.maxDepth;\n\n    this._layout(nodes, {\n      flattenIndex: -1,\n      maxDepth: -1,\n      key: '-1',\n      depth: -1,\n      index: -1,\n      value: res.sum,\n      datum: null,\n      children: nodes,\n      startAngle: this.options.startAngle,\n      endAngle: this.options.endAngle\n    });\n\n    return nodes;\n  }\n\n  private _layout(nodes: SunburstNodeElement[], parent: SunburstNodeElement) {\n    this._layoutNode(parent);\n\n    nodes.forEach(node => {\n      if (node?.children?.length) {\n        this._layout(node.children, node);\n      } else {\n        this._layoutNode(node);\n      }\n    });\n  }\n\n  private _layoutLabel(child: SunburstNodeElement, labelOption: SunburstLabelConfig) {\n    const angle = (child.startAngle + child.endAngle) / 2;\n    const r =\n      (labelOption.align === 'start'\n        ? (child.innerRadius as number)\n        : labelOption.align === 'end'\n        ? child.outerRadius\n        : (child.innerRadius + child.outerRadius) / 2) + (labelOption.offset ?? 0);\n    const pos = polarToCartesian({ x: this._parsedCenter[0], y: this._parsedCenter[1] }, r, angle);\n\n    child.label = {\n      x: pos.x,\n      y: pos.y,\n      textBaseline: 'middle'\n    };\n\n    if (labelOption.rotate === 'tangential') {\n      child.label.angle = angle - Math.PI / 2;\n      child.label.textAlign = 'center';\n      child.label.maxLineWidth = Math.abs(child.endAngle - child.startAngle) * r;\n    } else {\n      const uniformAngle = angle % (Math.PI * 2);\n      const formatAngle = uniformAngle < 0 ? uniformAngle + Math.PI * 2 : uniformAngle;\n\n      if (formatAngle > Math.PI / 2 && formatAngle < Math.PI * 1.5) {\n        child.label.angle = formatAngle + Math.PI;\n        child.label.textAlign =\n          labelOption.align === 'start' ? 'end' : labelOption.align === 'end' ? 'start' : 'center';\n      } else {\n        child.label.angle = formatAngle;\n        child.label.textAlign = labelOption.align;\n      }\n\n      child.label.maxLineWidth = child.isLeaf ? undefined : Math.abs(child.outerRadius - child.innerRadius);\n    }\n  }\n\n  private _layoutNode = (parent: SunburstNodeElement) => {\n    parent.maxDepth = this._maxDepth;\n\n    if (parent.children) {\n      const ir = this._parsedInnerRadius[parent.depth + 1];\n      const or = this._parsedOutterRadius[parent.depth + 1];\n\n      dice(parent, parent.startAngle, Math.min(ir, or), parent.endAngle, Math.max(ir, or), keyMap);\n\n      const labelOption = isArray(this.options.label) ? this.options.label[parent.depth + 1] : this.options.label;\n\n      parent.children.forEach(child => {\n        child.x = this._parsedCenter[0];\n        child.y = this._parsedCenter[1];\n\n        if (labelOption) {\n          return this._layoutLabel(child, isBoolean(labelOption) ? { align: 'center', rotate: 'radial' } : labelOption);\n        }\n      });\n    }\n  };\n}\n"]}