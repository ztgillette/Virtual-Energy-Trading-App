{"version":3,"sources":["../src/utils/loader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAMxD,MAAM,UAAU,SAAS,CAAC,GAAW,EAAE,WAAgC;IACrE,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE;QAC3E,OAAO,IAAI,CAAC;KACb;IACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;QACrC,MAAM,SAAS,GAAG,WAAW,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,MAAA,SAAS,CAAC,SAAS,0CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,EAAE;YAC1D,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO;SACR;QAED,SAAS,CAAC,eAAe,GAAG,GAAG,EAAE;;YAC/B,IAAI,SAAS,EAAE;gBACb,MAAM,OAAO,GAAG,MAAA,SAAS,CAAC,SAAS,0CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,EAAE;oBAC1D,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACvB;qBAAM;oBACL,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,GAAG,GAAG,CAAC,CAAC,CAAC;iBAChD;aACF;iBAAM;gBACL,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,GAAG,GAAG,CAAC,CAAC,CAAC;aAChD;QACH,CAAC,CAAC;QACF,SAAS,CAAC,YAAY,GAAG,GAAG,EAAE;YAC5B,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,GAAG,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAKD,MAAM,UAAU,UAAU,CAAC,IAAc,EAAE,WAAgC;IACzE,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC","file":"loader.js","sourcesContent":["import { isBase64, isValidUrl } from '@visactor/vutils';\nimport type { CreateImageFunction } from '../interface/wordcloud';\n\n/**\n * 使用 ResourceLoader 加载图片\n */\nexport function loadImage(url: string, createImage: CreateImageFunction) {\n  if (!url || (!isValidUrl(url) && !isBase64(url) && !url.startsWith('<svg'))) {\n    return null;\n  }\n  return new Promise((resolve, reject) => {\n    const imageMark = createImage({ image: url });\n    const imgData = imageMark.resources?.get(url);\n\n    if (imgData && imgData.state === 'success' && imgData.data) {\n      resolve(imgData.data);\n      return;\n    }\n\n    imageMark.successCallback = () => {\n      if (imageMark) {\n        const imgData = imageMark.resources?.get(url);\n        if (imgData && imgData.state === 'success' && imgData.data) {\n          resolve(imgData.data);\n        } else {\n          reject(new Error('image load failed: ' + url));\n        }\n      } else {\n        reject(new Error('image load failed: ' + url));\n      }\n    };\n    imageMark.failCallback = () => {\n      reject(new Error('image load failed: ' + url));\n    };\n  });\n}\n\n/**\n * 使用 ResourceLoader 加载多个图片\n */\nexport function loadImages(urls: string[], createImage: CreateImageFunction) {\n  return Promise.allSettled(urls.map(url => loadImage(url, createImage)));\n}\n"]}