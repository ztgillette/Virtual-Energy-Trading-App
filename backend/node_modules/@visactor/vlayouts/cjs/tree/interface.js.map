{"version":3,"sources":["../src/tree/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { HierarchicalDatum, HierarchicalNodeElement, ViewBoxOptions } from '../interface/common';\n\nexport interface TreeOptions {\n  /**\n   * The layout direction of chart\n   */\n  direction?: 'horizontal' | 'vertical' | 'LR' | 'RL' | 'TB' | 'BT';\n  /**\n   * layout tree in orthogonal | radial coordinate system\n   */\n  layoutType?: 'orthogonal' | 'radial';\n  alignType?: 'leaf' | 'depth';\n  /**\n   * Specify the width of link, if not specified,\n   * Compute the depth-most nodes for extents.\n   */\n  linkWidth?: number | number[];\n  /**\n   * Specify the min gap between two sibling nodes, if not specified, scale nodeGap based on the extent.\n   */\n  minNodeGap?: number;\n  /** parse the key of node */\n  nodeKey?: string | number | ((datum: HierarchicalDatum) => string | number);\n}\n\nexport type TreeTramsformOptions = TreeOptions & ViewBoxOptions & { flatten?: boolean; maxDepth?: number };\n\nexport interface TreeNodeElement extends HierarchicalNodeElement<HierarchicalDatum> {\n  children?: TreeNodeElement[];\n  x?: number;\n  y?: number;\n}\n\nexport interface TreeLinkElement {\n  source: TreeNodeElement;\n  target: TreeNodeElement;\n  x0?: number;\n  y0?: number;\n  x1?: number;\n  y1?: number;\n  key?: string;\n}\n"]}