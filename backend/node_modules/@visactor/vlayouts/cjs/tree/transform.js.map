{"version":3,"sources":["../src/tree/transform.ts"],"names":[],"mappings":";;;AACA,kDAAkD;AAClD,qCAA4C;AAE5C,qCAAsC;AAE/B,MAAM,SAAS,GAAG,CAAC,OAA6B,EAAE,YAA8B,EAAE,EAAE;IACzF,MAAM,MAAM,GAAG,IAAI,mBAAU,CAAC,OAAO,CAAC,CAAC;IAEvC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CACvB,YAAY,EACZ,OAAO,IAAI,OAAO;QAChB,CAAC,CAAC;YACE,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;SACvB;QACH,CAAC,CAAC;YACE,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,EAAE,EAAE,OAAO,CAAC,EAAE;SACf,CACN,CAAC;IAEF,IAAI,OAAO,CAAC,OAAO,EAAE;QACnB,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,CAAC;QACnC,MAAM,KAAK,GAAsB,EAAE,CAAC;QACpC,IAAA,wBAAY,EAAC,GAAG,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvC,MAAM,KAAK,GAAsB,EAAE,CAAC;QAEpC,IAAA,yBAAgB,EAAC,GAAG,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QAE3C,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;KACzB;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AA7BW,QAAA,SAAS,aA6BpB","file":"transform.js","sourcesContent":["import type { HierarchicalData } from '../interface/common';\nimport { flattenNodes } from '../utils/hierarchy';\nimport { flattenTreeLinks } from './format';\nimport type { TreeLinkElement, TreeNodeElement, TreeTramsformOptions } from './interface';\nimport { TreeLayout } from './layout';\n\nexport const transform = (options: TreeTramsformOptions, upstreamData: HierarchicalData) => {\n  const layout = new TreeLayout(options);\n\n  const res = layout.layout(\n    upstreamData,\n    'width' in options\n      ? {\n          width: options.width,\n          height: options.height\n        }\n      : {\n          x0: options.x0,\n          x1: options.x1,\n          y0: options.y0,\n          y1: options.y1\n        }\n  );\n\n  if (options.flatten) {\n    const { maxDepth } = options ?? {};\n    const nodes: TreeNodeElement[] = [];\n    flattenNodes(res, nodes, { maxDepth });\n    const links: TreeLinkElement[] = [];\n\n    flattenTreeLinks(res, links, { maxDepth });\n\n    return { nodes, links };\n  }\n  return res;\n};\n"]}