{"version":3,"sources":["../src/treemap/slice.ts"],"names":[],"mappings":";;AAcA,mBAAyB,MAA0B,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;IACjG,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC9B,IAAI,IAAI,CAAC;IACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IACvB,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IAEnD,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;QACd,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;AACH,CAAC;AAfD,4BAeC","file":"slice.js","sourcesContent":["/* Adapted from d3-hierarchy by Mike Bostock\n * https://observablehq.com/collection/@d3/d3-hierarchy\n * Licensed under the ISC\n\n * url: https://github.com/d3/d3-hierarchy/blob/main/src/treemap/slice.js\n * License: https://github.com/d3/d3-hierarchy/blob/main/LICENSE\n * @license\n */\n\nimport type { TreemapNodeElement } from './interface';\n\n/**\n * split rect in vertical direction\n */\nexport default function (parent: TreemapNodeElement, x0: number, y0: number, x1: number, y1: number) {\n  const nodes = parent.children;\n  let node;\n  let i = -1;\n  const n = nodes.length;\n  const k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i];\n    node.x0 = x0;\n    node.x1 = x1;\n    node.y0 = y0;\n    y0 += node.value * k;\n    node.y1 = y0;\n  }\n}\n"]}