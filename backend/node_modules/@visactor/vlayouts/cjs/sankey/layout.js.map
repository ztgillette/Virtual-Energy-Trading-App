{"version":3,"sources":["../src/sankey/layout.ts"],"names":[],"mappings":"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","file":"layout.js","sourcesContent":["import type { ILogger } from '@visactor/vutils';\nimport {\n  clamp,\n  clamper,\n  field,\n  isFunction,\n  isNil,\n  isNumber,\n  isString,\n  Logger,\n  minInArray,\n  pickWithout,\n  toValidNumber\n} from '@visactor/vutils';\nimport { computeHierarchicNodeLinks, computeNodeValues, makeHierarchicNodes } from './hierarchy';\nimport type {\n  SankeyData,\n  SankeyOptions,\n  SankeyLinkDatum,\n  SankeyNodeDatum,\n  SankeyLinkElement,\n  SankeyNodeElement,\n  HierarchyNodeDatum\n} from './interface';\n\nfunction left(node: SankeyNodeElement) {\n  return node.depth;\n}\n\nfunction right(node: SankeyNodeElement, maxDepth: number) {\n  return maxDepth - 1 - node.endDepth;\n}\n\nfunction justify(node: SankeyNodeElement, maxDepth: number) {\n  return node.sourceLinks.length ? node.depth : maxDepth - 1;\n}\n\nfunction center(node: SankeyNodeElement, maxDepth: number, nodeMap: Record<string | number, SankeyNodeElement>) {\n  return node.targetLinks.length\n    ? node.depth\n    : node.sourceLinks.length\n    ? minInArray(node.sourceLinks.map(link => nodeMap[link.target].depth)) - 1\n    : 0;\n}\n\nconst ascendingNodeBreadth = (a: SankeyNodeElement, b: SankeyNodeElement) => {\n  return a?.y0 - b?.y0;\n};\n\nconst calcDivideValue = (node: SankeyNodeElement, isTarget?: boolean) => {\n  if (isNil(node.value)) {\n    return null;\n  }\n\n  const res = (isTarget ? node.targetLinks : node.sourceLinks).reduce(\n    (res, sLink) => {\n      if (isNil(sLink.value)) {\n        res.count += 1;\n      } else {\n        res.sum += sLink.value;\n      }\n\n      return res;\n    },\n    { sum: 0, count: 0 }\n  );\n\n  return res.count > 0 ? (node.value - res.sum) / res.count : null;\n};\n\nconst alignFunctions = {\n  left,\n  right,\n  justify,\n  center,\n  start: left,\n  end: right\n};\n\nconst linkClampe = clamper(0, 1);\n\nexport class SankeyLayout {\n  private options: SankeyOptions;\n\n  private _getNodeKey?: (datum: SankeyNodeDatum) => string;\n  private _alignFunc: (\n    node: SankeyNodeElement,\n    maxDepth: number,\n    nodeMap: Record<string | number, SankeyNodeElement>\n  ) => number;\n\n  /** runtime vars */\n  private _maxDepth: number;\n  private _gapY: number;\n  private _viewBox: { x0: number; x1: number; y0: number; y1: number; width: number; height: number };\n  private _nodeMap: Record<string | number, SankeyNodeElement>;\n  private _isHierarchic?: boolean;\n  private _logger: ILogger;\n\n  static defaultOptions: Partial<SankeyOptions> = {\n    iterations: 6,\n    nodeAlign: 'justify',\n    direction: 'horizontal',\n    nodeWidth: 24,\n    nodeGap: 8,\n    crossNodeAlign: 'middle',\n    dropIsolatedNode: true\n  };\n  constructor(options?: SankeyOptions) {\n    this.options = Object.assign({}, SankeyLayout.defaultOptions, options);\n    const keyOption = this.options.nodeKey;\n    const keyFunc = isFunction(keyOption) ? keyOption : keyOption ? field(keyOption as string) : null;\n\n    this._getNodeKey = keyFunc;\n    this._logger = Logger.getInstance();\n    this._alignFunc = isFunction(this.options.setNodeLayer)\n      ? (node: SankeyNodeElement) => {\n          return this.options.setNodeLayer(node.datum);\n        }\n      : alignFunctions[this.options.nodeAlign];\n  }\n\n  layout(\n    data: SankeyData,\n    config: { x0: number; x1: number; y0: number; y1: number } | { width: number; height: number }\n  ) {\n    if (!data) {\n      return null;\n    }\n\n    const viewBox =\n      'width' in config\n        ? { x0: 0, x1: config.width, y0: 0, y1: config.height, width: config.width, height: config.height }\n        : {\n            x0: Math.min(config.x0, config.x1),\n            x1: Math.max(config.x0, config.x1),\n            y0: Math.min(config.y0, config.y1),\n            y1: Math.max(config.y0, config.y1),\n            width: Math.abs(config.x1 - config.x0),\n            height: Math.abs(config.y1 - config.y0)\n          };\n\n    if (this.options.direction === 'vertical') {\n      this._viewBox = {\n        x0: viewBox.y0,\n        x1: viewBox.y1,\n        y0: viewBox.x0,\n        y1: viewBox.x1,\n        width: viewBox.height,\n        height: viewBox.width\n      };\n    } else {\n      this._viewBox = viewBox;\n    }\n    const result = this.computeNodeLinks(data);\n    const nodes = result.nodes;\n    let links = result.links;\n    this._nodeMap = result.nodeMap;\n\n    this.computeNodeValues(nodes);\n    this.computeNodeDepths(nodes);\n\n    if (['right', 'end', 'justify'].includes(this.options.nodeAlign)) {\n      this.computeNodeEndDepths(nodes);\n    }\n\n    if (this._maxDepth <= 0) {\n      // empty data\n      return null;\n    }\n    const columns = this.computeNodeBreadths(nodes);\n    this.computeLinkBreadths(nodes);\n\n    nodes.forEach(node => {\n      node.sourceLinks = node.sourceLinks.filter(link => !isNil(link.source) && !isNil(link.target));\n      node.targetLinks = node.targetLinks.filter(link => !isNil(link.source) && !isNil(link.target));\n    });\n    links = links.filter(link => !isNil(link.source) && !isNil(link.target));\n\n    if (this.options.direction === 'vertical') {\n      if (this.options.inverse) {\n        const viewY1 = this._viewBox.x1;\n        nodes.forEach(node => {\n          const { y0, y1, x0, x1 } = node;\n\n          node.y0 = viewY1 - x1;\n          node.y1 = viewY1 - x0;\n          node.x0 = y0;\n          node.x1 = y1;\n        });\n\n        links.forEach(link => {\n          link.vertical = true;\n          const { x0, x1, y0, y1 } = link;\n\n          link.x0 = y0;\n          link.x1 = y1;\n          link.y0 = viewY1 - x0;\n          link.y1 = viewY1 - x1;\n        });\n      } else {\n        nodes.forEach(node => {\n          const { y0, y1 } = node;\n\n          node.y0 = node.x0;\n          node.y1 = node.x1;\n          node.x0 = y0;\n          node.x1 = y1;\n        });\n\n        links.forEach(link => {\n          link.vertical = true;\n          const x0 = link.x0;\n          const x1 = link.x1;\n          link.x0 = link.y0;\n          link.x1 = link.y1;\n          link.y0 = x0;\n          link.y1 = x1;\n        });\n      }\n    } else if (this.options.inverse) {\n      nodes.forEach(node => {\n        const { x0, x1 } = node;\n        node.x0 = viewBox.x1 - x1;\n        node.x1 = viewBox.x1 - x0;\n      });\n\n      links.forEach(link => {\n        link.x0 = viewBox.x1 - link.x0;\n        link.x1 = viewBox.x1 - link.x1;\n      });\n    }\n\n    links.forEach(link => {\n      const sourceNode = this._nodeMap[link.source];\n      const targetNode = this._nodeMap[link.target];\n\n      link.sourceRect = { x0: sourceNode.x0, x1: sourceNode.x1, y0: sourceNode.y0, y1: sourceNode.y1 };\n      link.targetRect = { x0: targetNode.x0, x1: targetNode.x1, y1: targetNode.y1, y0: targetNode.y0 };\n    });\n\n    return { nodes, links, columns };\n  }\n\n  computeHierarchicNodeLinks(originalNodes: HierarchyNodeDatum[]) {\n    return computeHierarchicNodeLinks(originalNodes, this._getNodeKey);\n  }\n\n  computeSourceTargetNodeLinks(data: { nodes?: SankeyNodeDatum[]; links: SankeyLinkDatum[] }) {\n    const nodes: SankeyNodeElement[] = [];\n    const links: SankeyLinkElement[] = [];\n    const nodeMap: Record<string | number, SankeyNodeElement> = {};\n\n    if (data.nodes) {\n      data.nodes.forEach((node, index) => {\n        const nodeElement = {\n          depth: -1,\n          datum: node,\n          index,\n          key: this._getNodeKey ? this._getNodeKey(node) : index,\n          value: node.value,\n          sourceLinks: [] as SankeyLinkElement[],\n          targetLinks: [] as SankeyLinkElement[]\n        };\n\n        nodeMap[nodeElement.key] = nodeElement;\n        nodes.push(nodeElement);\n      });\n    }\n    const invalidLinks: SankeyLinkDatum[] = [];\n\n    data.links.forEach((link: SankeyLinkDatum, index) => {\n      const hasSource = !isNil(link.source);\n      const hasTarget = !isNil(link.target);\n      if (data.nodes && (!nodeMap[link.source] || !nodeMap[link.target])) {\n        return;\n      }\n\n      if (!data.nodes && hasSource && !nodeMap[link.source]) {\n        nodeMap[link.source] = {\n          value: undefined,\n          depth: -1,\n          index: nodes.length,\n          key: link.source,\n          datum: null,\n          sourceLinks: [],\n          targetLinks: []\n        };\n        nodes.push(nodeMap[link.source]);\n      }\n\n      if (!data.nodes && hasTarget && !nodeMap[link.target]) {\n        nodeMap[link.target] = {\n          value: undefined,\n          depth: -1,\n          index: nodes.length,\n          key: link.target,\n          datum: null,\n          sourceLinks: [],\n          targetLinks: []\n        };\n        nodes.push(nodeMap[link.target]);\n      }\n\n      // if (!hasSource || !hasTarget) {\n      //   return;\n      // }\n      const linkElement = {\n        index,\n        source: link.source,\n        target: link.target,\n        datum: link,\n        value: link.value\n      };\n\n      if (this.options.divideNodeValueToLink && isNil(link.value)) {\n        invalidLinks.push(linkElement);\n      }\n\n      links.push(linkElement);\n\n      if (hasSource) {\n        nodeMap[link.source].sourceLinks.push(linkElement);\n      }\n\n      if (hasTarget) {\n        nodeMap[link.target].targetLinks.push(linkElement);\n      }\n    });\n\n    if (this.options.divideNodeValueToLink && invalidLinks.length) {\n      invalidLinks.forEach(link => {\n        const values = [calcDivideValue(nodeMap[link.source]), calcDivideValue(nodeMap[link.target], true)].filter(\n          entry => !isNil(entry)\n        );\n\n        if (values.length) {\n          link.value = minInArray(values);\n        }\n      });\n    }\n\n    return { nodeMap, nodes, links };\n  }\n\n  computeNodeLinks(data: SankeyData) {\n    let res: {\n      nodeMap: Record<string | number, SankeyNodeElement>;\n      nodes: SankeyNodeElement[];\n      links: SankeyLinkElement[];\n    };\n    if (!('links' in data)) {\n      this._isHierarchic = true;\n      res = this.computeHierarchicNodeLinks(data.nodes);\n    } else {\n      res = this.computeSourceTargetNodeLinks(data);\n    }\n\n    let nodes = res.nodes;\n    const links = res.links;\n\n    if (this.options.linkSortBy) {\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        nodes[i].sourceLinks.sort(this.options.linkSortBy);\n        nodes[i].targetLinks.sort(this.options.linkSortBy);\n      }\n    }\n\n    if (this.options.dropIsolatedNode) {\n      nodes = nodes.filter(node => node.targetLinks.length || node.sourceLinks.length);\n    }\n\n    return { nodes, links, nodeMap: res.nodeMap };\n  }\n\n  computeNodeValues(nodes: SankeyNodeElement[]) {\n    return computeNodeValues(nodes);\n  }\n\n  computeNodeDepths(nodes: SankeyNodeElement[]) {\n    const n = nodes.length;\n    let current: SankeyNodeElement[] = nodes;\n    let next: SankeyNodeElement[];\n    let nextMap: Record<string, boolean>;\n    let depth = 0;\n    let maxDepth = -1;\n    const setNodeLayer = isFunction(this.options.setNodeLayer) ? this.options.setNodeLayer : null;\n\n    while (current.length && depth < n) {\n      next = [];\n      nextMap = {};\n\n      for (let i = 0, curLen = current.length; i < curLen; i++) {\n        const node = current[i];\n\n        if (node) {\n          // 防止用户只设置了部分节点的层级\n          node.depth = setNodeLayer ? setNodeLayer(node.datum) ?? depth : depth;\n\n          if (setNodeLayer) {\n            maxDepth = Math.max(node.depth, maxDepth);\n          }\n          if (node.sourceLinks && node.sourceLinks.length) {\n            for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n              const link = node.sourceLinks[j];\n              if (!nextMap[link.target]) {\n                next.push(this._nodeMap[link.target]);\n                nextMap[link.target] = true;\n              }\n            }\n          }\n        }\n      }\n      current = next;\n      depth += 1;\n    }\n\n    if (depth > n) {\n      this._logger.warn('Error: there is a circular link');\n    }\n\n    this._maxDepth = setNodeLayer ? maxDepth + 1 : depth;\n  }\n\n  computeNodeEndDepths(nodes: SankeyNodeElement[]) {\n    const n = nodes.length;\n    let current: SankeyNodeElement[] = nodes;\n    let next: SankeyNodeElement[];\n    let nextMap: Record<string, boolean>;\n    let depth = 0;\n\n    while (current.length && depth < n) {\n      next = [];\n      nextMap = {};\n      for (let i = 0, curLen = current.length; i < curLen; i++) {\n        const node = current[i];\n\n        if (node) {\n          node.endDepth = depth;\n\n          for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n            const link = node.targetLinks[j];\n            if (!nextMap[link.source]) {\n              next.push(this._nodeMap[link.source]);\n              nextMap[link.source] = true;\n            }\n          }\n        }\n      }\n      current = next;\n      depth += 1;\n    }\n\n    if (depth > n) {\n      this._logger.warn('Error: there is a circular link');\n    }\n  }\n\n  computeNodeLayers(nodes: SankeyNodeElement[]) {\n    const nodeWidthOption = this.options.nodeWidth;\n    const linkWidthOption = this.options.linkWidth;\n    const minStepWidth = this.options.minStepWidth;\n    const width = this._viewBox.width;\n    let nodeWidth: number = null;\n    let linkWidth: number = null;\n    let isEvenWidth = false;\n\n    if (isString(nodeWidthOption)) {\n      const ratio = clamp(parseFloat(nodeWidthOption.replace('%', '')) / 100, 0, 1);\n      let stepWidth = width / (this._maxDepth - 1 + ratio);\n\n      if (minStepWidth > 0) {\n        stepWidth = Math.max(minStepWidth, stepWidth);\n      }\n\n      nodeWidth = stepWidth * ratio;\n      linkWidth = stepWidth * (1 - ratio);\n      isEvenWidth = true;\n    } else if (isNumber(nodeWidthOption)) {\n      nodeWidth = nodeWidthOption;\n\n      if (isNumber(linkWidthOption)) {\n        linkWidth = linkWidthOption;\n      } else if (isNil(linkWidthOption)) {\n        let stepWidth = (width - nodeWidthOption) / (this._maxDepth - 1);\n\n        if (minStepWidth > 0) {\n          stepWidth = Math.max(minStepWidth, stepWidth);\n        }\n\n        linkWidth = stepWidth - nodeWidthOption;\n      }\n      isEvenWidth = true;\n    } else if (isFunction(nodeWidthOption) && isNumber(linkWidthOption)) {\n      linkWidth = linkWidthOption;\n    }\n    const columns: SankeyNodeElement[][] = [];\n\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      const node = nodes[i];\n      node.layer = this._isHierarchic\n        ? node.depth\n        : clamp(Math.floor(this._alignFunc(node, this._maxDepth, this._nodeMap)), 0, this._maxDepth - 1);\n      const layer = node.layer;\n\n      if (layer === this._maxDepth - 1) {\n        node.isLastLayer = true;\n      }\n      if (isEvenWidth) {\n        node.x0 = this._viewBox.x0 + layer * (nodeWidth + linkWidth);\n        node.x1 = node.x0 + nodeWidth;\n      }\n      if (columns[layer]) {\n        columns[layer].push(node);\n      } else {\n        columns[layer] = [node];\n      }\n    }\n    if (this.options.nodeSortBy) {\n      for (let j = 0, colLen = columns.length; j < colLen; j++) {\n        columns[j].sort(this.options.nodeSortBy);\n      }\n    }\n\n    if (!isEvenWidth && isFunction(nodeWidthOption)) {\n      let curLayerX = this._viewBox.x0;\n      for (let i = 0; i < this._maxDepth; i++) {\n        const column = columns[i];\n        let maxNodeWidth = 0;\n        let maxLinkWidth = 0;\n\n        for (let j = 0, colLen = column && column.length; j < colLen; j++) {\n          const node = column[j];\n          const curNodeWidth = nodeWidthOption(node);\n          node.x0 = curLayerX;\n          node.x1 = curLayerX + curNodeWidth;\n\n          maxNodeWidth = Math.max(nodeWidth, curNodeWidth);\n\n          const sourceLinks = node.sourceLinks;\n\n          for (let k = 0, linkLen = sourceLinks.length; k < linkLen; k++) {\n            const link = sourceLinks[k];\n            const curLinkWidth = isFunction(linkWidthOption) ? linkWidthOption(link, this._viewBox) : linkWidth;\n\n            maxLinkWidth = Math.max(maxLinkWidth, curLinkWidth);\n          }\n        }\n\n        curLayerX += maxNodeWidth + maxLinkWidth;\n      }\n    }\n\n    return columns;\n  }\n\n  initializeNodeBreadths(columns: SankeyNodeElement[][]) {\n    const minLinkHeight = this.options.minLinkHeight ?? 0;\n    let minNodeHeight = this.options.minNodeHeight ?? 0;\n    const maxNodeHeight = this.options.maxNodeHeight ?? Infinity;\n    let maxLinkHeight = this.options.maxLinkHeight;\n\n    if (isNil(minNodeHeight) || minNodeHeight < minLinkHeight) {\n      minNodeHeight = minLinkHeight;\n    }\n\n    if (isNil(maxLinkHeight) || maxLinkHeight > maxNodeHeight) {\n      maxLinkHeight = maxNodeHeight;\n    }\n\n    let ky = 0;\n    let getGapY: (node: SankeyNodeElement) => number = null;\n    let forceNodeHeight: number = null;\n\n    if (isFunction(this.options.nodeGap)) {\n      getGapY = this.options.nodeGap;\n      ky = columns.reduce((val: number, column: SankeyNodeElement[]) => {\n        const sumValue = column.reduce((sum, node) => {\n          return sum + node.value;\n        }, 0);\n        const sumGapY = column.reduce((sum, node) => {\n          return sum + (this.options.nodeGap as (node: SankeyNodeElement) => number)(node);\n        }, 0);\n\n        return Math.min(val, (this._viewBox.height - sumGapY) / sumValue);\n      }, Infinity);\n    } else {\n      const maxRowCount = columns.reduce((cnt: number, column: SankeyNodeElement[]) => {\n        return Math.max(cnt, column.length);\n      }, 0);\n      const maxStepHeight = this._viewBox.height / maxRowCount;\n      let gapY = Math.min(this.options.nodeGap, maxStepHeight);\n\n      if (minNodeHeight + gapY > maxStepHeight) {\n        gapY = minNodeHeight >= maxStepHeight ? maxStepHeight / 2 : (maxStepHeight - minNodeHeight) / 2;\n        minNodeHeight = Math.min(maxStepHeight - gapY, minNodeHeight);\n      }\n      getGapY = () => gapY;\n      this._gapY = gapY;\n\n      if (this.options.equalNodeHeight) {\n        forceNodeHeight = this._viewBox.height / maxRowCount - gapY;\n      } else {\n        const calGapY = minNodeHeight > 0 ? Math.max(gapY, minNodeHeight) : gapY;\n        ky = columns.reduce((val: number, column: SankeyNodeElement[]) => {\n          const sumValue = column.reduce((sum, node) => {\n            return sum + node.value;\n          }, 0);\n\n          return Math.min(val, (this._viewBox.height - ((column.length - 1) * calGapY + minNodeHeight)) / sumValue);\n        }, Infinity);\n      }\n    }\n\n    const isStartGap = this.options.gapPosition === 'start';\n    const isMiddleGap = !isStartGap && this.options.gapPosition !== 'end';\n    const getNodeHeight = isNumber(this.options.nodeHeight)\n      ? (node: SankeyNodeElement) => this.options.nodeHeight as number\n      : isFunction(this.options.nodeHeight)\n      ? (this.options.nodeHeight as (node: SankeyNodeElement) => number)\n      : forceNodeHeight > 0\n      ? (node: SankeyNodeElement) => {\n          return forceNodeHeight;\n        }\n      : (node: SankeyNodeElement) => {\n          return Math.max(node.value * ky, 0);\n        };\n    const getLinkHeight = isNumber(this.options.linkHeight)\n      ? () => this.options.linkHeight as number\n      : isFunction(this.options.linkHeight)\n      ? (this.options.linkHeight as (\n          link: SankeyLinkElement,\n          sourceNode: SankeyNodeElement,\n          sourceNodeHeight: number\n        ) => number)\n      : (link: SankeyLinkElement, sourceNode: SankeyNodeElement, sourceNodeHeight: number) => {\n          return Math.min(\n            Math.max(\n              sourceNode.value ? sourceNodeHeight * linkClampe(link.value / sourceNode.value) : 0,\n              minLinkHeight,\n              0\n            ),\n            maxLinkHeight\n          );\n        };\n\n    for (let i = 0, columnCount = columns.length; i < columnCount; i++) {\n      const nodes = columns[i];\n\n      if (!nodes || !nodes.length) {\n        continue;\n      }\n\n      let y = this._viewBox.y0;\n      let gapY = 0;\n      let nodeHeight = 0;\n      let calculatedNodeHeight = 0;\n      for (let j = 0, len = nodes.length; j < len; j++) {\n        const node = nodes[j];\n        gapY = getGapY(node);\n\n        if (isStartGap) {\n          y += gapY;\n        }\n\n        calculatedNodeHeight = getNodeHeight(node);\n        nodeHeight = Math.min(Math.max(calculatedNodeHeight, minNodeHeight), maxNodeHeight);\n\n        node.y0 = y;\n        node.y1 = y + nodeHeight;\n\n        y = isStartGap ? node.y1 : node.y1 + gapY;\n\n        for (let k = 0, linkLen = node.sourceLinks.length; k < linkLen; k++) {\n          const link = node.sourceLinks[k];\n          link.thickness = getLinkHeight(link, node, calculatedNodeHeight);\n        }\n      }\n\n      let deltaY = this._viewBox.y1 - y + (isMiddleGap ? gapY : 0);\n\n      if (deltaY > 0) {\n        if (this.options.crossNodeAlign === 'start') {\n          // do nothing\n        } else if (this.options.crossNodeAlign === 'end') {\n          for (let j = 0, len = nodes.length; j < len; ++j) {\n            const node = nodes[j];\n            node.y0 += deltaY;\n            node.y1 += deltaY;\n          }\n        } else if (this.options.crossNodeAlign === 'parent') {\n          const sourceNodes = nodes.reduce((res: Record<string, boolean>, node) => {\n            if (node.targetLinks && node.targetLinks.length) {\n              node.targetLinks.forEach(link => {\n                res[link.source] = true;\n              });\n            }\n            return res;\n          }, {});\n\n          if (Object.keys(sourceNodes).length && columns[i - 1] && columns[i - 1].length) {\n            const prevSourceNodes = columns[i - 1].filter(node => sourceNodes[node.key]);\n\n            if (prevSourceNodes && prevSourceNodes.length && prevSourceNodes[0].y0 !== nodes[0].y0) {\n              const startY = prevSourceNodes[0].y0;\n              const newDeltaY = startY - nodes[0].y0;\n\n              for (let j = 0, len = nodes.length; j < len; ++j) {\n                const node = nodes[j];\n                node.y0 += newDeltaY;\n                node.y1 += newDeltaY;\n              }\n            }\n          }\n        } else {\n          deltaY = deltaY / (nodes.length + 1);\n          for (let j = 0, len = nodes.length; j < len; ++j) {\n            const node = nodes[j];\n            node.y0 += deltaY * (j + 1);\n            node.y1 += deltaY * (j + 1);\n          }\n        }\n      } else if (deltaY < 0 && nodes.length > 1) {\n        deltaY = deltaY / (nodes.length - 1);\n\n        if (gapY + deltaY >= 0) {\n          gapY += deltaY;\n\n          this._gapY = Math.min(gapY);\n\n          for (let j = 1, len = nodes.length; j < len; ++j) {\n            const node = nodes[j];\n            node.y0 += deltaY * j;\n            node.y1 += deltaY * j;\n          }\n        }\n      }\n      this.reorderLinks(nodes);\n    }\n  }\n\n  computeNodeBreadths(nodes: SankeyNodeElement[]) {\n    const columns = this.computeNodeLayers(nodes);\n\n    this.initializeNodeBreadths(columns);\n    const iterations = this.options.iterations;\n\n    /**\n     * don't adjust the order of node when the data is hierarchy data or the layer of node is set customizedly\n     */\n    if (!this._isHierarchic && !isFunction(this.options.setNodeLayer) && !isFunction(this.options.nodeGap)) {\n      for (let i = 0; i < iterations; ++i) {\n        const alpha = Math.pow(0.99, i);\n        const beta = Math.max(1 - alpha, (i + 1) / iterations);\n\n        this.relaxRightToLeft(columns, alpha, beta);\n        this.relaxLeftToRight(columns, alpha, beta);\n      }\n    }\n\n    return columns;\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  relaxLeftToRight(columns: SankeyNodeElement[][], alpha: number, beta: number) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (let j = 0, colLen = column.length; j < colLen; j++) {\n        const target = column[j];\n        let y = 0;\n        let w = 0;\n\n        for (let k = 0, linkLen = target.targetLinks.length; k < linkLen; k++) {\n          const link = target.targetLinks[k];\n          const v = link.value * (target.layer - this._nodeMap[link.source].layer);\n          y += this.targetTop(this._nodeMap[link.source], target) * v;\n          w += v;\n        }\n        if (!(w > 0)) {\n          continue;\n        }\n        const dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        this.reorderNodeLinks(target);\n      }\n      if (isNil(this.options.nodeSortBy)) {\n        column.sort(ascendingNodeBreadth);\n      }\n      this.resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  relaxRightToLeft(columns: SankeyNodeElement[][], alpha: number, beta: number) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (let j = 0, colLen = column.length; j < colLen; j++) {\n        const source = column[j];\n        let y = 0;\n        let w = 0;\n\n        for (let k = 0, linkLen = source.sourceLinks.length; k < linkLen; k++) {\n          const link = source.sourceLinks[k];\n          const v = link.value * (this._nodeMap[link.target].layer - source.layer);\n          y += this.sourceTop(source, this._nodeMap[link.target]) * v;\n          w += v;\n        }\n        if (!(w > 0)) {\n          continue;\n        }\n        const dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        this.reorderNodeLinks(source);\n      }\n      if (this.options.nodeSortBy === undefined) {\n        column.sort(ascendingNodeBreadth);\n      }\n      this.resolveCollisions(column, beta);\n    }\n  }\n\n  resolveCollisions(nodes: SankeyNodeElement[], alpha: number) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    this.resolveCollisionsBottomToTop(nodes, subject.y0 - this._gapY, i - 1, alpha);\n    this.resolveCollisionsTopToBottom(nodes, subject.y1 + this._gapY, i + 1, alpha);\n    this.resolveCollisionsBottomToTop(nodes, this._viewBox.y1, nodes.length - 1, alpha);\n    this.resolveCollisionsTopToBottom(nodes, this._viewBox.y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  resolveCollisionsTopToBottom(nodes: SankeyNodeElement[], y: number, i: number, alpha: number) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) {\n        (node.y0 += dy), (node.y1 += dy);\n      }\n      y = node.y1 + this._gapY;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  resolveCollisionsBottomToTop(nodes: SankeyNodeElement[], y: number, i: number, alpha: number) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) {\n        node.y0 -= dy;\n        node.y1 -= dy;\n      }\n      y = node.y0 - this._gapY;\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  targetTop(source: SankeyNodeElement, target: SankeyNodeElement) {\n    let y = source.y0 - ((source.sourceLinks.length - 1) * this._gapY) / 2;\n    let i: number;\n    let len: number;\n    let link: SankeyLinkElement;\n\n    for (i = 0, len = source.sourceLinks.length; i < len; i++) {\n      link = source.sourceLinks[i];\n\n      if (link.target === target.key) {\n        break;\n      }\n      y += link.thickness + this._gapY;\n    }\n    for (i = 0, len = target.targetLinks.length; i < len; i++) {\n      link = target.targetLinks[i];\n      if (link.source === source.key) {\n        break;\n      }\n      y -= link.thickness;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  sourceTop(source: SankeyNodeElement, target: SankeyNodeElement) {\n    let y = target.y0 - ((target.targetLinks.length - 1) * this._gapY) / 2;\n    let i: number;\n    let len: number;\n    let link: SankeyLinkElement;\n\n    for (i = 0, len = target.targetLinks.length; i < len; i++) {\n      link = target.targetLinks[i];\n      if (link.source === source.key) {\n        break;\n      }\n      y += link.thickness + this._gapY;\n    }\n    for (i = 0, len = source.sourceLinks.length; i < len; i++) {\n      link = source.sourceLinks[i];\n      if (link.target === target.key) {\n        break;\n      }\n      y -= link.thickness;\n    }\n    return y;\n  }\n\n  computeLinkBreadthsNoOverlap(nodes: SankeyNodeElement[]) {\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      const node = nodes[i];\n\n      let y0 = node.y0;\n      let reachBottom = false;\n\n      for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n        const link = node.sourceLinks[j];\n        if (!reachBottom) {\n          link.y0 = y0 + link.thickness / 2;\n        }\n        link.x0 = node.x1;\n\n        if (y0 + link.thickness > node.y1 || reachBottom) {\n          link.y0 = node.y1 - link.thickness / 2;\n          reachBottom = true;\n        } else {\n          y0 += link.thickness;\n        }\n      }\n\n      let y1 = node.y0;\n      reachBottom = false;\n\n      for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n        const link = node.targetLinks[j];\n\n        if (!reachBottom) {\n          link.y1 = y1 + link.thickness / 2;\n        }\n        link.x1 = node.x0;\n\n        if (y1 + link.thickness > node.y1 || reachBottom) {\n          link.y1 = node.y1 - link.thickness / 2;\n          reachBottom = true;\n        } else {\n          y1 += link.thickness;\n        }\n      }\n    }\n  }\n\n  computeLinkBreadthsOverlap(nodes: SankeyNodeElement[]) {\n    const linkOverlap = this.options.linkOverlap;\n\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      const node = nodes[i];\n      const pos = linkOverlap === 'start' ? node.y0 : linkOverlap === 'end' ? node.y1 : (node.y0 + node.y1) / 2;\n      const sign = linkOverlap === 'start' ? 0.5 : linkOverlap === 'end' ? -0.5 : 0;\n\n      for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n        const link = node.sourceLinks[j];\n        link.y0 = pos + sign * link.thickness;\n        link.x0 = node.x1;\n      }\n\n      for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n        const link = node.targetLinks[j];\n        link.y1 = pos + sign * link.thickness;\n        link.x1 = node.x0;\n      }\n    }\n  }\n\n  computeLinkBreadths(nodes: SankeyNodeElement[]) {\n    if (this.options.linkOverlap) {\n      this.computeLinkBreadthsOverlap(nodes);\n    } else {\n      this.computeLinkBreadthsNoOverlap(nodes);\n    }\n  }\n\n  reorderNodeLinks(node: SankeyNodeElement) {\n    if (isNil(this.options.linkSortBy)) {\n      const targetLinks = node.targetLinks;\n      const sourceLinks = node.sourceLinks;\n\n      for (let j = 0, linkLen = targetLinks.length; j < linkLen; j++) {\n        const link = targetLinks[j];\n        this._nodeMap[link.source].sourceLinks.sort(this._ascendingTargetBreadth);\n      }\n      for (let j = 0, linkLen = sourceLinks.length; j < linkLen; j++) {\n        const link = sourceLinks[j];\n        this._nodeMap[link.target].targetLinks.sort(this._ascendingSourceBreadth);\n      }\n    }\n  }\n\n  reorderLinks(nodes: SankeyNodeElement[]) {\n    if (isNil(this.options.linkSortBy)) {\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n        node.sourceLinks.sort(this._ascendingTargetBreadth);\n        node.targetLinks.sort(this._ascendingSourceBreadth);\n      }\n    }\n  }\n\n  private _ascendingSourceBreadth = (a: SankeyLinkElement, b: SankeyLinkElement) => {\n    return ascendingNodeBreadth(this._nodeMap[a.source], this._nodeMap[b.source]) || a.index - b.index;\n  };\n\n  private _ascendingTargetBreadth = (a: SankeyLinkElement, b: SankeyLinkElement) => {\n    return ascendingNodeBreadth(this._nodeMap[a.target], this._nodeMap[b.target]) || a.index - b.index;\n  };\n}\n"]}