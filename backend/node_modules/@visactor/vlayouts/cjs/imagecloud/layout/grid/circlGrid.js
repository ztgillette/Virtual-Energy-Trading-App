"use strict";

function circleGridLayout(options) {
    const {imageConfig: imageConfig = {}, size: size, ratio: ratio = .1, layoutConfig: layoutConfig = {}} = options, {padding: padding = 0, imageSize: imageSize = 0} = imageConfig, [width, height] = size, center_x = width / 2, center_y = height / 2;
    let circleRadius = 0;
    circleRadius = imageSize ? imageSize / 2 : Math.min(width, height) * ratio / 2, 
    circleRadius - padding <= 0 && (circleRadius = padding + 1);
    const circleDiameter = 2 * circleRadius, rowHeight = Math.sqrt(3) / 2 * circleDiameter + padding, cellInfo = [];
    let index = 0;
    for (let r = 0; r * rowHeight - circleRadius < height; r++) {
        const y = r * rowHeight, offsetX = r % 2 == 0 ? 0 : circleRadius;
        for (let c = -1; c * (circleDiameter + padding) + offsetX - circleRadius < width; c++) {
            const x = c * (circleDiameter + padding) + offsetX + circleRadius;
            cellInfo[index++] = {
                centerX: x,
                centerY: y,
                x: x - circleRadius,
                y: y - circleRadius,
                row: r,
                col: c,
                distance: Math.sqrt(Math.pow(x - center_x, 2) + Math.pow(y - center_y, 2))
            };
        }
    }
    let cellPixelCount = 0;
    const rSquared = circleRadius * circleRadius;
    for (let r = 0; r < circleDiameter; r++) for (let c = 0; c < circleDiameter; c++) {
        const dx = r - circleRadius, dy = c - circleRadius;
        dx * dx + dy * dy <= rSquared && cellPixelCount++;
    }
    return {
        context: Object.assign({}, layoutConfig, {
            cellWidth: circleDiameter,
            cellHeight: circleDiameter,
            cellInfo: cellInfo,
            cellCount: cellInfo.length,
            cellType: "circle",
            cellPixelCount: cellPixelCount,
            eachPixel: (cell, callback) => {
                const {x: x, y: y} = cell;
                for (let r = 0; r < circleDiameter; r++) for (let c = 0; c < circleDiameter; c++) {
                    if (r + x < 0 || r + x > width || c + y > height || c + y < 0) continue;
                    const dx = r - circleRadius, dy = c - circleRadius;
                    dx * dx + dy * dy <= rSquared && callback((~~y + r) * width + (~~x + c));
                }
            },
            clipPath: "M 1 0 A 1 1 0 1 0 -1 0 A 1 1 0 1 0 1 0 Z"
        }),
        imageLength: circleDiameter
    };
}

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.circleGridLayout = void 0, exports.circleGridLayout = circleGridLayout;
//# sourceMappingURL=circlGrid.js.map
