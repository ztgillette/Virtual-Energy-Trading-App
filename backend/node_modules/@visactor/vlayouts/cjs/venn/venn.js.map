{"version":3,"sources":["../src/venn/venn.ts"],"names":[],"mappings":"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","file":"venn.js","sourcesContent":["import type { IPointLike } from '@visactor/vutils';\nimport { array, isEmpty } from '@visactor/vutils';\nimport type {\n  IVennCircleDatum,\n  IVennCommonDatum,\n  IVennOverlapDatum,\n  IVennTransformMarkOptions,\n  IVennTransformOptions\n} from './interface';\nimport { computeTextCenters, normalizeSolution, scaleSolution, venn } from './utils';\nimport type { VennCircleName, IVennArea, IVennCircle, VennAreaName } from './utils/interface';\nimport { getArcsFromCircles, getPathFromArcs } from './utils/path';\n\nexport const transform = (\n  options: IVennTransformOptions,\n  upstreamData: any[]\n): Array<IVennCircleDatum | IVennOverlapDatum> => {\n  const {\n    x0,\n    x1,\n    y0,\n    y1,\n    setField = 'sets',\n    valueField = 'size',\n    orientation = Math.PI / 2,\n    orientationOrder = null,\n    emptySetKey\n  } = options;\n  let circles: Record<VennCircleName, IVennCircle> = {};\n  let textCenters: Record<VennAreaName, IPointLike> = {};\n\n  const hasEmptySet = upstreamData.some(area => {\n    const sets = array(area[setField]);\n    return !sets || sets.length === 0;\n  });\n\n  const nonEmptyData = hasEmptySet ? upstreamData.filter(area => !isEmpty(array(area[setField]))) : upstreamData;\n\n  if (nonEmptyData.length > 0) {\n    const vennData = nonEmptyData.map(\n      area =>\n        ({\n          sets: array(area[setField]),\n          size: area[valueField]\n        } as IVennArea)\n    );\n    let solution = venn(vennData, options);\n    solution = normalizeSolution(solution, orientation, orientationOrder);\n    circles = scaleSolution(solution, x1 - x0, y1 - y0, x0, y0, hasEmptySet);\n    textCenters = computeTextCenters(circles, vennData);\n  }\n\n  const data = upstreamData.map(area => {\n    const sets = array(area[setField]);\n    if (!sets || sets.length === 0) {\n      return {\n        ...area,\n        datum: area,\n        sets,\n        key: emptySetKey || 'others',\n        size: area[valueField],\n        labelX: undefined,\n        labelY: undefined,\n        type: 'circle',\n        x: x0 + (x1 - x0) / 2,\n        y: y0 + (y1 - y0) / 2,\n        radius: Math.min(x1 - x0, y1 - y0) / 2\n      } as IVennCircleDatum;\n    }\n    const key = sets.toString();\n    const textCenter = textCenters[key];\n    const basicDatum = {\n      ...area,\n      datum: area,\n      sets,\n      key,\n      size: area[valueField],\n      labelX: textCenter?.x,\n      labelY: textCenter?.y\n    } as IVennCommonDatum;\n    const circle = circles[key];\n    if (circle) {\n      return {\n        ...basicDatum,\n        type: 'circle',\n        x: circle.x,\n        y: circle.y,\n        radius: circle.radius\n      } as IVennCircleDatum;\n    }\n    const arcs = getArcsFromCircles(sets.map(name => circles[name]));\n    return {\n      ...basicDatum,\n      type: 'overlap',\n      x: 0,\n      y: 0,\n      path: getPathFromArcs(arcs),\n      arcs\n    } as IVennOverlapDatum;\n  });\n  return data;\n};\n\nexport const transformMark = (\n  options: IVennTransformMarkOptions,\n  upstreamData: Array<IVennCircleDatum | IVennOverlapDatum>\n) => {\n  return upstreamData.filter(datum => datum.type === options.datumType);\n};\n"]}