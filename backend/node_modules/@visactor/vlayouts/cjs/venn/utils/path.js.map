{"version":3,"sources":["../src/venn/utils/path.ts"],"names":[],"mappings":"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","file":"path.js","sourcesContent":["import type { IOverlapAreaStats } from '@visactor/vutils';\nimport { crossProduct, intersectionArea, PointService, SMALL } from '@visactor/vutils';\nimport type { IVennCircle, IVennOverlapArc } from './interface';\n\nexport const getArcsFromCircles = (circles: IVennCircle[]) => {\n  const areaStats: IOverlapAreaStats = {};\n  const circleList = Object.values(circles);\n  if (!circleList.length) {\n    return [];\n  }\n  intersectionArea(circleList, areaStats);\n  const arcs = areaStats.arcs.map(\n    ({ p1, p2, circle, width }) =>\n      ({\n        p1,\n        p2,\n        radius: circle.radius,\n        setId: (circle as IVennCircle).setId,\n        largeArcFlag: width > circle.radius\n      } as IVennOverlapArc)\n  );\n  const result: IVennOverlapArc[] = [];\n  let i = 0;\n  let arc = arcs[0];\n  while (i < arcs.length && arc) {\n    const { p2 } = arc;\n    result.push(arc);\n    arc = arcs.find(a => PointService.distancePP(a.p1, p2) < SMALL);\n    i++;\n  }\n  return result;\n};\n\nexport const getPathFromArcs = (arcs: IVennOverlapArc[]) => {\n  if (!arcs?.length) {\n    return '';\n  }\n  let i = 0;\n  let arc = arcs[0];\n  const { p1 } = arc;\n  let path = `M${p1.x},${p1.y}`;\n  while (arc) {\n    const { p2, radius, largeArcFlag } = arc;\n    path += `A${radius},${radius} 0 ${largeArcFlag ? 1 : 0},0 ${p2.x},${p2.y}`;\n    arc = arcs[++i];\n  }\n  path += ' Z';\n  return path;\n};\n\nexport const getArcsFromPath = (path: string) => {\n  const arcs: Partial<IVennOverlapArc>[] = [];\n  const segments = path.split('A');\n  const m = segments[0];\n  let i = m.indexOf(',');\n  arcs.push({\n    p1: { x: +m.slice(1, i), y: +m.slice(i + 1) }\n  });\n  for (i = 1; i < segments.length; i++) {\n    const s = segments[i].split(',');\n    arcs[i - 1].radius = +s[0];\n    const p2x = +s[2].slice(2);\n    const p2y = +s[3].split(' ')[0];\n    arcs[i - 1].p2 = { x: p2x, y: p2y };\n    arcs[i - 1].largeArcFlag = s[1][s[1].length - 1] === '1';\n    if (i < segments.length - 1) {\n      arcs.push({\n        p1: { x: p2x, y: p2y }\n      });\n    }\n  }\n  return arcs as IVennOverlapArc[];\n};\n\nexport const getCirclesFromArcs = (arcs: IVennOverlapArc[]) => {\n  return (\n    arcs?.map(arc => {\n      const { p1, p2, radius, largeArcFlag, setId } = arc;\n      const { x: x1, y: y1 } = p1;\n      const { x: x2, y: y2 } = p2;\n      // 两点之间的距离\n      const d = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5;\n      // 中点坐标\n      const mX = (x1 + x2) / 2;\n      const mY = (y1 + y2) / 2;\n      // 中垂线的长度\n      const h = (radius ** 2 - (d / 2) ** 2) ** 0.5;\n      // 圆心坐标\n      let x = mX + (h * (y2 - y1)) / d;\n      let y = mY - (h * (x2 - x1)) / d;\n      if (crossProduct([x2 - x1, y2 - y1], [x - x1, y - y1]) > 0 || largeArcFlag) {\n        x = mX - (h * (y2 - y1)) / d;\n        y = mY + (h * (x2 - x1)) / d;\n      }\n      return { x, y, radius, setId } as IVennCircle;\n    }) ?? []\n  );\n};\n"]}