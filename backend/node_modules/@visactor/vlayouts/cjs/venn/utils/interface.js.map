{"version":3,"sources":["../src/venn/utils/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { ICircle, IPointLike } from '@visactor/vutils';\n\n// eg. 'A', 'B'\nexport type VennCircleName = string;\n\n// eg. 'A', 'B', 'A,B'\nexport type VennAreaName = string;\n\nexport interface IVennCircle extends ICircle {\n  setId: VennCircleName;\n  parent?: IVennCircle;\n}\n\nexport interface IVennArea {\n  sets: VennCircleName[];\n  size: number;\n  weight?: number;\n  label?: string;\n}\n\nexport interface IVennSingleArea {\n  set: VennCircleName;\n  size: number;\n  weight?: number;\n}\n\nexport interface IVennParams {\n  maxIterations?: number;\n  initialLayout?: (areas: IVennArea[], params: IVennParams) => Record<VennCircleName, IVennCircle>;\n  lossFunction?: (sets: Record<VennCircleName, IVennCircle>, overlaps: IVennArea[]) => number;\n  restarts?: number;\n  history?: any;\n}\n\nexport interface ICluster extends Array<IVennCircle> {\n  size?: number;\n  bounds?: {\n    xRange: {\n      max: number;\n      min: number;\n    };\n    yRange: {\n      max: number;\n      min: number;\n    };\n  };\n}\n\nexport interface IVennOverlapArc {\n  p1: IPointLike;\n  p2: IPointLike;\n  radius: number;\n  largeArcFlag: boolean;\n  setId: VennCircleName;\n}\n"]}