{"version":3,"sources":["../src/wordcloud-shape/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type {\n  CreateImageFunction,\n  GeometricMaskShape,\n  ICreateCanvas,\n  SegmentationOutputType as SegmentationOutputTypeBase,\n  TextShapeMask\n} from '../interface/wordcloud';\nimport type { TagItemAttribute } from '../wordcloud/interface';\nimport type { FieldOption } from '../wordcloud/wordcloud';\n\nexport type TagItemFunction<T> = (d?: any) => T;\n\nexport type Bounds = [{ x: number; y: number }, { x: number; y: number }];\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nexport type CallbackOption = (datum: any) => any;\nexport type AsType = {\n  x: string;\n  y: string;\n  fontFamily: string;\n  fontSize: string;\n  fontStyle: string;\n  fontWeight: string;\n  angle: string;\n  opacity: string;\n  visible: string;\n  isFillingWord: string;\n  color: string;\n};\n\nexport interface SegmentationOutputType extends SegmentationOutputTypeBase {\n  fillingInitialFontSize?: number;\n  fillingDeltaFontSize?: number;\n}\n\nexport type wordsConfigType = {\n  getText: TagItemFunction<string>;\n  getFontSize?: TagItemFunction<number>;\n  fontSizeRange?: [number, number];\n\n  colorMode: 'linear' | 'ordinal';\n  getColor: TagItemFunction<string>;\n  getFillingColor?: TagItemFunction<string>;\n  colorList?: string[];\n  getColorHex?: TagItemFunction<string>;\n\n  getFontFamily: TagItemFunction<string>;\n  rotateList: number[];\n  getPadding: TagItemFunction<number>;\n  getFontStyle: TagItemFunction<string>;\n  getFontWeight: TagItemFunction<string>;\n  getFontOpacity: TagItemFunction<number>;\n\n  fontSizeScale?: TagItemFunction<number>;\n  colorScale?: TagItemFunction<string>;\n  fillingColorScale?: TagItemFunction<string>;\n};\nexport type LayoutConfigType = {\n  size: [number, number];\n  ratio: number;\n\n  shapeUrl: string | TextShapeMask | GeometricMaskShape;\n  random: boolean;\n  textLayoutTimes: number;\n  removeWhiteBorder: boolean;\n  layoutMode: 'default' | 'ensureMapping' | 'ensureMappingEnlarge';\n  fontSizeShrinkFactor: number;\n  stepFactor: number;\n  importantWordCount: number;\n  globalShinkLimit: number;\n  fontSizeEnlargeFactor: number;\n\n  fillingRatio: number;\n  fillingTimes: number;\n  fillingXStep: number;\n  fillingYStep: number;\n  fillingInitialFontSize?: number;\n  fillingDeltaFontSize?: number;\n  fillingInitialOpacity: number;\n  fillingDeltaOpacity: number;\n\n  getFillingFontFamily: TagItemFunction<string>;\n  getFillingFontStyle: TagItemFunction<string>;\n  getFillingFontWeight: TagItemFunction<string>;\n  getFillingPadding: TagItemFunction<number>;\n  fillingRotateList: number[];\n  fillingDeltaFontSizeFactor: number;\n\n  // fill color 相关\n  fillingColorList: string[];\n\n  // 经过计算，补充的内容\n  sameColorList: boolean;\n  board?: number[];\n\n  minInitFontSize: number;\n  minFontSize: number;\n  minFillFontSize: number;\n};\nexport type CloudWordType = {\n  x: number;\n  y: number;\n  weight: number;\n  text: string;\n  fontFamily: string;\n  fontWeight: string;\n  fontStyle: string;\n  rotate: number;\n  fontSize: number;\n  opacity: number;\n  padding: number;\n  color: string;\n  fillingColor: string;\n  datum: any;\n  visible: boolean;\n  hasPlaced: boolean;\n\n  wordSize?: [number, number];\n  bounds?: any;\n  hasText?: boolean;\n  sprite?: number[];\n  LT?: [number, number]; // 左上角点\n};\n\nexport interface WordCloudShapeOptions {\n  // data index key\n  dataIndexKey?: string;\n\n  // font value 相关\n  text: FieldOption | TagItemAttribute<string> | string;\n\n  // font style 相关\n  size?: [number, number];\n  fontFamily?: FieldOption | TagItemAttribute<string> | string;\n  fontStyle?: FieldOption | TagItemAttribute<string> | string;\n  fontOpacity?: FieldOption | TagItemAttribute<number> | number;\n  fontWeight?: FieldOption | TagItemAttribute<string> | string;\n  fontSize?: FieldOption | TagItemAttribute<number> | number;\n  fontSizeRange?: [number, number];\n  padding?: FieldOption | TagItemAttribute<number> | number;\n\n  // font color 相关\n  colorMode?: 'linear' | 'ordinal';\n  colorField?: FieldOption;\n  colorHexField?: FieldOption;\n  colorList?: string[];\n\n  // font rotate 相关\n  rotate?: FieldOption | TagItemAttribute<number> | number;\n  rotateList?: number[];\n\n  // layout 相关\n  shape: string | TextShapeMask | GeometricMaskShape;\n  random?: boolean;\n  textLayoutTimes?: number;\n  layoutMode?: 'default' | 'ensureMapping' | 'ensureMappingEnlarge';\n  ratio?: number;\n  removeWhiteBorder?: boolean;\n  fontSizeShrinkFactor?: number;\n  stepFactor?: number;\n  importantWordCount?: number;\n  globalShinkLimit?: number;\n  fontSizeEnlargeFactor?: number;\n\n  // fill 相关\n  fillingRatio?: number;\n  fillingTimes?: number;\n  fillingXRatioStep?: number;\n  fillingYRatioStep?: number;\n  fillingXStep?: number;\n  fillingYStep?: number;\n  fillingInitialFontSize?: number;\n  fillingDeltaFontSize?: number;\n  fillingInitialOpacity?: number;\n  fillingDeltaOpacity?: number;\n\n  // fill font style 相关\n  fillingFontFamily?: FieldOption | TagItemAttribute<string> | string;\n  fillingFontStyle?: FieldOption | TagItemAttribute<string> | string;\n  fillingFontWeight?: FieldOption | TagItemAttribute<string> | string;\n  fillingPadding?: FieldOption | TagItemAttribute<number> | number;\n  fillingDeltaFontSizeFactor?: number;\n\n  // fill color 相关\n  fillingColorList?: string[];\n  fillingColorField?: FieldOption;\n\n  // fill rotate 相关\n  fillingRotateList?: number[];\n\n  as?: AsType;\n\n  // 核心词最小初始布局字号\n  minInitFontSize?: number;\n  // 核心词最小布局字号\n  minFontSize?: number;\n  // 填充词词最小布局字号\n  minFillFontSize?: number;\n\n  onUpdateMaskCanvas?: (canvas?: HTMLCanvasElement) => void;\n  onBeforeLayout?: () => void;\n  onLayoutFinished?: (params: { successedWords: string[]; failedWords: string[] }) => void;\n  createCanvas: ICreateCanvas;\n  createImage: CreateImageFunction;\n}\n"]}