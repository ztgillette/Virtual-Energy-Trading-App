{"version":3,"sources":["../src/circle-packing/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type {\n  HierarchicalDatum,\n  HierarchicalNodeElement,\n  HierarchyLabelAttrs,\n  ViewBoxOptions\n} from '../interface/common';\n\nexport interface ICircle {\n  x?: number;\n  y?: number;\n  radius?: number;\n}\n\nexport interface CirclePackingOptions {\n  nodeSort?: boolean | ((a: CirclePackingNodeElement, b: CirclePackingNodeElement) => number);\n  padding?: number | number[];\n  /**\n   * set the radius of node, if not specified, we'll set `Math.sqrt(node.value);`.\n   */\n  setRadius?: (datum: CirclePackingNodeElement) => number;\n  /** parse the key of node */\n  nodeKey?: string | number | ((datum: HierarchicalDatum) => string | number);\n  includeRoot?: boolean;\n}\n\nexport type CirclePackingTramsformOptions = CirclePackingOptions &\n  ViewBoxOptions & { flatten?: boolean; maxDepth?: number };\n\n/**\n * The node element after sunburst layout\n */\nexport interface CirclePackingNodeElement extends HierarchicalNodeElement<HierarchicalDatum>, ICircle {\n  children?: CirclePackingNodeElement[];\n  label?: HierarchyLabelAttrs;\n}\n"]}