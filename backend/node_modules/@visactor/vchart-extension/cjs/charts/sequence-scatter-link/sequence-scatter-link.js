"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerSequenceScatterLink = exports.SequenceScatterLink = void 0;

const vchart_1 = require("@visactor/vchart"), sequence_scatter_link_transformer_1 = require("./sequence-scatter-link-transformer");

class SequenceScatterLink extends vchart_1.BaseChart {
    constructor() {
        super(...arguments), this.type = "sequenceScatterLink", this.transformerConstructor = sequence_scatter_link_transformer_1.SequenceScatterLinkChartSpecTransformer;
    }
    init() {
        this.isValid() && super.init();
    }
    isValid() {
        var _a, _b, _c, _d;
        const {xField: xField, yField: yField, data: data} = this._spec;
        return xField && yField ? !!data || (null === (_d = (_c = this._option).onError) || void 0 === _d || _d.call(_c, "Data is required"), 
        !1) : (null === (_b = (_a = this._option).onError) || void 0 === _b || _b.call(_a, "Missing Required Config: `xField`, `yField` "), 
        !1);
    }
}

exports.SequenceScatterLink = SequenceScatterLink, SequenceScatterLink.type = "sequenceScatterLink", 
SequenceScatterLink.view = "singleDefault", SequenceScatterLink.transformerConstructor = sequence_scatter_link_transformer_1.SequenceScatterLinkChartSpecTransformer;

const registerSequenceScatterLink = option => {
    const vchartConstructor = (null == option ? void 0 : option.VChart) || vchart_1.VChart;
    vchartConstructor && vchartConstructor.useChart([ SequenceScatterLink, vchart_1.ScatterChart ]);
};

exports.registerSequenceScatterLink = registerSequenceScatterLink;
//# sourceMappingURL=sequence-scatter-link.js.map
