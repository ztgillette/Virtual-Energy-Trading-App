{"version":3,"sources":["../src/charts/funnel-3d/series.ts"],"names":[],"mappings":"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","file":"series.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { IFunnel3dSeriesSpec } from './interface';\nimport { funnel3dSeriesMark } from './constant';\nimport { Funnel3dSeriesSpecTransformer } from './series-spec-transformer';\nimport type { AdaptiveSpec, ILabelMark, IRuleMark, ITextMark } from '@visactor/vchart';\nimport { AttributeLevel, Factory, FunnelSeries, registerRuleMark, registerTextMark } from '@visactor/vchart';\nimport { MarkType3dEnum, SeriesMark3dNameEnum, SeriesType3dEnum } from '../3d/enum';\nimport type { IPyramid3dMark } from '../3d/interface';\nimport { registerPyramid3dMark } from '../3d/pyramid-3d';\nimport { funnel3d } from './theme';\n\nexport class Funnel3dSeries<T extends IFunnel3dSeriesSpec = IFunnel3dSeriesSpec> extends FunnelSeries<\n  AdaptiveSpec<T, 'type'>\n> {\n  static readonly type: string = SeriesType3dEnum.funnel3d;\n  type = SeriesType3dEnum.funnel3d;\n  protected _funnelMarkName: string = SeriesMark3dNameEnum.funnel3d;\n  protected _funnelMarkType: string = MarkType3dEnum.pyramid3d;\n  protected _transformMarkName: string = SeriesMark3dNameEnum.transform3d;\n  protected _transformMarkType: string = MarkType3dEnum.pyramid3d;\n\n  static readonly mark = funnel3dSeriesMark;\n  static readonly builtInTheme = { funnel3d };\n  static readonly transformerConstructor = Funnel3dSeriesSpecTransformer as any;\n  readonly transformerConstructor = Funnel3dSeriesSpecTransformer as any;\n\n  initMark() {\n    this._funnelMark = this._createMark(\n      {\n        ...Funnel3dSeries.mark.funnel3d,\n        name: this._funnelMarkName,\n        type: this._funnelMarkType\n      },\n      {\n        themeSpec: this._theme?.funnel3d,\n        key: this._seriesField,\n        isSeriesMark: true\n      },\n      {\n        support3d: true\n      }\n    ) as IPyramid3dMark;\n\n    if (this._spec.isTransform) {\n      this._funnelTransformMark = this._createMark(\n        {\n          ...Funnel3dSeries.mark.transform3d,\n          name: this._transformMarkName,\n          type: this._transformMarkType\n        },\n        {\n          themeSpec: this._theme?.transform3d,\n          key: this._seriesField,\n          skipBeforeLayouted: false,\n          dataView: this._viewDataTransform.getDataView(),\n          dataProductId: this._viewDataTransform.getProductId()\n        }\n      );\n    }\n\n    if (this._spec?.outerLabel?.visible) {\n      const { line } = this._spec.outerLabel ?? {};\n      const { line: lineTheme } = this._theme?.outerLabel ?? {};\n\n      this._funnelOuterLabelMark.label = this._createMark(Funnel3dSeries.mark.outerLabel, {\n        themeSpec: this._theme?.outerLabel,\n        key: this._seriesField,\n        markSpec: this._spec.outerLabel\n      }) as ITextMark;\n\n      this._funnelOuterLabelMark.line = this._createMark(Funnel3dSeries.mark.outerLabelLine, {\n        themeSpec: lineTheme,\n        key: this._seriesField,\n        markSpec: line\n      }) as IRuleMark;\n    }\n  }\n\n  initMarkStyle() {\n    super.initMarkStyle();\n    const funnelMark = this._funnelMark;\n    if (funnelMark) {\n      this.setMarkStyle(\n        funnelMark,\n        {\n          z: _ => {\n            if (this._isHorizontal()) {\n              return 0;\n            }\n            const points = this.getPoints(_);\n            const width = Math.max(Math.abs(points[0].x - points[1].x), Math.abs(points[2].x - points[3].x));\n            return (this._computeMaxSize() - width) / 2;\n          }\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initLabelMarkStyle(labelMark?: ILabelMark) {\n    super.initLabelMarkStyle(labelMark);\n\n    this.setMarkStyle(\n      labelMark,\n      {\n        z: _ => {\n          if (this._isHorizontal()) {\n            return 0;\n          }\n          const points = this.getPoints(_);\n          const width = Math.max(Math.abs(points[0].x - points[1].x), Math.abs(points[2].x - points[3].x));\n          return (this._computeMaxSize() - width) / 2;\n        }\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n\n    this._labelMark = labelMark;\n\n    if (this._funnelOuterLabelMark?.label) {\n      // this._funnelOuterLabelMark.label.setDepend(labelMark.getComponent());\n    }\n\n    if (this._funnelOuterLabelMark?.line) {\n      // this._funnelOuterLabelMark.line.setDepend(...this._funnelOuterLabelMark.line.getDepend());\n    }\n  }\n}\n\nexport const registerFunnel3dSeries = () => {\n  registerPyramid3dMark();\n  registerTextMark();\n  registerRuleMark();\n  Factory.registerSeries(Funnel3dSeries.type, Funnel3dSeries);\n};\n"]}