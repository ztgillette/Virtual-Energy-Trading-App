import type { EasingType } from '@visactor/vrender-core';
import { ACustomAnimate } from '@visactor/vrender-animate';
export interface ICandlestickScaleAnimationOptions {
    center?: number;
}
export declare class CandlestickScaleIn extends ACustomAnimate<Record<string, number>> {
    constructor(from: null, to: null, duration: number, easing: EasingType, params?: ICandlestickScaleAnimationOptions);
    onBind(): void;
    computeAttribute(): {
        from?: {
            [channel: string]: any;
        };
        to?: {
            [channel: string]: any;
        };
    };
    onUpdate(end: boolean, ratio: number, out: Record<string, any>): void;
}
export declare class CandlestickScaleOut extends ACustomAnimate<Record<string, number>> {
    constructor(from: null, to: null, duration: number, easing: EasingType, params?: ICandlestickScaleAnimationOptions);
    onBind(): void;
    computeAttribute(): {
        from?: {
            [channel: string]: any;
        };
        to?: {
            [channel: string]: any;
        };
    };
    onUpdate(end: boolean, ratio: number, out: Record<string, any>): void;
}
export declare const registerCandlestickScaleAnimation: () => void;
