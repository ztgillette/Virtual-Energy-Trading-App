"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.register3DPlugin = exports.VChart3dPlugin = void 0;

const vrender_core_1 = require("@visactor/vrender-core"), vchart_1 = require("@visactor/vchart"), util_1 = require("./util");

class VChart3dPlugin extends vchart_1.BasePlugin {
    constructor() {
        super(VChart3dPlugin.type), this.type = "VChart3dPlugin";
    }
    onInit(service, chartSpec) {
        var _a;
        if (this._is3d = (0, util_1.is3DChart)(chartSpec), this._is3d) {
            const {globalInstance: globalInstance} = service;
            globalInstance.getCompiler().getStage().set3dOptions(Object.assign({}, null === (_a = globalInstance._option) || void 0 === _a ? void 0 : _a.options3d));
        }
    }
    onBeforeInitChart(service, chartSpec, actionSource) {
        this._is3d && (0, util_1.is3DAxisChart)(chartSpec) && (chartSpec.layout = {
            type: "layout3d"
        });
    }
}

exports.VChart3dPlugin = VChart3dPlugin, VChart3dPlugin.pluginType = "chart", VChart3dPlugin.type = "VChart3dPlugin";

const register3DPlugin = () => {
    (0, vchart_1.registerChartPlugin)(VChart3dPlugin), (0, vrender_core_1.registerDirectionalLight)(), 
    (0, vrender_core_1.registerOrthoCamera)(), (0, vrender_core_1.registerViewTransform3dPlugin)();
};

exports.register3DPlugin = register3DPlugin;
//# sourceMappingURL=plugin.js.map