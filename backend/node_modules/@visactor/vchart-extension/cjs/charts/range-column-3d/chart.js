"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerRangeColumn3dChart = exports.RangeColumn3dChart = void 0;

const vchart_1 = require("@visactor/vchart"), chart_spec_transformer_1 = require("./chart-spec-transformer"), enum_1 = require("../3d/enum"), plugin_1 = require("../3d/plugin"), series_1 = require("./series"), layout_1 = require("../3d/layout");

class RangeColumn3dChart extends vchart_1.BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = chart_spec_transformer_1.RangeColumn3dChartSpecTransformer, 
        this.type = "rangeColumn3d", this.seriesType = enum_1.SeriesType3dEnum.rangeColumn3d;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = vchart_1.getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = vchart_1.getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = vchart_1.getCartesianCrosshairRect;
    }
}

exports.RangeColumn3dChart = RangeColumn3dChart, RangeColumn3dChart.type = "rangeColumn3d", 
RangeColumn3dChart.seriesType = enum_1.SeriesType3dEnum.rangeColumn3d, RangeColumn3dChart.transformerConstructor = chart_spec_transformer_1.RangeColumn3dChartSpecTransformer;

const registerRangeColumn3dChart = () => {
    (0, vchart_1.registerDimensionTooltipProcessor)(), (0, vchart_1.registerMarkTooltipProcessor)(), 
    (0, vchart_1.registerDimensionEvents)(), (0, vchart_1.registerDimensionHover)(), 
    (0, plugin_1.register3DPlugin)(), (0, layout_1.registerLayout3d)(), (0, series_1.registerRangeColumn3dSeries)(), 
    vchart_1.Factory.registerChart(RangeColumn3dChart.type, RangeColumn3dChart);
};

exports.registerRangeColumn3dChart = registerRangeColumn3dChart;
//# sourceMappingURL=chart.js.map
