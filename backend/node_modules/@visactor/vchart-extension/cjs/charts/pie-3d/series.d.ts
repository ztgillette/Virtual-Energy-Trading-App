import type { IPie3dSeriesSpec } from './interface';
import { MarkType3dEnum, SeriesMark3dNameEnum, SeriesType3dEnum } from '../3d/enum';
import type { ITextMark } from '@visactor/vchart';
import { BasePieSeries, type IArcSeries } from '@visactor/vchart';
export declare class Pie3dSeries<T extends IPie3dSeriesSpec = IPie3dSeriesSpec> extends BasePieSeries<T> implements IArcSeries {
    static readonly type: string;
    type: SeriesType3dEnum;
    protected _pieMarkName: SeriesMark3dNameEnum;
    protected _pieMarkType: MarkType3dEnum;
    static readonly mark: {
        pie3d: {
            name: SeriesMark3dNameEnum;
            type: MarkType3dEnum;
        };
        labelLine: {
            name: import("@visactor/vchart").SeriesMarkNameEnum;
            type: import("@visactor/vchart").MarkTypeEnum;
        };
        label?: import("@visactor/vchart").ISeriesMarkInfo;
        point?: import("@visactor/vchart").ISeriesMarkInfo;
        line?: import("@visactor/vchart").ISeriesMarkInfo;
        area?: import("@visactor/vchart").ISeriesMarkInfo;
        bar?: import("@visactor/vchart").ISeriesMarkInfo;
        boxPlot?: import("@visactor/vchart").ISeriesMarkInfo;
        outlier?: import("@visactor/vchart").ISeriesMarkInfo;
        circlePacking?: import("@visactor/vchart").ISeriesMarkInfo;
        group?: import("@visactor/vchart").ISeriesMarkInfo;
        gridBackground?: import("@visactor/vchart").ISeriesMarkInfo;
        grid?: import("@visactor/vchart").ISeriesMarkInfo;
        dot?: import("@visactor/vchart").ISeriesMarkInfo;
        title?: import("@visactor/vchart").ISeriesMarkInfo;
        subTitle?: import("@visactor/vchart").ISeriesMarkInfo;
        symbol?: import("@visactor/vchart").ISeriesMarkInfo;
        funnel?: import("@visactor/vchart").ISeriesMarkInfo;
        transform?: import("@visactor/vchart").ISeriesMarkInfo;
        transformLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        outerLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        outerLabelLine?: import("@visactor/vchart").ISeriesMarkInfo;
        pin?: import("@visactor/vchart").ISeriesMarkInfo;
        pinBackground?: import("@visactor/vchart").ISeriesMarkInfo;
        pointer?: import("@visactor/vchart").ISeriesMarkInfo;
        segment?: import("@visactor/vchart").ISeriesMarkInfo;
        track?: import("@visactor/vchart").ISeriesMarkInfo;
        cell?: import("@visactor/vchart").ISeriesMarkInfo;
        cellBackground?: import("@visactor/vchart").ISeriesMarkInfo;
        link?: import("@visactor/vchart").ISeriesMarkInfo;
        arrow?: import("@visactor/vchart").ISeriesMarkInfo;
        pie?: import("@visactor/vchart").ISeriesMarkInfo;
        progress?: import("@visactor/vchart").ISeriesMarkInfo;
        minLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        maxLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        rose?: import("@visactor/vchart").ISeriesMarkInfo;
        node?: import("@visactor/vchart").ISeriesMarkInfo;
        sunburst?: import("@visactor/vchart").ISeriesMarkInfo;
        nonLeaf?: import("@visactor/vchart").ISeriesMarkInfo;
        leaf?: import("@visactor/vchart").ISeriesMarkInfo;
        nonLeafLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        leaderLine?: import("@visactor/vchart").ISeriesMarkInfo;
        stackLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        word?: import("@visactor/vchart").ISeriesMarkInfo;
        fillingWord?: import("@visactor/vchart").ISeriesMarkInfo;
        wordMask?: import("@visactor/vchart").ISeriesMarkInfo;
        nodePoint?: import("@visactor/vchart").ISeriesMarkInfo;
        ripplePoint?: import("@visactor/vchart").ISeriesMarkInfo;
        centerPoint?: import("@visactor/vchart").ISeriesMarkInfo;
        centerLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        barBackground?: import("@visactor/vchart").ISeriesMarkInfo;
        lineLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        areaLabel?: import("@visactor/vchart").ISeriesMarkInfo;
        liquidGroup?: import("@visactor/vchart").ISeriesMarkInfo;
        liquid?: import("@visactor/vchart").ISeriesMarkInfo;
        liquidBackground?: import("@visactor/vchart").ISeriesMarkInfo;
        liquidOutline?: import("@visactor/vchart").ISeriesMarkInfo;
        circle?: import("@visactor/vchart").ISeriesMarkInfo;
        overlap?: import("@visactor/vchart").ISeriesMarkInfo;
        overlapLabel?: import("@visactor/vchart").ISeriesMarkInfo;
    };
    static readonly builtInTheme: {
        pie3d: import("./interface").IPie3dSeriesTheme;
    };
    static readonly transformerConstructor: any;
    readonly transformerConstructor: any;
    protected _angle3d: number;
    setAttrFromSpec(): void;
    initMarkStyle(): void;
    initLabelMarkStyle(textMark: ITextMark, spec?: any): void;
}
export declare const registerPie3dSeries: () => void;
