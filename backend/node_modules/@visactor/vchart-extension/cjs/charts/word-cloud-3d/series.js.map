{"version":3,"sources":["../src/charts/word-cloud-3d/series.ts"],"names":[],"mappings":"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","file":"series.js","sourcesContent":["import type { IWordCloud3dSeriesSpec } from './interface';\nimport { registerWordCloud3dAnimation } from './animation';\nimport { SeriesType3dEnum } from '../3d/enum';\nimport type { Datum, ITextMark } from '@visactor/vchart';\nimport {\n  animationConfig,\n  AttributeLevel,\n  BaseWordCloudSeries,\n  Factory,\n  registerTextMark,\n  SeriesMarkNameEnum,\n  userAnimationConfig\n} from '@visactor/vchart';\nimport { wordCloud3d } from './theme';\n\nexport class WordCloud3dSeries<\n  T extends IWordCloud3dSeriesSpec = IWordCloud3dSeriesSpec\n> extends BaseWordCloudSeries<T> {\n  static readonly type: string = SeriesType3dEnum.wordCloud3d;\n  type = SeriesType3dEnum.wordCloud3d;\n  static readonly builtInTheme = { wordCloud3d };\n\n  protected _wordCloudTransformOption() {\n    return {\n      ...super._wordCloudTransformOption(),\n      postProjection: this._spec.postProjection ?? 'StereographicProjection',\n      depth_3d: this._spec.depth_3d\n    };\n  }\n\n  protected _wordCloudShapeTransformOption() {\n    return {\n      ...super._wordCloudShapeTransformOption(),\n      postProjection: this._spec.postProjection ?? 'StereographicProjection',\n      depth_3d: this._spec.depth_3d\n    };\n  }\n\n  initMark(): void {\n    this._wordMark = this._createMark(\n      BaseWordCloudSeries.mark.word,\n      {\n        groupKey: this._seriesField,\n        isSeriesMark: true\n      },\n      {\n        support3d: true\n      }\n    ) as ITextMark;\n  }\n\n  initMarkStyle() {\n    super.initMarkStyle();\n    const wordMark = this._wordMark;\n    if (wordMark) {\n      this.setMarkStyle(\n        wordMark,\n        {\n          z: (datum: Datum) => datum.z ?? 0\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initAnimation() {\n    const padding = this._padding ?? {};\n    if (this._wordMark) {\n      this._wordMark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('wordCloud3d')?.(() => {\n            const stage = this.getCompiler().getStage();\n\n            const width = stage.width - padding.left || 0 - padding.right || 0;\n            const height = stage.height - padding.top || 0 - padding.bottom || 0;\n            const r = Math.max(width, height) / 2;\n            return {\n              center: { x: r, y: r, z: this._spec.depth_3d ?? r },\n              r\n            };\n          }),\n          userAnimationConfig(SeriesMarkNameEnum.word, this._spec, this._markAttributeContext)\n        )\n      );\n    }\n  }\n}\n\nexport const registerWordCloud3dSeries = () => {\n  registerTextMark();\n  registerWordCloud3dAnimation();\n  Factory.registerSeries(WordCloud3dSeries.type, WordCloud3dSeries);\n};\n\nexport const registerWordCloudShape3dSeries = () => {\n  registerWordCloud3dSeries();\n};\n"]}