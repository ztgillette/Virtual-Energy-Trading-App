import type { IFormatMethod, IMarkSpec, IPathMarkSpec, IFunnelChartSpec, ISymbolMarkSpec, ITextMarkSpec, IFunnelSeriesSpec, IRectMarkSpec } from '@visactor/vchart';
export interface Arrow {
    from: number;
    to: number;
    position?: 'left' | 'right';
    distance?: number;
    text?: string;
}
export interface IConversionFunnelSpec {
    conversionArrow?: {
        arrows?: Arrow[];
        margin?: number;
        line?: IMarkSpec<Omit<IPathMarkSpec, 'points' | 'fill'>>;
        symbol?: IMarkSpec<ISymbolMarkSpec>;
        text?: IMarkSpec<ITextMarkSpec> & {
            formatMethod?: IFormatMethod<[text: string, params?: {
                from: any;
                to: any;
                arrow: Arrow;
            }]>;
            textMargin?: number;
        };
    };
    funnelBackground?: IMarkSpec<IRectMarkSpec>;
}
export interface IConversionFunnelSeriesSpecBase extends IFunnelSeriesSpec, IConversionFunnelSpec {
}
export interface IConversionFunnelChartSpecBase extends IFunnelChartSpec, IConversionFunnelSpec {
}
export interface IConversionFunnelSeriesSpec extends Omit<IConversionFunnelSeriesSpecBase, 'type' | 'series'> {
    type: 'conversionFunnel';
}
export interface IConversionFunnelChartSpec extends Omit<IConversionFunnelChartSpecBase, 'type' | 'series'> {
    type: 'conversionFunnel';
}
