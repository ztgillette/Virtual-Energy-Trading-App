import type { AdaptiveSpec, SeriesMarkMap } from '@visactor/vchart';
import { BarSeries } from '@visactor/vchart';
import type { IBar3dSeriesSpec } from './interface';
import { MarkType3dEnum, SeriesMark3dNameEnum, SeriesType3dEnum } from '../3d/enum';
export declare class Bar3dSeries<T extends IBar3dSeriesSpec = IBar3dSeriesSpec> extends BarSeries<AdaptiveSpec<T, 'type'>> {
    static readonly type: string;
    type: SeriesType3dEnum;
    static readonly mark: SeriesMarkMap;
    static readonly builtInTheme: {
        bar3d: import("./interface").IBar3dSeriesTheme;
    };
    protected _barMarkName: SeriesMark3dNameEnum;
    protected _barMarkType: MarkType3dEnum;
    static readonly transformerConstructor: any;
    readonly transformerConstructor: any;
}
export declare const registerBar3dSeries: () => void;
