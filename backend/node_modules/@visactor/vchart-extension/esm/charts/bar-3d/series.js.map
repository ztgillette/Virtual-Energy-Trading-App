{"version":3,"sources":["../src/charts/bar-3d/series.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,MAAM,kBAAkB,CAAC;AAE9G,OAAO,EAAwC,gBAAgB,EAAE,MAAM,YAAY,CAAC;AACpF,OAAO,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AAC7C,OAAO,EAAE,0BAA0B,EAAE,MAAM,2BAA2B,CAAC;AACvE,OAAO,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,WAA2D,SAAQ,SAAkC;IAAlH;;QAEE,SAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC;QAKpB,iBAAY,WAAoD;QAChE,iBAAY,YAAyC;QAGtD,2BAAsB,GAAG,0BAAiC,CAAC;IACtE,CAAC;;AAXiB,gBAAI,GAAW,gBAAgB,CAAC,KAAK,CAAC;AAGtC,gBAAI,GAAkB,eAAe,CAAC;AACtC,wBAAY,GAAG,EAAE,KAAK,EAAE,CAAC;AAKzB,kCAAsB,GAAG,0BAAiC,CAAC;AAI7E,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,sBAAsB,EAAE,CAAC;IACzB,kBAAkB,EAAE,CAAC;IACrB,yBAAyB,EAAE,CAAC;IAC5B,2BAA2B,EAAE,CAAC;IAC9B,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACxD,CAAC,CAAC","file":"series.js","sourcesContent":["import type { AdaptiveSpec, SeriesMarkMap } from '@visactor/vchart';\nimport { BarSeries, Factory, registerCartesianBandAxis, registerCartesianLinearAxis } from '@visactor/vchart';\nimport type { IBar3dSeriesSpec } from './interface';\nimport { MarkType3dEnum, SeriesMark3dNameEnum, SeriesType3dEnum } from '../3d/enum';\nimport { bar3dSeriesMark } from './constant';\nimport { Bar3dSeriesSpecTransformer } from './series-spec-transformer';\nimport { registerBar3dAnimation } from './animation';\nimport { registerRect3dMark } from '../3d/rect-3d';\nimport { bar3d } from './theme';\n\nexport class Bar3dSeries<T extends IBar3dSeriesSpec = IBar3dSeriesSpec> extends BarSeries<AdaptiveSpec<T, 'type'>> {\n  static readonly type: string = SeriesType3dEnum.bar3d;\n  type = SeriesType3dEnum.bar3d;\n\n  static readonly mark: SeriesMarkMap = bar3dSeriesMark;\n  static readonly builtInTheme = { bar3d };\n\n  protected _barMarkName: SeriesMark3dNameEnum = SeriesMark3dNameEnum.bar3d;\n  protected _barMarkType: MarkType3dEnum = MarkType3dEnum.rect3d;\n\n  static readonly transformerConstructor = Bar3dSeriesSpecTransformer as any;\n  readonly transformerConstructor = Bar3dSeriesSpecTransformer as any;\n}\n\nexport const registerBar3dSeries = () => {\n  registerBar3dAnimation();\n  registerRect3dMark();\n  registerCartesianBandAxis();\n  registerCartesianLinearAxis();\n  Factory.registerSeries(Bar3dSeries.type, Bar3dSeries);\n};\n"]}