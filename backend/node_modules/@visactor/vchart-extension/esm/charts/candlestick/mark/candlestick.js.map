{"version":3,"sources":["../src/charts/candlestick/mark/candlestick.ts"],"names":[],"mappings":"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","file":"candlestick.js","sourcesContent":["import { registerLine, registerRect } from '@visactor/vrender-kits';\nimport { GlyphMark, registerGlyphMark, IMarkRaw, IMarkStyle } from '@visactor/vchart';\nimport {\n  createLine,\n  createRect,\n  type IGlyph,\n  type ILineGraphicAttribute,\n  IRectGraphicAttribute\n} from '@visactor/vrender-core';\nimport { Factory, Datum } from '@visactor/vchart';\nimport type { ICandlestickMarkSpec } from './interface';\n\nexport type ICandlestickMark = IMarkRaw<ICandlestickMarkSpec>;\nexport const CANDLESTICK_MARK_TYPE = 'candlestick';\n\nexport class CandlestickMark extends GlyphMark<ICandlestickMarkSpec> implements ICandlestickMark {\n  static readonly type = CANDLESTICK_MARK_TYPE;\n  readonly type = CandlestickMark.type;\n\n  setGlyphConfig(cfg: any): void {\n    super.setGlyphConfig(cfg);\n    this._subMarks = {\n      line: { type: 'line', defaultAttributes: { x: 0, y: 0 } },\n      box: { type: 'rect' }\n    };\n    this._positionChannels = ['x', 'boxWidth', 'open', 'close', 'high', 'low'];\n    this._channelEncoder = null;\n    this._positionEncoder = (glyphAttrs: any, datum: Datum, g: IGlyph) => {\n      const {\n        x = g.attribute.x,\n        boxWidth = (g.attribute as any).boxWidth,\n        open = (g.attribute as any).open,\n        close = (g.attribute as any).close,\n        low = (g.attribute as any).low,\n        high = (g.attribute as any).high\n      } = glyphAttrs;\n      const attributes: any = {};\n      attributes.line = {\n        points: [\n          {\n            x: x,\n            y: low\n          },\n          {\n            x: x,\n            y: high\n          }\n        ]\n      };\n      attributes.box = {\n        x: x - boxWidth / 2,\n        x1: x + boxWidth / 2,\n        y: Math.min(open, close),\n        y1: Math.max(open, close),\n        // 开盘收盘相同时绘制水平线\n        drawStrokeWhenZeroWH: true\n      };\n      return attributes;\n    };\n  }\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<ICandlestickMarkSpec> = {\n      ...super._getDefaultStyle()\n    };\n    return defaultStyle;\n  }\n}\n\nexport const registerCandlestickMark = () => {\n  registerGlyphMark();\n  registerLine();\n  registerRect();\n  Factory.registerGraphicComponent('line', (attrs: ILineGraphicAttribute) => createLine(attrs));\n  Factory.registerGraphicComponent('rect', (attrs: IRectGraphicAttribute) => createRect(attrs));\n  Factory.registerMark(CandlestickMark.type, CandlestickMark);\n};\n"]}