import { registerLine, registerRect } from "@visactor/vrender-kits";

import { GlyphMark, registerGlyphMark } from "@visactor/vchart";

import { createLine, createRect } from "@visactor/vrender-core";

import { Factory } from "@visactor/vchart";

export const CANDLESTICK_MARK_TYPE = "candlestick";

export class CandlestickMark extends GlyphMark {
    constructor() {
        super(...arguments), this.type = CandlestickMark.type;
    }
    setGlyphConfig(cfg) {
        super.setGlyphConfig(cfg), this._subMarks = {
            line: {
                type: "line",
                defaultAttributes: {
                    x: 0,
                    y: 0
                }
            },
            box: {
                type: "rect"
            }
        }, this._positionChannels = [ "x", "boxWidth", "open", "close", "high", "low" ], 
        this._channelEncoder = null, this._positionEncoder = (glyphAttrs, datum, g) => {
            const {x: x = g.attribute.x, boxWidth: boxWidth = g.attribute.boxWidth, open: open = g.attribute.open, close: close = g.attribute.close, low: low = g.attribute.low, high: high = g.attribute.high} = glyphAttrs, attributes = {};
            return attributes.line = {
                points: [ {
                    x: x,
                    y: low
                }, {
                    x: x,
                    y: high
                } ]
            }, attributes.box = {
                x: x - boxWidth / 2,
                x1: x + boxWidth / 2,
                y: Math.min(open, close),
                y1: Math.max(open, close),
                drawStrokeWhenZeroWH: !0
            }, attributes;
        };
    }
    _getDefaultStyle() {
        return Object.assign({}, super._getDefaultStyle());
    }
}

CandlestickMark.type = "candlestick";

export const registerCandlestickMark = () => {
    registerGlyphMark(), registerLine(), registerRect(), Factory.registerGraphicComponent("line", (attrs => createLine(attrs))), 
    Factory.registerGraphicComponent("rect", (attrs => createRect(attrs))), Factory.registerMark(CandlestickMark.type, CandlestickMark);
};
//# sourceMappingURL=candlestick.js.map
