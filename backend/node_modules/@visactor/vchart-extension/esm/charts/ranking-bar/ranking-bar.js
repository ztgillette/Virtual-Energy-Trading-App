import { VChart, BaseChart } from "@visactor/vchart";

import { RankingBarChartSpecTransformer } from "./ranking-bar-transformer";

export class RankingBar extends BaseChart {
    constructor() {
        super(...arguments), this.type = "rankingBar", this.transformerConstructor = RankingBarChartSpecTransformer;
    }
    init() {
        this.isValid() && super.init();
    }
    isValid() {
        var _a, _b, _c, _d;
        const {xField: xField, yField: yField, timeField: timeField, data: data} = this._spec;
        return xField && yField && timeField ? !!data || (null === (_d = (_c = this._option).onError) || void 0 === _d || _d.call(_c, "Data is required"), 
        !1) : (null === (_b = (_a = this._option).onError) || void 0 === _b || _b.call(_a, "Missing Required Config: `xField`, `yField`, `timeField` "), 
        !1);
    }
}

RankingBar.type = "rankingBar", RankingBar.view = "singleDefault", RankingBar.transformerConstructor = RankingBarChartSpecTransformer;

export const registerRankingBarChart = option => {
    const vchartConstructor = (null == option ? void 0 : option.VChart) || VChart;
    vchartConstructor && vchartConstructor.useChart([ RankingBar ]);
};
//# sourceMappingURL=ranking-bar.js.map
