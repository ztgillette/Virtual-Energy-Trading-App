{"version":3,"sources":["../src/charts/sequence-scatter-link/sequence-scatter-link-transformer.ts"],"names":[],"mappings":"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","file":"sequence-scatter-link-transformer.js","sourcesContent":["import { Datum } from '@visactor/vchart/src/typings';\nimport type { ISequenceScatterLinkSpec } from './interface';\nimport { CommonChartSpecTransformer } from '@visactor/vchart';\n\nconst DATA_KEY = 'dataKey';\n\n/**\n * convert ISequenceScatterLinkSpec to CommonSpec\n */\nexport class SequenceScatterLinkChartSpecTransformer extends CommonChartSpecTransformer<any> {\n  transformSpec(spec: any): void {\n    super.transformSpec(spec);\n    const dataSpecs = processSequenceData(spec as unknown as ISequenceScatterLinkSpec);\n    const showTooltip = spec.taskType === 'neighborhood' ? false : true;\n\n    spec.type = 'common';\n\n    // data\n    spec.dataKey = DATA_KEY;\n    spec.data = dataSpecs[0].data;\n\n    // series: background, line, scatter\n    spec.series = [\n      {\n        id: 'background-series',\n        type: 'area',\n        dataId: 'background',\n        interactive: false,\n        persent: true,\n        xField: 'x',\n        yField: 'y',\n        point: {\n          visible: false\n        },\n        line: {\n          visible: false\n        },\n        area: {\n          visible: true,\n          interactive: false,\n          style: {\n            background: (datum: { iter: number }) => {\n              if (spec.taskType === 'neighborhood') {\n                return '';\n              }\n              return `https://lf9-dp-fe-cms-tos.byteorg.com/obj/bit-cloud/sequence-scatter-bgimg-2/${datum.iter}.png`;\n            },\n            fill: 'transparent',\n            fillOpacity: 0.5\n          }\n        },\n        hover: {\n          enable: false\n        },\n        select: {\n          enable: false\n        }\n      },\n      {\n        id: 'line-series',\n        type: 'line',\n        dataId: 'endpoints',\n        xField: 'x',\n        yField: 'y',\n        seriesField: 'edgeId', // a line will be drawn between endpoints with the same edgeId.\n        animation: true,\n        point: {\n          visible: false\n        },\n        line: {\n          visible: true,\n          style: {\n            stroke: (datum: { color: string }) => {\n              return datum.color;\n            },\n            lineDash: (datum: { type: string }) => {\n              if (datum.type === 'same_type') {\n                return [0, 0];\n              } else {\n                return [3, 2];\n              }\n            },\n            lineWidth: 0.8,\n            strokeOpacity: 0.6\n          }\n        }\n      },\n      {\n        id: 'scatter-series',\n        type: 'scatter',\n        dataId: 'nodes',\n        xField: spec.xField,\n        yField: spec.yField,\n        seriesField: 'label',\n        point: {\n          state: {\n            hover: {\n              scaleX: 1.5,\n              scaleY: 1.5,\n              fillOpacity: 1\n            },\n            hover_reverse: {\n              scaleX: 1,\n              scaleY: 1,\n              fillOpacity: 0.3\n            }\n          },\n          style: {\n            size: () => {\n              return spec.taskType === 'neighborhood' ? 6 : 4;\n            },\n            fill: (datum: { label: string }) => {\n              const color = spec.labelColor[datum.label] ?? 'gray';\n              return color;\n            },\n            fillOpacity: (datum: { confidence: number }) => {\n              return datum.confidence;\n            }\n          }\n        },\n        label: {\n          visible: true,\n          style: {\n            visible: () => {\n              return spec.taskType == 'neighborhood';\n            },\n            type: 'text',\n            fontFamily: 'Console',\n            fontStyle: 'italic',\n            fontSize: 12,\n            fill: 'black',\n            fillOpacity: 0.6,\n            text: (datum: Datum) => {\n              return datum.id;\n            }\n          }\n        }\n      }\n    ];\n\n    // player\n    if (spec.player) {\n      spec.player = {\n        ...spec.player,\n        specs: dataSpecs\n      };\n      spec.animationAppear = {\n        duration: spec.player?.duration ?? 2000,\n        easing: 'linear'\n      };\n\n      spec.animationUpdate = {\n        duration: spec.player?.duration ?? 2000,\n        easing: 'linear'\n      };\n    }\n\n    // axes\n    spec.axes = [\n      {\n        orient: 'left',\n        type: 'linear',\n        inverse: true,\n        min: spec.scope[1],\n        max: spec.scope[3]\n      },\n      {\n        orient: 'bottom',\n        type: 'linear',\n        min: spec.scope[0],\n        max: spec.scope[2]\n      }\n    ];\n\n    // iteration label\n    spec.customMark = [\n      {\n        type: 'text',\n        dataId: 'iter',\n        style: {\n          x: 50,\n          y: () => 10,\n          textBaseline: 'top',\n          textAlign: 'left',\n          fontSize: 100,\n          fontWeight: 'bolder',\n          fill: 'black',\n          fillOpacity: 0.2,\n          ...spec.infoLabel?.style\n        }\n      }\n    ];\n\n    // legends\n    (spec.legends = [\n      {\n        seriesId: 'scatter-series',\n        visible: true,\n        orient: 'right',\n        position: 'middle',\n        data: (items: any[]) => {\n          return items.map(item => {\n            item.shape.outerBorder = {\n              stroke: item.shape.fill,\n              distance: 2,\n              lineWidth: 1\n            };\n            return item;\n          });\n        },\n        title: {\n          visible: true,\n          align: 'left',\n          textStyle: {\n            text: 'Classes',\n            fontFamily: 'Console',\n            fontSize: 18,\n            fontWeight: 'bold'\n          }\n        },\n        item: {\n          visible: true,\n          width: '8%',\n          value: {\n            alignRight: true,\n            style: {\n              fill: '#000',\n              fillOpacity: 1,\n              fontSize: 12\n            },\n            state: {\n              unselected: {\n                fill: '#d8d8d8'\n              }\n            }\n          }\n        }\n      }\n    ]),\n      // tooltip\n      (spec.tooltip = {\n        visible: showTooltip,\n        seriesId: 'scatter-series',\n        lockAfterClick: false,\n        activeType: 'mark',\n        trigger: 'hover',\n        mark: {\n          title: {\n            visible: true,\n            value: 'Info'\n          },\n          content: [\n            {\n              key: 'Label',\n              value: (datum: { label: string }) => {\n                return datum.label;\n              },\n              shapeType: 'circle',\n              shapeSize: 8\n            },\n            {\n              key: 'Prediction',\n              value: (datum: { prediction: string }) => {\n                return datum.prediction;\n              },\n              shapeType: 'circle',\n              shapeSize: 8,\n              shapeFill: (datum: { prediction: string }) => {\n                const color = spec.labelColor[datum.prediction] ?? 'gray';\n                return color;\n              }\n            },\n            {\n              key: 'Confidence',\n              value: (datum: { confidence: number }) => {\n                return datum.confidence.toFixed(2);\n              },\n              shapeType: 'square',\n              shapeSize: 8,\n              shapeFill: (datum: { label: string; prediction: string }) => {\n                return datum.label === datum.prediction ? 'green' : 'red';\n              }\n            }\n          ]\n        },\n        style: {\n          panel: {\n            padding: { top: 10, bottom: 15, left: 10, right: 10 },\n            backgroundColor: '#fff',\n            border: {\n              color: '#eee',\n              width: 1,\n              radius: 10\n            }\n          },\n          titleLabel: {\n            fontSize: 20,\n            fontFamily: 'Times New Roman',\n            fill: 'brown',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            lineHeight: 24\n          },\n          keyLabel: {\n            fontSize: 16,\n            fontFamily: 'Times New Roman',\n            fill: 'black',\n            textAlign: 'center',\n            lineHeight: 15,\n            spacing: 10\n          },\n          valueLabel: {\n            fontSize: 14,\n            fill: 'black',\n            textAlign: 'center',\n            lineHeight: 15,\n            spacing: 10\n          }\n        }\n      });\n\n    // datazoom\n    spec.dataZoom = [\n      {\n        visible: false,\n        orient: 'left',\n        filterMode: 'axis',\n        showDetail: false,\n        roamZoom: {\n          enable: true,\n          focus: true,\n          rate: 3\n        },\n        roamDrag: {\n          enable: true,\n          reverse: true,\n          rate: 1\n        }\n      },\n      {\n        visible: false,\n        orient: 'bottom',\n        filterMode: 'axis',\n        showDetail: false,\n        roamZoom: {\n          enable: true,\n          focus: true,\n          rate: 3\n        },\n        roamDrag: {\n          enable: true,\n          reverse: true,\n          rate: 1\n        }\n      }\n    ];\n\n    super.transformSpec(spec);\n  }\n}\n\n/**\n * convert ISequenceScatterLinkData to IScatterData\n */\nexport function processSequenceData(spec: ISequenceScatterLinkSpec) {\n  const result: any[] = [];\n  Object.keys(spec.data).forEach(iter => {\n    const nodes = spec.data[iter].nodes;\n    result.push({\n      data: [\n        {\n          id: 'nodes',\n          values: nodes.map((d, i) => {\n            return { ...d, [DATA_KEY]: i };\n          })\n        },\n        {\n          id: 'endpoints',\n          values: [] // dynamically filled in events\n        },\n        {\n          id: 'iter',\n          values: [\n            {\n              iter\n            }\n          ]\n        },\n        {\n          id: 'background',\n          values: [\n            { iter: iter, x: spec.scope[0], y: spec.scope[1] },\n            { iter: iter, x: spec.scope[0], y: spec.scope[3] },\n            { iter: iter, x: spec.scope[2], y: spec.scope[3] },\n            { iter: iter, x: spec.scope[2], y: spec.scope[1] },\n            { iter: iter, x: spec.scope[0], y: spec.scope[1] }\n          ]\n        }\n      ]\n    });\n  });\n  return result;\n}\n"]}