{"version":3,"sources":["../src/charts/sequence-scatter-link/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import { IPlayerSpec } from '@visactor/vchart';\nimport { ITextGraphicAttribute } from '@visactor/vrender-core';\n\n/**\n * 原始数据，包括坐标、邻居、预测结果\n */\nexport type OriginalData = {\n  [key: string]: {\n    projection: number[][];\n    intra_similarity?: number[][];\n    inter_similarity?: number[][];\n    prediction?: number[];\n    confidence?: number[];\n  };\n};\n\n/**\n * 训练信息，包括标签、标签颜色、标签文本\n */\nexport type TrainingInfo = {\n  label_text: string[];\n  label_color: number[][];\n  label_index: number[];\n};\n\n/**\n * 轮次点数据\n */\nexport type IterationNodesData = {\n  id: number; // unique identification of a point\n  x: number;\n  y: number;\n  label: string;\n  prediction: string;\n  confidence: number;\n}[];\n\n/**\n * 轮次边数据\n */\nexport type IterationEdgesData = {\n  id: number; // unique identification of an edge\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n  type: string;\n  color: string;\n}[];\n\n/**\n * 边的端点，一条边数据构造两个端点，edgeId相同的端点之间将绘制一条线段\n */\nexport type Endpoint = {\n  edgeId: number; // id of the edge that the endpoint belongs to\n  x: number;\n  y: number;\n  type: string;\n  color: string;\n};\n\nexport type ISequenceScatterLinkData = {\n  /**\n   * key: 迭代信息\n   * value: 每个迭代的数据\n   */\n  [Iteration: string]: {\n    /**\n     * 节点数据\n     */\n    nodes: IterationNodesData;\n    /**\n     * 边数据\n     */\n    edges: IterationEdgesData;\n  };\n};\n\nexport interface ISequenceScatterLinkSpec {\n  /**\n   * 图表类型\n   */\n  type: 'sequenceScatterLink';\n  /**\n   * 任务类型\n   */\n  taskType: string;\n  /**\n   * 数据\n   */\n  data: ISequenceScatterLinkData;\n  /**\n   * x轴字段\n   */\n  xField: string;\n  /**\n   * y轴字段\n   */\n  yField: string;\n  /**\n   * 播放器配置\n   */\n  player: Omit<IPlayerSpec, 'specs'>;\n  /**\n   * 文字标记（标记当前处于第几个迭代）\n   */\n  infoLabel: {\n    visible: boolean;\n    style: ITextGraphicAttribute;\n  };\n  /**\n   * 画布范围\n   */\n  scope: [number, number, number, number];\n}\n"]}