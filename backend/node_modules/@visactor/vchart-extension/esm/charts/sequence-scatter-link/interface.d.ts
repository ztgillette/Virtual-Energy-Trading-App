import { IPlayerSpec } from '@visactor/vchart';
import { ITextGraphicAttribute } from '@visactor/vrender-core';
export type OriginalData = {
    [key: string]: {
        projection: number[][];
        intra_similarity?: number[][];
        inter_similarity?: number[][];
        prediction?: number[];
        confidence?: number[];
    };
};
export type TrainingInfo = {
    label_text: string[];
    label_color: number[][];
    label_index: number[];
};
export type IterationNodesData = {
    id: number;
    x: number;
    y: number;
    label: string;
    prediction: string;
    confidence: number;
}[];
export type IterationEdgesData = {
    id: number;
    x0: number;
    y0: number;
    x1: number;
    y1: number;
    type: string;
    color: string;
}[];
export type Endpoint = {
    edgeId: number;
    x: number;
    y: number;
    type: string;
    color: string;
};
export type ISequenceScatterLinkData = {
    [Iteration: string]: {
        nodes: IterationNodesData;
        edges: IterationEdgesData;
    };
};
export interface ISequenceScatterLinkSpec {
    type: 'sequenceScatterLink';
    taskType: string;
    data: ISequenceScatterLinkData;
    xField: string;
    yField: string;
    player: Omit<IPlayerSpec, 'specs'>;
    infoLabel: {
        visible: boolean;
        style: ITextGraphicAttribute;
    };
    scope: [number, number, number, number];
}
