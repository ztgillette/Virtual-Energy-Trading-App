import { VChart, BaseChart, ScatterChart } from "@visactor/vchart";

import { SequenceScatterPixelChartSpecTransformer } from "./sequence-scatter-pixel-transformer";

export class SequenceScatterPixel extends BaseChart {
    constructor() {
        super(...arguments), this.type = "sequenceScatterPixel", this.transformerConstructor = SequenceScatterPixelChartSpecTransformer;
    }
    init() {
        this.isValid() && super.init();
    }
    isValid() {
        var _a, _b, _c, _d;
        const {xField: xField, yField: yField, data: data} = this._spec;
        return xField && yField ? !!data || (null === (_d = (_c = this._option).onError) || void 0 === _d || _d.call(_c, "Data is required"), 
        !1) : (null === (_b = (_a = this._option).onError) || void 0 === _b || _b.call(_a, "Missing Required Config: `xField`, `yField` "), 
        !1);
    }
}

SequenceScatterPixel.type = "sequenceScatterPixel", SequenceScatterPixel.view = "singleDefault", 
SequenceScatterPixel.transformerConstructor = SequenceScatterPixelChartSpecTransformer;

export const registerSequenceScatterPixel = option => {
    const vchartConstructor = (null == option ? void 0 : option.VChart) || VChart;
    vchartConstructor && vchartConstructor.useChart([ SequenceScatterPixel, ScatterChart ]);
};
//# sourceMappingURL=sequence-scatter-pixel.js.map
