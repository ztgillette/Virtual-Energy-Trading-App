import { BaseHistogramChart, Factory, getCartesianCrosshairRect, getCartesianDimensionInfo, getDimensionInfoByValue, HistogramChartSpecTransformer, registerDimensionEvents, registerDimensionHover, registerDimensionTooltipProcessor, registerGroupTooltipProcessor, registerMarkTooltipProcessor } from "@visactor/vchart";

import { SeriesType3dEnum } from "../3d/enum";

import { register3DPlugin } from "../3d/plugin";

import { registerBar3dSeries } from "../bar-3d/series";

import { registerLayout3d } from "../3d/layout";

export class Histogram3dChart extends BaseHistogramChart {
    constructor() {
        super(...arguments), this.transformerConstructor = HistogramChartSpecTransformer, 
        this.type = "histogram3d", this.seriesType = SeriesType3dEnum.bar3d;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;
    }
}

Histogram3dChart.type = "histogram3d", Histogram3dChart.seriesType = SeriesType3dEnum.bar3d, 
Histogram3dChart.transformerConstructor = HistogramChartSpecTransformer;

export const registerHistogram3dChart = () => {
    registerGroupTooltipProcessor(), registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), 
    registerDimensionEvents(), registerDimensionHover(), register3DPlugin(), registerLayout3d(), 
    registerBar3dSeries(), Factory.registerChart(Histogram3dChart.type, Histogram3dChart);
};
//# sourceMappingURL=chart.js.map