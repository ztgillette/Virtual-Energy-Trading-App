import type { EasingType } from '@visactor/vrender-core';
import { ACustomAnimate } from '@visactor/vrender-animate';
import type { IAnimationConfig } from '@visactor/vchart';
export declare class AxialRotateAnimation extends ACustomAnimate<{}> {
    valid: boolean;
    private _rotations;
    private _scaleX;
    constructor(from: any, to: any, duration: number, easing: EasingType, params: {
        rotation?: number;
    });
    onBind(): void;
    onUpdate(end: boolean, ratio: number, out: Record<string, any>): void;
}
export interface IImageCloudAnimationParams {
    height: () => number;
    center: () => {
        x: number;
        y: number;
    };
}
export type ImageCloudAppearPresetType = 'fadeIn' | 'scaleIn' | 'growIn' | 'axialRotate';
export declare function imageCloudPresetAnimation(params: IImageCloudAnimationParams, preset: ImageCloudAppearPresetType): IAnimationConfig | IAnimationConfig[];
export declare const registerImageCloudAnimation: () => void;
