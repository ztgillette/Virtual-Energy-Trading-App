{"version":3,"sources":["../src/charts/range-column-3d/chart.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,yBAAyB,EACzB,yBAAyB,EACzB,uBAAuB,EACvB,uBAAuB,EACvB,sBAAsB,EACtB,iCAAiC,EACjC,4BAA4B,EAC7B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,iCAAiC,EAAE,MAAM,0BAA0B,CAAC;AAE7E,OAAO,EAAmB,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAChD,OAAO,EAAE,2BAA2B,EAAE,MAAM,UAAU,CAAC;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAEhD,MAAM,OAAO,kBAAgF,SAAQ,SAAY;IAAjH;;QAKW,2BAAsB,GAAG,iCAAiC,CAAC;QAC3D,SAAI,mBAAyC;QAC7C,eAAU,GAAW,gBAAgB,CAAC,aAAa,CAAC;IAS/D,CAAC;IAPW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,yBAAyB,CAAC;QAE/D,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;QAEpE,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,yBAAyB,CAAC;IACvE,CAAC;;AAde,uBAAI,mBAAyC;AAC7C,6BAAU,GAAW,gBAAgB,CAAC,aAAa,CAAC;AACpD,yCAAsB,GAAG,iCAAiC,CAAC;AAe7E,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAAG,EAAE;IAC7C,iCAAiC,EAAE,CAAC;IACpC,4BAA4B,EAAE,CAAC;IAC/B,uBAAuB,EAAE,CAAC;IAC1B,sBAAsB,EAAE,CAAC;IACzB,gBAAgB,EAAE,CAAC;IACnB,gBAAgB,EAAE,CAAC;IACnB,2BAA2B,EAAE,CAAC;IAC9B,OAAO,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AACrE,CAAC,CAAC","file":"chart.js","sourcesContent":["import {\n  BaseChart,\n  Factory,\n  getCartesianCrosshairRect,\n  getCartesianDimensionInfo,\n  getDimensionInfoByValue,\n  registerDimensionEvents,\n  registerDimensionHover,\n  registerDimensionTooltipProcessor,\n  registerMarkTooltipProcessor\n} from '@visactor/vchart';\nimport { RangeColumn3dChartSpecTransformer } from './chart-spec-transformer';\nimport type { IRangeColumn3dChartSpec } from './interface';\nimport { ChartType3dEnum, SeriesType3dEnum } from '../3d/enum';\nimport { register3DPlugin } from '../3d/plugin';\nimport { registerRangeColumn3dSeries } from './series';\nimport { registerLayout3d } from '../3d/layout';\n\nexport class RangeColumn3dChart<T extends IRangeColumn3dChartSpec = IRangeColumn3dChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartType3dEnum.rangeColumn3d;\n  static readonly seriesType: string = SeriesType3dEnum.rangeColumn3d;\n  static readonly transformerConstructor = RangeColumn3dChartSpecTransformer;\n  // @ts-ignore\n  readonly transformerConstructor = RangeColumn3dChartSpecTransformer;\n  readonly type: string = ChartType3dEnum.rangeColumn3d;\n  readonly seriesType: string = SeriesType3dEnum.rangeColumn3d;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getCartesianDimensionInfo;\n\n    this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue;\n\n    this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;\n  }\n}\n\nexport const registerRangeColumn3dChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  register3DPlugin();\n  registerLayout3d();\n  registerRangeColumn3dSeries();\n  Factory.registerChart(RangeColumn3dChart.type, RangeColumn3dChart);\n};\n"]}