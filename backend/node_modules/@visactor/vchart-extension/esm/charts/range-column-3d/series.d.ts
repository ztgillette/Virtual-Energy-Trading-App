import type { AdaptiveSpec } from '@visactor/vchart';
import { RangeColumnSeries } from '@visactor/vchart';
import type { IRangeColumn3dSeriesSpec } from './interface';
import { MarkType3dEnum, SeriesType3dEnum } from '../3d/enum';
export declare const DefaultBandWidth = 6;
export declare class RangeColumn3dSeries<T extends IRangeColumn3dSeriesSpec = IRangeColumn3dSeriesSpec> extends RangeColumnSeries<AdaptiveSpec<T, 'type'>> {
    static readonly type: string;
    type: SeriesType3dEnum;
    protected _barMarkType: MarkType3dEnum;
    protected _barName: string;
    static readonly mark: {
        minLabel: {
            name: import("@visactor/vchart").SeriesMarkNameEnum;
            type: import("@visactor/vchart").MarkTypeEnum;
        };
        maxLabel: {
            name: import("@visactor/vchart").SeriesMarkNameEnum;
            type: import("@visactor/vchart").MarkTypeEnum;
        };
        label: {
            name: import("@visactor/vchart").SeriesMarkNameEnum;
            type: import("@visactor/vchart").MarkTypeEnum;
        };
        bar3d: {
            name: import("../3d/enum").SeriesMark3dNameEnum;
            type: MarkType3dEnum;
        };
    };
}
export declare const registerRangeColumn3dSeries: () => void;
