import { BaseChart, Factory, getCartesianCrosshairRect, getCartesianDimensionInfo, getDimensionInfoByValue, registerDimensionEvents, registerDimensionHover, registerDimensionTooltipProcessor, registerMarkTooltipProcessor } from "@visactor/vchart";

import { RangeColumn3dChartSpecTransformer } from "./chart-spec-transformer";

import { SeriesType3dEnum } from "../3d/enum";

import { register3DPlugin } from "../3d/plugin";

import { registerRangeColumn3dSeries } from "./series";

import { registerLayout3d } from "../3d/layout";

export class RangeColumn3dChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = RangeColumn3dChartSpecTransformer, 
        this.type = "rangeColumn3d", this.seriesType = SeriesType3dEnum.rangeColumn3d;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;
    }
}

RangeColumn3dChart.type = "rangeColumn3d", RangeColumn3dChart.seriesType = SeriesType3dEnum.rangeColumn3d, 
RangeColumn3dChart.transformerConstructor = RangeColumn3dChartSpecTransformer;

export const registerRangeColumn3dChart = () => {
    registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), registerDimensionEvents(), 
    registerDimensionHover(), register3DPlugin(), registerLayout3d(), registerRangeColumn3dSeries(), 
    Factory.registerChart(RangeColumn3dChart.type, RangeColumn3dChart);
};
//# sourceMappingURL=chart.js.map
