import { ElementHighlight, Factory } from "@visactor/vchart";

import { isNil } from "@visactor/vutils";

const type = "element-highlight-by-graphic-name";

export class ElementHighlightByGraphicName extends ElementHighlight {
    constructor() {
        super(...arguments), this.type = type, this.handleStart = e => {
            if (e && e.item && this.isGraphicInMark(e.item)) {
                if (this.options.shouldStart ? this.options.shouldStart(e) : this._filterByName(e)) {
                    const itemKey = this._parseTargetKey(e);
                    this.start(itemKey);
                }
            }
        }, this.handleReset = e => {
            e && e.item && this.isGraphicInMark(e.item) && this.reset();
        };
    }
    _filterByName(e) {
        var _a;
        return !!(null === (_a = null == e ? void 0 : e.node) || void 0 === _a ? void 0 : _a.name);
    }
    _parseTargetKey(e) {
        return e.node.name;
    }
    start(itemKey) {
        if (isNil(itemKey)) return;
        const {interaction: interaction, highlightState: highlightState, blurState: blurState} = this.options, statedGraphics = interaction.getStatedGraphics(this), newStatedGraphics = [];
        this.getMarks().forEach((m => {
            var _a;
            null === (_a = m.getGraphics()) || void 0 === _a || _a.forEach((g => {
                g.name === itemKey && newStatedGraphics.push(g);
            }));
        })), interaction.updateStates(this, newStatedGraphics, statedGraphics, highlightState, blurState), 
        interaction.setStatedGraphics(this, newStatedGraphics);
    }
    reset() {
        const {highlightState: highlightState, blurState: blurState, interaction: interaction} = this.options;
        interaction.clearAllStatesOfTrigger(this, highlightState, blurState), interaction.setStatedGraphics(this, []);
    }
}

ElementHighlightByGraphicName.type = type;

export const registerElementHighlightByGraphicName = () => {
    Factory.registerInteractionTrigger(ElementHighlightByGraphicName.type, ElementHighlightByGraphicName);
};
//# sourceMappingURL=element-highlight-by-graphic-name.js.map
