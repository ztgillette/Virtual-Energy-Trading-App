{"version":3,"sources":["../src/charts/ranking-list/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import { IMarkStateSpec, IMarkStateStyleSpec } from '@visactor/vchart';\nimport { StateValue } from '@visactor/vchart/src/compile/mark';\nimport { Datum } from '@visactor/vchart/src/typings/common';\nimport {\n  ITextGraphicAttribute,\n  ISymbolGraphicAttribute,\n  IRectGraphicAttribute,\n  EasingType\n} from '@visactor/vrender-core';\n\ntype IRankingListData = Datum[];\n\nexport interface IRankingListSpec {\n  /**\n   * 图表类型\n   */\n  type: 'rankingList';\n  /**\n   * 数据\n   */\n  data: IRankingListData;\n  /**\n   * x轴字段\n   */\n  xField: string;\n  /**\n   * y轴字段\n   */\n  yField: string;\n  width?: number;\n  height?: number;\n  /**\n   * 标签布局\n   * @default 'top'\n   */\n  labelLayout?: 'top' | 'bothEnd';\n  /**\n   * 柱样式\n   */\n  bar?: {\n    height?: number;\n    style?: IRectGraphicAttribute;\n    state?: Record<StateValue, IMarkStateSpec<IRectGraphicAttribute> | IMarkStateStyleSpec<IRectGraphicAttribute>>;\n  };\n  /**\n   * 柱图背景\n   */\n  barBackground?: {\n    visible?: boolean;\n    type?: string;\n    style?: ISymbolGraphicAttribute | IRectGraphicAttribute;\n    state?: Record<\n      StateValue,\n      | IMarkStateSpec<ISymbolGraphicAttribute | IRectGraphicAttribute>\n      | IMarkStateStyleSpec<ISymbolGraphicAttribute | IRectGraphicAttribute>\n    >;\n  };\n  /**\n   * 排名图标\n   */\n  rankingIcon?: {\n    visible?: boolean;\n    style?: ISymbolGraphicAttribute;\n    state?: Record<StateValue, IMarkStateSpec<ISymbolGraphicAttribute> | IMarkStateStyleSpec<ISymbolGraphicAttribute>>;\n  };\n  /**\n   * 装饰图元\n   */\n  decorateHaloIcons?: [\n    {\n      visible?: boolean;\n      // type?: 'circle' | 'square' | 'emptyCircle' | 'diamond' | 'halo' | 'concentric' | 'custom';\n      style?: ISymbolGraphicAttribute;\n      state?: Record<\n        StateValue,\n        IMarkStateSpec<ISymbolGraphicAttribute> | IMarkStateStyleSpec<ISymbolGraphicAttribute>\n      >;\n    }\n  ];\n  /**\n   * 排名序号\n   */\n  orderLabel?: {\n    visible?: boolean;\n    style?: ITextGraphicAttribute;\n    formatMethod?: (text: string, datum: Datum) => string;\n    state?: Record<StateValue, IMarkStateSpec<ITextGraphicAttribute> | IMarkStateStyleSpec<ITextGraphicAttribute>>;\n  };\n  /**\n   * 名称标签(yField对应的标签)\n   */\n  nameLabel?: {\n    visible?: boolean;\n    style?: ITextGraphicAttribute;\n    formatMethod?: (text: string, datum: Datum) => string;\n    state?: Record<StateValue, IMarkStateSpec<ITextGraphicAttribute> | IMarkStateStyleSpec<ITextGraphicAttribute>>;\n  };\n  /**\n   * 值标签(xField对应的标签)\n   */\n  valueLabel?: {\n    visible?: boolean;\n    style?: ITextGraphicAttribute;\n    formatMethod?: (text: string, datum: Datum) => string;\n    state?: Record<StateValue, IMarkStateSpec<ITextGraphicAttribute> | IMarkStateStyleSpec<ITextGraphicAttribute>>;\n  };\n  /**\n   * 每页行数\n   */\n  pageSize?: number;\n  /**\n   * 滚动行数\n   */\n  scrollSize?: number;\n  /**\n   * 排行榜动画效果的定义和普通图表不甚相同\n   * animationNormal动画代表由player控制其更新数据时执行的滚动效果的动画, 本质上是由普通图表的 update + enter + exit 共同构成的\n   */\n  /**\n   * 出现动画\n   */\n  animationAppear?: {\n    /**\n     * 是否开启\n     * @default true\n     */\n    enable?: boolean;\n    /**\n     * 动画类型\n     * @default 'grow'\n     * 'grow' 伸展\n     */\n    type?: 'grow';\n    /**\n     * 动画时长\n     */\n    duration?: number;\n    /**\n     * 动画缓动效果\n     */\n    easing?: EasingType;\n    /**\n     * @param spec 经过rankingList转化后的vchart原始spec\n     * @description 获取vchart原始spec, 并根据业务自行添加转换逻辑\n     */\n    customTransformSpec?: (spec: any) => void;\n  };\n\n  /**\n   * 更新动画\n   */\n  animationUpdate?: {\n    /**\n     * 是否开启\n     * @default true\n     */\n    enable?: boolean;\n    /**\n     * 动画类型\n     * @default 'grow'\n     * 'grow' 伸展\n     */\n    type?: 'grow';\n    /**\n     * 动画时长\n     */\n    duration?: number;\n    /**\n     * 动画缓动效果\n     */\n    easing?: EasingType;\n  };\n\n  /**\n   * 循环滚动动画\n   */\n  animationNormal?: {\n    // /**\n    //  * 是否开启\n    //  * @default true\n    //  */\n    // enable?: boolean;\n    // /**\n    //  * 动画类型\n    //  * @default 'scroll'\n    //  * 'scroll' 伸展\n    //  */\n    // type?: 'scroll';\n    /**\n     * 动画间隔\n     */\n    interval?: number;\n  };\n}\n"]}