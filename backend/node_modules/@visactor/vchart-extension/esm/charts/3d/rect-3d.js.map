{"version":3,"sources":["../src/charts/3d/rect-3d.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5E,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAEtD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAI5E,MAAM,OAAO,UAAW,SAAQ,QAAyB;IAI7C,gBAAgB;QACxB,MAAM,YAAY,mCACb,KAAK,CAAC,gBAAgB,EAAE,KAC3B,KAAK,EAAE,SAAS,EAChB,MAAM,EAAE,SAAS,EACjB,MAAM,EAAE,CAAC,GACV,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,gBAAgB;QACd,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,IAAY,EAAE,MAAW;QACnC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAjBb,SAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAmB9B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,MAAW;QACvB,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE5B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,CAAC;;AA3Be,eAAI,YAAyB;AA8B/C,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAClD,kBAAkB,EAAE,CAAC;IACrB,cAAc,EAAE,CAAC;IACjB,qBAAqB,EAAE,CAAC;IAExB,OAAO,CAAC,wBAAwB,WAAwB,YAAY,CAAC,CAAC;AACxE,CAAC,CAAC","file":"rect-3d.js","sourcesContent":["import { registerRect3d, registerShadowRoot } from '@visactor/vrender-kits';\nimport { createRect3d } from '@visactor/vrender-core';\nimport type { IMarkStyle } from '@visactor/vchart';\nimport { BaseMark, Factory, registerRectAnimation } from '@visactor/vchart';\nimport type { IRect3dMark, IRect3dMarkSpec } from './interface';\nimport { MarkType3dEnum } from './enum';\n\nexport class Rect3dMark extends BaseMark<IRect3dMarkSpec> implements IRect3dMark {\n  static readonly type = MarkType3dEnum.rect3d;\n  readonly type = Rect3dMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<IRect3dMarkSpec> = {\n      ...super._getDefaultStyle(),\n      width: undefined,\n      height: undefined,\n      length: 3\n    };\n    return defaultStyle;\n  }\n\n  setDataLabelType() {\n    return 'rect';\n  }\n\n  constructor(name: string, option: any) {\n    super(name, option);\n\n    this._markConfig.support3d = true;\n  }\n\n  setMarkConfig(config: any) {\n    super.setMarkConfig(config);\n\n    this._markConfig.support3d = true;\n  }\n}\n\nexport const registerRect3dMark = () => {\n  Factory.registerMark(Rect3dMark.type, Rect3dMark);\n  registerShadowRoot();\n  registerRect3d();\n  registerRectAnimation();\n\n  Factory.registerGraphicComponent(MarkType3dEnum.rect3d, createRect3d);\n};\n"]}