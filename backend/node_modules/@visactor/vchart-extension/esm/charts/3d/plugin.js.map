{"version":3,"sources":["../src/charts/3d/plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,mBAAmB,EAAE,6BAA6B,EAAE,MAAM,wBAAwB,CAAC;AAEtH,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACnE,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AAElD,MAAM,OAAO,cAAe,SAAQ,UAAU;IAK5C;QACE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAHpB,SAAI,GAAW,gBAAgB,CAAC;IAIzC,CAAC;IAID,MAAM,CAAC,OAA4B,EAAE,SAAc;;QACjD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;YACnC,MAAM,KAAK,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;YAEtD,KAAK,CAAC,YAAY,mBACb,MAAC,cAAsB,CAAC,OAAO,0CAAE,SAAS,EAC7C,CAAC;SACJ;IACH,CAAC;IAED,iBAAiB,CAAC,OAA4B,EAAE,SAAc,EAAE,YAAsC;QACpG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;SACR;QAED,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE;YAC5B,SAAS,CAAC,MAAM,GAAG;gBACjB,IAAI,EAAE,UAAU;aACjB,CAAC;SACH;IACH,CAAC;;AAjCe,yBAAU,GAAY,OAAO,CAAC;AAC9B,mBAAI,GAAW,gBAAgB,CAAC;AAmClD,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,mBAAmB,CAAC,cAAc,CAAC,CAAC;IACpC,wBAAwB,EAAE,CAAC;IAC3B,mBAAmB,EAAE,CAAC;IACtB,6BAA6B,EAAE,CAAC;AAClC,CAAC,CAAC","file":"plugin.js","sourcesContent":["import { registerDirectionalLight, registerOrthoCamera, registerViewTransform3dPlugin } from '@visactor/vrender-core';\nimport type { IChartPlugin, IChartPluginService, VChartRenderActionSource } from '@visactor/vchart';\nimport { BasePlugin, registerChartPlugin } from '@visactor/vchart';\nimport { is3DAxisChart, is3DChart } from './util';\n\nexport class VChart3dPlugin extends BasePlugin implements IChartPlugin {\n  static readonly pluginType: 'chart' = 'chart';\n  static readonly type: string = 'VChart3dPlugin';\n  readonly type: string = 'VChart3dPlugin';\n\n  constructor() {\n    super(VChart3dPlugin.type);\n  }\n\n  protected _is3d?: boolean;\n\n  onInit(service: IChartPluginService, chartSpec: any) {\n    this._is3d = is3DChart(chartSpec);\n\n    if (this._is3d) {\n      const { globalInstance } = service;\n      const stage = globalInstance.getCompiler().getStage();\n\n      stage.set3dOptions({\n        ...(globalInstance as any)._option?.options3d\n      });\n    }\n  }\n\n  onBeforeInitChart(service: IChartPluginService, chartSpec: any, actionSource: VChartRenderActionSource) {\n    if (!this._is3d) {\n      return;\n    }\n\n    if (is3DAxisChart(chartSpec)) {\n      chartSpec.layout = {\n        type: 'layout3d'\n      };\n    }\n  }\n}\n\nexport const register3DPlugin = () => {\n  registerChartPlugin(VChart3dPlugin);\n  registerDirectionalLight();\n  registerOrthoCamera();\n  registerViewTransform3dPlugin();\n};\n"]}