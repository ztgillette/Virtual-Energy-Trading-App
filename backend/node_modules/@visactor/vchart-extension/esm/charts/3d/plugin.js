import { registerDirectionalLight, registerOrthoCamera, registerViewTransform3dPlugin } from "@visactor/vrender-core";

import { BasePlugin, registerChartPlugin } from "@visactor/vchart";

import { is3DAxisChart, is3DChart } from "./util";

export class VChart3dPlugin extends BasePlugin {
    constructor() {
        super(VChart3dPlugin.type), this.type = "VChart3dPlugin";
    }
    onInit(service, chartSpec) {
        var _a;
        if (this._is3d = is3DChart(chartSpec), this._is3d) {
            const {globalInstance: globalInstance} = service;
            globalInstance.getCompiler().getStage().set3dOptions(Object.assign({}, null === (_a = globalInstance._option) || void 0 === _a ? void 0 : _a.options3d));
        }
    }
    onBeforeInitChart(service, chartSpec, actionSource) {
        this._is3d && is3DAxisChart(chartSpec) && (chartSpec.layout = {
            type: "layout3d"
        });
    }
}

VChart3dPlugin.pluginType = "chart", VChart3dPlugin.type = "VChart3dPlugin";

export const register3DPlugin = () => {
    registerChartPlugin(VChart3dPlugin), registerDirectionalLight(), registerOrthoCamera(), 
    registerViewTransform3dPlugin();
};
//# sourceMappingURL=plugin.js.map