{"version":3,"sources":["../src/charts/3d/util.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAY,EAAE,EAAE;IAC5C,OAAO,CACL,IAAI,YAA0B;QAC9B,IAAI,eAA6B;QACjC,IAAI,kBAAgC;QACpC,IAAI,YAA0B;QAC9B,IAAI,oBAAkC;QACtC,IAAI,kBAAgC,CACrC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAS,EAAE,EAAE;IACzC,OAAQ,IAAY,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,IAAS,EAAE,EAAE;IACrC,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,KAAK,CAAC;KACd;IAED,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC;KACb;IAED,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QACvB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","file":"util.js","sourcesContent":["import { ChartType3dEnum } from './enum';\n\nexport const is3DChartType = (type: string) => {\n  return (\n    type === ChartType3dEnum.bar3d ||\n    type === ChartType3dEnum.funnel3d ||\n    type === ChartType3dEnum.histogram3d ||\n    type === ChartType3dEnum.pie3d ||\n    type === ChartType3dEnum.rangeColumn3d ||\n    type === ChartType3dEnum.wordCloud3d\n  );\n};\n\nexport const is3DAxisChart = (spec: any) => {\n  return (spec as any).zField || (spec.series && spec.series.some((s: any) => s.zField));\n};\n\nexport const is3DChart = (spec: any) => {\n  if (!spec) {\n    return false;\n  }\n\n  if (is3DChartType(spec.type)) {\n    return true;\n  }\n\n  if (is3DAxisChart(spec)) {\n    return true;\n  }\n\n  return true;\n};\n"]}