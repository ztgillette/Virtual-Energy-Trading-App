{"version":3,"sources":["../src/charts/3d/pyramid-3d.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAGzD,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,wBAAwB,EAAE,MAAM,kBAAkB,CAAC;AAEtF,MAAM,OAAO,aAAc,SAAQ,eAAmC;IAI1D,gBAAgB;QACxB,MAAM,YAAY,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAE9C,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;QAE5B,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,YAAY,IAAY,EAAE,MAAW;QACnC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAXb,SAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QAajC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,MAAW;QACvB,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE5B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,CAAC;;AArBe,kBAAI,eAA4B;AAwBlD,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IACxD,kBAAkB,EAAE,CAAC;IACrB,iBAAiB,EAAE,CAAC;IACpB,wBAAwB,EAAE,CAAC;IAE3B,OAAO,CAAC,wBAAwB,cAA2B,eAAe,CAAC,CAAC;AAC9E,CAAC,CAAC","file":"pyramid-3d.js","sourcesContent":["import { registerPyramid3d, registerShadowRoot } from '@visactor/vrender-kits';\nimport { createPyramid3d } from '@visactor/vrender-core';\nimport type { IPyramid3dMark, IPyramid3dMarkSpec } from './interface';\nimport { MarkType3dEnum } from './enum';\nimport { BasePolygonMark, Factory, registerPolygonAnimation } from '@visactor/vchart';\n\nexport class Pyramid3dMark extends BasePolygonMark<IPyramid3dMarkSpec> implements IPyramid3dMark {\n  static readonly type = MarkType3dEnum.pyramid3d;\n  readonly type = Pyramid3dMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle = super._getDefaultStyle();\n\n    defaultStyle.stroke = false;\n\n    return defaultStyle;\n  }\n\n  constructor(name: string, option: any) {\n    super(name, option);\n\n    this._markConfig.support3d = true;\n  }\n\n  setMarkConfig(config: any) {\n    super.setMarkConfig(config);\n\n    this._markConfig.support3d = true;\n  }\n}\n\nexport const registerPyramid3dMark = () => {\n  Factory.registerMark(Pyramid3dMark.type, Pyramid3dMark);\n  registerShadowRoot();\n  registerPyramid3d();\n  registerPolygonAnimation();\n\n  Factory.registerGraphicComponent(MarkType3dEnum.pyramid3d, createPyramid3d);\n};\n"]}