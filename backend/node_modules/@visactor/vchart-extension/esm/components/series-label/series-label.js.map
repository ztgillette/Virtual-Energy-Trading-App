{"version":3,"sources":["../src/components/series-label/series-label.ts"],"names":[],"mappings":"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","file":"series-label.js","sourcesContent":["/**\n * @description vchart 自定义组件，用于实现柱图、线图以及面积图的系列标签\n * @author zhangweixing\n */\n\nimport { AbstractComponent } from '@visactor/vrender-components';\nimport type { Dict } from '@visactor/vutils';\nimport { isEmpty } from '@visactor/vutils';\nimport { Factory } from '@visactor/vchart';\nimport { type IGraphic, type IText, createText, createLine } from '@visactor/vrender-core';\nimport { SeriesLabelAttrs, SeriesLabelData } from './type';\nimport { dodge, dodgeHorizontal } from './util';\nimport { SERIES_LABEL } from './constant';\n\nexport class SeriesLabelComponent extends AbstractComponent<Required<SeriesLabelAttrs>> {\n  name = SERIES_LABEL;\n  protected render() {\n    this.removeAllChild();\n    const { data, layout, label, line = {} } = this.attribute as SeriesLabelAttrs;\n    if (isEmpty(data)) {\n      return;\n    }\n\n    const labelStyleMap = label?.styleMap ?? {};\n    const adjustedPoints: Dict<any> = {};\n    const filteredData = (data as SeriesLabelData[]).filter(datum => labelStyleMap[datum.id]?.visible !== false);\n    if (layout === 'vertical') {\n      const lineHeight = (label?.style?.fontSize ?? 12) * 1.5; // 进行扰动，将重叠的文本抖开\n      const createAndAddTextGraphic = (datum: any, textPoint: any, labelStyleMap: any) => {\n        const { label: text, color, textAlign, textBaseline, id } = datum;\n        const formatMethod = labelStyleMap[id]?.formatMethod ?? this.attribute.label?.formatMethod;\n        const textGraphic = createText({\n          text: formatMethod\n            ? formatMethod(text, datum.datum, {\n                series: datum.series\n              })\n            : text,\n          ...this.attribute.label?.style,\n          ...textPoint,\n          textAlign,\n          textBaseline,\n          fill: this.attribute.label?.style?.fill ?? color,\n          ...labelStyleMap[id]?.style\n        });\n        textGraphic.name = 'series-label-text';\n        textGraphic.id = id;\n        this.add(textGraphic);\n\n        return textGraphic;\n      };\n\n      ['start', 'end'].forEach(position => {\n        const posData = filteredData.filter(datum => datum.position === position);\n        const posYArr = posData.map(datum => datum.point.y);\n        const dodgedPosY = dodge(posYArr, lineHeight);\n        posData.forEach((datum, index) => {\n          const textPoint = {\n            x: datum.point.x + (label?.space ?? 8) * (datum.textAlign === 'start' ? 1 : -1),\n            y: dodgedPosY[index]\n          };\n          createAndAddTextGraphic(datum, textPoint, labelStyleMap);\n          adjustedPoints[datum.id] = textPoint;\n        });\n      });\n    } else {\n      const startTexts: IText[] = [];\n      const endTexts: IText[] = [];\n      filteredData.forEach(datum => {\n        const { point, label: text, color, textAlign, textBaseline, id, position } = datum;\n\n        const textPoint = {\n          x: point.x,\n          y: point.y\n        };\n\n        const formatMethod = labelStyleMap[id]?.formatMethod ?? label?.formatMethod;\n\n        const textGraphic = createText({\n          text: formatMethod\n            ? formatMethod(text, datum.datum, {\n                series: datum.series\n              })\n            : text,\n          ...label?.style,\n          ...textPoint,\n          textAlign,\n          textBaseline,\n          fill: label?.style?.fill ?? color,\n          ...labelStyleMap[id]?.style\n        });\n        textGraphic.id = id;\n        textGraphic.name = 'series-label-text';\n        this.add(textGraphic);\n        if (position === 'start') {\n          startTexts.push(textGraphic);\n        } else if (position === 'end') {\n          endTexts.push(textGraphic);\n        }\n      });\n      // 水平扰动，防重叠\n      startTexts.length && dodgeHorizontal(startTexts as unknown as IText[], 4, 10);\n      endTexts.length && dodgeHorizontal(endTexts as unknown as IText[], 4, 10);\n      // 调整间距\n      const labelSpace = label?.space ?? 8;\n      [...startTexts, ...endTexts].forEach((text: IText) => {\n        const flag = text.attribute.textBaseline === 'top' ? 1 : -1;\n        text.setAttribute('y', (text.attribute.y as number) + labelSpace * flag);\n\n        adjustedPoints[text.id] = {\n          x: text.attribute.x,\n          y: text.attribute.y\n        };\n      });\n    }\n\n    if (line.visible !== false) {\n      filteredData.forEach(datum => {\n        const { point: start, color, id } = datum;\n        const end = {\n          x: adjustedPoints[id].x + (labelStyleMap[id]?.style?.dx ?? 0),\n          y: adjustedPoints[id].y + (labelStyleMap[id]?.style?.dy ?? 0)\n        };\n\n        if (line.autoVisible !== false) {\n          if ((layout === 'vertical' && start.y !== end.y) || (layout === 'horizontal' && start.x !== end.x)) {\n            const lineShape = createLine({\n              points: [start, end],\n              lineWidth: 1,\n              stroke: color,\n              ...line.style\n            });\n            lineShape.name = 'series-label-line';\n            this.add(lineShape);\n          }\n        } else {\n          const lineShape = createLine({\n            points: [start, end],\n            lineWidth: 1,\n            stroke: color,\n            ...line.style\n          });\n          lineShape.name = 'series-label-line';\n          this.add(lineShape);\n        }\n      });\n    }\n  }\n}\n\nexport const registerSeriesLabel = () => {\n  Factory.registerGraphicComponent(\n    'seriesLabel',\n    (attrs: Required<SeriesLabelAttrs>) => new SeriesLabelComponent(attrs) as unknown as IGraphic\n  );\n};\n"]}