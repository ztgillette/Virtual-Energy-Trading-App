import type { ISpec } from '@visactor/vchart';
import type { IText } from '@visactor/vrender-core';
import type { SeriesLabelAttrs, SeriesLabelData, SeriesLabelSpec } from './type';
export declare function dodge(positions: number[], separation?: number, maxIter?: number, maxError?: number): number[];
export declare function dodgeHorizontal(texts: IText[], separation?: number, maxIter?: number): void;
export declare function getSeriesLabelConfig(position: 'start' | 'end' | 'both-ends', config: Pick<SeriesLabelAttrs, 'line' | 'label'>): {
    type: string;
    componentType: string;
    interactive: boolean;
    style: {
        position: "start" | "end" | "both-ends";
        layout: (datum: any, ctx: any) => any;
        data: (datum: any, ctx: any) => SeriesLabelData[];
        line: {
            visible?: boolean;
            autoVisible?: boolean;
            style?: import("@visactor/vrender-core").ILineGraphicAttribute;
        };
        label: {
            formatMethod?: (text: string, datum: any, context: any) => string;
            style?: import("@visactor/vrender-core").ITextGraphicAttribute;
            space: number;
            styleMap?: {
                [key: string]: {
                    visible?: boolean;
                    style?: import("@visactor/vrender-core").ITextGraphicAttribute;
                    formatMethod?: (text: string, datum: any, context: any) => string;
                };
            };
        };
    };
};
export declare function appendSeriesLabelConfig(rawSpec: ISpec, seriesLabelSpec?: SeriesLabelSpec): void;
