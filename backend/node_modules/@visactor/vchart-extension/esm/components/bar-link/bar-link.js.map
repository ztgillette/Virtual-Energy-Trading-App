{"version":3,"sources":["../src/components/bar-link/bar-link.ts"],"names":[],"mappings":"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","file":"bar-link.js","sourcesContent":["/**\n * @description 堆叠柱系列的连接线组件\n * @author zhangweixing\n */\nimport { AbstractComponent, Segment } from '@visactor/vrender-components';\nimport { cloneDeep, isEmpty } from '@visactor/vutils';\nimport { Factory } from '@visactor/vchart';\nimport { type IGraphic, type ILineGraphicAttribute, createArea, createText } from '@visactor/vrender-core';\nimport { STACK_FIELD_END, STACK_FIELD_START } from '@visactor/vchart';\nimport type { BarLinkAttrs } from './type';\nimport { BAR_LINK } from './constant';\n\nexport class BarLinkComponent extends AbstractComponent<Required<BarLinkAttrs>> {\n  name = BAR_LINK;\n\n  protected render() {\n    const { data, linkStyle, areaStyle, styleMap, label, linkType = 'total' } = this.attribute as BarLinkAttrs;\n    if (isEmpty(data)) {\n      return;\n    }\n    this.removeAllChild();\n    data.forEach((datum, index) => {\n      const { linePoints, areaPoints, id = index, color, data: curData } = datum;\n\n      if (areaPoints && styleMap?.[`area-${id}`]?.visible !== false) {\n        // 先绘制面\n        const area = createArea({\n          points: areaPoints,\n          fillOpacity: 0.3,\n          fill: color,\n          zIndex: 0,\n          ...areaStyle,\n          ...styleMap?.[`area-${id}`]\n        });\n        area.name = 'bar-link-area';\n        area.id = `area-${id}`;\n        this.add(area);\n      }\n\n      if (\n        linePoints &&\n        styleMap?.[`line-${id}`]?.visible !== false &&\n        (linkStyle?.lineStyle as any)?.lineWidth !== 0 &&\n        styleMap?.[`line-${id}`]?.lineWidth !== 0\n      ) {\n        // 再绘制点\n        const { startSymbol = {}, endSymbol = {}, lineStyle } = linkStyle || {};\n\n        const startSymbolAttrs = cloneDeep(startSymbol);\n        const endSymbolAttrs = cloneDeep(endSymbol);\n        if (styleMap?.[`line-${id}`] && styleMap[`line-${id}`].stroke) {\n          (startSymbolAttrs as any).style = {\n            ...(startSymbolAttrs as any).style,\n            color: styleMap[`line-${id}`].stroke\n          };\n          (endSymbolAttrs as any).style = {\n            ...(endSymbolAttrs as any).style,\n            color: styleMap[`line-${id}`].stroke\n          };\n        }\n\n        if (!(startSymbolAttrs as any).symbolType && !(startSymbolAttrs as any).originSymbolType) {\n          (startSymbolAttrs as any).originSymbolType = 'solidArrow';\n        }\n        if (!(endSymbolAttrs as any).symbolType && !(endSymbolAttrs as any).originSymbolType) {\n          (endSymbolAttrs as any).originSymbolType = 'solidArrow';\n        }\n        const line = new Segment({\n          points: linePoints,\n          startSymbol: {\n            size: 8,\n            ...startSymbolAttrs\n          },\n          endSymbol: {\n            size: 8,\n            ...endSymbolAttrs\n          },\n          lineStyle: {\n            lineDash: [3, 3],\n            lineWidth: 1,\n            stroke: '#000',\n            ...lineStyle,\n            ...styleMap?.[`line-${id}`]\n          } as ILineGraphicAttribute,\n          pickable: true,\n          childrenPickable: false,\n          zIndex: 1\n        });\n        line.name = 'bar-link-line';\n        line.id = `line-${id}`;\n        this.add(line as unknown as IGraphic);\n      }\n\n      if (label?.visible && styleMap?.[`label-${id}`]?.visible !== false) {\n        const { style, formatMethod } = label;\n\n        const [startData, endData] = curData;\n\n        let startValue = startData[STACK_FIELD_END];\n        let endValue = endData[STACK_FIELD_END];\n        if (linkType === 'value') {\n          startValue = startData[STACK_FIELD_END] - startData[STACK_FIELD_START];\n          endValue = endData[STACK_FIELD_END] - endData[STACK_FIELD_START];\n        }\n\n        const value = endValue - startValue;\n        const percentage = ((endValue - startValue) / startValue) * 100;\n\n        const text = createText({\n          x: (linePoints[0].x + linePoints[1].x) * 0.5,\n          y: (linePoints[0].y + linePoints[1].y) * 0.5,\n          text: formatMethod ? (formatMethod(value, percentage, curData) as string) : `${value} ${percentage}`,\n          fontSize: 14,\n          fill: '#000',\n          stroke: '#fff',\n          lineWidth: 1,\n          textAlign: 'center',\n          textBaseline: 'middle',\n          background: '#fff',\n          zIndex: 2,\n          ...style,\n          ...styleMap?.[`label-${id}`]\n        });\n        text.name = 'bar-link-label';\n        text.id = `label-${id}`;\n        this.add(text);\n      }\n    });\n  }\n}\n\nexport const registerBarLink = () => {\n  Factory.registerGraphicComponent(\n    BAR_LINK,\n    (attrs: Required<BarLinkAttrs>) => new BarLinkComponent(attrs) as unknown as IGraphic\n  );\n};\n"]}