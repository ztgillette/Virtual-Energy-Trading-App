{"version":3,"sources":["../src/component/axis/polar/interface/spec.ts"],"names":[],"mappings":"","file":"spec.js","sourcesContent":["import type { IPointLike } from '@visactor/vutils';\nimport type { AxisLabelOverlap } from '@visactor/vrender-components';\nimport type { ILayoutRect, IPolarOrientType } from '../../../../typings';\nimport type { IBandAxisSpec, IDomainLine, ILinearAxisSpec, ITitle, ILabel, ICommonAxisSpec } from '../../interface';\nimport type { IPolarGrid } from './common';\n\n/** spec */\nexport type IPolarAxisSpec = IPolarLinearAxisSpec | IPolarBandAxisSpec;\n\n/**\n * 自1.12.6版本，角度轴也支持自动省略、自动隐藏、自动换行等功能\n * @since 1.12.6\n */\nexport type IPolarAxisLabel = ILabel &\n  Pick<\n    AxisLabelOverlap,\n    'autoHide' | 'autoHideMethod' | 'autoHideSeparation' | 'autoLimit' | 'limitEllipsis' | 'layoutFunc' | 'autoWrap'\n  >;\n\nexport type IPolarAxisCommonSpec = Omit<ICommonAxisSpec, 'center'> & {\n  /**\n   * 布局半径，相当于计算内径、外径的基准值\n   * 默认值为: region宽度、高度最小值的一般\n   * @since 1.11.2\n   */\n  layoutRadius?: 'auto' | number | ((layoutRect: ILayoutRect, center: IPointLike) => number);\n  /**\n   * 当配置了 innerRadius 时，可以通过设置 inside: true，将坐标轴展示在内圆。\n   * @default false\n   */\n  inside?: boolean;\n  /**\n   * 轴位置，枚举类型，支持：`'radius'` 和 `'angle'`\n   * - `'radius'` 代表半径轴\n   * - `'angle'` 代表角度轴\n   */\n  orient: IPolarOrientType;\n  /**\n   * 网格线配置\n   */\n  grid?: IPolarGrid;\n  /**\n   * 轴的外半径，数值范围 0 -1\n   */\n  radius?: number;\n  /**\n   * 子网格线配置\n   */\n  subGrid?: IPolarGrid;\n  /**\n   * 轴线配置\n   */\n  domainLine?: IDomainLine;\n  /**\n   * 轴标签配置\n   */\n  label?: IPolarAxisLabel;\n  /**\n   * 轴标题配置\n   */\n  title?: ITitle;\n  /**\n   * 内半径（比例值，取值范围 0~1）\n   */\n  innerRadius?: number;\n  /**\n   * 外半径（比例值，取值范围 0~1）\n   */\n  outerRadius?: number;\n  /**\n   * 中心点\n   * @since 1.11.2 x,y 支持百分比的值，如`50%`\n   */\n  center?: { x: number | string; y: number | string };\n  /**\n   * 起始角度\n   */\n  startAngle?: number;\n  /**\n   * 终止角度\n   */\n  endAngle?: number;\n};\n\nexport type IPolarLinearAxisSpec = IPolarAxisCommonSpec & ILinearAxisSpec;\n\nexport type IPolarBandAxisSpec = IPolarAxisCommonSpec & IBandAxisSpec;\n"]}