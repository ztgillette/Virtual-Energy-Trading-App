{"version":3,"sources":["../src/component/tooltip/processor/group-tooltip.ts"],"names":[],"mappings":"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","file":"group-tooltip.js","sourcesContent":["import type { BaseEventParams } from '../../../event/interface';\nimport type { Datum, IGroupTooltipPattern, TooltipActiveType } from '../../../typings';\nimport type { ITooltipSpec, TooltipHandlerParams } from '../interface';\nimport type { GroupTooltipInfo, MouseEventData } from './interface';\nimport { BaseTooltipProcessor } from './base';\nimport { array } from '@visactor/vutils';\nimport type { ISeries } from '../../../series/interface';\nimport { Factory } from '../../../core/factory';\nimport { TooltipType } from '../constant';\n\nexport class GroupTooltipProcessor extends BaseTooltipProcessor {\n  activeType: TooltipActiveType = 'group';\n\n  /** 触发对应类型的 tooltip */\n  showTooltip(info: GroupTooltipInfo, params: BaseEventParams, changePositionOnly: boolean) {\n    const { datum, series } = info;\n    const tooltipData = [{ datum: array(datum), series }];\n    const newParams: TooltipHandlerParams = {\n      ...(params as any),\n      groupDatum: this._getGroupDatum(params),\n      changePositionOnly,\n      tooltip: this.component\n    };\n    return this._showTooltipByHandler(tooltipData, newParams);\n  }\n\n  /** 获取触发 tooltip 需要的信息 */\n  getMouseEventData(params: BaseEventParams): MouseEventData {\n    let info: GroupTooltipInfo | undefined;\n\n    // 处理mark info\n    if (params.model?.modelType === 'series') {\n      const series = params.model as ISeries;\n      const helper = series.tooltipHelper;\n      const activeTriggers = helper?.activeTriggerSet.group;\n\n      if (activeTriggers?.has(params.mark)) {\n        const patternSpec: IGroupTooltipPattern = (this.component.getSpec() as ITooltipSpec)[this.activeType];\n        const triggerMark = patternSpec?.triggerMark ? array(patternSpec.triggerMark) : [];\n        if (triggerMark.includes(params.mark?.name as any)) {\n          info = {\n            mark: params.mark,\n            datum: params.datum,\n            series\n          };\n        }\n      }\n    }\n\n    return {\n      tooltipInfo: info,\n      ignore: false\n    };\n  }\n\n  protected _getGroupDatum(params: BaseEventParams) {\n    const { model, mark, datum } = params;\n    const series = model as ISeries;\n    if (['line', 'area'].includes(mark.type)) {\n      return array(datum);\n    }\n\n    const datumList = series.getViewData().latestData;\n    const seriesField = series.getSeriesField();\n    if (!seriesField) {\n      return datumList;\n    }\n\n    const seriesFieldValue = array(datum)[0][seriesField];\n    return datumList.filter((d: Datum) => d[seriesField] === seriesFieldValue);\n  }\n}\n\nexport const registerGroupTooltipProcessor = () => {\n  Factory.registerTooltipProcessor(TooltipType.group, GroupTooltipProcessor);\n};\n"]}