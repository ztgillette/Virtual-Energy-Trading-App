{"version":3,"sources":["../src/component/marker/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import type { ICartesianSeries, IGeoSeries, IPolarSeries, ISeries } from '../../series/interface';\nimport type { DataView } from '@visactor/vdataset';\nimport {\n  isValid,\n  isNumber,\n  array,\n  minInArray,\n  maxInArray,\n  isArray,\n  normalizePadding,\n  isFunction,\n  type IPointLike\n} from '@visactor/vutils';\nimport type { Datum, IPoint, StringOrNumber } from '../../typings';\nimport { isPercent, transformToGraphic } from '../../util';\nimport type {\n  IDataPos,\n  IMarkerAttributeContext,\n  IMarkerLabelSpec,\n  IMarkerState,\n  IMarkerSupportSeries,\n  IPolarPoint,\n  MarkerPositionPoint,\n  MarkerStateValue\n} from './interface';\nimport { AGGR_TYPE } from '../../constant/marker';\nimport type { IRegion } from '../../region/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { OffsetPoint } from './interface';\nimport type { IAxisHelper, IPolarAxisHelper } from '../axis';\nimport { isContinuous } from '@visactor/vscale';\n\nfunction isNeedExtendDomain(domain: number[], datum: number, autoRange: boolean) {\n  if (!autoRange) {\n    return false;\n  }\n  const domainNum = domain.map((n: any) => n * 1);\n  const min = minInArray(domainNum);\n  const max = maxInArray(domainNum);\n  if (datum < min || datum > max) {\n    return true;\n  }\n  return false;\n}\n\nfunction getXValue(\n  datum: Datum,\n  xDomain: number[],\n  autoRange: boolean,\n  refSeries: { [key: string]: IMarkerSupportSeries },\n  regionWidth: number,\n  regionStartLayoutStartPoint: IPoint\n) {\n  const { relativeSeries } = refSeries;\n  isNumber(datum.x) &&\n    isNeedExtendDomain(xDomain, datum.x, autoRange) &&\n    (relativeSeries as ICartesianSeries)?.getXAxisHelper().setExtendDomain?.('marker_xAxis_extend', datum.x);\n  let x: number;\n  if (isPercent(datum.x)) {\n    x = convertPercentToValue(datum.x, regionWidth) + regionStartLayoutStartPoint.x;\n  } else {\n    x =\n      convertDatumToValue((relativeSeries as ICartesianSeries).getXAxisHelper(), [datum.x]) +\n      regionStartLayoutStartPoint.x;\n  }\n\n  return x;\n}\n\nfunction getYValue(\n  datum: Datum,\n  yDomain: number[],\n  autoRange: boolean,\n  refSeries: { [key: string]: IMarkerSupportSeries },\n  regionHeight: number,\n  regionStartLayoutStartPoint: IPoint\n) {\n  const { relativeSeries } = refSeries;\n  isNumber(datum.y) &&\n    isNeedExtendDomain(yDomain, datum.y, autoRange) &&\n    (relativeSeries as ICartesianSeries).getYAxisHelper()?.setExtendDomain?.('marker_yAxis_extend', datum.y);\n\n  let y: number;\n  if (isPercent(datum.y)) {\n    y = convertPercentToValue(datum.y, regionHeight) + regionStartLayoutStartPoint.y;\n  } else {\n    y =\n      convertDatumToValue((relativeSeries as ICartesianSeries).getYAxisHelper(), [datum.y]) +\n      regionStartLayoutStartPoint.y;\n  }\n\n  return y;\n}\n\nfunction getAngleValue(\n  datum: Datum,\n  angleDomain: number[],\n  autoRange: boolean,\n  refSeries: { [key: string]: IMarkerSupportSeries }\n) {\n  const { relativeSeries } = refSeries;\n  isNumber(datum.angle) &&\n    isNeedExtendDomain(angleDomain, datum.angle, autoRange) &&\n    (relativeSeries as IPolarSeries).angleAxisHelper?.setExtendDomain?.('marker_angleAxis_extend', datum.angle);\n\n  return convertDatumToValue((relativeSeries as IPolarSeries).angleAxisHelper, [datum.angle]);\n}\n\nfunction getRadiusValue(\n  datum: Datum,\n  radiusDomain: number[],\n  autoRange: boolean,\n  refSeries: { [key: string]: IMarkerSupportSeries }\n) {\n  const { relativeSeries } = refSeries;\n  isNumber(datum.radius) &&\n    isNeedExtendDomain(radiusDomain, datum.radius, autoRange) &&\n    (relativeSeries as IPolarSeries).radiusAxisHelper?.setExtendDomain?.('marker_radiusAxis_extend', datum.radius);\n\n  return convertDatumToValue((relativeSeries as IPolarSeries).radiusAxisHelper, [datum.radius]);\n}\n\nfunction convertPercentToValue(percent: string, relativeLength: number) {\n  return (Number(percent.substring(0, percent.length - 1)) * relativeLength) / 100;\n}\n\nfunction convertDatumToValue(axisHelper: IAxisHelper | IPolarAxisHelper, datum: (number | string)[]) {\n  const scale = axisHelper.getScale(0);\n  if (isContinuous(scale.type) && scale.domain()[0] === scale.domain()[1] && datum[0] !== scale.domain()[0]) {\n    return NaN;\n  }\n  return axisHelper.dataToPosition(datum);\n}\n\nexport function isAggrSpec(spec: IDataPos) {\n  return AGGR_TYPE.includes(spec as any);\n}\n\nexport function xyLayout(\n  data: DataView,\n  startRelativeSeries: IMarkerSupportSeries,\n  endRelativeSeries: IMarkerSupportSeries,\n  relativeSeries: IMarkerSupportSeries,\n  autoRange: boolean\n) {\n  const regionStart = startRelativeSeries.getRegion();\n  const regionStartLayoutStartPoint = regionStart.getLayoutStartPoint();\n  const regionEnd = endRelativeSeries.getRegion();\n  const regionEndLayoutStartPoint = regionEnd.getLayoutStartPoint();\n\n  const regionWidth = Math.abs(\n    Math.min(regionStartLayoutStartPoint.x, regionEndLayoutStartPoint.x) -\n      Math.max(\n        regionStartLayoutStartPoint.x + regionStart.getLayoutRect().width,\n        regionEndLayoutStartPoint.x + regionEnd.getLayoutRect().width\n      )\n  );\n  const regionHeight = Math.abs(\n    Math.min(regionStartLayoutStartPoint.y, regionEndLayoutStartPoint.y) -\n      Math.max(\n        regionStartLayoutStartPoint.y + regionStart.getLayoutRect().height,\n        regionEndLayoutStartPoint.y + regionEnd.getLayoutRect().height\n      )\n  );\n\n  const refSeries = {\n    relativeSeries,\n    startRelativeSeries,\n    endRelativeSeries\n  };\n\n  const lines: IPoint[][] = [];\n  const dataPoints =\n    data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n  const xDomain = (relativeSeries as ICartesianSeries).getXAxisHelper().getScale(0).domain();\n  const yDomain = (relativeSeries as ICartesianSeries).getYAxisHelper().getScale(0).domain();\n  dataPoints.forEach((datum: IPoint) => {\n    const isValidX = isValid(datum.x);\n    const isValidY = isValid(datum.y);\n    if (isValidX && isValidY) {\n      const x = getXValue(datum, xDomain, autoRange, refSeries, regionWidth, regionStartLayoutStartPoint);\n      const y = getYValue(datum, yDomain, autoRange, refSeries, regionHeight, regionStartLayoutStartPoint);\n      lines.push([{ x, y }]);\n    } else if (isValidX) {\n      const x = getXValue(datum, xDomain, autoRange, refSeries, regionWidth, regionStartLayoutStartPoint);\n      const y = Math.max(\n        regionStartLayoutStartPoint.y + regionStart.getLayoutRect().height,\n        regionEndLayoutStartPoint.y + regionEnd.getLayoutRect().height\n      );\n      const y1 = Math.min(regionStartLayoutStartPoint.y, regionEndLayoutStartPoint.y);\n      lines.push([\n        {\n          x: x,\n          y: y\n        },\n        {\n          x: x,\n          y: y1\n        }\n      ]);\n    } else if (isValidY) {\n      const x = Math.min(regionStartLayoutStartPoint.x, regionEndLayoutStartPoint.x);\n      const y = getYValue(datum, yDomain, autoRange, refSeries, regionHeight, regionStartLayoutStartPoint);\n      const x1 = Math.max(\n        regionStartLayoutStartPoint.x + regionStart.getLayoutRect().width,\n        regionEndLayoutStartPoint.x + regionEnd.getLayoutRect().width\n      );\n      lines.push([\n        {\n          x: x,\n          y: y\n        },\n        {\n          x: x1,\n          y: y\n        }\n      ]);\n    }\n  });\n\n  return lines;\n}\n\nexport function polarLayout(\n  data: DataView,\n  startRelativeSeries: IMarkerSupportSeries,\n  endRelativeSeries: IMarkerSupportSeries,\n  relativeSeries: IMarkerSupportSeries,\n  autoRange: boolean\n) {\n  const refSeries = {\n    relativeSeries,\n    startRelativeSeries,\n    endRelativeSeries\n  };\n  const lines: IPolarPoint[][] = [];\n  const dataPoints =\n    data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n\n  const angleDomain = (relativeSeries as IPolarSeries).angleAxisHelper.getScale(0).domain();\n  const radiusDomain = (relativeSeries as IPolarSeries).radiusAxisHelper.getScale(0).domain();\n  const regionRadius = Math.min(\n    relativeSeries.getRegion().getLayoutRect().width / 2,\n    relativeSeries.getRegion().getLayoutRect().height / 2\n  );\n  dataPoints.forEach((datum: IPolarPoint) => {\n    const isValidAngle = isValid(datum.angle);\n    const isValidRadius = isValid(datum.radius);\n    if (isValidAngle && isValidRadius) {\n      const angle = getAngleValue(datum, angleDomain, autoRange, refSeries);\n      const radius = getRadiusValue(datum, radiusDomain, autoRange, refSeries);\n      lines.push([{ angle, radius }]);\n    } else if (isValidAngle) {\n      const angle = getAngleValue(datum, angleDomain, autoRange, refSeries);\n      lines.push([\n        {\n          angle,\n          radius: -regionRadius\n        },\n        {\n          angle,\n          radius: regionRadius\n        }\n      ]);\n    } else if (isValidRadius) {\n      const radius = getRadiusValue(datum, radiusDomain, autoRange, refSeries);\n      lines.push([\n        {\n          radius,\n          angle: 0\n        },\n        {\n          radius,\n          angle: Math.PI * 2\n        }\n      ]);\n    }\n  });\n\n  return lines;\n}\n\nexport function geoLayout(data: DataView, relativeSeries: IMarkerSupportSeries) {\n  const lines: IPoint[][] = [];\n  const dataPoints =\n    data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n  dataPoints.forEach((datum: any) => {\n    const isValidName = isValid(datum.areaName);\n    if (isValidName) {\n      lines.push([\n        {\n          x:\n            (relativeSeries as IGeoSeries).nameValueToPosition(datum.areaName).x +\n            relativeSeries.getRegion().getLayoutStartPoint().x,\n          y:\n            (relativeSeries as IGeoSeries).nameValueToPosition(datum.areaName).y +\n            relativeSeries.getRegion().getLayoutStartPoint().y\n        }\n      ]);\n    }\n  });\n\n  return lines;\n}\n\nexport function cartesianCoordinateLayout(\n  data: DataView,\n  relativeSeries: IMarkerSupportSeries,\n  autoRange: boolean,\n  coordinatesOffset: OffsetPoint[] | OffsetPoint\n) {\n  const points: IPoint[] = [];\n  const dataPoints =\n    data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n  const isArrayCoordinatesOffset = isArray(coordinatesOffset);\n  dataPoints.forEach(\n    (\n      datum: {\n        x: StringOrNumber[] | StringOrNumber | null;\n        y: StringOrNumber[] | StringOrNumber | null;\n        getRefRelativeSeries?: () => ICartesianSeries;\n      },\n      index: number\n    ) => {\n      const refRelativeSeries = (\n        datum?.getRefRelativeSeries ? datum.getRefRelativeSeries() : relativeSeries\n      ) as ICartesianSeries;\n      const regionStart = refRelativeSeries.getRegion();\n      const regionStartLayoutStartPoint = regionStart.getLayoutStartPoint();\n\n      const { width: regionWidth, height: regionHeight } = regionStart.getLayoutRect();\n\n      let offsetX = 0;\n      let offsetY = 0;\n      if (coordinatesOffset) {\n        const currentCoordinatesOffset = isArrayCoordinatesOffset ? coordinatesOffset[index] : coordinatesOffset;\n        const x = currentCoordinatesOffset.x;\n        const y = currentCoordinatesOffset.y;\n        if (x) {\n          offsetX = isPercent(x) ? (Number(x.substring(0, x.length - 1)) * regionWidth) / 100 : (x as number);\n        }\n        if (y) {\n          offsetY = isPercent(y) ? (Number(y.substring(0, y.length - 1)) * regionHeight) / 100 : (y as number);\n        }\n      }\n\n      const xDomain = refRelativeSeries.getXAxisHelper().getScale(0).domain();\n      const yDomain = refRelativeSeries.getYAxisHelper().getScale(0).domain();\n      const xValue = array(datum.x);\n      const yValue = array(datum.y);\n\n      xValue.length === 1 &&\n        isNumber(xValue[0]) &&\n        isNeedExtendDomain(xDomain, xValue[0], autoRange) &&\n        refRelativeSeries.getXAxisHelper()?.setExtendDomain?.('marker_xAxis_extend', xValue[0] as number);\n\n      yValue.length === 1 &&\n        isNumber(yValue[0]) &&\n        isNeedExtendDomain(yDomain, yValue[0], autoRange) &&\n        refRelativeSeries.getYAxisHelper()?.setExtendDomain?.('marker_yAxis_extend', yValue[0] as number);\n      points.push({\n        x: convertDatumToValue(refRelativeSeries.getXAxisHelper(), xValue) + regionStartLayoutStartPoint.x + offsetX,\n        y: convertDatumToValue(refRelativeSeries.getYAxisHelper(), yValue) + regionStartLayoutStartPoint.y + offsetY\n      });\n    }\n  );\n  return points;\n}\n\nexport function polarCoordinateLayout(data: DataView, relativeSeries: IMarkerSupportSeries, autoRange: boolean) {\n  const points: IPolarPoint[] = [];\n  const dataPoints =\n    data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n  dataPoints.forEach(\n    (datum: {\n      angle: StringOrNumber[] | StringOrNumber | null;\n      radius: StringOrNumber[] | StringOrNumber | null;\n      getRefRelativeSeries?: () => ICartesianSeries;\n    }) => {\n      const refRelativeSeries = (\n        datum?.getRefRelativeSeries ? datum.getRefRelativeSeries() : relativeSeries\n      ) as IPolarSeries;\n\n      const angleDomain = refRelativeSeries.angleAxisHelper.getScale(0).domain();\n      const radiusDomain = refRelativeSeries.radiusAxisHelper.getScale(0).domain();\n      const angleValue = array(datum.angle);\n      const radiusValue = array(datum.radius);\n\n      angleValue.length === 1 &&\n        isNumber(angleValue[0]) &&\n        isNeedExtendDomain(angleDomain, angleValue[0], autoRange) &&\n        refRelativeSeries.angleAxisHelper?.setExtendDomain?.('marker_xAxis_extend', angleValue[0] as number);\n\n      radiusValue.length === 1 &&\n        isNumber(radiusValue[0]) &&\n        isNeedExtendDomain(radiusDomain, radiusValue[0], autoRange) &&\n        refRelativeSeries.radiusAxisHelper?.setExtendDomain?.('marker_yAxis_extend', radiusValue[0] as number);\n      points.push({\n        angle: convertDatumToValue(refRelativeSeries.angleAxisHelper, angleValue),\n        radius: convertDatumToValue(refRelativeSeries.radiusAxisHelper, radiusValue)\n      });\n    }\n  );\n  return points;\n}\n\nfunction convertPosition(position: MarkerPositionPoint, relativeWidth: number, relativeHeight: number): IPoint {\n  let { x, y } = position;\n  if (isPercent(x)) {\n    x = convertPercentToValue(x, relativeWidth);\n  }\n  if (isPercent(y)) {\n    y = convertPercentToValue(y, relativeHeight);\n  }\n\n  return {\n    x: x as number,\n    y: y as number\n  };\n}\n\nexport function positionLayout(\n  positions:\n    | MarkerPositionPoint\n    | MarkerPositionPoint[]\n    | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => MarkerPositionPoint)\n    | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => MarkerPositionPoint[]),\n  series: IMarkerSupportSeries,\n  regionRelative: boolean\n): IPoint[] {\n  let transformPositions;\n  if (isFunction(positions)) {\n    transformPositions = array(positions(series.getData().getLatestData(), series));\n  } else {\n    transformPositions = array(positions);\n  }\n\n  if (regionRelative) {\n    const region = series.getRegion();\n    const { x: regionStartX, y: regionStartY } = region.getLayoutStartPoint();\n    const { width: regionWidth, height: regionHeight } = region.getLayoutRect();\n    return transformPositions.map(position => {\n      let { x, y } = convertPosition(position, regionWidth, regionHeight);\n\n      x = (x as number) + regionStartX;\n      y = (y as number) + regionStartY;\n\n      return {\n        x,\n        y\n      };\n    });\n  }\n\n  const { width: canvasWidth, height: canvasHeight } = series.getOption().getChart().getViewRect();\n  return transformPositions.map(position => {\n    return convertPosition(position, canvasWidth, canvasHeight);\n  });\n}\n\nexport function computeClipRange(regions: IRegion[]) {\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n  regions.forEach((region: IRegion) => {\n    const regionPos = region.getLayoutStartPoint();\n    const regionRect = region.getLayoutRect();\n    if (regionPos.x < minX) {\n      minX = regionPos.x;\n    }\n    if (regionPos.x + regionRect.width > maxX) {\n      maxX = regionPos.x + regionRect.width;\n    }\n    if (regionPos.y < minY) {\n      minY = regionPos.y;\n    }\n    if (regionPos.y + regionRect.height > maxY) {\n      maxY = regionPos.y + regionRect.height;\n    }\n  });\n  return { minX, maxX, minY, maxY };\n}\n\nexport function transformLabelAttributes(\n  label: IMarkerLabelSpec,\n  markerData: any,\n  markAttributeContext: IMarkerAttributeContext\n) {\n  const { labelBackground = {}, style, shape, ...restLabel } = label;\n\n  if (label.visible !== false) {\n    const labelAttrs = restLabel as any;\n\n    if (shape?.visible) {\n      labelAttrs.shape = {\n        visible: true,\n        ...transformToGraphic(shape.style)\n      };\n    } else {\n      labelAttrs.shape = {\n        visible: false\n      };\n    }\n\n    if (labelBackground.visible !== false) {\n      labelAttrs.panel = {\n        visible: true,\n        customShape: labelBackground.customShape,\n        ...transformStyle(transformToGraphic(labelBackground.style), markerData, markAttributeContext)\n      };\n      if (isValid(labelBackground.padding)) {\n        labelAttrs.padding = normalizePadding(labelBackground.padding);\n      }\n    } else {\n      labelAttrs.panel = {\n        visible: false\n      };\n      labelAttrs.padding = 0;\n    }\n\n    if (style) {\n      labelAttrs.textStyle = transformStyle(transformToGraphic(style), markerData, markAttributeContext);\n    }\n    return labelAttrs;\n  }\n  return {\n    visible: false\n  };\n}\n\nexport function transformState(\n  state: {} | Record<MarkerStateValue, any | IMarkerState<any>>,\n  markerData: DataView,\n  markerAttributeContext: IMarkerAttributeContext\n) {\n  for (const stateKey in state) {\n    if (isFunction(state[stateKey])) {\n      state[stateKey] = state[stateKey](markerData, markerAttributeContext);\n    }\n  }\n  return state;\n}\n\nexport function transformStyle(style: any, markerData: DataView, markerAttributeContext: IMarkerAttributeContext) {\n  if (isFunction(style)) {\n    return style(markerData, markerAttributeContext);\n  }\n  return style;\n}\n\nexport function transformOffset(offset: string | number | Function, region: IRegion) {\n  if (isFunction(offset)) {\n    return offset(region);\n  }\n  return offset;\n}\n\nexport function computeOffsetFromRegion(point: IPointLike, offset: string | number, region: IRegion): number {\n  if (!isValid(point)) {\n    return offset as number;\n  }\n  if (offset === 'regionLeft') {\n    return region.getLayoutStartPoint().x - point.x;\n  } else if (offset === 'regionRight') {\n    return region.getLayoutStartPoint().x + region.getLayoutRect().width - point.x;\n  } else if (offset === 'regionTop') {\n    return region.getLayoutStartPoint().y - point.y;\n  } else if (offset === 'regionBottom') {\n    return region.getLayoutStartPoint().y + region.getLayoutRect().height - point.y;\n  }\n  return offset as number;\n}\n\nexport function getProcessInfo(spec: any) {\n  return {\n    isXProcess: isValid(spec.x),\n    isYProcess: isValid(spec.y),\n    isX1Process: isValid(spec.x1),\n    isY1Process: isValid(spec.y1),\n    isAngleProcess: isValid(spec.angle),\n    isRadiusProcess: isValid(spec.radius),\n    isAngle1Process: isValid(spec.angle1),\n    isRadius1Process: isValid(spec.radius1),\n    isCoordinatesProcess: isValid(spec.coordinates),\n    isValidProcess: isValid(spec.process)\n  };\n}\n\nexport function getMarkLineProcessInfo(spec: any) {\n  const {\n    isXProcess,\n    isYProcess,\n    isX1Process,\n    isY1Process,\n    isAngleProcess,\n    isRadiusProcess,\n    isAngle1Process,\n    isRadius1Process,\n    isCoordinatesProcess,\n    isValidProcess\n  } = getProcessInfo(spec);\n\n  return {\n    doXProcess: isXProcess && !isYProcess && !isY1Process,\n    doXYY1Process: isXProcess && isYProcess && isY1Process,\n    doYProcess: isYProcess && !isXProcess && !isX1Process,\n    doYXX1Process: isYProcess && isXProcess && isX1Process,\n    doXYProcess: isXProcess && isYProcess && isX1Process && isY1Process,\n    doAngleProcess: isAngleProcess && !isAngle1Process && !isRadiusProcess && !isRadius1Process,\n    doRadiusProcess: isRadiusProcess && !isRadius1Process && !isAngleProcess && !isAngle1Process,\n    doAngRadRad1Process: isAngleProcess && !isAngle1Process && isRadiusProcess && isRadius1Process,\n    doRadAngAng1Process: isRadiusProcess && isAngleProcess && isAngle1Process && !isRadius1Process,\n    doRadAngProcess: isAngleProcess && isRadiusProcess && isAngle1Process && isRadius1Process,\n    doCoordinatesProcess: isCoordinatesProcess && (!isValidProcess || ('process' in spec && 'xy' in spec.process))\n  };\n}\n\nexport function getMarkAreaProcessInfo(spec: any) {\n  const {\n    isXProcess,\n    isYProcess,\n    isX1Process,\n    isY1Process,\n    isAngleProcess,\n    isRadiusProcess,\n    isAngle1Process,\n    isRadius1Process,\n    isCoordinatesProcess\n  } = getProcessInfo(spec);\n  return {\n    doXProcess: isXProcess && isX1Process && !isYProcess && !isY1Process,\n    doYProcess: isYProcess && isY1Process && !isXProcess && !isX1Process,\n    doXYProcess: isXProcess && isX1Process && isYProcess && isY1Process,\n    doAngleProcess: isAngleProcess && isAngle1Process && !isRadiusProcess && !isRadius1Process,\n    doRadiusProcess: isRadiusProcess && isRadius1Process && !isAngleProcess && !isAngle1Process,\n    doRadAngProcess: isAngleProcess && isRadiusProcess && isAngle1Process && isRadius1Process,\n    doCoordinatesProcess: isCoordinatesProcess\n  };\n}\n\nexport function getMarkPointProcessInfo(spec: any) {\n  const isXYProcess = isValid(spec.x) && isValid(spec.y);\n  const isPolarProcess = isValid(spec.angle) && isValid(spec.radius);\n  const isGeoProcess = isValid(spec.areaName);\n  return {\n    doXYProcess: isXYProcess,\n    doPolarProcess: isPolarProcess,\n    doGeoProcess: isGeoProcess\n  };\n}\n"]}