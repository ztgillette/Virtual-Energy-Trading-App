{"version":3,"sources":["../src/component/marker/mark-area/polar-mark-area.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAEzD,OAAO,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAGtF,OAAO,EACL,WAAW,IAAI,oBAAoB,EACnC,QAAQ,IAAI,iBAAiB,EAC7B,0BAA0B,EAC1B,uBAAuB,EACxB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAGhD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,mDAAmD,CAAC;AAE7E,MAAM,OAAO,aAAc,SAAQ,YAAY;IAA/C;;QAEE,SAAI,GAAG,iBAAiB,CAAC,aAAa,CAAC;QACvC,SAAI,GAAW,iBAAiB,CAAC,aAAa,CAAC;QAE/C,mBAAc,GAAG,OAAyB,CAAC;IA+H7C,CAAC;IAvHW,qBAAqB,CAAC,IAAsC;QACpE,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,sBAAsB,CAAC,IAAI,CAAC,KAAY,CAAC,CAAC;QACvG,MAAM,SAAS,GAAG,cAAc,IAAI,eAAe,IAAI,eAAe,CAAC;QACvE,OAAO,SAAS;YACd,CAAC,CAAC,IAAI,oBAAoB,CAAC,IAAwB,CAAC;YACpD,CAAC,CAAC,IAAI,iBAAiB,CAAC,IAAqB,CAAC,CAAC;IACnD,CAAC;IAES,kBAAkB;;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAY,CAAC;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACtD,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,oBAAoB,EAAE,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAEhH,MAAM,SAAS,GAAG,MAAA,IAAI,CAAC,SAAS,mCAAI,KAAK,CAAC;QAE1C,IAAI,MAAqB,CAAC;QAC1B,IAAI,UAAU,GAOV,EAAE,CAAC;QACP,MAAM,MAAM,GAAG;YACb,CAAC,EACC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAgC,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;YACnE,CAAC,EACC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAgC,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;SACpE,CAAC;QAEF,IAAI,cAAc,IAAI,eAAe,IAAI,eAAe,EAAE;YACxD,MAAM,UAAU,GAAG,WAAW,CAC5B,IAAI,EACJ,mBAAmC,EACnC,iBAAiC,EACjC,cAA8B,EAC9B,SAAS,CACV,CAAC;YACF,IAAI,eAAe,EAAE;gBACnB,UAAU,GAAG;oBACX,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;oBACpC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;oBACpC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAClC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAChC,MAAM;iBACP,CAAC;aACH;iBAAM,IAAI,cAAc,EAAE;gBACzB,UAAU,GAAG;oBACX,WAAW,EAAE,CAAC;oBACd,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC9C,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAClC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAChC,MAAM;iBACP,CAAC;aACH;iBAAM,IAAI,eAAe,EAAE;gBAC1B,UAAU,GAAG;oBACX,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;oBACpC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;oBACpC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAClC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;oBAChC,MAAM;iBACP,CAAC;aACH;SACF;aAAM,IAAI,oBAAoB,EAAE;YAC/B,MAAM,GAAG,qBAAqB,CAAC,IAAI,EAAE,cAA8B,EAAE,SAAS,CAAC,CAAC;YAChF,UAAU,GAAG;gBACX,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACzB,OAAO,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC7D,CAAC,CAAC;aACH,CAAC;SACH;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAES,eAAe;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAY,CAAC;QAC/B,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,oBAAoB,EAAE,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAEhH,IAAI,OAA+C,CAAC;QACpD,IAAI,eAAe,EAAE;YACnB,OAAO,GAAG;gBACR,IAAI,CAAC,kBAAkB,CAAC;oBACtB,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE;oBACvC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;iBAC1C,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC;oBACtB,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;oBACxC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE;iBAC3C,CAAC;aACH,CAAC;SACH;aAAM,IAAI,cAAc,EAAE;YACzB,OAAO,GAAG;gBACR,IAAI,CAAC,kBAAkB,CAAC;oBACtB,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE;oBACvC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;iBAC1C,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC;oBACtB,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;oBACxC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;iBAC1C,CAAC;aACH,CAAC;SACH;aAAM,IAAI,eAAe,EAAE;YAC1B,OAAO,GAAG;gBACR,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACtE,CAAC;SACH;aAAM,IAAI,oBAAoB,EAAE;YAC/B,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,OAAO,EAAE,OAAO,EAAE,CAAC;IACrB,CAAC;;AAlIM,kBAAI,GAAG,iBAAiB,CAAC,aAAa,CAAC;AAGvC,4BAAc,GAAG,OAAO,CAAC;AAGhB,0BAAY,GAAG;IAC7B,aAAa,EAAE,QAAQ;CACxB,CAAC;AA6HJ,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,OAAO,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC7D,0BAA0B,EAAE,CAAC;IAC7B,uBAAuB,EAAE,CAAC;AAC5B,CAAC,CAAC","file":"polar-mark-area.js","sourcesContent":["import { ComponentTypeEnum } from '../../interface/type';\nimport type { IOptionAggr, IOptionWithCoordinates } from '../../../data/transforms/interface';\nimport { getMarkAreaProcessInfo, polarCoordinateLayout, polarLayout } from '../utils';\nimport type { MarkArcAreaAttrs, MarkAreaAttrs } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport {\n  MarkArcArea as MarkArcAreaComponent,\n  MarkArea as MarkAreaComponent,\n  registerMarkArcAreaAnimate,\n  registerMarkAreaAnimate\n} from '@visactor/vrender-components';\nimport { Factory } from '../../../core/factory';\nimport type { CoordinateType, IPoint, IPolarPoint } from '../../../typings';\nimport type { IPolarSeries } from 'src/series';\nimport { BaseMarkArea } from './base-mark-area';\nimport type { IMarkProcessOptions } from '../interface';\nimport { polarToCartesian } from '@visactor/vutils';\nimport { markArea } from '../../../theme/builtin/common/component/mark-area';\n\nexport class PolarMarkArea extends BaseMarkArea {\n  static type = ComponentTypeEnum.polarMarkArea;\n  type = ComponentTypeEnum.polarMarkArea;\n  name: string = ComponentTypeEnum.polarMarkArea;\n  static coordinateType = 'polar';\n  coordinateType = 'polar' as CoordinateType;\n\n  static readonly builtInTheme = {\n    polarMarkArea: markArea\n  };\n\n  protected declare _markerComponent: MarkArcAreaComponent;\n\n  protected _newMarkAreaComponent(attr: MarkArcAreaAttrs | MarkAreaAttrs): MarkArcAreaComponent | MarkAreaComponent {\n    const { doRadiusProcess, doAngleProcess, doRadAngProcess } = getMarkAreaProcessInfo(this._spec as any);\n    const isArcArea = doAngleProcess || doRadiusProcess || doRadAngProcess;\n    return isArcArea\n      ? new MarkArcAreaComponent(attr as MarkArcAreaAttrs)\n      : new MarkAreaComponent(attr as MarkAreaAttrs);\n  }\n\n  protected _computePointsAttr() {\n    const spec = this._spec as any;\n    const data = this._markerData;\n    const startRelativeSeries = this._startRelativeSeries;\n    const endRelativeSeries = this._endRelativeSeries;\n    const relativeSeries = this._relativeSeries;\n    const { doAngleProcess, doRadiusProcess, doRadAngProcess, doCoordinatesProcess } = getMarkAreaProcessInfo(spec);\n\n    const autoRange = spec.autoRange ?? false;\n\n    let points: IPolarPoint[];\n    let pointsAttr: {\n      points?: IPoint[] | IPolarPoint[];\n      innerRadius?: number;\n      outerRadius?: number;\n      startAngle?: number;\n      endAngle?: number;\n      center?: IPoint;\n    } = {};\n    const center = {\n      x:\n        this._relativeSeries.getRegion().getLayoutStartPoint().x +\n        (this._relativeSeries as IPolarSeries).angleAxisHelper.center().x,\n      y:\n        this._relativeSeries.getRegion().getLayoutStartPoint().y +\n        (this._relativeSeries as IPolarSeries).angleAxisHelper.center().y\n    };\n\n    if (doAngleProcess || doRadiusProcess || doRadAngProcess) {\n      const polarLines = polarLayout(\n        data,\n        startRelativeSeries as IPolarSeries,\n        endRelativeSeries as IPolarSeries,\n        relativeSeries as IPolarSeries,\n        autoRange\n      );\n      if (doRadAngProcess) {\n        pointsAttr = {\n          innerRadius: polarLines[0][0].radius,\n          outerRadius: polarLines[1][0].radius,\n          startAngle: polarLines[0][0].angle,\n          endAngle: polarLines[1][0].angle,\n          center\n        };\n      } else if (doAngleProcess) {\n        pointsAttr = {\n          innerRadius: 0,\n          outerRadius: Math.abs(polarLines[0][0].radius),\n          startAngle: polarLines[0][1].angle,\n          endAngle: polarLines[1][1].angle,\n          center\n        };\n      } else if (doRadiusProcess) {\n        pointsAttr = {\n          innerRadius: polarLines[0][0].radius,\n          outerRadius: polarLines[1][0].radius,\n          startAngle: polarLines[0][0].angle,\n          endAngle: polarLines[1][1].angle,\n          center\n        };\n      }\n    } else if (doCoordinatesProcess) {\n      points = polarCoordinateLayout(data, relativeSeries as IPolarSeries, autoRange);\n      pointsAttr = {\n        points: points.map(point => {\n          return polarToCartesian(center, point.radius, point.angle);\n        })\n      };\n    }\n\n    return pointsAttr;\n  }\n\n  protected _computeOptions(): IMarkProcessOptions {\n    const spec = this._spec as any;\n    const { doAngleProcess, doRadiusProcess, doRadAngProcess, doCoordinatesProcess } = getMarkAreaProcessInfo(spec);\n\n    let options: IOptionAggr[] | IOptionWithCoordinates;\n    if (doRadAngProcess) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius }\n        ]),\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle1 },\n          { dim: 'radius', specValue: spec.radius1 }\n        ])\n      ];\n    } else if (doAngleProcess) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius }\n        ]),\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle1 },\n          { dim: 'radius', specValue: spec.radius }\n        ])\n      ];\n    } else if (doRadiusProcess) {\n      options = [\n        this._processSpecByDims([{ dim: 'radius', specValue: spec.radius }]),\n        this._processSpecByDims([{ dim: 'radius', specValue: spec.radius1 }])\n      ];\n    } else if (doCoordinatesProcess) {\n      options = this._processSpecCoo(spec);\n    }\n\n    return { options };\n  }\n}\n\nexport const registerPolarMarkArea = () => {\n  Factory.registerComponent(PolarMarkArea.type, PolarMarkArea);\n  registerMarkArcAreaAnimate();\n  registerMarkAreaAnimate();\n};\n"]}