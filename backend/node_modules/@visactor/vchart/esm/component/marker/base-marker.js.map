{"version":3,"sources":["../src/component/marker/base-marker.ts"],"names":[],"mappings":"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","file":"base-marker.js","sourcesContent":["import { DataSet, DataView } from '@visactor/vdataset';\nimport type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array, isValid, isNil, isString, isEqual } from '@visactor/vutils';\nimport type { IModelRenderOption, IModelSpecInfo } from '../../model/interface';\nimport type { IRegion } from '../../region/interface';\nimport type { ICartesianSeries } from '../../series/interface';\nimport type { CoordinateType, ILayoutRect, ILayoutType, IRect, StringOrNumber } from '../../typings';\nimport { BaseComponent } from '../base/base-component';\nimport type {\n  IAggrType,\n  IDataPos,\n  IDataPosCallback,\n  IMarkerAttributeContext,\n  IMarkerSpec,\n  IMarkerSupportSeries,\n  IMarkProcessOptions\n} from './interface';\nimport type { IGraphic, IGroup } from '@visactor/vrender-core';\nimport { calcLayoutNumber } from '../../util/space';\nimport { isAggrSpec } from './utils';\nimport { getFirstSeries } from '../../util';\nimport { arrayParser } from '../../data/parser/array';\nimport { getSpecInfo } from '../util';\nimport type { IOptionWithCoordinates } from '../../data/transforms/interface';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { markerAggregation } from '../../data/transforms/aggregation';\nimport { markerFilter } from '../../data/transforms/marker-filter';\n\nexport abstract class BaseMarker<T extends IMarkerSpec> extends BaseComponent<T> {\n  layoutType: ILayoutType | 'none' = 'none';\n\n  // 下面三个属性需要子组件复写\n  static specKey: string;\n  static type: string;\n  static coordinateType: string;\n  coordinateType: CoordinateType;\n\n  protected _startRelativeSeries!: IMarkerSupportSeries;\n  protected _endRelativeSeries!: IMarkerSupportSeries;\n  protected _relativeSeries!: IMarkerSupportSeries;\n  protected _specifiedDataSeries!: IMarkerSupportSeries | IMarkerSupportSeries[];\n  getRelativeSeries() {\n    return this._relativeSeries;\n  }\n\n  // marker 组件数据\n  protected _markerData!: DataView;\n  getMarkerData() {\n    return this._markerData;\n  }\n  // marker 组件\n  protected _markerComponent!: any;\n\n  protected _layoutOffsetX: number = 0;\n  protected _layoutOffsetY: number = 0;\n\n  private _firstSeries: ICartesianSeries;\n\n  protected abstract _initDataView(): void;\n  protected abstract _createMarkerComponent(): IGroup;\n  protected abstract _markerLayout(): void;\n  protected abstract _computeOptions(): IMarkProcessOptions;\n  // 该方法需要子组件复写\n  static _getMarkerCoordinateType(markerSpec: any): string {\n    return 'cartesian';\n  }\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    return getSpecInfo<IMarkerSpec>(chartSpec, this.specKey, this.type, (s: IMarkerSpec) => {\n      return s.visible !== false && this._getMarkerCoordinateType(s) === this.coordinateType;\n    });\n  }\n\n  protected _markAttributeContext: IMarkerAttributeContext;\n  getMarkAttributeContext() {\n    return this._markAttributeContext;\n  }\n\n  protected _buildMarkerAttributeContext() {\n    this._markAttributeContext = {\n      relativeSeries: this._relativeSeries,\n      startRelativeSeries: this._startRelativeSeries,\n      endRelativeSeries: this._endRelativeSeries,\n      vchart: this._option.globalInstance\n    };\n  }\n\n  created() {\n    super.created();\n    this._bindSeries();\n    this._initDataView();\n    this.initEvent();\n    this._buildMarkerAttributeContext();\n  }\n\n  protected _getAllRelativeSeries() {\n    return {\n      getRelativeSeries: () => this._relativeSeries,\n      getStartRelativeSeries: () => this._startRelativeSeries,\n      getEndRelativeSeries: () => this._endRelativeSeries\n    };\n  }\n\n  private _getFieldInfoFromSpec(\n    dim: 'x' | 'y' | 'angle' | 'radius' | 'areaName',\n    spec: IDataPos | IDataPosCallback,\n    relativeSeries: IMarkerSupportSeries\n  ) {\n    const specKeyByDim = {\n      x: 'xField',\n      y: 'yField',\n      radius: 'valueField',\n      angle: 'categoryField',\n      areaName: 'nameField'\n    };\n\n    if (isString(spec) && isAggrSpec(spec)) {\n      return {\n        field: relativeSeries.getSpec()[specKeyByDim[dim]],\n        aggrType: spec as unknown as IAggrType\n      };\n    }\n    return spec;\n  }\n\n  protected _processSpecByDims(\n    dimSpec: {\n      dim: 'x' | 'y' | 'angle' | 'radius' | 'areaName';\n      specValue: IDataPos | IDataPosCallback;\n    }[]\n  ) {\n    const relativeSeries = this._relativeSeries;\n    const dimMap = {};\n    dimSpec.forEach(d => (dimMap[d.dim] = this._getFieldInfoFromSpec(d.dim, d.specValue, relativeSeries)));\n    return {\n      ...dimMap,\n      ...this._getAllRelativeSeries()\n    };\n  }\n\n  protected _processSpecCoo(spec: any): IOptionWithCoordinates {\n    return {\n      coordinates: spec.coordinates || spec.coordinate,\n      ...this._getAllRelativeSeries(),\n      getSeriesByIdOrIndex: (seriesUserId: StringOrNumber, seriesIndex: number) =>\n        this._getSeriesByIdOrIndex(seriesUserId, seriesIndex),\n      coordinateType: this.coordinateType\n    };\n  }\n\n  protected _getRelativeDataView() {\n    if (this._specifiedDataSeries) {\n      let resultData: any[] = [];\n      array(this._specifiedDataSeries).forEach(series => {\n        resultData = resultData.concat(series.getViewData().latestData);\n      });\n      const dataSet = new DataSet();\n      dataSet.registerParser('array', arrayParser);\n      return new DataView(dataSet).parse(resultData, { type: 'array' });\n    }\n    return this._relativeSeries.getViewData();\n  }\n\n  updateLayoutAttribute(): void {\n    const markerVisible = this._spec.visible ?? true;\n    if (markerVisible) {\n      // 创建marker组件\n      if (!this._markerComponent) {\n        const markerComponent = this._createMarkerComponent();\n        markerComponent.name = this._spec.name ?? this.type;\n        markerComponent.id = this._spec.id ?? `${this.type}-${this.id}`;\n        this._markerComponent = markerComponent;\n\n        this.getContainer().add(this._markerComponent);\n        // 代理 marker 组件上的事件\n        this._markerComponent.on('*', (event: any, type: string) => {\n          this._delegateEvent(\n            this._markerComponent as unknown as IGraphic,\n            event,\n            type,\n            null,\n            this.getMarkerData.bind(this)\n          );\n        });\n      }\n      this._markerLayout();\n    }\n\n    super.updateLayoutAttribute();\n  }\n\n  private _getSeriesByIdOrIndex(seriesUserId: StringOrNumber, seriesIndex: number) {\n    let series: IMarkerSupportSeries;\n    series = this._option.getSeriesInUserIdOrIndex(isValid(seriesUserId) ? [seriesUserId] : [], [\n      seriesIndex\n    ])?.[0] as IMarkerSupportSeries;\n    if (!series) {\n      series = this._relativeSeries ?? this._getFirstSeries();\n    }\n    return series;\n  }\n\n  protected _bindSeries() {\n    const spec: any = this._spec;\n    this._relativeSeries = this._getSeriesByIdOrIndex(spec.relativeSeriesId, spec.relativeSeriesIndex);\n    this._startRelativeSeries = this._getSeriesByIdOrIndex(spec.startRelativeSeriesId, spec.startRelativeSeriesIndex);\n    this._endRelativeSeries = this._getSeriesByIdOrIndex(spec.endRelativeSeriesId, spec.endRelativeSeriesIndex);\n    if (\n      (spec.specifiedDataSeriesIndex && spec.specifiedDataSeriesIndex === 'all') ||\n      (spec.specifiedDataSeriesId && spec.specifiedDataSeriesId === 'all')\n    ) {\n      this._specifiedDataSeries = this._option.getAllSeries() as IMarkerSupportSeries[];\n    } else if (spec.specifiedDataSeriesIndex || spec.specifiedDataSeriesId) {\n      this._specifiedDataSeries = this._getSeriesByIdOrIndex(spec.specifiedDataSeriesId, spec.specifiedDataSeriesIndex);\n    }\n  }\n\n  protected initEvent() {\n    // 在极坐标系/地理坐标系中, 滚动或缩放画布不会update layout, 所以需要通过事件监听来更新标注的位置\n    // 在直角坐标系中, update layout中已经更新标注位置, 在这里不需要重复监听\n    if (this._relativeSeries.coordinate !== 'cartesian') {\n      this._relativeSeries.event.on('zoom', this._markerLayout.bind(this));\n      this._relativeSeries.event.on('panmove', this._markerLayout.bind(this));\n      this._relativeSeries.event.on('scroll', this._markerLayout.bind(this));\n    }\n  }\n\n  clear(): void {\n    super.clear();\n    this._firstSeries = null;\n  }\n\n  private _getFirstSeries(): ICartesianSeries {\n    if (this._firstSeries) {\n      return this._firstSeries;\n    }\n    const firstSeries = getFirstSeries(this._regions) as ICartesianSeries;\n    if (firstSeries) {\n      this._firstSeries = firstSeries;\n      return firstSeries;\n    }\n    this._option?.onError('need at least one series');\n    return null;\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return [this._markerComponent] as unknown as IGroup[];\n  }\n\n  onLayoutStart(layoutRect: IRect, chartViewRect: ILayoutRect): void {\n    // offset\n    if (!isNil(this._spec.offsetX)) {\n      this._layoutOffsetX = calcLayoutNumber(this._spec.offsetX, chartViewRect.width, chartViewRect);\n    }\n    if (!isNil(this._spec.offsetY)) {\n      this._layoutOffsetY = calcLayoutNumber(this._spec.offsetY, chartViewRect.height, chartViewRect);\n    }\n    super.onLayoutStart(layoutRect, chartViewRect);\n  }\n\n  _compareSpec(spec: T, prevSpec: T) {\n    const result = super._compareSpec(spec, prevSpec);\n    if (!isEqual(prevSpec, spec)) {\n      result.reRender = true;\n      result.reMake = true;\n      result.change = true;\n    }\n    return result;\n  }\n\n  _initCommonDataView() {\n    const { options } = this._computeOptions();\n\n    const seriesData = this._getRelativeDataView();\n    registerDataSetInstanceTransform(this._option.dataSet, 'markerAggregation', markerAggregation);\n    registerDataSetInstanceTransform(this._option.dataSet, 'markerFilter', markerFilter);\n    const data = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_data` });\n    data.parse([seriesData], {\n      type: 'dataview'\n    });\n    data.transform({\n      type: 'markerAggregation',\n      options\n    });\n\n    data.transform({\n      type: 'markerFilter',\n      options: this._getAllRelativeSeries()\n    });\n\n    data.target.on('change', () => {\n      this._markerLayout();\n    });\n    this._markerData = data;\n  }\n}\n"]}