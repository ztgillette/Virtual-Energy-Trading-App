{"version":3,"sources":["../src/component/legend/continuous/util.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,OAAO,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AAC3F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAClF,OAAO,EAAE,8BAA8B,EAAE,MAAM,SAAS,CAAC;AAGzD,MAAM,UAAU,6BAA6B,CAAC,IAAwC;IACpF,MAAM,KA6BF,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,EA7BjB,EAEJ,KAAK,GAAG,EAAE,EACV,OAAO,GAAG,EAAE,EACZ,IAAI,GAAG,EAAE,EACT,KAAK,GAAG,EAAE,EACV,SAAS,EACT,OAAO,EACP,WAAW,EACX,cAAc,EACd,UAAU,GAAG,EAAE,EAGf,IAAI,EACJ,EAAE,EACF,OAAO,EACP,MAAM,EACN,QAAQ,EACR,IAAI,EACJ,eAAe,EACf,KAAK,EACL,MAAM,EACN,QAAQ,EACR,WAAW,EACX,WAAW,EACX,QAAQ,EACR,OAAO,OAGc,EADlB,QAAQ,cA5BP,0QA6BL,CAAsB,CAAC;IAExB,MAAM,KAAK,GAAG,QAAQ,CAAC;IAGvB,IAAI,KAAK,CAAC,OAAO,EAAE;QACjB,KAAK,CAAC,KAAK,GAAG,8BAA8B,CAAC,KAAK,CAAC,CAAC;KACrD;SAAM;QACL,KAAK,CAAC,KAAK,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;KAClC;IAGD,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;IAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC3B,KAAK,CAAC,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACxD;IACD,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACvB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;KAC9B;IACD,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QACxB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;KAChC;IACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACxB,KAAK,CAAC,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClD;IACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACzB,KAAK,CAAC,UAAU,GAAG,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACpD;IAED,KAAK,CAAC,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;IACrD,KAAK,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;IACjD,KAAK,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;IAEzD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;QAC5B,KAAK,CAAC,cAAc,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;KAC3D;IAED,IAAI,UAAU,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;QACpD,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC/B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;SACpC;KACF;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,IAAY;IAC7C,OAAO,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,MAAM,CAAC;AAC7C,CAAC;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,KAAK,EAAE,qBAAqB;IAC5B,IAAI,EAAE,oBAAoB;CAC3B,CAAC","file":"util.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type { IColorLegendSpec, ISizeLegendSpec } from './interface';\nimport { ColorContinuousLegend, SizeContinuousLegend } from '@visactor/vrender-components';\nimport { isEmpty, isValid } from '@visactor/vutils';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { transformComponentStyle, transformToGraphic } from '../../../util/style';\nimport { transformLegendTitleAttributes } from '../util';\n\n// 获取连续图例组件属性\nexport function getContinuousLegendAttributes(spec: IColorLegendSpec | ISizeLegendSpec) {\n  const {\n    // 需要进行样式转换的属性\n    title = {},\n    handler = {},\n    rail = {},\n    track = {},\n    startText,\n    endText,\n    handlerText,\n    sizeBackground,\n    background = {},\n\n    // 以下不属于 legend 需要的属性，单独拿出来以免污染传递给组件的属性\n    type,\n    id,\n    visible,\n    orient,\n    position,\n    data,\n    defaultSelected,\n    field,\n    filter,\n    regionId,\n    regionIndex,\n    seriesIndex,\n    seriesId,\n    padding, // vchart 布局模块已经处理了\n\n    ...restSpec\n  } = mergeSpec({}, spec);\n\n  const attrs = restSpec;\n\n  // transform title\n  if (title.visible) {\n    attrs.title = transformLegendTitleAttributes(title);\n  } else {\n    attrs.title = { visible: false };\n  }\n\n  // handlerStyle\n  attrs.showHandler = handler.visible !== false;\n  if (!isEmpty(handler.style)) {\n    attrs.handlerStyle = transformToGraphic(handler.style);\n  }\n  if (isValid(rail.width)) {\n    attrs.railWidth = rail.width;\n  }\n  if (isValid(rail.height)) {\n    attrs.railHeight = rail.height;\n  }\n  if (!isEmpty(rail.style)) {\n    attrs.railStyle = transformToGraphic(rail.style);\n  }\n  if (!isEmpty(track.style)) {\n    attrs.trackStyle = transformToGraphic(track.style);\n  }\n\n  attrs.startText = transformComponentStyle(startText);\n  attrs.endText = transformComponentStyle(endText);\n  attrs.handlerText = transformComponentStyle(handlerText);\n\n  if (!isEmpty(sizeBackground)) {\n    attrs.sizeBackground = transformToGraphic(sizeBackground);\n  }\n\n  if (background.visible && !isEmpty(background.style)) {\n    mergeSpec(attrs, background.style);\n    if (isValid(background.padding)) {\n      attrs.padding = background.padding;\n    }\n  }\n\n  return attrs;\n}\n\nexport function isContinuousLegend(type: string) {\n  return type === 'color' || type === 'size';\n}\n\nexport const ContinuousLegendMap = {\n  color: ColorContinuousLegend,\n  size: SizeContinuousLegend\n};\n"]}