{"version":3,"sources":["../src/compile/state-manager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGnD,MAAM,OAAO,YAAa,SAAQ,cAAc;IAC9C,OAAO;IAEP,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAGS,mBAAmB;QAC3B,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,YAAY,OAA8B;QACxC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,YAAY,CAAC,KAAqB;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IACvD,CAAC;IAGD,WAAW,CAAC,QAAgC,EAAE,QAAkB;QAC9D,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEhC,IAAI,QAAQ,EAAE;YACZ,OAAO;SACR;QACD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;CACF","file":"state-manager.js","sourcesContent":["import { merge } from '@visactor/vutils';\nimport { CompilableBase } from './compilable-base';\nimport type { ICompilableInitOption, StateValueMap } from './interface/compilable-item';\n\nexport class StateManager extends CompilableBase {\n  compile(): void {\n    // Implementation of the compile method\n  }\n  protected _stateMap: StateValueMap;\n  getStateMap() {\n    return this._stateMap;\n  }\n\n  /** 默认 state map */\n  protected _getDefaultStateMap(): StateValueMap {\n    return {};\n  }\n\n  constructor(options: ICompilableInitOption) {\n    super(options);\n    this.initStateMap();\n  }\n\n  /** 初始化 state map */\n  initStateMap(state?: StateValueMap) {\n    this._stateMap = state ?? this._getDefaultStateMap();\n  }\n\n  /** 更新 state 并默认触发重渲染 */\n  updateState(newState: Partial<StateValueMap>, noRender?: boolean) {\n    if (!newState) {\n      return;\n    }\n    merge(this._stateMap, newState);\n\n    if (noRender) {\n      return;\n    }\n    return this.getCompiler().renderNextTick();\n  }\n}\n"]}