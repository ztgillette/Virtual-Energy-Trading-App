{"version":3,"sources":["../src/compile/mark/util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAE/C,MAAM,UAAU,gBAAgB,CAAI,GAAW,EAAE,UAA8B;;IAC7E,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;QAC9B,IAAI,KAAK,KAAK,gBAAgB,CAAC,YAAY,EAAE;YAC3C,MAAM,KAAK,GAAG,MAAA,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,0CAAE,KAAK,CAAC;YAC5C,MAAM,UAAU,GAAG,mBAAmB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,UAAU,EAAE;gBACd,OAAO,IAAI,CAAC;aACb;YACD,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,eAAe,EAAE;gBACnB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,OAAO,GAAG,CAAC,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAA,CAAC;YAC/B,IAAI,OAAO,EAAE;gBACX,OAAO,IAAI,CAAC;aACb;YACD,SAAS;SACV;QACD,IAAI,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAI,GAAW,EAAE,UAA8B,EAAE,UAAkB;;IACtG,MAAM,KAAK,GAAG,MAAA,UAAU,CAAC,GAAG,CAAC,0CAAE,KAAK,CAAC;IACrC,MAAM,UAAU,GAAG,mBAAmB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACnD,IAAI,UAAU,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IACD,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1C,IAAI,eAAe,EAAE;QACnB,OAAO,IAAI,CAAC;KACb;IACD,MAAM,OAAO,GAAG,CAAC,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAA,CAAC;IAC/B,IAAI,OAAO,EAAE;QACX,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,mBAAmB,CAAC,GAAW,EAAE,KAAU;IAClD,OAAO,CAAC,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,QAAQ,CAAC,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAA,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAA,CAAC;AACjF,CAAC;AAED,MAAM,wBAAwB,GAA4B,EAAE,CAAC;AAC7D,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC1C,wBAAwB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACrC,CAAC,CAAC,CAAC;AAEH,MAAM,UAAU,kBAAkB,CAAC,KAAa;IAC9C,OAAO,CAAC,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,8BAA8B,GAA2B;IAC7D,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,gBAAgB,CAAC,mBAAmB;IACpE,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,gBAAgB,CAAC,sBAAsB;IAC1E,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,EAAE,gBAAgB,CAAC,6BAA6B;CACzF,CAAC;AAEF,MAAM,UAAU,cAAc,CAAC,KAAa;IAC1C,OAAO,8BAA8B,CAAC,KAAK,CAAC,CAAC;AAC/C,CAAC","file":"util.js","sourcesContent":["import { isFunction } from '@visactor/vutils';\nimport type { IAttrs, IMarkStateStyle } from '../../mark/interface';\nimport { STATE_VALUE_ENUM } from './interface';\n\nexport function isAttrChangeable<T>(key: string, stateStyle: IMarkStateStyle<T>) {\n  for (const state in stateStyle) {\n    if (state === STATE_VALUE_ENUM.STATE_NORMAL) {\n      const style = stateStyle[state][key]?.style;\n      const isGradient = isGradientAttribute(key, style);\n      if (isGradient) {\n        return true;\n      }\n      const isFunctionStyle = isFunction(style);\n      if (isFunctionStyle) {\n        return true;\n      }\n      const isScale = !!style?.scale;\n      if (isScale) {\n        return true;\n      }\n      continue;\n    }\n    if (key in stateStyle[state]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isStateAttrChangeable<T>(key: string, stateStyle: Partial<IAttrs<T>>, facetField: string) {\n  const style = stateStyle[key]?.style;\n  const isGradient = isGradientAttribute(key, style);\n  if (isGradient) {\n    return true;\n  }\n  const isFunctionStyle = isFunction(style);\n  if (isFunctionStyle) {\n    return true;\n  }\n  const isScale = !!style?.scale;\n  if (isScale) {\n    if (style.field !== facetField) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isGradientAttribute(key: string, style: any) {\n  return (key === 'fill' || key === 'stroke') && style?.gradient && style?.stops;\n}\n\nconst DEFAULT_STATE_VALUE_ENUM: Record<string, boolean> = {};\nObject.values(STATE_VALUE_ENUM).forEach(v => {\n  DEFAULT_STATE_VALUE_ENUM[v] = true;\n});\n\nexport function stateInDefaultEnum(state: string) {\n  return !!DEFAULT_STATE_VALUE_ENUM[state];\n}\n\nconst DEFAULT_STATE_VALUE_TO_REVERSE: Record<string, string> = {\n  [STATE_VALUE_ENUM.STATE_HOVER]: STATE_VALUE_ENUM.STATE_HOVER_REVERSE,\n  [STATE_VALUE_ENUM.STATE_SELECTED]: STATE_VALUE_ENUM.STATE_SELECTED_REVERSE,\n  [STATE_VALUE_ENUM.STATE_DIMENSION_HOVER]: STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE\n};\n\nexport function stateToReverse(state: string) {\n  return DEFAULT_STATE_VALUE_TO_REVERSE[state];\n}\n"]}