import { defaultThemeName, getTheme, registerTheme, removeTheme, themeExist, themes } from "./builtin";

import { InstanceManager } from "../core/instance-manager";

export class ThemeManager {
    static registerTheme(name, theme) {
        registerTheme(name, theme);
    }
    static getTheme(name, transformed = !1) {
        return getTheme(name);
    }
    static removeTheme(name) {
        return removeTheme(name);
    }
    static themeExist(name) {
        return themeExist(name);
    }
    static getDefaultTheme() {
        return ThemeManager.themes.get(defaultThemeName);
    }
    static setCurrentTheme(name) {
        ThemeManager.themeExist(name) && (ThemeManager._currentThemeName = name, InstanceManager.forEach((instance => null == instance ? void 0 : instance.setCurrentTheme(name))));
    }
    static getCurrentTheme(transformed = !1) {
        return ThemeManager.getTheme(ThemeManager._currentThemeName, transformed);
    }
    static getCurrentThemeName() {
        return ThemeManager._currentThemeName;
    }
}

ThemeManager.themes = themes, ThemeManager._currentThemeName = defaultThemeName;
//# sourceMappingURL=theme-manager.js.map
