{"version":3,"sources":["../src/chart/sunburst/sunburst-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAEnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAKzD,MAAM,OAAO,4BAEX,SAAQ,wBAA2B;IACzB,qBAAqB,CAAC,IAAO;QAErC,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAElF,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAEnG,MAAM,MAAM,GAAwB,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACpE,eAAe;YACf,YAAY;YACZ,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,aAAa;YACb,aAAa;YACb,KAAK;YACL,aAAa;YACb,OAAO;YACP,kBAAkB;YAClB,OAAO;YACP,YAAY;SACb,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE3B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACF","file":"sunburst-transformer.js","sourcesContent":["import { isValid, radianToDegree } from '@visactor/vutils';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { ISunburstChartSpec } from './interface';\nimport { POLAR_START_ANGLE } from '../../constant/polar';\nimport type { ISunburstSeriesSpec } from '../../series';\n// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../../series';\n\nexport class SunburstChartSpecTransformer<\n  T extends ISunburstChartSpec = ISunburstChartSpec\n> extends BaseChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T) {\n    // 开始角度默认使用用户配置\n    const startAngle = isValid(spec.startAngle) ? spec.startAngle : POLAR_START_ANGLE;\n    // 结束角度默认使用用户的配置, 若用户没配置, 默认补成整圆.\n    const endAngle = isValid(spec.endAngle) ? spec.endAngle : startAngle + radianToDegree(Math.PI * 2);\n\n    const series: ISunburstSeriesSpec = super._getDefaultSeriesSpec(spec, [\n      'categoryField',\n      'valueField',\n      'centerX',\n      'centerY',\n      'offsetX',\n      'offsetY',\n      'innerRadius',\n      'outerRadius',\n      'gap',\n      'labelLayout',\n      'label',\n      'labelAutoVisible',\n      'drill',\n      'drillField'\n    ]);\n\n    series.startAngle = startAngle;\n    series.endAngle = endAngle;\n\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    this.transformSeriesSpec(spec);\n  }\n}\n"]}