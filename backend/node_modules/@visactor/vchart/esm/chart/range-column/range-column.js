import { SeriesTypeEnum } from "../../series/interface/type";

import { Factory } from "../../core/factory";

import { registerRangeColumnSeries } from "../../series/range-column/range-column";

import { RangeColumnChartSpecTransformer } from "./range-column-transformer";

import { BaseChart } from "../base";

import { registerDimensionHover } from "../../interaction/triggers/dimension-hover";

import { registerDimensionEvents } from "../../event/events";

import { getCartesianDimensionInfo, getDimensionInfoByValue } from "../../event/events/dimension/util/cartesian";

import { getCartesianCrosshairRect } from "../../component/crosshair/utils/cartesian";

import { registerDimensionTooltipProcessor } from "../../component/tooltip/processor/dimension-tooltip";

import { registerMarkTooltipProcessor } from "../../component/tooltip/processor/mark-tooltip";

export class RangeColumnChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = RangeColumnChartSpecTransformer, 
        this.type = "rangeColumn", this.seriesType = SeriesTypeEnum.rangeColumn;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;
    }
}

RangeColumnChart.type = "rangeColumn", RangeColumnChart.seriesType = SeriesTypeEnum.rangeColumn, 
RangeColumnChart.transformerConstructor = RangeColumnChartSpecTransformer;

export const registerRangeColumnChart = () => {
    registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), registerDimensionEvents(), 
    registerDimensionHover(), registerRangeColumnSeries(), Factory.registerChart(RangeColumnChart.type, RangeColumnChart);
};
//# sourceMappingURL=range-column.js.map
