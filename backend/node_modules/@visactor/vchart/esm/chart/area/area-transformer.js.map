{"version":3,"sources":["../src/chart/area/area-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,oCAAoC,EAAE,MAAM,SAAS,CAAC;AAG/D,MAAM,OAAO,wBAEX,SAAQ,6BAAgC;IAC9B,qBAAqB,CAAC,IAAO;QACrC,OAAO,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACvC,OAAO;YACP,MAAM;YACN,MAAM;YACN,YAAY;YACZ,aAAa;YACb,UAAU;YACV,gBAAgB;YAChB,UAAU;YACV,aAAa;YACb,aAAa;YACb,WAAW;YACX,wBAAwB;SACzB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,oCAAoC,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","file":"area-transformer.js","sourcesContent":["import { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { IAreaChartSpec } from './interface';\n\nexport class AreaChartSpecTransformer<\n  T extends IAreaChartSpec = IAreaChartSpec\n> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    return super._getDefaultSeriesSpec(spec, [\n      'point',\n      'line',\n      'area',\n      'seriesMark',\n      'activePoint',\n      'sampling',\n      'samplingFactor',\n      'pointDis',\n      'pointDisMul',\n      'markOverlap',\n      'areaLabel',\n      'useSequentialAnimation'\n    ]);\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}