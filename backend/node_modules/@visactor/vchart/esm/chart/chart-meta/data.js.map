{"version":3,"sources":["../src/chart/chart-meta/data.ts"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["import { array } from '@visactor/vutils';\nimport type { IData } from './../../typings/spec/common';\nimport { DataView } from '@visactor/vdataset';\n// eslint-disable-next-line no-duplicate-imports\nimport type { DataSet } from '@visactor/vdataset';\nimport type { IDataValues, StringOrNumber } from '../../typings';\nimport { dataToDataView, updateDataViewInData } from '../../data/initialize';\nimport { warn } from '../../util/debug';\nexport class ChartData {\n  protected _dataArr: DataView[] = [];\n  get dataList() {\n    return this._dataArr;\n  }\n\n  protected _dataSet: DataSet;\n\n  constructor(dataSet: DataSet) {\n    this._dataSet = dataSet;\n  }\n\n  parseData(dataSpec: IData) {\n    this._dataArr = [];\n    const list = array(dataSpec);\n    for (let i = 0; i < list.length; i++) {\n      this._dataArr.push(dataToDataView(list[i], this._dataSet, this._dataArr));\n    }\n  }\n\n  updateData(dataSpec: IData, fullUp: boolean = false, forceMerge: boolean = true) {\n    const list = array(dataSpec);\n    if (fullUp && list.length !== this._dataArr.length) {\n      return false;\n    }\n    this._dataValueForEach(list, (_data, dv) => {\n      dv.markRunning();\n    });\n    this._dataValueForEach(list, (data, dv) => {\n      updateDataViewInData(dv, data, forceMerge);\n    });\n    return true;\n  }\n\n  private _dataValueForEach(\n    list: (IDataValues | DataView)[],\n    callBack: (data: IDataValues, dv: DataView, index: number) => void\n  ) {\n    list.forEach((data, i) => {\n      if (data instanceof DataView) {\n        // ignore DataView, it should be update by use DataView api\n        return;\n      }\n      const dv = this.getSeriesData(data.id, i);\n      if (!dv) {\n        return;\n      }\n\n      callBack(data, dv, i);\n    });\n  }\n\n  getSeriesData(id: StringOrNumber | undefined, index: number | undefined): DataView | undefined {\n    if (!this._dataArr.length) {\n      return null;\n    }\n\n    // dataId 优先\n    if (typeof id === 'string') {\n      const metchData = this._dataArr.filter((data: any) => {\n        return data.name === id;\n      });\n\n      if (metchData[0]) {\n        return metchData[0];\n      }\n      warn(`no data matches dataId ${id}!`);\n    }\n\n    // 其次使用dataIndex\n    if (typeof index === 'number') {\n      if (this._dataArr[index]) {\n        return this._dataArr[index];\n      }\n\n      warn(`no data matches dataIndex ${index}!`);\n    }\n\n    // 最后返回第一条数据\n    return this._dataArr[0];\n  }\n}\n"]}