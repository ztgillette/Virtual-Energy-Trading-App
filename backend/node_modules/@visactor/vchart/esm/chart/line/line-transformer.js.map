{"version":3,"sources":["../src/chart/line/line-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,oCAAoC,EAAE,MAAM,SAAS,CAAC;AAG/D,MAAM,OAAO,wBAAmD,SAAQ,6BAAgC;IAC5F,qBAAqB,CAAC,IAAO;;QACrC,MAAM,UAAU,GAAG,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACnD,OAAO;YACP,MAAM;YACN,aAAa;YACb,UAAU;YACV,gBAAgB;YAChB,UAAU;YACV,aAAa;YACb,aAAa;YACb,WAAW;SACZ,CAAC,CAAC;QACH,UAAU,CAAC,UAAU,GAAG,MAAA,IAAI,CAAC,UAAU,mCAAI,MAAM,CAAC;QAClD,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,oCAAoC,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","file":"line-transformer.js","sourcesContent":["import { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { ILineChartSpec } from './interface';\n\nexport class LineChartSpecTransformer<T extends ILineChartSpec> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const seriesSpec = super._getDefaultSeriesSpec(spec, [\n      'point',\n      'line',\n      'activePoint',\n      'sampling',\n      'samplingFactor',\n      'pointDis',\n      'pointDisMul',\n      'markOverlap',\n      'lineLabel'\n    ]);\n    seriesSpec.seriesMark = spec.seriesMark ?? 'line';\n    return seriesSpec;\n  }\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}