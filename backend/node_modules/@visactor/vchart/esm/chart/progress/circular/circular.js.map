{"version":3,"sources":["../src/chart/progress/circular/circular.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAEhE,OAAO,EAAE,8BAA8B,EAAE,MAAM,mCAAmC,CAAC;AACnF,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAEhD,OAAO,EAAE,oCAAoC,EAAE,MAAM,iCAAiC,CAAC;AAEvF,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,+CAA+C,CAAC;AACvF,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AACnF,OAAO,EAAE,iCAAiC,EAAE,MAAM,wDAAwD,CAAC;AAC3G,OAAO,EAAE,4BAA4B,EAAE,MAAM,mDAAmD,CAAC;AAEjG,MAAM,OAAO,qBAAyF,SAAQ,SAE7G;IAFD;;QAMW,2BAAsB,GAAG,oCAAoC,CAAC;QAC9D,SAAI,sBAA0C;QAC9C,eAAU,GAAW,cAAc,CAAC,gBAAgB,CAAC;IAKhE,CAAC;IAHW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qBAAqB,CAAC;IAC7D,CAAC;;AATe,0BAAI,sBAA0C;AAC9C,gCAAU,GAAW,cAAc,CAAC,gBAAgB,CAAC;AACrD,4CAAsB,GAAG,oCAAoC,CAAC;AAUhF,KAAK,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;AAE9C,MAAM,CAAC,MAAM,6BAA6B,GAAG,GAAG,EAAE;IAChD,iCAAiC,EAAE,CAAC;IACpC,4BAA4B,EAAE,CAAC;IAC/B,uBAAuB,EAAE,CAAC;IAC1B,sBAAsB,EAAE,CAAC;IACzB,8BAA8B,EAAE,CAAC;IACjC,OAAO,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;AAC3E,CAAC,CAAC","file":"circular.js","sourcesContent":["import { SeriesTypeEnum } from '../../../series/interface/type';\nimport { ChartTypeEnum } from '../../interface';\nimport { registerCircularProgressSeries } from '../../../series/progress/circular';\nimport { Factory } from '../../../core/factory';\nimport type { ICircularProgressChartSpec } from './interface';\nimport { CircularProgressChartSpecTransformer } from './circular-progress-transformer';\nimport type { AdaptiveSpec } from '../../../typings';\nimport { BaseChart } from '../../base';\nimport { StackChartMixin } from '../../stack';\nimport { mixin } from '@visactor/vutils';\nimport { registerDimensionHover } from '../../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../../event/events';\nimport { getPolarDimensionInfo } from '../../../event/events/dimension/util/polar';\nimport { registerDimensionTooltipProcessor } from '../../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../../component/tooltip/processor/mark-tooltip';\n\nexport class CircularProgressChart<T extends ICircularProgressChartSpec = ICircularProgressChartSpec> extends BaseChart<\n  AdaptiveSpec<T, 'axes'>\n> {\n  static readonly type: string = ChartTypeEnum.circularProgress;\n  static readonly seriesType: string = SeriesTypeEnum.circularProgress;\n  static readonly transformerConstructor = CircularProgressChartSpecTransformer;\n  readonly transformerConstructor = CircularProgressChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.circularProgress;\n  readonly seriesType: string = SeriesTypeEnum.circularProgress;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getPolarDimensionInfo;\n  }\n}\n\nmixin(CircularProgressChart, StackChartMixin);\n\nexport const registerCircularProgressChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerCircularProgressSeries();\n  Factory.registerChart(CircularProgressChart.type, CircularProgressChart);\n};\n"]}