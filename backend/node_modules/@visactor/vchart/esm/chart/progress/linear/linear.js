import { SeriesTypeEnum } from "../../../series/interface/type";

import { registerLinearProgressSeries } from "../../../series/progress/linear";

import { Factory } from "../../../core/factory";

import { LinearProgressChartSpecTransformer } from "./linear-progress-transformer";

import { BaseChart } from "../../base";

import { StackChartMixin } from "../../stack";

import { mixin } from "@visactor/vutils";

import { registerDimensionHover } from "../../../interaction/triggers/dimension-hover";

import { registerDimensionEvents } from "../../../event/events";

import { getCartesianDimensionInfo, getDimensionInfoByValue } from "../../../event/events/dimension/util/cartesian";

import { getCartesianCrosshairRect } from "../../../component/crosshair/utils/cartesian";

import { registerDimensionTooltipProcessor } from "../../../component/tooltip/processor/dimension-tooltip";

import { registerMarkTooltipProcessor } from "../../../component/tooltip/processor/mark-tooltip";

export class LinearProgressChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = LinearProgressChartSpecTransformer, 
        this.type = "linearProgress", this.seriesType = SeriesTypeEnum.linearProgress;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;
    }
}

LinearProgressChart.type = "linearProgress", LinearProgressChart.seriesType = SeriesTypeEnum.linearProgress, 
LinearProgressChart.transformerConstructor = LinearProgressChartSpecTransformer, 
mixin(LinearProgressChart, StackChartMixin);

export const registerLinearProgressChart = () => {
    registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), registerDimensionEvents(), 
    registerDimensionHover(), registerLinearProgressSeries(), Factory.registerChart(LinearProgressChart.type, LinearProgressChart);
};
//# sourceMappingURL=linear.js.map
