import { registerRoseSeries } from "../../series/rose/rose";

import { SeriesTypeEnum } from "../../series/interface/type";

import { Factory } from "../../core/factory";

import { RoseChartSpecTransformer } from "./rose-transformer";

import { BaseChart } from "../base";

import { StackChartMixin } from "../stack";

import { mixin } from "@visactor/vutils";

import { registerDimensionHover } from "../../interaction/triggers/dimension-hover";

import { registerDimensionEvents } from "../../event/events";

import { getPolarDimensionInfo } from "../../event/events/dimension/util/polar";

import { registerDimensionTooltipProcessor } from "../../component/tooltip/processor/dimension-tooltip";

import { registerMarkTooltipProcessor } from "../../component/tooltip/processor/mark-tooltip";

export class RoseChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = RoseChartSpecTransformer, this.type = "rose", 
        this.seriesType = SeriesTypeEnum.rose;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getPolarDimensionInfo;
    }
}

RoseChart.type = "rose", RoseChart.seriesType = SeriesTypeEnum.rose, RoseChart.transformerConstructor = RoseChartSpecTransformer, 
mixin(RoseChart, StackChartMixin);

export const registerRoseChart = () => {
    registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), registerDimensionEvents(), 
    registerDimensionHover(), registerRoseSeries(), Factory.registerChart(RoseChart.type, RoseChart);
};
//# sourceMappingURL=rose.js.map
