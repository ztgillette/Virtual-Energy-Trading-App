{"version":3,"sources":["../src/chart/radar/radar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAE7D,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,OAAO,EAAE,yBAAyB,EAAE,MAAM,qBAAqB,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AACpC,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAC3C,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,4CAA4C,CAAC;AACpF,OAAO,EAAE,uBAAuB,EAAE,MAAM,oBAAoB,CAAC;AAC7D,OAAO,EAAE,qBAAqB,EAAE,MAAM,yCAAyC,CAAC;AAChF,OAAO,EAAE,iCAAiC,EAAE,MAAM,qDAAqD,CAAC;AACxG,OAAO,EAAE,4BAA4B,EAAE,MAAM,gDAAgD,CAAC;AAC9F,OAAO,EAAE,6BAA6B,EAAE,MAAM,iDAAiD,CAAC;AAEhG,MAAM,OAAO,UAAsD,SAAQ,SAAY;IAAvF;;QAKW,2BAAsB,GAAG,yBAAyB,CAAC;QACnD,SAAI,WAA+B;QACnC,eAAU,GAAW,cAAc,CAAC,KAAK,CAAC;IAKrD,CAAC;IAHW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qBAAqB,CAAC;IAC7D,CAAC;;AAVe,eAAI,WAA+B;AACnC,qBAAU,GAAW,cAAc,CAAC,KAAK,CAAC;AAC1C,iCAAsB,GAAG,yBAAyB,CAAC;AAWrE,KAAK,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AAEnC,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,iCAAiC,EAAE,CAAC;IACpC,4BAA4B,EAAE,CAAC;IAC/B,6BAA6B,EAAE,CAAC;IAChC,uBAAuB,EAAE,CAAC;IAC1B,sBAAsB,EAAE,CAAC;IACzB,mBAAmB,EAAE,CAAC;IACtB,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACrD,CAAC,CAAC","file":"radar.js","sourcesContent":["import { registerRadarSeries } from '../../series/radar/radar';\nimport { SeriesTypeEnum } from '../../series/interface/type';\nimport { ChartTypeEnum } from '../interface/type';\nimport { Factory } from '../../core/factory';\nimport type { IRoseChartSpec } from '../rose';\nimport { RadarChartSpecTransformer } from './radar-transformer';\nimport { BaseChart } from '../base';\nimport { StackChartMixin } from '../stack';\nimport { mixin } from '@visactor/vutils';\nimport { registerDimensionHover } from '../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../event/events';\nimport { getPolarDimensionInfo } from '../../event/events/dimension/util/polar';\nimport { registerDimensionTooltipProcessor } from '../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../component/tooltip/processor/mark-tooltip';\nimport { registerGroupTooltipProcessor } from '../../component/tooltip/processor/group-tooltip';\n\nexport class RadarChart<T extends IRoseChartSpec = IRoseChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartTypeEnum.radar;\n  static readonly seriesType: string = SeriesTypeEnum.radar;\n  static readonly transformerConstructor = RadarChartSpecTransformer;\n  // @ts-ignore\n  readonly transformerConstructor = RadarChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.radar;\n  readonly seriesType: string = SeriesTypeEnum.radar;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getPolarDimensionInfo;\n  }\n}\n\nmixin(RadarChart, StackChartMixin);\n\nexport const registerRadarChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerGroupTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerRadarSeries();\n  Factory.registerChart(RadarChart.type, RadarChart);\n};\n"]}