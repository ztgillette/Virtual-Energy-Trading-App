{"version":3,"sources":["../src/chart/sequence/sequence-transformer.ts"],"names":[],"mappings":"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","file":"sequence-transformer.js","sourcesContent":["import { array } from '@visactor/vutils';\nimport { DataView } from '@visactor/vdataset';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { ISequenceChartSpec, ISequenceSeriesSpec } from './interface';\nimport type { Datum, RegionSpec } from '../../typings';\nimport type { ICartesianAxisSpec, IScrollBarSpec } from '../../component';\nimport { SeriesTypeEnum } from '../../series';\nimport { normalizeLayoutPaddingSpec } from '../../util';\nimport type { IGridLayoutSpec } from '../../layout';\nimport { SCROLL_BAR_DEFAULT_SIZE } from '../../constant/scroll-bar';\n\nexport class SequenceChartSpecTransformer<\n  T extends ISequenceChartSpec = ISequenceChartSpec\n> extends BaseChartSpecTransformer<T> {\n  private _getSeriesDataLength(spec: T, seriesSpec: any) {\n    if (seriesSpec.data) {\n      const _d = array(seriesSpec.data)[0];\n      if (_d instanceof DataView) {\n        return _d.latestData?.length;\n      }\n      return _d.values?.length;\n    }\n    const dataTemp = array(spec.data).find((_d, index) => {\n      if (seriesSpec.dataId) {\n        if (_d instanceof DataView) {\n          return _d.name === seriesSpec.dataId;\n        }\n        return _d.id === seriesSpec.dataId;\n      }\n      return seriesSpec.dataIndex === index;\n    });\n    if (!dataTemp) {\n      return 0;\n    }\n    if (dataTemp instanceof DataView) {\n      return dataTemp.latestData.length;\n    }\n    return dataTemp.values.length;\n  }\n\n  addAttrToComponentSpec(componentSpec: any, attr: string, value: any) {\n    if (Array.isArray(componentSpec)) {\n      componentSpec[0][attr] = value;\n    } else {\n      componentSpec[attr] = value;\n    }\n    return componentSpec;\n  }\n\n  addPaddingRow(rowHeight: any[], rowNum: number, size: number) {\n    rowHeight.push({\n      index: rowNum,\n      size\n    });\n  }\n\n  addOrientAxes(region: RegionSpec[], elements: any[], rowNum: number, spec: T) {\n    // Tips: id should not has duplicate name\n    region.push({\n      id: `regionAxesRow${rowNum}`\n    });\n    elements.push({\n      modelId: `axesRow${rowNum}`,\n      col: 1,\n      row: rowNum\n    });\n    spec.axes[0].id = `axesRow${rowNum}`;\n    spec.axes[0].regionIndex = Array.from(Array(spec.series.length), (_, index) =>\n      spec.axes[0].orient === 'top' ? index + 1 : index\n    );\n  }\n\n  /**\n   * @override\n   * @description 主要是处理布局逻辑 & 部分仅针对sequenceChart的特殊属性\n   */\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n\n    // 初始化目标属性\n    let rowNum = 0;\n    const elements: any[] = [];\n    const region: RegionSpec[] = [];\n    const axes: ICartesianAxisSpec[] = [];\n    const scrollBar: IScrollBarSpec[] = [];\n    const rowHeight: any[] = [];\n\n    // FIXME: 重构之前这里取的是 chart 上的 this._layoutRect，这里有点问题。\n    // 重构之前 chart 上的 transformSpec() 本来就在布局之前执行，\n    // 原始代码中的 this._layoutRect 中取到的永远是常量 { width: 500, height: 500 }。\n    // 重构之后保留这个 mock 值，可以尽快修改下 @skie1997\n    const stage = this._option.getCompiler().getStage();\n\n    const viewLayoutRect = {\n      width: stage.viewWidth,\n      height: stage.viewHeight\n    };\n    let componentsHeight = 0;\n    const defaultcomponentsHeight = 60;\n    const defaultComponentRowHeight = 10;\n    if (spec?.legends) {\n      elements.push({\n        modelId: `legendRow${rowNum}`,\n        col: 1,\n        row: rowNum\n      });\n      this.addAttrToComponentSpec(spec.legends, 'id', `legendRow${rowNum}`);\n      // legend offset 和 padding 兼容处理\n      const legendSpec = array(spec.legends);\n      let legendHeight = (legendSpec[0].height as number) ?? 40;\n      if (legendSpec[0].padding) {\n        const legendPadding = normalizeLayoutPaddingSpec(legendSpec[0].padding);\n        legendHeight += Number(legendPadding?.bottom ?? 0);\n        legendHeight += Number(legendPadding?.top ?? 0);\n        legendSpec[0].offsetY = Number(legendSpec[0]?.offsetY ?? 0) + Number(legendPadding?.top ?? 0);\n      }\n      rowHeight.push({\n        index: rowNum,\n        size: legendHeight\n      });\n      componentsHeight += legendHeight;\n      rowNum++;\n    }\n\n    if (spec?.dataZoom) {\n      elements.push({\n        modelId: `dataZoomRow${rowNum}`,\n        col: 1,\n        row: rowNum\n      });\n      this.addAttrToComponentSpec(spec.dataZoom, 'id', `dataZoomRow${rowNum}`);\n      componentsHeight += defaultcomponentsHeight;\n      rowNum++;\n\n      // 增加空行，拟合series padding效果\n      this.addPaddingRow(rowHeight, rowNum, 10);\n      componentsHeight += defaultComponentRowHeight;\n      rowNum++;\n    }\n\n    // 遍历axes\n    // 1. 在elements中添加时间轴元素\n    // 2. 并统计rowNum\n    // 在sequenceChart中，axes有几种情况（本期考虑1/2/3，也就是默认只有1个top/bottom轴）：1.不声明axes 2.声明且为仅有一个top axes 3.声明且仅有一个bottom axes 4.多个axes组合\n    componentsHeight += defaultcomponentsHeight;\n    if (spec.axes === null || spec?.axes?.[0]?.orient === 'top') {\n      this.addOrientAxes(region, elements, rowNum, spec);\n      rowNum++;\n    }\n\n    // 计算默认series padding和series高度\n    const defaultSeriesPadding = 20;\n    const seriesRegionNum = spec.series.filter(d => d.type !== SeriesTypeEnum.link).length;\n    const defaultSeriesRowHeight =\n      (viewLayoutRect.height - componentsHeight - defaultSeriesPadding * seriesRegionNum) / seriesRegionNum;\n    const leftAppendPadding = spec?.appendPadding?.left || 0;\n    const rightAppendPadding = spec?.appendPadding?.right || 0;\n\n    // 遍历series\n    // 1. 在spec.layout => elements、region数组和spec.axes的数组中中添加元素\n    // 2. 为series绑定regionIndex\n    // 3. 统计rowNum\n    // 4. 用空行拟合series padding\n    spec?.series?.forEach((seriesSpec: ISequenceSeriesSpec) => {\n      if (\n        ([SeriesTypeEnum.bar, SeriesTypeEnum.line, SeriesTypeEnum.area, SeriesTypeEnum.dot] as string[]).includes(\n          seriesSpec.type\n        )\n      ) {\n        // elements数组\n        elements.push({\n          modelId: `${seriesSpec.type}Row${rowNum}`,\n          col: 1,\n          row: rowNum\n        });\n        elements.push({\n          modelId: `axesLeftRow${rowNum}`,\n          col: 0,\n          row: rowNum\n        });\n\n        // region数组\n        region.push({\n          id: `${seriesSpec.type}Row${rowNum}`,\n          clip: false\n        });\n\n        rowHeight.push({\n          index: rowNum,\n          size: seriesSpec?.height || defaultSeriesRowHeight\n        });\n\n        // axes数组添加left axes（每个series都需要一个left axes）\n        axes.push({\n          orient: 'left',\n          id: `axesLeftRow${rowNum}`,\n          type: seriesSpec.type === SeriesTypeEnum.dot ? 'band' : 'linear',\n          visible: seriesSpec.type !== SeriesTypeEnum.dot,\n\n          // 对于bar series，axes title模拟bar title\n          title: {\n            visible: true,\n            // 特殊处理时序图的 title 样式，默认的坐标轴左右轴会进行旋转\n            autoRotate: false,\n            style: {\n              text: (seriesSpec as any)?.barTitle,\n              dx: -20,\n              textBaseline: 'middle',\n              textAlign: 'end'\n            }\n          },\n          // 对于bar series，axes grid模拟series分割线\n          grid: {\n            visible:\n              typeof (seriesSpec as any)?.grid?.visible === 'boolean' ? (seriesSpec as any)?.grid?.visible : true, // bar grid默认绘制\n            style: (datum: Datum, index: number) => {\n              let lineWidth = 0;\n              if (index === 0) {\n                const style = (seriesSpec as any)?.grid?.style;\n\n                // 兼容一下spec中通过strokeWidth申明的方式\n                lineWidth = style?.lineWidth ?? style?.strokeWidth ?? 1;\n              }\n              return {\n                lineWidth,\n                stroke: (seriesSpec as any)?.grid?.style?.stroke || '#dfdfdf',\n                lineDash: [0, 0]\n              };\n            }\n          },\n          // 其他轴元素隐藏\n          domainLine: {\n            visible: false\n          },\n          tick: {\n            visible: false\n          },\n          label: {\n            visible: false\n          },\n\n          // 绑定regionIndex\n          regionIndex: region.length - 1\n        });\n\n        // scrollBar 内置\n        if (seriesSpec.type === SeriesTypeEnum.dot) {\n          elements.push({\n            modelId: `scrollBarRightRow${rowNum}`,\n            col: 2,\n            row: rowNum\n          });\n          const dataLength = this._getSeriesDataLength(spec, seriesSpec);\n          let ratio = 0;\n          if (dataLength) {\n            ratio = (seriesSpec?.height || defaultSeriesRowHeight) / (dataLength * 30);\n          }\n          // scrollBar数组增加一个right scrollBar\n          scrollBar.push({\n            orient: 'right',\n            visible: seriesSpec.type === SeriesTypeEnum.dot && ratio < 1,\n            id: `scrollBarRightRow${rowNum}`,\n            start: 0,\n            end: Math.min(ratio, 1),\n            filterMode: 'axis',\n            regionIndex: region.length - 1,\n            axisId: `axesLeftRow${rowNum}`,\n            ...array(spec?.scrollBar)[0]\n          });\n        }\n\n        // seriesSpec绑定regionIndex\n        seriesSpec.regionIndex = region.length - 1;\n        rowNum++;\n\n        // 增加空行，拟合series padding效果\n        this.addPaddingRow(rowHeight, rowNum, seriesSpec?.padding || defaultSeriesPadding);\n        rowNum++;\n\n        // chart的leftAppendPadding用于具体元素的dx偏移\n        (seriesSpec as any).leftAppendPadding = leftAppendPadding;\n\n        // title和subTitle自动定位到画布最左端\n        if (seriesSpec.type === SeriesTypeEnum.dot) {\n          (seriesSpec as any).title.style.dx = -leftAppendPadding;\n          (seriesSpec as any).subTitle.style.dx = -leftAppendPadding;\n        }\n      }\n    });\n\n    // 增加空行，拟合series padding效果\n    this.addPaddingRow(rowHeight, rowNum, defaultSeriesPadding);\n    rowNum++;\n\n    // 对于link series，所有属性跟随它绑定的dot series\n    spec?.series?.forEach((seriesSpec: ISequenceSeriesSpec) => {\n      if (seriesSpec.type === SeriesTypeEnum.link) {\n        const dotRowNum = seriesSpec.dotSeriesIndex + 1;\n        elements.push({\n          modelId: `${seriesSpec.type}Row${dotRowNum}`,\n          col: 1,\n          row: dotRowNum - 1\n        });\n        seriesSpec.regionIndex = spec.series[seriesSpec.dotSeriesIndex].regionIndex;\n        (seriesSpec as any).leftAppendPadding = leftAppendPadding;\n        (seriesSpec as any).height = (spec.series[seriesSpec.dotSeriesIndex] as any).height;\n        (seriesSpec as any).clipHeight = (spec.series[seriesSpec.dotSeriesIndex] as any).clipHeight;\n      }\n    });\n\n    // 添加legends和datazoom的regionIndex\n    if (spec?.legends) {\n      this.addAttrToComponentSpec(spec.legends, 'regionIndex', [region.length - 1]);\n    }\n    // if ((spec as any)?.dataZoom) {\n    //   (spec as any).dataZoom[0].regionIndex = Array.from({length: region.length - 1},(item, index)=> index+1);\n    // }\n\n    if (spec?.axes?.[0]?.orient === 'bottom') {\n      this.addOrientAxes(region, elements, rowNum, spec);\n      rowNum++;\n    }\n\n    const layout: IGridLayoutSpec = {\n      type: 'grid',\n      col: 4,\n      row: rowNum,\n      colWidth: [\n        {\n          index: 0,\n          size: leftAppendPadding\n        },\n        {\n          index: 2,\n          size: SCROLL_BAR_DEFAULT_SIZE\n        },\n        {\n          index: 3,\n          size: rightAppendPadding\n        }\n      ],\n      rowHeight: rowHeight,\n      elements: elements\n    };\n\n    spec.layout = layout;\n    spec.region = region;\n    spec.axes?.push(...axes);\n    spec.scrollBar = scrollBar;\n  }\n}\n"]}