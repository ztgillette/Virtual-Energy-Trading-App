import { SeriesTypeEnum } from "../../series/interface/type";

import { registerBoxplotSeries } from "../../series/box-plot/box-plot";

import { Factory } from "../../core/factory";

import { BoxPlotChartSpecTransformer } from "./box-plot-transformer";

import { BaseChart } from "../base";

import { registerDimensionHover } from "../../interaction/triggers/dimension-hover";

import { registerDimensionEvents } from "../../event/events";

import { getCartesianDimensionInfo, getDimensionInfoByValue } from "../../event/events/dimension/util/cartesian";

import { getCartesianCrosshairRect } from "../../component/crosshair/utils/cartesian";

import { registerDimensionTooltipProcessor } from "../../component/tooltip/processor/dimension-tooltip";

import { registerMarkTooltipProcessor } from "../../component/tooltip/processor/mark-tooltip";

export class BoxPlotChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = BoxPlotChartSpecTransformer, 
        this.type = "boxPlot", this.seriesType = SeriesTypeEnum.boxPlot;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;
    }
}

BoxPlotChart.type = "boxPlot", BoxPlotChart.seriesType = SeriesTypeEnum.boxPlot, 
BoxPlotChart.transformerConstructor = BoxPlotChartSpecTransformer;

export const registerBoxplotChart = () => {
    registerDimensionTooltipProcessor(), registerMarkTooltipProcessor(), registerDimensionEvents(), 
    registerDimensionHover(), registerBoxplotSeries(), Factory.registerChart(BoxPlotChart.type, BoxPlotChart);
};
//# sourceMappingURL=box-plot.js.map
