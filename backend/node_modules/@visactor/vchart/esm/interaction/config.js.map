{"version":3,"sources":["../src/interaction/config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AAEvD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAE9D,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAEvD,MAAM,UAAU,iCAAiC,CAAC,IAAgB;IAChE,IAAI,IAAI,KAAK,cAAc,CAAC,iBAAiB,CAAC,IAAI,IAAI,KAAK,cAAc,CAAC,iBAAiB,CAAC,EAAE;QAC5F,OAAO;YACL,KAAK,EAAE;gBACL,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,aAAa;gBACtB,UAAU,EAAE,mBAAmB;aAChC;YACD,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,YAAY;aACtB;SACF,CAAC;KACH;IAED,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;QACrD,OAAO;YACL,KAAK,EAAE;gBACL,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;gBACvC,UAAU,EAAE,mBAAmB;aAChC;YACD,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,KAAK;aACf;SACF,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAgB,EAAE,SAAqB,EAAE,UAAuB,EAAE,EAAE;IACnG,MAAM,aAAa,GAAG,iCAAiC,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,cAAc,qBAAQ,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CAAE,CAAC;IACjD,IAAI,eAAe,qBAAqB,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,CAAE,CAAC;IAEhE,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE;QACxB,cAAc,CAAC,MAAM,GAAG,SAAoB,CAAC;KAC9C;SAAM,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC9B,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;QAC7B,cAAc,GAAG,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;KACvD;IAED,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE;QACzB,eAAe,CAAC,MAAM,GAAG,UAAqB,CAAC;KAChD;SAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC/B,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,eAAe,GAAG,SAAS,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;KAC1D;IAED,OAAO;QACL,MAAM,EAAE,eAAe;QACvB,KAAK,EAAE,cAAc;KACtB,CAAC;AACJ,CAAC,CAAC","file":"config.js","sourcesContent":["import { mergeSpec } from '@visactor/vutils-extension';\nimport type { RenderMode } from '../typings/spec/common';\nimport { RenderModeEnum } from '../typings/spec/common';\nimport { isMiniAppLikeMode, isMobileLikeMode } from '../util';\nimport type { IHoverSpec, ISelectSpec } from './interface/spec';\nimport { isBoolean, isObject } from '@visactor/vutils';\n\nexport function getDefaultInteractionConfigByMode(mode: RenderMode) {\n  if (mode === RenderModeEnum['desktop-browser'] || mode === RenderModeEnum['desktop-miniApp']) {\n    return {\n      hover: {\n        enable: true,\n        trigger: 'pointermove',\n        triggerOff: 'view:pointerleave'\n      },\n      select: {\n        enable: true,\n        trigger: 'pointertap'\n      }\n    };\n  }\n\n  if (isMobileLikeMode(mode) || isMiniAppLikeMode(mode)) {\n    return {\n      hover: {\n        enable: true,\n        trigger: ['pointerdown', 'pointermove'],\n        triggerOff: 'view:pointerleave'\n      },\n      select: {\n        enable: true,\n        trigger: 'tap'\n      }\n    };\n  }\n\n  return null;\n}\n\nexport const parseHoverSelect = (mode: RenderMode, hoverSpec: IHoverSpec, selectSpec: ISelectSpec) => {\n  const defaultConfig = getDefaultInteractionConfigByMode(mode);\n  let finalHoverSpec = { ...defaultConfig?.hover };\n  let finalSelectSpec: ISelectSpec = { ...defaultConfig?.select };\n\n  if (isBoolean(hoverSpec)) {\n    finalHoverSpec.enable = hoverSpec as boolean;\n  } else if (isObject(hoverSpec)) {\n    finalHoverSpec.enable = true;\n    finalHoverSpec = mergeSpec(finalHoverSpec, hoverSpec);\n  }\n\n  if (isBoolean(selectSpec)) {\n    finalSelectSpec.enable = selectSpec as boolean;\n  } else if (isObject(selectSpec)) {\n    finalSelectSpec.enable = true;\n    finalSelectSpec = mergeSpec(finalSelectSpec, selectSpec);\n  }\n\n  return {\n    select: finalSelectSpec,\n    hover: finalHoverSpec\n  };\n};\n"]}