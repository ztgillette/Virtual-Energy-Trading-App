{"version":3,"sources":["../src/interaction/triggers/dimension-hover.ts"],"names":[],"mappings":"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","file":"dimension-hover.js","sourcesContent":["import { isArray } from '@visactor/vutils';\nimport type { DimensionEventParams } from '../../event/events/dimension/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { DimensionEventEnum } from '../../event/events/dimension/interface';\nimport type { IMarkGraphic } from '../../mark/interface';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { getDatumOfGraphic } from '../../util';\nimport type { ISeries } from '../../series';\nimport type { IDimensionHoverOptions, ITrigger } from '../interface/trigger';\nimport { BaseTrigger } from './base';\nimport { Factory } from '../../core/factory';\nimport { TRIGGER_TYPE_ENUM } from './enum';\n\nconst defaultOptions: Partial<IDimensionHoverOptions> = {\n  state: STATE_VALUE_ENUM.STATE_DIMENSION_HOVER,\n  reverseState: STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE,\n  trigger: DimensionEventEnum.dimensionHover\n};\n\nexport class DimensionHover extends BaseTrigger<IDimensionHoverOptions> implements ITrigger<IDimensionHoverOptions> {\n  static type: string = TRIGGER_TYPE_ENUM.DIMENSION_HOVER;\n  type: string = TRIGGER_TYPE_ENUM.DIMENSION_HOVER;\n\n  static defaultOptions = defaultOptions;\n  protected _resetType: ('view' | 'self' | 'timeout')[] = [];\n\n  protected _statedGraphics?: IMarkGraphic[];\n\n  constructor(options?: IDimensionHoverOptions) {\n    super(options);\n    this.options = Object.assign({}, defaultOptions, options);\n\n    // this._marks = view.getMarksBySelector(this.options.selector);\n    this.updateMarkIdByState([this.options.state, this.options.reverseState]);\n  }\n\n  getStartState(): string {\n    return this.options.state;\n  }\n\n  getResetState(): string {\n    return this.options.reverseState;\n  }\n\n  protected getEvents() {\n    const trigger = this.options.trigger;\n\n    return [\n      {\n        type: trigger,\n        handler: this.handleStart\n      }\n    ];\n  }\n\n  resetAll = () => {\n    const { state, reverseState, interaction } = this.options;\n    const statedGraphics = interaction.getStatedGraphics(this);\n\n    if (statedGraphics && statedGraphics.length) {\n      interaction.clearAllStatesOfTrigger(this, state, reverseState);\n      this.dispatchEvent('reset', { graphics: statedGraphics, options: this.options });\n\n      interaction.setStatedGraphics(this, []);\n    }\n  };\n\n  protected getStatedGraphics(params: DimensionEventParams, reverse: boolean = false) {\n    const marks = this.getMarksByState(reverse ? this.options.reverseState : this.options.state);\n\n    const items: IMarkGraphic[] = [];\n    params.dimensionInfo.forEach(df => {\n      df.data.forEach(dd => {\n        const seriesMark = marks.filter(m => (m.model as unknown as ISeries) === dd.series && m.getVisible());\n\n        seriesMark.forEach(m => {\n          const graphics = m.getGraphics();\n          if (!graphics || !graphics.length) {\n            return;\n          }\n\n          const elements = graphics.filter(g => {\n            const datum = getDatumOfGraphic(g);\n            let c;\n            if (isArray(datum)) {\n              c = datum.every((oneData, i) => oneData === dd.datum[i]);\n            } else {\n              c = dd.datum.some(dd_d => dd_d === datum);\n            }\n            return reverse ? !c : c;\n          });\n          items.push(...elements);\n        });\n      });\n    });\n\n    return items;\n  }\n\n  handleStart = (params: DimensionEventParams) => {\n    const interaction = this.options.interaction;\n\n    switch (params.action) {\n      case 'enter':\n        const newStated = this.getStatedGraphics(params);\n        interaction.updateStates(\n          this,\n          this.getStatedGraphics(params),\n          interaction.getStatedGraphics(this),\n          this.options.state,\n          this.options.reverseState\n        );\n\n        interaction.setStatedGraphics(this, newStated);\n\n        break;\n      case 'leave':\n        interaction.clearAllStatesOfTrigger(this, this.options.state, this.options.reverseState);\n        interaction.setStatedGraphics(this, []);\n        break;\n      case 'click':\n      case 'move':\n      default:\n        break;\n    }\n  };\n}\n\nexport const registerDimensionHover = () => {\n  Factory.registerInteractionTrigger(DimensionHover.type, DimensionHover);\n};\n"]}