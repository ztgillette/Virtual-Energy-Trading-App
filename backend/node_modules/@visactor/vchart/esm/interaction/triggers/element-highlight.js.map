{"version":3,"sources":["../src/interaction/triggers/element-highlight.ts"],"names":[],"mappings":"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","file":"element-highlight.js","sourcesContent":["import { isString } from '@visactor/vutils';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport type { IElementHighlightOptions, ITrigger } from '../interface/trigger';\nimport type { IMarkGraphic } from '../../mark/interface/common';\nimport { BaseTrigger } from './base';\nimport { Factory } from '../../core/factory';\nimport type { GraphicEventType } from '@visactor/vrender-core';\nimport { TRIGGER_TYPE_ENUM } from './enum';\nimport type { BaseEventParams } from '../../event/interface';\n\nconst defaultOptions: Partial<IElementHighlightOptions> = {\n  highlightState: STATE_VALUE_ENUM.STATE_HIGHLIGHT,\n  blurState: STATE_VALUE_ENUM.STATE_BLUR,\n  trigger: 'pointerover',\n  triggerOff: 'pointerout'\n};\n\nexport class ElementHighlight\n  extends BaseTrigger<IElementHighlightOptions>\n  implements ITrigger<IElementHighlightOptions>\n{\n  static type: string = TRIGGER_TYPE_ENUM.ELEMENT_HIGHLIGHT;\n  type: string = TRIGGER_TYPE_ENUM.ELEMENT_HIGHLIGHT;\n\n  static defaultOptions = defaultOptions;\n\n  protected _lastGraphic?: IMarkGraphic;\n\n  constructor(options?: IElementHighlightOptions) {\n    super(options);\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.updateMarkIdByState([this.options.highlightState, this.options.blurState]);\n  }\n\n  getStartState(): string {\n    return this.options.highlightState;\n  }\n\n  getResetState(): string {\n    return this.options.blurState;\n  }\n  protected _resetType?: 'view' | 'self';\n\n  protected getEvents() {\n    const triggerOff = this.options.triggerOff;\n    const trigger = this.options.trigger;\n    const events = [\n      {\n        type: trigger,\n        handler: this.handleStart\n      }\n    ];\n\n    let eventName = triggerOff;\n    if (isString(triggerOff) && (triggerOff as string).includes('view:')) {\n      eventName = (triggerOff as string).replace('view:', '') as GraphicEventType;\n      this._resetType = 'view';\n    } else {\n      this._resetType = 'self';\n    }\n\n    events.push({ type: eventName as GraphicEventType, handler: this.handleReset });\n\n    return events;\n  }\n\n  resetAll = () => {\n    const { highlightState, blurState, interaction } = this.options;\n\n    if (this._lastGraphic) {\n      interaction.clearAllStatesOfTrigger(this, highlightState, blurState);\n\n      this.dispatchEvent('reset', { graphics: [this._lastGraphic], options: this.options });\n\n      this._lastGraphic = null;\n\n      interaction.setStatedGraphics(this, []);\n    }\n  };\n\n  handleStart = (e: BaseEventParams) => {\n    this.start(e.item);\n  };\n\n  handleReset = (e: BaseEventParams) => {\n    const { interaction } = this.options;\n    const statedGraphics = interaction.getStatedGraphics(this);\n\n    if (!statedGraphics || !statedGraphics.length) {\n      return;\n    }\n    const markGraphic = e.item;\n    const hasActiveElement = markGraphic && this._markSet.getMarkInId(markGraphic.context.markId);\n\n    if (this._resetType.includes('view') && !hasActiveElement) {\n      this.resetAll();\n    } else if (this._resetType.includes('self') && hasActiveElement) {\n      this.resetAll();\n    }\n  };\n\n  start(markGraphic: IMarkGraphic) {\n    if (markGraphic && this._markSet.getMarkInId(markGraphic.context.markId)) {\n      const { highlightState, blurState, interaction } = this.options;\n\n      if (this._lastGraphic === markGraphic) {\n        return;\n      }\n\n      const newStatedGraphics = interaction.updateStates(\n        this,\n        [markGraphic],\n        interaction.getStatedGraphics(this),\n        highlightState,\n        blurState\n      );\n      interaction.setStatedGraphics(this, newStatedGraphics);\n\n      this._lastGraphic = markGraphic;\n\n      this.dispatchEvent('start', { graphics: newStatedGraphics, options: this.options });\n    } else if (this._lastGraphic && this._resetType === 'view') {\n      this.resetAll();\n    }\n  }\n\n  reset(markGraphic: IMarkGraphic) {\n    if (markGraphic) {\n      if (this._markSet.getMarkInId(markGraphic.context.markId)) {\n        markGraphic.removeState([this.options.highlightState, this.options.blurState]);\n      }\n    } else {\n      this.resetAll();\n    }\n  }\n}\n\nexport const registerElementHighlight = () => {\n  Factory.registerInteractionTrigger(ElementHighlight.type, ElementHighlight);\n};\n"]}