{"version":3,"sources":["../src/interaction/triggers/element-highlight-by-name.ts"],"names":[],"mappings":"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","file":"element-highlight-by-name.js","sourcesContent":["import { Factory } from '../../core/factory';\nimport { BaseTrigger } from './base';\nimport type { IElementHighlightByNameOptions, ITrigger } from '../interface/trigger';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport type { BaseEventParams } from '../../event/interface';\nimport { array } from '@visactor/vutils';\nimport type { IMarkGraphic } from '../../mark/interface';\nimport { generateFilterValue } from './util';\n\nconst type = 'element-highlight-by-name';\nconst defaultOptions: Partial<IElementHighlightByNameOptions> = {\n  highlightState: STATE_VALUE_ENUM.STATE_HIGHLIGHT,\n  blurState: STATE_VALUE_ENUM.STATE_BLUR,\n  filterType: 'groupKey'\n};\n\nexport class ElementHighlightByName\n  extends BaseTrigger<IElementHighlightByNameOptions>\n  implements ITrigger<IElementHighlightByNameOptions>\n{\n  static type: string = type;\n  type: string = type;\n\n  static defaultOptions = defaultOptions;\n  constructor(options?: IElementHighlightByNameOptions) {\n    super(options);\n    this.options = Object.assign({}, defaultOptions, options);\n    this.updateMarkIdByState([this.options.highlightState, this.options.blurState]);\n  }\n\n  getStartState(): string {\n    return this.options.highlightState;\n  }\n\n  getResetState(): string {\n    return this.options.blurState;\n  }\n\n  protected getEvents() {\n    return [\n      {\n        type: this.options.trigger,\n        handler: this.handleStart\n      },\n      { type: this.options.triggerOff, handler: this.handleReset }\n    ];\n  }\n\n  protected _filterByName(e: BaseEventParams) {\n    const names = array(this.options.graphicName);\n\n    return e?.node?.name && names.includes(e.node.name);\n  }\n\n  protected _parseTargetKey(e: BaseEventParams) {\n    return this.options.parseData\n      ? this.options.parseData(e)\n      : e.node.type === 'text'\n      ? (e.node.attribute as any).text\n      : null;\n  }\n\n  start(itemKey: any) {\n    if (itemKey) {\n      const filterValue = generateFilterValue(this.options as IElementHighlightByNameOptions);\n\n      const { interaction, highlightState, blurState } = this.options;\n      const statedGraphics = interaction.getStatedGraphics(this);\n      const newStatedGraphics: IMarkGraphic[] = [];\n\n      this.getMarks().forEach(m => {\n        m.getGraphics()?.forEach(g => {\n          if (filterValue(g) === itemKey) {\n            newStatedGraphics.push(g);\n          }\n        });\n      });\n\n      interaction.updateStates(this, newStatedGraphics, statedGraphics, highlightState, blurState);\n      interaction.setStatedGraphics(this, newStatedGraphics);\n    }\n  }\n\n  resetAll() {\n    const { interaction, highlightState, blurState } = this.options;\n\n    interaction.clearAllStatesOfTrigger(this, highlightState, blurState);\n\n    interaction.setStatedGraphics(this, []);\n  }\n\n  reset(g?: IMarkGraphic) {\n    const { highlightState, blurState, interaction } = this.options;\n\n    if (g) {\n      const statedGraphics = interaction.getStatedGraphics(this);\n      if (statedGraphics && statedGraphics.includes(g)) {\n        g.removeState([highlightState, blurState]);\n        interaction.setStatedGraphics(\n          this,\n          statedGraphics.filter(sg => sg !== g)\n        );\n      }\n    } else {\n      this.resetAll();\n    }\n  }\n\n  handleStart = (e: BaseEventParams) => {\n    const shoudStart = this.options.shouldStart ? this.options.shouldStart(e) : this._filterByName(e);\n\n    if (shoudStart) {\n      const itemKey = this._parseTargetKey(e);\n      this.start(itemKey);\n    }\n  };\n\n  handleReset = (e: BaseEventParams) => {\n    const shoudReset = this.options.shouldReset ? this.options.shouldReset(e) : this._filterByName(e);\n\n    if (shoudReset) {\n      this.resetAll();\n    }\n  };\n}\n\nexport const registerElementHighlightByName = () => {\n  Factory.registerInteractionTrigger(type, ElementHighlightByName);\n};\n"]}