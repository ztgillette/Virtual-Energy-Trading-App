{"version":3,"sources":["../src/model/layout-model.ts"],"names":[],"mappings":"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","file":"layout-model.js","sourcesContent":["import type { IBoundsLike } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isEqual, merge } from '@visactor/vutils';\nimport type { ILayoutItem } from '../layout/interface';\nimport type { IOrientType, IPadding, IPolarOrientType, IRect } from '../typings/space';\nimport { BaseModel } from './base-model';\nimport type { IModelSpec } from './interface';\nimport { LayoutItem } from '../layout/layout-item';\nimport type { IPoint } from '../typings/coordinate';\nimport type { ILayoutType, ILayoutPoint, ILayoutRect } from '../typings/layout';\n\nexport abstract class LayoutModel<T extends IModelSpec> extends BaseModel<T> {\n  protected layoutType: ILayoutType | 'none' = 'normal';\n  protected layoutLevel?: number = 0;\n  protected layoutZIndex: number = 0;\n  layoutClip: boolean;\n  get layoutOrient() {\n    return this._orient as IOrientType;\n  }\n\n  set layoutOrient(v: IOrientType) {\n    this._orient = v;\n    this._layout && (this._layout.layoutOrient = v);\n  }\n\n  protected _forceLayoutTag: boolean = false;\n  protected _layout: ILayoutItem = null;\n  protected _orient?: IPolarOrientType | IOrientType = null;\n\n  protected _layoutRect: ILayoutRect = { width: 0, height: 0 };\n  protected _layoutStartPos: IPoint = { x: 0, y: 0 };\n\n  // TODO: 有些hack,这个tag是为了避免布局逻辑中，轴的数据变化，又由数据变化触发重新布局\n  protected _isLayout: boolean = true;\n\n  initLayout() {\n    if (this.layoutType === 'none') {\n      return;\n    }\n    this._layout = new LayoutItem(this, {\n      layoutType: this.layoutType,\n      layoutLevel: this.layoutLevel,\n      layoutOrient: this._orient as IOrientType,\n      transformLayoutRect: this._transformLayoutRect,\n      transformLayoutPosition: this._transformLayoutPosition,\n      transformLayoutPadding: this._transformLayoutPadding\n    });\n    if (this._orient && this._orient !== 'radius' && this._orient !== 'angle' && this._layout) {\n      this._layout.layoutOrient = this._orient;\n    }\n  }\n\n  onLayoutStart(layoutRect: IRect, viewRect: ILayoutRect): void {\n    this._isLayout = true;\n    super.onLayoutStart(layoutRect, viewRect);\n  }\n  onLayoutEnd(): void {\n    super.onLayoutEnd();\n    // diff layoutRect\n    this.updateLayoutAttribute();\n    const layoutRect = this.getLayoutRect();\n    if (this._forceLayoutTag || !isEqual(this._lastLayoutRect, layoutRect)) {\n      this._lastLayoutRect = { ...layoutRect };\n    }\n    this._forceLayoutTag = false;\n    this._isLayout = false;\n  }\n\n  afterSetLayoutStartPoint(_pos: ILayoutPoint) {\n    // do nothing\n  }\n\n  protected _forceLayout() {\n    if (this._isLayout) {\n      return;\n    }\n    this._layout?.setWillLayoutTag();\n    this._forceLayoutTag = true;\n    this._option.globalInstance.getChart()?.setLayoutTag(true);\n  }\n\n  // 布局相关\n  getLayoutStartPoint() {\n    return this._layout ? this._layout.getLayoutStartPoint() : this._layoutStartPos;\n  }\n  setLayoutStartPosition(pos: Partial<IPoint>) {\n    return this._layout\n      ? this._layout.setLayoutStartPosition(pos)\n      : (this._layoutStartPos = merge(this._layoutStartPos, pos));\n  }\n  getLayoutRect() {\n    return this._layout ? this._layout.getLayoutRect() : this._layoutRect;\n  }\n  setLayoutRect(rect: Partial<ILayoutRect>, levelMap?: Partial<ILayoutRect>) {\n    return this._layout ? this._layout.setLayoutRect(rect) : (this._lastLayoutRect = merge(this._layoutRect, rect));\n  }\n\n  getLastComputeOutBounds() {\n    return this._layout?.getLastComputeOutBounds();\n  }\n\n  getGraphicBounds = () => {\n    if (this._layout) {\n      return {\n        x1: this._layout.getLayoutStartPoint().x,\n        y1: this._layout.getLayoutStartPoint().y,\n        x2: this._layout.getLayoutStartPoint().x + this._layout.getLayoutRect().width,\n        y2: this._layout.getLayoutStartPoint().y + this._layout.getLayoutRect().height\n      };\n    }\n    return { x1: 0, x2: 0, y1: 0, y2: 0 };\n  };\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this.layoutClip = this._spec.clip ?? this.layoutClip;\n    this.layoutZIndex = this._spec.zIndex ?? this.layoutZIndex;\n    this.layoutType = this._spec.layoutType ?? this.layoutType;\n    this._orient = this._spec.orient ?? this._orient;\n    this.layoutLevel = this._spec.layoutLevel ?? this.layoutLevel;\n  }\n\n  abstract getBoundsInRect(rect: ILayoutRect, fullRect: ILayoutRect): IBoundsLike;\n\n  protected _transformLayoutRect: (rect: ILayoutRect) => ILayoutRect = null;\n  protected _transformLayoutPosition: (rect: Partial<IPoint>) => Partial<IPoint> = null;\n  protected _transformLayoutPadding: (padding: IPadding) => IPadding = null;\n}\n"]}