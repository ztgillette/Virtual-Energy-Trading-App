{"version":3,"sources":["../src/plugin/chart/media-query/media-query.ts"],"names":[],"mappings":"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","file":"media-query.js","sourcesContent":["import type {\n  IMediaInfo,\n  IMediaQueryCheckResult,\n  IMediaQuerySpec,\n  IMediaQueryOption,\n  IMediaQueryItem,\n  IMediaQueryActionResult\n} from './interface';\nimport { checkMediaQuery } from './util';\nimport { executeMediaQueryAction } from './util/action';\nimport type { IChartPlugin, IChartPluginService } from '../interface';\nimport { array } from '../../../util';\nimport type { VChartRenderActionSource } from '../../../core/interface';\nimport { BasePlugin } from '../../base/base-plugin';\nimport { registerChartPlugin } from '../register';\nimport type { IChartSpecInfo } from '../../../chart/interface';\nimport { cloneDeepSpec } from '@visactor/vutils-extension';\n\nexport class MediaQuery extends BasePlugin implements IChartPlugin {\n  static readonly pluginType: 'chart' = 'chart';\n  static readonly specKey = 'media';\n  static readonly type: string = 'MediaQueryPlugin';\n  readonly type: string = 'MediaQueryPlugin';\n\n  protected _spec: IMediaQuerySpec;\n  protected _option: IMediaQueryOption;\n\n  /** 不带任何媒体查询的图表 spec */\n  protected _baseChartSpec: any;\n  /** 不带任何媒体查询的图表 spec info */\n  protected _baseChartSpecInfo: IChartSpecInfo;\n\n  /** 当前媒体信息 */\n  protected _currentMediaInfo: Partial<IMediaInfo> = {};\n\n  /** 当前正在生效的媒体查询 */\n  readonly currentActiveItems = new Set<IMediaQueryItem>();\n\n  /** 媒体查询是否已经初始化 */\n  protected _initialized: boolean = false;\n\n  constructor() {\n    super(MediaQuery.type);\n  }\n\n  onInit(service: IChartPluginService, chartSpec: any) {\n    if (!chartSpec?.[MediaQuery.specKey]) {\n      return;\n    }\n\n    const { globalInstance } = service;\n    this._option = {\n      globalInstance: service.globalInstance,\n      updateSpec: (spec: any, compile?: boolean, render?: boolean) => {\n        if (render) {\n          globalInstance.updateSpecSync(spec);\n        } else if (compile) {\n          globalInstance.updateSpecAndRecompile(spec, false, {\n            transformSpec: true\n          });\n        } else {\n          globalInstance.setRuntimeSpec(spec);\n        }\n      }\n    };\n    this._spec = chartSpec[MediaQuery.specKey];\n    this._initialized = true;\n  }\n\n  onBeforeResize(service: IChartPluginService, width: number, height: number) {\n    if (!this._initialized) {\n      return;\n    }\n\n    this._changeSize(width, height, true, false);\n  }\n\n  onAfterChartSpecTransform(service: IChartPluginService, chartSpec: any, actionSource: VChartRenderActionSource) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (actionSource === 'setCurrentTheme') {\n      // 重新执行已生效的所有媒体查询\n      this._reInit(false, false);\n    }\n  }\n\n  onAfterModelSpecTransform(\n    service: IChartPluginService,\n    chartSpec: any,\n    chartInfo: IChartSpecInfo,\n    actionSource: VChartRenderActionSource\n  ) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (actionSource === 'updateSpec') {\n      this.onBeforeInitChart(service, chartSpec, 'setCurrentTheme');\n    }\n  }\n\n  onBeforeInitChart(service: IChartPluginService, chartSpec: any, actionSource: VChartRenderActionSource) {\n    if (!this._initialized) {\n      return;\n    }\n\n    let resetMediaQuery: boolean;\n    let checkMediaQuery: boolean;\n\n    switch (actionSource) {\n      case 'render':\n      case 'updateModelSpec':\n        resetMediaQuery = false;\n        checkMediaQuery = true;\n        break;\n      case 'setCurrentTheme':\n        resetMediaQuery = true;\n        checkMediaQuery = false;\n        break;\n      case 'updateSpecAndRecompile':\n        resetMediaQuery = false;\n        checkMediaQuery = false;\n        break;\n    }\n\n    if (resetMediaQuery) {\n      this.release();\n    }\n    if (!this._initialized) {\n      // 初始化媒体查询\n      this.onInit(service, chartSpec);\n    }\n    if (resetMediaQuery || checkMediaQuery) {\n      // 触发媒体查询\n      const { width, height } = this._option.globalInstance.getCurrentSize();\n      this._changeSize(width, height, false, false);\n    }\n  }\n\n  /** 更新图表宽高信息，执行所有相关媒体查询，返回是否命中某个查询 */\n  protected _changeSize(width: number, height: number, compile?: boolean, render?: boolean): boolean {\n    if (this._currentMediaInfo.width === width && this._currentMediaInfo.height === height) {\n      return false;\n    }\n    this._currentMediaInfo.width = width;\n    this._currentMediaInfo.height = height;\n    // 由于目前媒体查询只和图表宽高有关，这里执行所有媒体查询\n    return this._applyQueries(compile, render);\n  }\n\n  /** 执行所有媒体查询，返回是否命中某个查询 */\n  protected _applyQueries(compile?: boolean, render?: boolean): boolean {\n    // 检查所有查询的查询条件\n    const changeToActive: IMediaQueryItem[] = []; // 将会生效的查询\n    const changeToInactive: IMediaQueryItem[] = []; // 将会失效的查询\n    this._spec.forEach(item => {\n      const { hasChanged, isActive } = this._check(item);\n      if (hasChanged) {\n        if (isActive) {\n          changeToActive.push(item);\n        } else {\n          changeToInactive.push(item);\n        }\n      }\n    });\n\n    if (!changeToActive.length && !changeToInactive.length) {\n      return false;\n    }\n    if (!this._baseChartSpec) {\n      this._baseChartSpec = cloneDeepSpec(this._option.globalInstance.getSpec(), ['data', MediaQuery.specKey]);\n      this._baseChartSpecInfo = this._option.globalInstance.getSpecInfo();\n    }\n    let chartSpec: any;\n    let chartSpecInfo: any;\n    let hasChanged = false;\n\n    // 处理将会失效的查询：重新执行一遍当前生效的查询\n    if (changeToInactive.length > 0) {\n      chartSpec = cloneDeepSpec(this._baseChartSpec, ['data', MediaQuery.specKey]);\n      chartSpecInfo = this._baseChartSpecInfo;\n      Array.from(this.currentActiveItems).forEach(item => {\n        if (changeToInactive.includes(item)) {\n          this.currentActiveItems.delete(item);\n          return;\n        }\n        const result = this._apply(item, chartSpec, chartSpecInfo);\n        chartSpec = result.chartSpec;\n      });\n      hasChanged = true;\n    } else {\n      chartSpec = this._option.globalInstance.getSpec();\n      chartSpecInfo = this._option.globalInstance.getSpecInfo();\n    }\n\n    // 处理将会生效的查询\n    changeToActive.forEach(item => {\n      this.currentActiveItems.add(item);\n      const result = this._apply(item, chartSpec, chartSpecInfo);\n      chartSpec = result.chartSpec;\n      hasChanged ||= result.hasChanged;\n    });\n\n    if (hasChanged) {\n      this._option.updateSpec(chartSpec, compile, render);\n    }\n    return true;\n  }\n\n  /** 检查媒体查询的条件是否满足 */\n  protected _check(item: IMediaQueryItem): IMediaQueryCheckResult {\n    const { globalInstance } = this._option;\n    const isActive = checkMediaQuery(item.query, this._currentMediaInfo as IMediaInfo, globalInstance);\n    return {\n      isActive,\n      hasChanged: isActive !== this.currentActiveItems.has(item)\n    };\n  }\n\n  /** 执行一条媒体查询 */\n  protected _apply(item: IMediaQueryItem, chartSpec: any, chartSpecInfo: IChartSpecInfo): IMediaQueryActionResult {\n    const { query, action } = item;\n    let hasChanged = false;\n    // 执行\n    array(action).forEach(actionItem => {\n      const result = executeMediaQueryAction(actionItem, query, chartSpec, chartSpecInfo);\n      chartSpec = result.chartSpec;\n      hasChanged ||= result.hasChanged;\n    });\n    return { chartSpec, hasChanged };\n  }\n\n  /** 重新初始化，并重新执行一遍当前生效的媒体查询 */\n  protected _reInit(compile?: boolean, render?: boolean) {\n    let chartSpec = this._option.globalInstance.getSpec();\n    this._baseChartSpec = cloneDeepSpec(chartSpec, ['data', MediaQuery.specKey]);\n    this._baseChartSpecInfo = this._option.globalInstance.getSpecInfo();\n\n    let hasChanged = false;\n    this.currentActiveItems.forEach(item => {\n      const result = this._apply(item, chartSpec, this._baseChartSpecInfo);\n      chartSpec = result.chartSpec;\n      hasChanged ||= result.hasChanged;\n    });\n\n    if (hasChanged) {\n      this._option.updateSpec(chartSpec, compile, render);\n    }\n  }\n\n  release() {\n    super.release();\n    this._initialized = false;\n    this._spec = [];\n    this._option = undefined;\n    this._currentMediaInfo = {};\n    this.currentActiveItems.clear();\n  }\n}\n\nexport const registerMediaQuery = () => {\n  registerChartPlugin(MediaQuery);\n};\n"]}