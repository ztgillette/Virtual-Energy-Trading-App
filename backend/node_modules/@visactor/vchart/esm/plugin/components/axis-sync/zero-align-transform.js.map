{"version":3,"sources":["../src/plugin/components/axis-sync/zero-align-transform.ts"],"names":[],"mappings":"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","file":"zero-align-transform.js","sourcesContent":["import { isValidNumber, last } from '@visactor/vutils';\nimport type { CartesianAxis } from '../../../component';\nimport type { LinearAxisMixin } from '../../../component/axis/mixin/linear-axis-mixin';\n\ntype ScaleInfo = {\n  total: number;\n  negative: number;\n  positive: number;\n  includeZero: boolean;\n  extendable_min: boolean;\n  extendable_max: boolean;\n  domain: number[];\n  break?: boolean;\n};\n\nexport function isValidAlignDomain(domain: number[]): boolean {\n  return domain.length >= 2 && isValidNumber(domain[0]) && isValidNumber(last(domain)) && last(domain) >= domain[0];\n}\n\nexport function getScaleInfo(axis: LinearAxisMixin, domain: number[]): ScaleInfo {\n  // example: -10 -20 total = 10 negative = 10\n  const total = last(domain) - domain[0];\n  const includeZero = last(domain) * domain[0] < 0;\n  let negative = domain[0] <= 0 ? 0 - domain[0] : 0;\n  let positive = last(domain) > 0 ? last(domain) - 0 : 0;\n  if (total === 0) {\n    if (domain[0] < 0) {\n      negative = 1;\n      positive = 0;\n    } else if (domain[0] > 0) {\n      negative = 0;\n      positive = 1;\n    }\n  } else {\n    negative = negative / total;\n    positive = positive / total;\n  }\n  const domainSpec = axis.getDomainSpec();\n  const result: ScaleInfo = {\n    total,\n    negative,\n    positive,\n    includeZero,\n    domain,\n    extendable_min: !isValidNumber(domainSpec.min),\n    extendable_max: !isValidNumber(domainSpec.max)\n  };\n  if (axis._break?.scope) {\n    // 当前轴有截断\n    const index = domain.findIndex(value => value >= 0);\n\n    let scope;\n    let domainTemp;\n    // 得到0值位置\n    if (index === 0) {\n      scope = axis._break.scope[index];\n      domainTemp = [domain[0], domain[1]];\n      result.positive = 1;\n      result.negative = 0;\n    } else {\n      // 如果最大值小于 0\n      if (last(domain) <= 0) {\n        result.positive = 0;\n        result.negative = 1;\n        domainTemp = [domain[domain.length - 2], domain[domain.length - 1]];\n      } else {\n        // 0值在中间\n        scope = axis._break.scope[index - 1];\n        domainTemp = [domain[index - 1], domain[index]];\n        // 得到0值在range中的实际比例\n        result.negative = scope[0] + ((0 - domainTemp[0]) / (domainTemp[1] - domainTemp[0])) * (scope[1] - scope[0]);\n        result.positive = 1 - result.negative;\n      }\n    }\n    // 只要有截断，就不做domain修改\n    result.break = true;\n    result.extendable_max = false;\n    result.extendable_min = false;\n    result.domain = domainTemp;\n  }\n  return result;\n}\n\nfunction inDifferentCrossZero(info1: ScaleInfo, info2: ScaleInfo): boolean {\n  const {\n    positive: positive1,\n    negative: negative1,\n    extendable_min: s1Extendable_min,\n    extendable_max: s1Extendable_max,\n    domain: domain1\n  } = info1;\n  const {\n    positive: positive2,\n    negative: negative2,\n    extendable_min: s2Extendable_min,\n    extendable_max: s2Extendable_max,\n    domain: domain2\n  } = info2;\n  //  make s2 percent same as s1\n  if (positive2 > 0) {\n    if (!s2Extendable_min) {\n      return false;\n    }\n    let comp = negative1 / positive1;\n    // if s1 could extend max, then expand s1\n    // example:【0.5，0.5】 + 【0，1】 = 【0.5，1】\n    if (s1Extendable_max) {\n      // change s1 percent\n      comp = negative1 / Math.max(positive1, positive2);\n      domain1[1] = -domain1[0] / comp;\n    }\n    domain2[0] = -domain2[1] * comp;\n  } else if (negative2 > 0) {\n    if (!s2Extendable_max) {\n      return false;\n    }\n    let comp = positive1 / negative1;\n    // if s1 could extend max, then expand s1\n    // example:【0.5，0.5】 + 【1，0】 = 【1，0.5】\n    if (s1Extendable_min) {\n      // change s1 percent\n      comp = positive1 / Math.max(negative1, negative1);\n      domain1[0] = -domain1[1] / comp;\n    }\n    domain2[1] = -domain2[0] * comp;\n  }\n  return true;\n}\n\nfunction inOnlyZeroDomain(info1: ScaleInfo, info2: ScaleInfo): boolean {\n  const { extendable_min: s1Extendable_min, extendable_max: s1Extendable_max, domain: domain1 } = info1;\n  const { positive: positive2, negative: negative2, domain: domain2 } = info2;\n  // both [0,0]\n  if (positive2 === 0 && negative2 === 0) {\n    return false;\n  }\n  // 如果副轴 有正值部分  主轴无法正值扩展，跳过\n  if (positive2 > 0 && !s1Extendable_max) {\n    return false;\n  }\n  // 如果副轴 有负值部分  主轴无法负值扩展，跳过\n  if (negative2 > 0 && !s1Extendable_min) {\n    return false;\n  }\n  // 其他场景，将主轴设置为与副轴相同\n  domain1[0] = domain2[0];\n  domain1[1] = domain2[1];\n  return true;\n}\n\nfunction inAllCrossZero(info1: ScaleInfo, info2: ScaleInfo): boolean {\n  const { positive: positive1, negative: negative1, extendable_max: s1Extendable_max, domain: domain1 } = info1;\n  const { positive: positive2, negative: negative2, extendable_min: s2Extendable_min, domain: domain2 } = info2;\n  if (s1Extendable_max && s2Extendable_min) {\n    // percent\n    const comp = Math.max(negative1, negative2) / Math.max(positive1, positive2);\n    domain1[1] = -domain1[0] / comp;\n    domain2[0] = -domain2[1] * comp;\n  }\n  // only on side extendable\n  else if (s2Extendable_min) {\n    const comp = negative1 / positive1;\n    domain2[0] = -domain2[1] * comp;\n  } else if (s1Extendable_max) {\n    const comp = negative2 / positive2;\n    domain1[1] = -domain1[0] / comp;\n  } else {\n    // skip\n    return false;\n  }\n  return true;\n}\n\nfunction inNoCrossDifferentSide(info1: ScaleInfo, info2: ScaleInfo): boolean {\n  const { extendable_min: s1Extendable_min, domain: domain1 } = info1;\n  const { extendable_max: s2Extendable_max, domain: domain2 } = info2;\n  // extendable\n  if (!s1Extendable_min || !s2Extendable_max) {\n    return false;\n  }\n  domain1[0] = -domain1[1];\n  domain2[1] = -domain2[0];\n  return true;\n}\n\nexport const zeroAlign = (targetAxis: CartesianAxis, currentAxis: CartesianAxis) => {\n  const s1 = targetAxis.getScale();\n  const s2 = currentAxis.getScale();\n\n  if (!s1 || !s2) {\n    return;\n  }\n\n  const domain1 = (targetAxis as any).getDomainAfterSpec?.() ?? [0, 1];\n  const domain2 = (currentAxis as any).getDomainAfterSpec?.() ?? [0, 1];\n\n  if (!domain1 || !domain2 || !isValidAlignDomain(domain1) || !isValidAlignDomain(domain2)) {\n    return;\n  }\n\n  // 先分别获取正负比例\n  const info1 = getScaleInfo(<LinearAxisMixin>(<unknown>targetAxis), domain1);\n  const info2 = getScaleInfo(<LinearAxisMixin>(<unknown>currentAxis), domain2);\n  if (info1.break === true && info2.break === true) {\n    return;\n  }\n  const {\n    positive: positive1,\n    negative: negative1,\n    extendable_min: s1Extendable_min,\n    extendable_max: s1Extendable_max,\n    includeZero: includeZero1\n  } = info1;\n  const {\n    positive: positive2,\n    negative: negative2,\n    extendable_min: s2Extendable_min,\n    extendable_max: s2Extendable_max,\n    includeZero: includeZero2\n  } = info2;\n\n  // first check [0,0]\n  // axis 1 in [0,0]\n  if (positive1 === 0 && negative1 === 0) {\n    if (!inOnlyZeroDomain(info1, info2)) {\n      return;\n    }\n  }\n  // axis 2 in [0,0]\n  else if (positive2 === 0 && negative2 === 0) {\n    if (!inOnlyZeroDomain(info2, info1)) {\n      return;\n    }\n  }\n  // check of both of axis are not cross zero\n  else if (!includeZero1 && !includeZero2) {\n    // if in different side s1 * s2 < 0\n    // s1 > 0 s2 < 0\n    if (negative1 === 0 && positive2 === 0) {\n      if (!inNoCrossDifferentSide(info1, info2)) {\n        return;\n      }\n    }\n    // s1 < 0 s2 > 0\n    else if (negative2 === 0 && positive1 === 0) {\n      if (!inNoCrossDifferentSide(info2, info1)) {\n        return;\n      }\n    }\n\n    // if in same side s1 * s2 > 0\n    // both positive\n    if (negative1 === 0 && negative2 === 0) {\n      // make sure has zero\n      if (domain1[0] === 0 && domain2[0] > 0) {\n        if (!s2Extendable_min) {\n          return;\n        }\n        domain2[0] = 0;\n      } else if (domain2[0] === 0 && domain1[0] > 0) {\n        if (!s1Extendable_min) {\n          return;\n        }\n        domain1[0] = 0;\n      } else {\n        return;\n      }\n    }\n    // both negative1\n    if (positive1 === 0 && positive2 === 0) {\n      // s1 has 0 in domain & s2 has not\n      if (domain1[1] === 0 && domain2[1] > 0) {\n        if (!s2Extendable_max) {\n          return;\n        }\n        domain2[1] = 0;\n      }\n      // s2 has 0 in domain & s1 has not\n      else if (domain2[1] === 0 && domain1[1] > 0) {\n        if (!s1Extendable_max) {\n          return;\n        }\n        domain1[1] = 0;\n      } else {\n        return;\n      }\n    }\n  }\n  // check one axis cross zero axis1\n  else if (includeZero1 && !includeZero2) {\n    if (!inDifferentCrossZero(info1, info2)) {\n      return;\n    }\n  }\n  // check one axis cross zero axis2\n  else if (includeZero2 && !includeZero1) {\n    if (!inDifferentCrossZero(info2, info1)) {\n      return;\n    }\n  }\n  // check of both of axis are cross zero\n  else {\n    // same percent of negative\n    if (negative1 === negative2) {\n      return;\n    }\n    // negative percent s1 > s2\n    else if (negative1 > negative2) {\n      if (!inAllCrossZero(info1, info2)) {\n        return;\n      }\n    }\n    // negative percent s1 < s2\n    else {\n      if (!inAllCrossZero(info2, info1)) {\n        return;\n      }\n    }\n  }\n  s1.domain(domain1);\n  s2.domain(domain2);\n};\n"]}