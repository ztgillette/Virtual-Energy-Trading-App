import { get, pick, cloneDeep, isArray } from "@visactor/vutils";

export { get, pick, cloneDeep };

export function field(f) {
    return function(datum) {
        let value;
        return value = isArray(f) ? f.reduce(((cur, g) => null == cur ? void 0 : cur[g]), datum) : null == datum ? void 0 : datum[f], 
        value;
    };
}

export function removeUndefined(obj, deep = !1) {
    if (null === obj || "object" != typeof obj) return obj;
    for (const key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) {
        if (void 0 === obj[key]) {
            delete obj[key];
            continue;
        }
        deep && removeUndefined(obj[key], deep);
    }
}
//# sourceMappingURL=object.js.map
