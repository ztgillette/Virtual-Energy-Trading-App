{"version":3,"sources":["../src/mark/utils/glyph.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,CAAe,EACf,SAAiB,EACjB,KAAU,EACV,oBAA6B,IAAI,EACjC,YAAsB,EACtB,EAAE;IACF,IAAI,CAAC,CAAC,CAAC,iBAAiB,EAAE;QACxB,CAAC,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC1B;IAED,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;IAEvC,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACzB,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;KAC1B;IACD,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;AACzD,CAAC,CAAC","file":"glyph.js","sourcesContent":["import type { IMarkGraphic } from '../interface/common';\n\nexport const addRuntimeState = (\n  g: IMarkGraphic,\n  stateName: string,\n  attrs: any,\n  keepCurrentStates: boolean = true,\n  hasAnimation?: boolean\n) => {\n  if (!g.runtimeStateCache) {\n    g.runtimeStateCache = {};\n  }\n\n  g.runtimeStateCache[stateName] = attrs;\n\n  if (g.hasState(stateName)) {\n    g.removeState(stateName);\n  }\n  g.addState(stateName, keepCurrentStates, hasAnimation);\n};\n"]}