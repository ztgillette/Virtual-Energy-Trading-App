{"version":3,"sources":["../src/mark/liquid.ts"],"names":[],"mappings":"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","file":"liquid.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { IMarkStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport type { ILiquidMark } from '../series/liquid/liquid';\nimport { GlyphMark, registerGlyphMark } from './glyph';\nimport { createArea, type IAreaGraphicAttribute, type IGlyph } from '@visactor/vrender-core';\nimport type { IPointLike } from '@visactor/vutils';\nimport { registerArea } from '@visactor/vrender-kits';\nimport type { ILiquidMarkSpec } from '../typings/visual';\nimport type { Datum } from '../typings/common';\n\nexport class LiquidMark extends GlyphMark<ILiquidMarkSpec> implements ILiquidMark {\n  static readonly type = MarkTypeEnum.liquid;\n  readonly type = LiquidMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<ILiquidMarkSpec> = {\n      ...super._getDefaultStyle(),\n      wave: 0\n    };\n    return defaultStyle;\n  }\n\n  protected _subMarks = {\n    wave0: {\n      type: 'area',\n      defaultAttributes: {\n        curveType: 'monotoneX',\n        fillOpacity: 1\n      }\n    },\n    wave1: {\n      type: 'area',\n      defaultAttributes: {\n        curveType: 'monotoneX',\n        fillOpacity: 0.66\n      }\n    },\n    wave2: {\n      type: 'area',\n      defaultAttributes: {\n        curveType: 'monotoneX',\n        fillOpacity: 0.33\n      }\n    }\n  };\n\n  protected _positionChannels: string[] = ['wave', 'y', 'height'];\n\n  protected _positionEncoder = (glyphAttrs: any, datum: Datum, g: IGlyph) => {\n    const {\n      wave = (g.attribute as any).wave,\n      y = (g.attribute as any).y,\n      height = (g.attribute as any).height\n    } = glyphAttrs;\n    const points0: IPointLike[] = [];\n    const points1: IPointLike[] = [];\n    const points2: IPointLike[] = [];\n\n    for (let i = 0; i < 21; i++) {\n      const waveHeight = i % 2 === 0 ? 20 : 0;\n      const x = -500 + 50 * i;\n      const wy = y + waveHeight;\n      const wy1 = y + height;\n\n      points0.push({ x: x + wave * 100, y: wy, y1: wy1 });\n      points1.push({ x: x + wave * 200 - 40, y: wy, y1: wy1 });\n      points2.push({ x: x + wave * 300 - 20, y: wy, y1: wy1 });\n    }\n\n    return {\n      wave0: {\n        x: 0,\n        y: 0,\n        points: points0\n      },\n      wave1: {\n        x: 0,\n        y: 0,\n        points: points1\n      },\n      wave2: {\n        x: 0,\n        y: 0,\n        points: points2\n      }\n    };\n  };\n}\n\nexport const registerLiquidMark = () => {\n  registerGlyphMark();\n  registerArea();\n  Factory.registerMark(LiquidMark.type, LiquidMark);\n  Factory.registerGraphicComponent('area', (attrs: IAreaGraphicAttribute) => createArea(attrs));\n};\n"]}