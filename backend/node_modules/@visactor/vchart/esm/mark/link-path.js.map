{"version":3,"sources":["../src/mark/link-path.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAK5C,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAEvD,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAGtD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,OAA0B,EAAE,KAAc,EAAE,EAAE;;IAC9E,MAAM,SAAS,GAAG,MAAA,OAAO,CAAC,SAAS,mCAAI,GAAG,CAAC;IAC3C,MAAM,YAAY,GAAG,IAAI,CAAC;IAC1B,MAAM,SAAS,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;IAE5F,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACpB,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACpB,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IACrB,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IACrB,IAAI,IAAI,GAAG,EAAE,GAAG,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,EAAE,GAAG,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,IAAI,SAAS,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IAEjC,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;QAC3B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;KACxB;IACD,MAAM,OAAO,GACX,OAAO,CAAC,QAAQ,KAAK,MAAM;QACzB,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE;QAC9B,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU;YACjC,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE;YAC5D,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC;IAEjE,IAAI,CAAC,YAAY,EAAE;QAEjB,OAAO,OAAO,CAAC;KAChB;IAED,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;QAC9B,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;QAC5C,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;KAC7C;SAAM,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;QAClC,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;QAChE,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;KACjE;SAAM;QACL,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpD,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;KACrD;IAED,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;IACvC,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;IAEvC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;IAC3C,MAAM,YAAY,GAChB,OAAO,CAAC,QAAQ,IAAI,SAAS;QAC3B,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,SAAS,CAChF,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAChB,IAAI,EAAE,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE;QAC7C,CAAC,CAAC,EAAE,CAAC;IACT,MAAM,cAAc,GAClB,OAAO,CAAC,UAAU,IAAI,SAAS;QAC7B,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,SAAS,CAChF,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAChB,IAAI,EAAE,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE;QAC7C,CAAC,CAAC,EAAE,CAAC;IAET,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;QAC/B,OAAO,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,YAAY,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,cAAc,GAAG,CAAC;KAChG;SAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC1C,OAAO,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG;MAC7D,YAAY,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,cAAc,GAAG,CAAC;KAC5F;IAED,OAAO,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG;IAC7D,YAAY,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,cAAc,GAAG,CAAC;AAC7F,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,OAA0B,EAAE,KAAc,EAAE,EAAE;;IAC5E,MAAM,SAAS,GAAG,MAAA,OAAO,CAAC,SAAS,mCAAI,GAAG,CAAC;IAC3C,MAAM,YAAY,GAAG,IAAI,CAAC;IAC1B,MAAM,SAAS,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;IAC5F,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACpB,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACpB,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IACrB,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IACrB,IAAI,IAAI,GAAG,EAAE,GAAG,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,EAAE,GAAG,SAAS,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,IAAI,SAAS,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IAEjC,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;QAC3B,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACzB;IACD,MAAM,QAAQ,GACZ,OAAO,CAAC,QAAQ,KAAK,MAAM;QACzB,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,EAAE;QAC9B,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU;YACjC,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE;YAC5D,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE,CAAC;IACjE,IAAI,CAAC,YAAY,EAAE;QAEjB,OAAO,QAAQ,CAAC;KACjB;IAED,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;QAC9B,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;QAC5C,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;KAC7C;SAAM,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;QAClC,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;QAChE,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;KACjE;SAAM;QACL,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpD,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;KACrD;IAED,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;IACvC,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;IAEvC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;IAC3C,MAAM,YAAY,GAChB,OAAO,CAAC,QAAQ,IAAI,SAAS;QAC3B,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CACjF,EAAE,GAAG,SAAS,CACf,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QAC7C,CAAC,CAAC,EAAE,CAAC;IACT,MAAM,cAAc,GAClB,OAAO,CAAC,UAAU,IAAI,SAAS;QAC7B,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CACjF,EAAE,GAAG,SAAS,CACf,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QAC7C,CAAC,CAAC,EAAE,CAAC;IAET,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;QAC/B,OAAO,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,YAAY,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,cAAc,GAAG,CAAC;KAChG;SAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC1C,OAAO,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE;MAC7D,YAAY,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,GAAG,cAAc,GAAG,CAAC;KAC5F;IAED,OAAO,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE;IAC7D,YAAY,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,GAAG,cAAc,GAAG,CAAC;AAC7F,CAAC,CAAC;AAEF,MAAM,OAAO,YAAa,SAAQ,SAA6C;IAA/E;;QAEW,SAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QAiBxB,cAAS,GAAG;YACpB,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,iBAAiB,EAAE;oBACjB,MAAM,EAAE,CAAC;iBACV;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,iBAAiB,EAAE;oBACjB,MAAM,EAAE,CAAC;iBACV;aACF;SACF,CAAC;QAEQ,sBAAiB,GAAa;YACtC,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,WAAW;YACX,OAAO;YACP,WAAW;YACX,OAAO;YACP,UAAU;YACV,OAAO;YACP,UAAU;YACV,YAAY;YACZ,OAAO;SACR,CAAC;QAEQ,oBAAe,GAAG;YAC1B,eAAe,EAAE,CAAC,GAAQ,EAAE,EAAE;gBAC5B,OAAO;oBACL,IAAI,EAAE,GAAG;iBACV,CAAC;YACJ,CAAC;SACF,CAAC;QAEQ,qBAAgB,GAAG,CAAC,UAAe,EAAE,KAAY,EAAE,CAAS,EAAE,EAAE;;YACxE,MAAM,QAAQ,mCACT,CAAC,CAAC,SAAS,GACX,UAAU,CACd,CAAC;YAEF,MAAM,SAAS,GAAG,MAAA,QAAQ,CAAC,SAAS,mCAAI,MAAA,IAAI,CAAC,YAAY,0CAAE,SAAS,CAAC;YACrE,MAAM,SAAS,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,CAAC;YACrG,MAAM,WAAW,GAAG,OAAO,QAAQ,CAAC,KAAK,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC;YAErG,OAAO;gBACL,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;iBAChD;gBACD,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAzEW,gBAAgB;QACxB,MAAM,YAAY,mCACb,KAAK,CAAC,gBAAgB,EAAE,KAC3B,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,GAAG,EACP,EAAE,EAAE,GAAG,EACP,SAAS,EAAE,CAAC,EACZ,KAAK,EAAE,IAAI,GACZ,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;;AAhBe,iBAAI,cAAyB;AA8E/C,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,iBAAiB,EAAE,CAAC;IACpB,YAAY,EAAE,CAAC;IACf,OAAO,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,KAA4B,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9F,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,YAAmB,CAAC,CAAC;AAC/D,CAAC,CAAC","file":"link-path.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { ILinkPathMarkSpec } from '../typings/visual';\nimport type { ILinkPathConfig, ILinkPathMark, IMarkStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport { GlyphMark, registerGlyphMark } from './glyph';\nimport type { IGlyph, IPathGraphicAttribute } from '@visactor/vrender-core';\nimport { createPath } from '@visactor/vrender-core';\nimport { registerPath } from '@visactor/vrender-kits';\nimport type { Datum } from '../typings/common';\n\nexport const getHorizontalPath = (options: ILinkPathMarkSpec, ratio?: number) => {\n  const curvature = options.curvature ?? 0.5;\n  const hasThickness = true;\n  const thickness = typeof ratio === 'number' ? options.thickness * ratio : options.thickness;\n\n  let x0 = options.x0;\n  let x1 = options.x1;\n  let y00 = options.y0;\n  let y10 = options.y1;\n  let cpx0 = x0 + curvature * (x1 - x0);\n  let cpx1 = x1 + curvature * (x0 - x1);\n  let formatter = (v: number) => v;\n\n  if (options.round !== false) {\n    x0 = Math.round(x0);\n    x1 = Math.round(x1);\n    y00 = Math.round(y00);\n    y10 = Math.round(y10);\n    cpx0 = Math.round(cpx0);\n    cpx1 = Math.round(cpx1);\n    formatter = Math.round;\n  }\n  const topPath =\n    options.pathType === 'line'\n      ? `M${x0},${y00}L${x1},${y10}`\n      : options.pathType === 'polyline'\n      ? `M${x0},${y00}L${cpx0},${y00}L${cpx0},${y10}L${x1},${y10}`\n      : `M${x0},${y00}C${cpx0},${y00},${cpx1},${y10},${x1},${y10}`;\n\n  if (!hasThickness) {\n    // simplified to a single path\n    return topPath;\n  }\n\n  if (options.align === 'center') {\n    y00 = formatter(options.y0 - thickness / 2);\n    y10 = formatter(options.y1 - thickness / 2);\n  } else if (options.align === 'end') {\n    y00 = formatter(options.y0 + options.thickness / 2 - thickness);\n    y10 = formatter(options.y1 + options.thickness / 2 - thickness);\n  } else {\n    y00 = formatter(options.y0 - options.thickness / 2);\n    y10 = formatter(options.y1 - options.thickness / 2);\n  }\n\n  const y01 = formatter(y00 + thickness);\n  const y11 = formatter(y10 + thickness);\n\n  const hasLength = Math.abs(x1 - x0) > 1e-6;\n  const endArrowPath =\n    options.endArrow && hasLength\n      ? `L${x1},${formatter(y10 - thickness / 2)}L${formatter(x1 + thickness)},${formatter(\n          (y10 + y11) / 2\n        )}L${x1},${formatter(y11 + thickness / 2)}`\n      : '';\n  const startArrowPath =\n    options.startArrow && hasLength\n      ? `L${x0},${formatter(y01 + thickness / 2)}L${formatter(x0 - thickness)},${formatter(\n          (y00 + y01) / 2\n        )}L${x0},${formatter(y00 - thickness / 2)}`\n      : '';\n\n  if (options.pathType === 'line') {\n    return `M${x0},${y00}L${x1},${y10}${endArrowPath}L${x1},${y11}L${x0},${y01}${startArrowPath}Z`;\n  } else if (options.pathType === 'polyline') {\n    return `M${x0},${y00}L${cpx0},${y00}L${cpx0},${y10}L${x1},${y10}\n    ${endArrowPath}L${x1},${y11}L${cpx0},${y11}L${cpx0},${y01}L${x0},${y01}${startArrowPath}Z`;\n  }\n\n  return `M${x0},${y00}C${cpx0},${y00},${cpx1},${y10},${x1},${y10}\n  ${endArrowPath}L${x1},${y11}C${cpx1},${y11},${cpx0},${y01},${x0},${y01}${startArrowPath}Z`;\n};\n\nexport const getVerticalPath = (options: ILinkPathMarkSpec, ratio?: number) => {\n  const curvature = options.curvature ?? 0.5;\n  const hasThickness = true;\n  const thickness = typeof ratio === 'number' ? options.thickness * ratio : options.thickness;\n  let y0 = options.y0;\n  let y1 = options.y1;\n  let x00 = options.x0;\n  let x10 = options.x1;\n  let cpy0 = y0 + curvature * (y1 - y0);\n  let cpy1 = y1 + curvature * (y0 - y1);\n  let formatter = (v: number) => v;\n\n  if (options.round !== false) {\n    formatter = Math.round;\n    y0 = Math.round(y0);\n    y1 = Math.round(y1);\n    x00 = Math.round(x00);\n    x10 = Math.round(x10);\n    cpy0 = Math.round(cpy0);\n    cpy1 = Math.round(cpy1);\n  }\n  const leftpath =\n    options.pathType === 'line'\n      ? `M${x00},${y0}L${x10},${y1}`\n      : options.pathType === 'polyline'\n      ? `M${x00},${y0}L${x00},${cpy0}L${x10},${cpy0}L${x10},${y1}`\n      : `M${x00},${y0}C${x00},${cpy0},${x10},${cpy1},${x10},${y1}`;\n  if (!hasThickness) {\n    // simplified to a single path\n    return leftpath;\n  }\n\n  if (options.align === 'center') {\n    x00 = formatter(options.x0 - thickness / 2);\n    x10 = formatter(options.x1 - thickness / 2);\n  } else if (options.align === 'end') {\n    x00 = formatter(options.x0 + options.thickness / 2 - thickness);\n    x10 = formatter(options.x1 + options.thickness / 2 - thickness);\n  } else {\n    x00 = formatter(options.x0 - options.thickness / 2);\n    x10 = formatter(options.x1 - options.thickness / 2);\n  }\n\n  const x01 = formatter(x00 + thickness);\n  const x11 = formatter(x10 + thickness);\n\n  const hasLength = Math.abs(y1 - y0) > 1e-6;\n  const endArrowPath =\n    options.endArrow && hasLength\n      ? `L${formatter(x10 - thickness / 2)},${y1}L${formatter((x10 + x11) / 2)},${formatter(\n          y1 + thickness\n        )}L${formatter(x11 + thickness / 2)},${y1}`\n      : '';\n  const startArrowPath =\n    options.startArrow && hasLength\n      ? `L${formatter(x01 + thickness / 2)},${y0}L${formatter((x01 + x00) / 2)},${formatter(\n          y0 - thickness\n        )}L${formatter(x00 - thickness / 2)},${y0}`\n      : '';\n\n  if (options.pathType === 'line') {\n    return `M${x00},${y0}L${x10},${y1}${endArrowPath}L${x11},${y1}L${x01},${y0}${startArrowPath}Z`;\n  } else if (options.pathType === 'polyline') {\n    return `M${x00},${y0}L${x00},${cpy0}L${x10},${cpy0}L${x10},${y1}\n    ${endArrowPath}L${x11},${y1}L${x11},${cpy0}L${x01},${cpy0}L${x01},${y0}${startArrowPath}Z`;\n  }\n\n  return `M${x00},${y0}C${x00},${cpy0},${x10},${cpy1},${x10},${y1}\n  ${endArrowPath}L${x11},${y1}C${x11},${cpy1},${x01},${cpy0},${x01},${y0}${startArrowPath}Z`;\n};\n\nexport class LinkPathMark extends GlyphMark<ILinkPathMarkSpec, ILinkPathConfig> implements ILinkPathMark {\n  static readonly type = MarkTypeEnum.linkPath;\n  readonly type = LinkPathMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<ILinkPathMarkSpec> = {\n      ...super._getDefaultStyle(),\n      x: 0,\n      y: 0,\n      x0: 0,\n      y0: 0,\n      x1: 100,\n      y1: 100,\n      thickness: 1,\n      round: true\n    };\n    return defaultStyle;\n  }\n\n  protected _subMarks = {\n    back: {\n      type: 'path',\n      defaultAttributes: {\n        zIndex: 0\n      }\n    },\n    front: {\n      type: 'path',\n      defaultAttributes: {\n        zIndex: 1\n      }\n    }\n  };\n\n  protected _positionChannels: string[] = [\n    'x0',\n    'y0',\n    'x1',\n    'y1',\n    'thickness',\n    'round',\n    'curvature',\n    'ratio',\n    'pathType',\n    'align',\n    'endArrow',\n    'startArrow',\n    'ratio'\n  ];\n\n  protected _channelEncoder = {\n    backgroundStyle: (val: any) => {\n      return {\n        back: val\n      };\n    }\n  };\n\n  protected _positionEncoder = (glyphAttrs: any, datum: Datum, g: IGlyph) => {\n    const newAttrs = {\n      ...g.attribute,\n      ...glyphAttrs\n    };\n\n    const direction = newAttrs.direction ?? this._glyphConfig?.direction;\n    const parsePath = ['vertical', 'TB', 'BT'].includes(direction) ? getVerticalPath : getHorizontalPath;\n    const isRatioShow = typeof newAttrs.ratio === 'number' && newAttrs.ratio >= 0 && newAttrs.ratio <= 1;\n\n    return {\n      back: {\n        path: isRatioShow ? parsePath(newAttrs, 1) : ''\n      },\n      front: {\n        path: parsePath(newAttrs, isRatioShow ? newAttrs.ratio : 1)\n      }\n    };\n  };\n}\n\nexport const registerLinkPathMark = () => {\n  registerGlyphMark();\n  registerPath();\n  Factory.registerGraphicComponent('path', (attrs: IPathGraphicAttribute) => createPath(attrs));\n  Factory.registerMark(LinkPathMark.type, LinkPathMark as any);\n};\n"]}