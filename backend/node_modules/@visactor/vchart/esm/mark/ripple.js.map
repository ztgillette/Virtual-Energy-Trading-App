{"version":3,"sources":["../src/mark/ripple.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAK5C,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAEvD,OAAO,EAAE,YAAY,EAA6C,MAAM,wBAAwB,CAAC;AACjG,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAExD,MAAM,OAAO,UAAW,SAAQ,SAA0B;IAA1D;;QAEW,SAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAYtB,cAAS,GAAG;YACpB,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE;oBACjB,WAAW,EAAE,IAAI;iBAClB;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE;oBACjB,WAAW,EAAE,GAAG;iBACjB;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,iBAAiB,EAAE;oBACjB,WAAW,EAAE,IAAI;iBAClB;aACF;SACF,CAAC;QAEQ,sBAAiB,GAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAEjD,qBAAgB,GAAG,CAAC,UAAe,EAAE,KAAY,EAAE,CAAS,EAAE,EAAE;YACxE,MAAM,EAAE,MAAM,GAAI,CAAC,CAAC,SAAiB,CAAC,MAAM,EAAE,IAAI,GAAI,CAAC,CAAC,SAAiB,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC;YAC9F,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC;YAE9B,OAAO;gBACL,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,UAAU,GAAG,CAAC,EAAE,WAAW,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE;gBACtE,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE;gBAC3E,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE;aAC7E,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IA5CW,gBAAgB;QACxB,MAAM,YAAY,mCACb,KAAK,CAAC,gBAAgB,EAAE,KAC3B,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,MAAM,EAAE,CAAC,GACV,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;;AAXe,eAAI,YAAuB;AAiD7C,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,iBAAiB,EAAE,CAAC;IACpB,cAAc,EAAE,CAAC;IACjB,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAClD,OAAO,CAAC,wBAAwB,CAAC,QAAQ,EAAE,CAAC,KAA8B,EAAE,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;AACtG,CAAC,CAAC","file":"ripple.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { IRippleMarkSpec } from '../typings/visual';\nimport type { IMarkStyle, IRippleMark } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport { GlyphMark, registerGlyphMark } from './glyph';\nimport type { Datum } from '../typings/common';\nimport { createSymbol, type IGlyph, type ISymbolGraphicAttribute } from '@visactor/vrender-core';\nimport { clamp } from '@visactor/vutils';\nimport { registerSymbol } from '@visactor/vrender-kits';\n\nexport class RippleMark extends GlyphMark<IRippleMarkSpec> implements IRippleMark {\n  static readonly type = MarkTypeEnum.ripple;\n  readonly type = RippleMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<IRippleMarkSpec> = {\n      ...super._getDefaultStyle(),\n      x: 0,\n      y: 0,\n      ripple: 0\n    };\n    return defaultStyle;\n  }\n\n  protected _subMarks = {\n    ripple0: {\n      type: 'symbol',\n      defaultAttributes: {\n        fillOpacity: 0.75\n      }\n    },\n    ripple1: {\n      type: 'symbol',\n      defaultAttributes: {\n        fillOpacity: 0.5\n      }\n    },\n    ripple2: {\n      type: 'symbol',\n      defaultAttributes: {\n        fillOpacity: 0.25\n      }\n    }\n  };\n\n  protected _positionChannels: string[] = ['ripple', 'size'];\n\n  protected _positionEncoder = (glyphAttrs: any, datum: Datum, g: IGlyph) => {\n    const { ripple = (g.attribute as any).ripple, size = (g.attribute as any).size } = glyphAttrs;\n    const r = clamp(ripple, 0, 1);\n    const rippleSize = size * 0.5;\n\n    return {\n      ripple0: { size: size + rippleSize * r, fillOpacity: 0.75 - r * 0.25 },\n      ripple1: { size: size + rippleSize * (1 + r), fillOpacity: 0.5 - r * 0.25 },\n      ripple2: { size: size + rippleSize * (2 + r), fillOpacity: 0.25 - r * 0.25 }\n    };\n  };\n}\n\nexport const registerRippleMark = () => {\n  registerGlyphMark();\n  registerSymbol();\n  Factory.registerMark(RippleMark.type, RippleMark);\n  Factory.registerGraphicComponent('symbol', (attrs: ISymbolGraphicAttribute) => createSymbol(attrs));\n};\n"]}