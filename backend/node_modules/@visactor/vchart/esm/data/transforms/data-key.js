import { DEFAULT_DATA_INDEX, DEFAULT_DATA_KEY, DEFAULT_DATA_SERIES_FIELD } from "../../constant/data";

import { DEFAULT_HIERARCHY_DEPTH, DEFAULT_HIERARCHY_ROOT, DEFAULT_HIERARCHY_ROOT_INDEX } from "../../constant/hierarchy";

export function initKeyMap() {
    return {
        keyMap: new Map,
        needDefaultSeriesField: !this._seriesField,
        defaultSeriesField: this._seriesField ? null : this.getSeriesKeys()[0],
        getKey: this.generateDefaultDataKey(this._spec.dataKey)
    };
}

export function addDataKey(d, i, context) {
    d && (context.needDefaultSeriesField && (d[DEFAULT_DATA_SERIES_FIELD] = context.defaultSeriesField), 
    d[DEFAULT_DATA_INDEX] = i, d[DEFAULT_DATA_KEY] = context.getKey(d, i, context));
}

export function initHierarchyKeyMap() {
    return {
        keyMap: new Map,
        needDefaultSeriesField: !0,
        defaultSeriesField: this.getSeriesKeys()[0],
        getKey: this.generateDefaultDataKey(this._spec.dataKey),
        categoryField: this.getCategoryField()
    };
}

export function addHierarchyDataKey(d, i, context, depth = 0, root, rootIndex) {
    void 0 === rootIndex && (rootIndex = i), addDataKey(d, i, context), d[DEFAULT_HIERARCHY_DEPTH] = depth, 
    d[DEFAULT_HIERARCHY_ROOT] = root || d[context.categoryField], d[DEFAULT_HIERARCHY_ROOT_INDEX] = rootIndex, 
    d.children && d.children.length && d.children.forEach(((_d, _i) => addHierarchyDataKey(_d, _i, context, d[DEFAULT_HIERARCHY_DEPTH] + 1, d[DEFAULT_HIERARCHY_ROOT], rootIndex)));
}
//# sourceMappingURL=data-key.js.map
