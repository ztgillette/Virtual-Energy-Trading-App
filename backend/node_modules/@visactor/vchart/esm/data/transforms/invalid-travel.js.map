{"version":3,"sources":["../src/data/transforms/invalid-travel.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AASrD,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAgB,EAAE,EAAc,EAAE,EAAE;IAChE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IACtB,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAC;KACb;IACD,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,MAAM,EAAE,CAAC;IAC7C,IAAI,WAAW,KAAK,MAAM,EAAE;QAC1B,OAAO,IAAI,CAAC;KACb;IAED,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;QACnC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAY,EAAE,EAAE;YAC5B,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;oBACrC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAClB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","file":"invalid-travel.js","sourcesContent":["import type { Datum, IInvalidType, StringOrNumber } from '../../typings';\nimport { couldBeValidNumber } from '../../util/type';\n\nexport interface ITravelOpt {\n  config: () => {\n    invalidType: IInvalidType;\n    checkField: StringOrNumber[];\n  };\n}\n\nexport const invalidTravel = (data: Array<any>, op: ITravelOpt) => {\n  const { config } = op;\n  if (!config) {\n    return data;\n  }\n  const { invalidType, checkField } = config();\n  if (invalidType !== 'zero') {\n    return data;\n  }\n\n  if (checkField && checkField.length) {\n    data.forEach((datum: Datum) => {\n      checkField.forEach(field => {\n        if (!couldBeValidNumber(datum[field])) {\n          datum[field] = 0;\n        }\n      });\n    });\n  }\n  return data;\n};\n"]}