{"version":3,"sources":["../src/data/transforms/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IAggrType, IDataPointSpec, IMarkerSupportSeries } from '../../component/marker/interface';\nimport type { Datum, StringOrNumber } from '../../typings/common';\nimport type { CoordinateType } from '../../typings/coordinate';\n\nexport type StatisticOperations = Array<'max' | 'min' | 'values' | 'array-max' | 'array-min' | 'allValid'>;\n\nexport interface IStatisticsOption {\n  fields: {\n    key: string;\n    operations: StatisticOperations;\n    filter?: (fv: any) => boolean;\n    customize?: { max: number; min: number } | any[];\n  }[];\n  // operations: Array<'max' | 'min' | 'values'>;\n  target?: 'parser' | 'latest';\n}\n\nexport type IOption = {\n  field: string;\n};\n\nexport type IOptionAggrField = {\n  field: string;\n  aggrType: IAggrType;\n};\n\nexport type IOptionPos = IOptionAggrField | string | number | StringOrNumber[];\n\nexport type IOptionSeries = {\n  getRelativeSeries: () => IMarkerSupportSeries;\n  getStartRelativeSeries: () => IMarkerSupportSeries;\n  getEndRelativeSeries: () => IMarkerSupportSeries;\n};\n\nexport type IOptionCallback = (\n  relativeSeriesData: any,\n  startRelativeSeriesData: any,\n  endRelativeSeriesData: any,\n  relativeSeries: IMarkerSupportSeries,\n  startRelative: IMarkerSupportSeries,\n  endRelative: IMarkerSupportSeries\n) => IOptionPos;\n\nexport type IOptionAggr = {\n  x?: IOptionPos | IOptionCallback;\n  y?: IOptionPos | IOptionCallback;\n  angle?: IOptionPos | IOptionCallback;\n  radius?: IOptionPos | IOptionCallback;\n  areaName?: string | IOptionCallback;\n  getRefRelativeSeries?: () => IMarkerSupportSeries;\n} & IOptionSeries;\n\nexport type IOptionWithCoordinates = {\n  coordinates:\n    | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => IDataPointSpec[] | IDataPointSpec)\n    | IDataPointSpec\n    | IDataPointSpec[];\n  getSeriesByIdOrIndex: (seriesUserId: StringOrNumber, seriesIndex: number) => IMarkerSupportSeries;\n  coordinateType: CoordinateType;\n} & IOptionSeries;\n\nexport type IOptionRegr = {\n  fieldX: string;\n  fieldY: string;\n};\n"]}