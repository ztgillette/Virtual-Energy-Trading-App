{"version":3,"sources":["../src/data/transforms/add-property.ts"],"names":[],"mappings":"AAYA,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAgB,EAAE,EAAyB,EAAE,EAAE;IAC/E,MAAM,OAAO,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC;IAChC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IAEvD,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACvB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;KACvB;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","file":"add-property.js","sourcesContent":["export type AddVChartPropertyContext = {\n  keyMap: Map<string, number>;\n  needDefaultSeriesField: boolean;\n  defaultSeriesField?: string;\n  getKey?: (d: any, i: number, context: AddVChartPropertyContext) => string;\n  categoryField?: string;\n};\nexport interface IAddVChartPropertyOpt {\n  beforeCall: () => AddVChartPropertyContext;\n  call: (d: any, i: number, context: AddVChartPropertyContext) => void;\n}\n\nexport const addVChartProperty = (data: Array<any>, op: IAddVChartPropertyOpt) => {\n  const context = op.beforeCall();\n  data && data.forEach((d, i) => op.call(d, i, context));\n\n  if (context.keyMap) {\n    context.keyMap.clear();\n    context.keyMap = null;\n  }\n\n  return data;\n};\n"]}