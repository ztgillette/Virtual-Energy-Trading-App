{"version":3,"sources":["../src/data/transforms/pictogram.ts"],"names":[],"mappings":"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","file":"pictogram.js","sourcesContent":["import { isValid, merge } from '@visactor/vutils';\nimport type { DataView, SVGParserResult } from '@visactor/vdataset';\nimport { DEFAULT_DATA_INDEX } from '../../constant/data';\nimport { measureText } from '../../util';\n\nfunction isValidStrokeOrFill(attr: any) {\n  return isValid(attr) && attr !== 'none' && !attr.includes?.('url');\n}\n\nconst getLineWidth = (attributes: any) => {\n  const strokeWidth = parseFloat(attributes.strokeWidth);\n  if (!isNaN(strokeWidth)) {\n    return strokeWidth;\n  }\n\n  const stroke = attributes.stroke;\n  return stroke && isValidStrokeOrFill(stroke) ? 1 : 0;\n};\n\nconst getFill = (attributes: any, defaultFill?: string) => {\n  const fill = attributes.fill ?? defaultFill;\n  return fill && isValidStrokeOrFill(fill) ? fill : undefined;\n};\n\nconst getStroke = (attributes: any, defaultStroke?: string) => {\n  const stroke = attributes.stroke ?? defaultStroke;\n  return stroke && isValidStrokeOrFill(stroke) ? stroke : false;\n};\n\nconst commonAttributes = (attributes: Record<string, any>) => {\n  return {\n    ...attributes,\n    x: parseFloat(attributes.x) || undefined,\n    y: parseFloat(attributes.y) || undefined,\n    fillStrokeOrder: false,\n    fill: getFill(attributes),\n    lineWidth: getLineWidth(attributes),\n    stroke: getStroke(attributes)\n  };\n};\n\nexport const graphicAttributeTransform = {\n  group: (attributes: Record<string, any>) => {\n    const common = commonAttributes(attributes) as any;\n    return {\n      ...common,\n      visibleAll: common.visible !== false\n    };\n  },\n  rule: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      x: parseFloat(attributes.x1),\n      y: parseFloat(attributes.y1),\n      x1: parseFloat(attributes.x2),\n      y1: parseFloat(attributes.y2)\n    };\n  },\n  rect: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      // rect 在 chrome 下有默认黑色填充，这里保持效果一致\n      fill: getFill(attributes, '#000'),\n      width: parseFloat(attributes.width),\n      height: parseFloat(attributes.height)\n    };\n  },\n  polygon: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      // rect 在 chrome 下有默认黑色填充，这里保持效果一致\n      fill: getFill(attributes, '#000'),\n      points: attributes.points\n        .trim()\n        .split(/\\s+/)\n        .map((pair: string) => {\n          const [x, y] = pair.split(',').map(Number);\n          return { x, y };\n        })\n    };\n  },\n  line: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      points: attributes.points\n        .trim()\n        .split(/\\s+/)\n        .map((pair: string) => {\n          const [x, y] = pair.split(',').map(Number);\n          return { x, y };\n        })\n    };\n  },\n  path: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      path: attributes.d,\n      fillStrokeOrder: false,\n      fill: getFill(attributes, '#000')\n    };\n  },\n  arc: (attributes: Record<string, any>) => {\n    return {\n      ...commonAttributes(attributes),\n      outerRadius: attributes.r ?? attributes.ry,\n      x: parseFloat(attributes.cx),\n      y: parseFloat(attributes.cy),\n      startAngle: 0,\n      endAngle: Math.PI * 2,\n      scaleX: parseFloat(attributes.rx) / parseFloat(attributes.ry) || 1,\n      fill: getFill(attributes, '#000')\n    };\n  },\n  text: (attributes: Record<string, any>, value: string) => {\n    return {\n      ...commonAttributes(attributes),\n      text: value,\n      textAlign: attributes.textAlign ?? 'left',\n      textBaseLine: attributes.textAnchor ?? 'middle',\n      anchor: [0, 0],\n      fill: getFill(attributes, '#000')\n    };\n  }\n};\n\nexport const pictogram = (data: DataView[]) => {\n  if (!data || !data[0]) {\n    return {};\n  }\n  const { elements } = data[0].latestData as SVGParserResult;\n\n  // 处理最终属性\n  if (elements && elements.length) {\n    // TODO: type\n    // elements.forEach((el: SVGParsedElementExtend, index: number) => {\n    elements.forEach((el: any, index: number) => {\n      el[DEFAULT_DATA_INDEX] = index;\n      el._uniqueId = `${el.id}-${index}`;\n      el.data = undefined;\n\n      const { graphicType: type, transform } = el;\n\n      const finalAttributes = {\n        visible: el.attributes.visibility !== 'hidden' && el.attributes.visibility !== 'collapse'\n      };\n\n      if (el.graphicType === 'text') {\n        merge(finalAttributes, el._inheritStyle, el.parent?._textGroupStyle, el.attributes);\n      } else if (el.graphicType !== 'group') {\n        merge(finalAttributes, el._inheritStyle, el.attributes);\n      }\n\n      if (graphicAttributeTransform[type]) {\n        el._finalAttributes = graphicAttributeTransform[type](finalAttributes, el.value);\n      } else {\n        el._finalAttributes = finalAttributes;\n      }\n\n      if (transform) {\n        el._finalAttributes.postMatrix = { ...transform };\n      }\n    });\n\n    // 处理文字布局\n    const texts = elements.filter(el => el.tagName === 'text');\n    for (let i = 0; i < texts.length; i++) {\n      const textId = texts[i]._uniqueId;\n      const children = elements.filter(el => {\n        let result = false;\n        let parent = el.parent;\n        while (parent) {\n          if (parent._uniqueId === textId) {\n            result = true;\n            break;\n          }\n          parent = parent.parent;\n        }\n        return result;\n      });\n\n      if (children && children.length) {\n        const startX = texts[i]._textGroupStyle?.x ?? 0;\n        let curX = startX;\n\n        for (let j = 0; j < children.length; j++) {\n          const currentChild = children[j];\n          if (currentChild.graphicType === 'group') {\n            curX = startX;\n          } else if (currentChild.value) {\n            if (currentChild.parent._textGroupStyle.x === undefined) {\n              const lastText = children\n                .slice(0, j)\n                .reverse()\n                .find(c => c.graphicType === 'text' && c.value);\n              if (lastText) {\n                const width = measureText(lastText.value, lastText._finalAttributes).width;\n                curX += width;\n              }\n              currentChild._finalAttributes.x = curX;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return elements;\n};\n"]}