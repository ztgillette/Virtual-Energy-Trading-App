{"version":3,"sources":["../src/data/transforms/waterfall.ts"],"names":[],"mappings":"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","file":"waterfall.js","sourcesContent":["import { isNil, precisionAdd, precisionSub } from '@visactor/vutils';\n\nimport type { DataView } from '@visactor/vdataset';\nimport type {\n  IWaterfallSeriesSpec,\n  IWaterfallTotalCustom,\n  IWaterfallTotalField\n} from '../../series/waterfall/interface';\nimport type { Datum } from '../../typings';\nimport { WaterfallDefaultSeriesField } from '../../constant/waterfall';\nimport { warn } from '../../util/debug';\nimport { STACK_FIELD_TOTAL_TOP } from '../../constant/data';\n\ntype TotalInfo = {\n  start: number;\n  end: number;\n  lastIndex: string;\n  lastEnd: number;\n  index: string;\n  isTotal: boolean;\n  positive: number;\n  negative: number;\n};\n\nexport interface IWaterfallOpt {\n  indexField: string;\n  valueField: string;\n  seriesField?: string;\n  startAs: string;\n  endAs: string;\n  total: IWaterfallSeriesSpec['total'];\n  seriesFieldName: {\n    total: string;\n    increase: string;\n    decrease: string;\n  };\n  stackInverse: boolean;\n  groupData: () => DataView;\n}\n\nexport const waterfall = (lastData: Array<Datum>, op: IWaterfallOpt) => {\n  if (!lastData || lastData.length === 0) {\n    return lastData;\n  }\n  const { indexField, total: totalSpec, groupData } = op;\n  const totalData: {\n    start: number;\n    end: number;\n    lastIndex: string;\n    lastEnd: number;\n    index: string;\n    isTotal: boolean;\n    positive: number;\n    negative: number;\n  }[] = [];\n  const { dimensionValues, dimensionData } = groupData().latestData as {\n    dimensionValues: { [key in string]: Set<string> };\n    dimensionData: { [key in string]: Datum[] };\n  };\n  const indexValues = Array.from(dimensionValues[indexField]);\n  // 上一次的计算结果\n  let temp: { start: number; end: number; lastIndex: string; positive: number; negative: number } = {\n    start: 0,\n    end: 0,\n    positive: 0,\n    negative: 0,\n    lastIndex: null\n  };\n  indexValues.forEach((key, index) => {\n    const total = {\n      start: temp.end,\n      end: temp.end,\n      lastIndex: temp.lastIndex,\n      lastEnd: temp.end,\n      index: key,\n      isTotal: false,\n      positive: temp.end,\n      negative: temp.end\n    };\n\n    const indexData = op.stackInverse === true ? dimensionData[key].reverse() : dimensionData[key];\n    indexData?.forEach((d, i) => {\n      if (i === indexData.length - 1) {\n        d[STACK_FIELD_TOTAL_TOP] = true;\n      } else {\n        delete d[STACK_FIELD_TOTAL_TOP];\n      }\n    });\n    // 1.9.5 新增能力\n    // 当前 key 对应的数据中有一个总计数据，并且还有其他的分组数据时。总计的计算逻辑需要将总计值拆分\n    if (indexData.length > 1) {\n      const isTotalCheck = (d: Datum) => {\n        if (!totalSpec || totalSpec.type === 'end') {\n          if (index === indexValues.length - 1) {\n            return true;\n          }\n        } else if (totalSpec.type === 'field' || totalSpec.type === 'custom') {\n          const tag = d[totalSpec.tagField];\n          return !!tag;\n        }\n        return false;\n      };\n      const isTotalTag = indexData.some(d => isTotalCheck(d));\n      if (isTotalTag) {\n        temp = computeTotalWithMultipleData(\n          indexData,\n          key,\n          total,\n          totalData,\n          temp,\n          indexValues,\n          index,\n          op,\n          isTotalCheck\n        );\n        totalData.push(total);\n        return;\n      }\n    }\n    temp = computeNormalData(indexData, key, total, totalData, temp, indexValues, index, op);\n    totalData.push(total);\n  });\n  return totalData;\n};\n\nfunction computeTotalWithMultipleData(\n  indexData: Datum[],\n  key: string,\n  total: TotalInfo,\n  totalData: TotalInfo[],\n  temp: { start: number; end: number; lastIndex: string; positive: number; negative: number },\n  indexValues: string[],\n  index: number,\n  op: IWaterfallOpt,\n  isTotalCheck: (d: Datum) => boolean\n) {\n  total.isTotal = true;\n  const { valueField, startAs, endAs, total: totalSpec } = op;\n  // 先将数据分为总计数据与常规数据\n  const _normalTemp: Datum[] = [];\n  const _totalTemp: Datum[] = [];\n  indexData.forEach(d => {\n    if (isTotalCheck(d)) {\n      _totalTemp.push(d);\n    } else {\n      _normalTemp.push(d);\n    }\n  });\n  // 1. 不可能全都不是总计数据\n  // 2. 如果全都是总计数据，让它们都是同一个值\n  if (_totalTemp.length === indexData.length) {\n    const result = computeNormalData([indexData[0]], key, total, totalData, temp, indexValues, index, op);\n    _totalTemp.forEach(d => {\n      d[startAs] = indexData[0][startAs];\n      d[endAs] = indexData[0][endAs];\n      d[valueField] = indexData[0][valueField];\n    });\n    return result;\n  }\n\n  // 3. 其他常规情况\n  // 先获取当前的起始值/结束值应当是多少\n  // 按照第一个总计数据的配置来决定\n  const totalConfigData = _totalTemp[0];\n  // eslint-disable-next-line prefer-const\n  let { start, end } = getTotalStartEnd(totalConfigData, total, totalData, temp, totalSpec);\n  total.start = start;\n  total.end = end;\n  let positive = start;\n  let navigate = start;\n  // 当前剩余的总计值\n  let valueTemp = end - start;\n  // 将非总计数据进行堆叠\n  _normalTemp.forEach(d => {\n    const value = +d[valueField];\n    if (value >= 0) {\n      d[startAs] = +positive;\n      positive = precisionAdd(positive, value);\n    } else {\n      d[startAs] = +navigate;\n      navigate = precisionAdd(navigate, value);\n    }\n    d[endAs] = precisionAdd(d[startAs], value);\n    start = precisionAdd(start, value);\n    valueTemp = precisionSub(valueTemp, value);\n  });\n  // 现在的start end 就是 total 的\n  _totalTemp.forEach(d => {\n    d[startAs] = +start;\n    d[endAs] = precisionAdd(d[startAs], valueTemp);\n    d[valueField] = valueTemp;\n  });\n  return { ...total, lastIndex: key };\n}\n\nfunction computeNormalData(\n  indexData: Datum[],\n  key: string,\n  total: TotalInfo,\n  totalData: TotalInfo[],\n  temp: { start: number; end: number; lastIndex: string; positive: number; negative: number },\n  indexValues: string[],\n  index: number,\n  op: IWaterfallOpt\n) {\n  const { valueField, startAs, endAs, total: totalSpec, seriesField, seriesFieldName } = op;\n  indexData.forEach(d => {\n    let isTotalTag = false;\n    if (!totalSpec || totalSpec.type === 'end') {\n      if (index === indexValues.length - 1) {\n        total.start = 0;\n        d[startAs] = total.start;\n        d[endAs] = total.end;\n        isTotalTag = true;\n      }\n    } else if (totalSpec.type === 'field' || totalSpec.type === 'custom') {\n      const tag = d[totalSpec.tagField];\n      if (tag) {\n        isTotalTag = true;\n        const { start, end } = getTotalStartEnd(d, total, totalData, temp, totalSpec);\n        d[startAs] = start;\n        d[endAs] = end;\n        d[valueField] = end - start;\n        total.start = start;\n        total.end = end;\n      }\n    }\n    if (!isTotalTag) {\n      const value = +d[valueField];\n      // 区分正负值\n      if (value >= 0) {\n        d[startAs] = +total.positive;\n        total.positive = precisionAdd(total.positive, value);\n      } else {\n        d[startAs] = +total.negative;\n        total.negative = precisionAdd(total.negative, value);\n      }\n      d[endAs] = precisionAdd(d[startAs], value);\n      total.end = precisionAdd(total.end, value);\n    }\n    total.isTotal = isTotalTag;\n\n    if (isNil(seriesField) || seriesField === WaterfallDefaultSeriesField) {\n      if (isTotalTag) {\n        d[WaterfallDefaultSeriesField] = seriesFieldName.total;\n      } else {\n        d[WaterfallDefaultSeriesField] = +d[valueField] >= 0 ? seriesFieldName.increase : seriesFieldName.decrease;\n      }\n    }\n  });\n  return { ...total, lastIndex: key };\n}\n\nfunction getTotalStartEnd(\n  d: Datum,\n  total: TotalInfo,\n  totalData: TotalInfo[],\n  temp: { start: number; end: number; lastIndex: string; positive: number; negative: number },\n  totalSpec: IWaterfallOpt['total']\n) {\n  if (!totalSpec || totalSpec.type === 'end') {\n    return getTotalInEndType(total);\n  } else if (totalSpec.type === 'field' || totalSpec.type === 'custom') {\n    if (totalSpec.type === 'custom') {\n      return getTotalInCustomType(d, temp, totalSpec);\n    }\n    // 如果有设置count， valueField 和 startField 无效\n    if (totalSpec.collectCountField && !isNil(d[totalSpec.collectCountField])) {\n      return getTotalInCollectField(d, totalData, total, totalSpec);\n    }\n    return getTotalInField(d, total, totalSpec);\n  }\n  return { start: 0, end: 0 };\n}\n\nfunction getTotalInEndType(total: TotalInfo) {\n  return { start: 0, end: total.end };\n}\n\nfunction getTotalInCustomType(\n  d: Datum,\n  temp: { start: number; end: number; lastIndex: string; positive: number; negative: number },\n  totalSpec: IWaterfallOpt['total']\n) {\n  return (<IWaterfallTotalCustom>totalSpec).product(d, temp);\n}\n\nfunction getTotalInCollectField(d: Datum, totalData: TotalInfo[], total: TotalInfo, totalSpec: IWaterfallTotalField) {\n  let start = 0;\n  let end = total.end;\n  const startIndex = totalData.length - +d[totalSpec.collectCountField];\n  const endIndex = totalData.length - 1;\n  if (startIndex < 0) {\n    warn('total.collectCountField error');\n  } else {\n    start = totalData[startIndex].start;\n  }\n  if (endIndex < 0) {\n    warn('total.collectCountField error');\n  } else {\n    end = totalData[endIndex].end;\n  }\n  return { start, end };\n}\n\nfunction getTotalInField(d: Datum, total: TotalInfo, totalSpec: IWaterfallTotalField) {\n  let start = 0;\n  let end = total.end;\n  if (totalSpec.startField && !isNil(d[totalSpec.startField])) {\n    start = +d[totalSpec.startField];\n  }\n  if (totalSpec.valueField && !isNil(d[totalSpec.valueField])) {\n    end = precisionAdd(start, +d[totalSpec.valueField]);\n  }\n  return { start, end };\n}\n\nexport interface IWaterfallFillEndOpt {\n  indexField: string;\n  valueField: string;\n  seriesField?: string;\n  total: IWaterfallSeriesSpec['total'];\n}\n\nexport const waterfallFillTotal = (data: Array<Datum>, op: IWaterfallFillEndOpt) => {\n  if (!data) {\n    return data;\n  }\n  const { indexField, valueField, total, seriesField } = op;\n  const totalData = {\n    [indexField]: total?.text || 'total',\n    [valueField]: data.reduce((pre, cur) => precisionAdd(pre, +cur[valueField]), 0)\n  };\n  if (seriesField) {\n    totalData[seriesField] = 'total';\n  }\n  data.push(totalData);\n  return data;\n};\n"]}