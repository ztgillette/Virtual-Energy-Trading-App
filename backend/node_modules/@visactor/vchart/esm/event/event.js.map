{"version":3,"sources":["../src/event/event.ts"],"names":[],"mappings":"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","file":"event.js","sourcesContent":["/*eslint no-dupe-class-members: \"off\"*/\n\nimport { Factory } from '../core/factory';\nimport type { RenderMode } from '../typings/spec/common';\nimport type {\n  EventType,\n  EventQuery,\n  EventCallback,\n  EventParamsDefinition,\n  IEvent,\n  IEventDispatcher,\n  IComposedEvent,\n  EventParams,\n  EventHandler,\n  EventBubbleLevel\n} from './interface';\n\nexport class Event implements IEvent {\n  private _eventDispatcher: IEventDispatcher;\n  private _mode: RenderMode;\n\n  private _composedEventMap: Map<EventCallback<EventParams>, { eventType: EventType; event: IComposedEvent }> =\n    new Map();\n  getComposedEventMap() {\n    return this._composedEventMap;\n  }\n\n  constructor(eventDispatcher: IEventDispatcher, mode: RenderMode) {\n    this._eventDispatcher = eventDispatcher;\n    this._mode = mode;\n  }\n\n  on<Evt extends EventType>(eType: Evt, callback: EventCallback<EventParamsDefinition[Evt]>): this;\n  on<Evt extends EventType>(eType: Evt, query: EventQuery, callback: EventCallback<EventParamsDefinition[Evt]>): this;\n  on<Evt extends EventType>(\n    eType: Evt,\n    query: EventQuery | EventCallback<EventParamsDefinition[Evt]>,\n    callback?: EventCallback<EventParamsDefinition[Evt]>\n  ): this {\n    const handler =\n      typeof query === 'function'\n        ? { query: null, callback: query }\n        : {\n            query,\n            callback: callback as EventCallback<EventParamsDefinition[Evt]>\n          };\n\n    const ComposedEventCtor = Factory.getComposedEvent(eType);\n    if (ComposedEventCtor) {\n      const composedEvent = new ComposedEventCtor(this._eventDispatcher, this._mode) as IComposedEvent;\n      composedEvent.register(eType, handler);\n      this._composedEventMap.set(callback as EventCallback<EventParamsDefinition[Evt]>, {\n        eventType: eType,\n        event: composedEvent\n      });\n    } else {\n      this._eventDispatcher.register(eType, handler);\n    }\n\n    return this;\n  }\n\n  off<Evt extends EventType>(eType: Evt, callback?: EventCallback<EventParamsDefinition[Evt]>): this;\n  off<Evt extends EventType>(eType: Evt, query: EventQuery, callback: EventCallback<EventParamsDefinition[Evt]>): this;\n  off<Evt extends EventType>(\n    eType: Evt,\n    query?: EventQuery | EventCallback<EventParamsDefinition[Evt]>,\n    cb?: EventCallback<EventParamsDefinition[Evt]>\n  ): this {\n    const callback = (cb ?? query) as EventCallback<EventParamsDefinition[Evt]>;\n    const ComposedEventCtor = Factory.getComposedEvent(eType);\n\n    if (!!ComposedEventCtor) {\n      if (callback) {\n        this._composedEventMap.get(callback)?.event.unregister();\n        this._composedEventMap.delete(callback);\n      } else {\n        for (const entry of this._composedEventMap.entries()) {\n          if (entry[1].eventType === eType) {\n            this._composedEventMap.get(entry[0])?.event.unregister();\n            this._composedEventMap.delete(entry[0]);\n          }\n        }\n      }\n    } else {\n      if (callback) {\n        const handler: EventHandler<EventParamsDefinition[Evt]> = {\n          callback,\n          query: null,\n          // 卸载事件时无需处理 source 以外的参数\n          filter: {\n            nodeName: null,\n            type: eType,\n            level: null,\n            source: (query as EventQuery).source,\n            markName: null,\n            filter: null,\n            userId: null\n          }\n        };\n        this._eventDispatcher.unregister(eType, handler);\n      } else {\n        this._eventDispatcher.unregister(eType);\n      }\n    }\n    return this;\n  }\n\n  emit<Evt extends EventType>(eType: Evt, params: EventParamsDefinition[Evt], level?: EventBubbleLevel): this {\n    this._eventDispatcher.dispatch(eType, params, level);\n    return this;\n  }\n\n  prevent<Evt extends EventType>(\n    eType: Evt,\n    except?: {\n      handler: EventCallback<EventParamsDefinition[Evt]>;\n      level: EventBubbleLevel;\n    }\n  ): this {\n    this._eventDispatcher.prevent(eType, except);\n    return this;\n  }\n\n  allow<Evt extends EventType>(eType: Evt) {\n    this._eventDispatcher.allow(eType);\n    return this;\n  }\n\n  release(): void {\n    this._eventDispatcher.clear();\n    this._composedEventMap.clear();\n  }\n}\n"]}