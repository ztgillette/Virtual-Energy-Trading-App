{"version":3,"sources":["../src/layout/grid-layout/grid-layout.ts"],"names":[],"mappings":"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","file":"grid-layout.js","sourcesContent":["import type { utilFunctionCtx } from '../../typings/params';\nimport type { IChart } from '../../chart/interface/chart';\nimport type { IBoundsLike } from '@visactor/vutils';\nimport type { IBaseLayout, IGridLayoutSpec, ElementSpec, ILayoutItem } from '../interface';\nimport { isFunction, isValid, isValidNumber } from '@visactor/vutils';\nimport type { IRect } from '../../typings/space';\nimport { Factory } from '../../core/factory';\n\ntype GridSize = {\n  value: number;\n  isUserSetting: boolean;\n  isLayoutSetting: boolean;\n};\n\nexport class GridLayout implements IBaseLayout {\n  static type = 'grid';\n  private _chartLayoutRect: IRect = { x: 0, y: 0, width: 1, height: 1 };\n  private _chartViewBox: IBoundsLike;\n\n  protected _col: number = 1;\n  protected _row: number = 1;\n  protected _colSize: GridSize[];\n  protected _rowSize: GridSize[];\n\n  protected _colElements: ILayoutItem[][];\n  protected _rowElements: ILayoutItem[][];\n\n  protected _gridInfo: IGridLayoutSpec;\n\n  protected _elementMap: Map<ILayoutItem, ElementSpec> = new Map();\n\n  protected _onError: (...args: any[]) => void;\n\n  constructor(gridInfo: IGridLayoutSpec, ctx: utilFunctionCtx) {\n    this.standardizationSpec(gridInfo);\n    this._gridInfo = gridInfo;\n    this._col = gridInfo.col;\n    this._row = gridInfo.row;\n    this._colSize = new Array(this._col).fill(null);\n    this._rowSize = new Array(this._row).fill(null);\n    this._colElements = new Array(this._col).fill([]);\n    this._rowElements = new Array(this._row).fill([]);\n    this._onError = ctx?.onError;\n\n    this.initUserSetting();\n  }\n\n  protected standardizationSpec(gridInfo: IGridLayoutSpec) {\n    gridInfo.col = gridInfo.col ?? 1;\n    gridInfo.row = gridInfo.row ?? 1;\n    gridInfo.elements = gridInfo.elements ?? [];\n  }\n\n  protected initUserSetting() {\n    // 先对用户设置的宽高进行设置\n    this._gridInfo.colWidth &&\n      this.setSizeFromUserSetting(this._gridInfo.colWidth, this._colSize, this._col, this._chartLayoutRect.width);\n\n    this._gridInfo.rowHeight &&\n      this.setSizeFromUserSetting(this._gridInfo.rowHeight, this._rowSize, this._row, this._chartLayoutRect.height);\n    // 其余位置默认填充0\n    this._colSize.forEach((c, i) => {\n      if (!c) {\n        this._colSize[i] = {\n          value: 0,\n          isUserSetting: false,\n          isLayoutSetting: false\n        };\n      }\n    });\n    this._rowSize.forEach((r, i) => {\n      if (!r) {\n        this._rowSize[i] = {\n          value: 0,\n          isUserSetting: false,\n          isLayoutSetting: false\n        };\n      }\n    });\n  }\n\n  /**\n   * 设置用户设置的 colWidth 和 rowHeight\n   */\n  protected setSizeFromUserSetting(\n    userSetting: {\n      index: number;\n      size: number | ((maxSize: number) => number);\n    }[],\n    gridSize: GridSize[],\n    gridMax: number,\n    maxSize: number\n  ) {\n    userSetting.forEach(userSet => {\n      if (userSet.index < 0 && userSet.index >= gridMax) {\n        return;\n      }\n      if (isValidNumber(userSet.size)) {\n        gridSize[userSet.index] = {\n          value: +userSet.size,\n          isUserSetting: true,\n          isLayoutSetting: false\n        };\n      } else if (isFunction(userSet.size)) {\n        gridSize[userSet.index] = {\n          value: userSet.size(maxSize),\n          isUserSetting: true,\n          isLayoutSetting: false\n        };\n      }\n    });\n  }\n\n  protected clearLayoutSize() {\n    // 其余位置默认填充0\n    this._colSize.forEach(c => {\n      c.isLayoutSetting = false;\n      if (!c.isUserSetting) {\n        c.value = 0;\n      }\n    });\n    this._rowSize.forEach(r => {\n      r.isLayoutSetting = false;\n      if (!r.isUserSetting) {\n        r.value = 0;\n      }\n    });\n  }\n\n  protected getItemGridInfo(item: ILayoutItem): ElementSpec {\n    // map 中寻找\n    const mapResult = this._elementMap.get(item);\n    if (mapResult) {\n      return mapResult;\n    }\n    // 配置中匹配\n    let result: ElementSpec | undefined;\n    result = this._gridInfo.elements?.find(e => {\n      if ('modelId' in e && isValid(e.modelId)) {\n        if (isValid(item.model.userId) && item.model.userId === e.modelId) {\n          return true;\n        }\n      } else if ('modelKey' in e && isValid(e.modelKey) && 'modelIndex' in e && isValid(e.modelIndex)) {\n        const specKey = item.model.specKey ?? item.model.type;\n        if (specKey === e.modelKey && item.model.getSpecIndex() === e.modelIndex) {\n          return true;\n        }\n      }\n      return false;\n    });\n    // default\n    if (!result) {\n      result = {\n        col: 0,\n        colSpan: 1,\n        row: 0,\n        rowSpan: 1\n      } as ElementSpec;\n    }\n    this._elementMap.set(item, result);\n    return result;\n  }\n\n  protected getSizeFromGrid(spec: ElementSpec, type: 'col' | 'row'): number | undefined {\n    const sizeList = type === 'col' ? this._colSize : this._rowSize;\n    let result = 0;\n    for (let index = spec[type]; index < spec[type] + (spec[`${type}Span`] ?? 1); index++) {\n      result += sizeList[index].value;\n    }\n    return result;\n  }\n\n  protected getSizeFromUser(spec: ElementSpec, type: 'col' | 'row'): number | undefined {\n    const sizeList = type === 'col' ? this._colSize : this._rowSize;\n    if (!sizeList[spec[type]]?.isUserSetting) {\n      return undefined;\n    }\n    let result = 0;\n    for (let index = spec[type]; index < spec[type] + (spec[`${type}Span`] ?? 1); index++) {\n      if (!sizeList[index].isUserSetting) {\n        return undefined;\n      }\n      result += sizeList[index].value;\n    }\n    return result;\n  }\n\n  protected setItemLayoutSizeToGrid(item: ILayoutItem, gridSpec: ElementSpec) {\n    if (isColItem(item)) {\n      if (gridSpec.colSpan && gridSpec.colSpan > 1) {\n        return;\n      }\n      if (this._colSize[gridSpec.col].isUserSetting) {\n        return;\n      }\n      this._colSize[gridSpec.col].value = Math.max(\n        this._colSize[gridSpec.col].value,\n        item.getLayoutRect().width + item.layoutPaddingLeft + item.layoutPaddingRight\n      );\n      this._colSize[gridSpec.col].isLayoutSetting = true;\n    } else {\n      if (gridSpec.rowSpan && gridSpec.rowSpan > 1) {\n        return;\n      }\n      if (this._rowSize[gridSpec.row].isUserSetting) {\n        return;\n      }\n      this._rowSize[gridSpec.row].value = Math.max(\n        this._rowSize[gridSpec.row].value,\n        item.getLayoutRect().height + item.layoutPaddingTop + item.layoutPaddingBottom\n      );\n      this._rowSize[gridSpec.row].isLayoutSetting = true;\n    }\n  }\n\n  protected layoutGrid(type: 'col' | 'row') {\n    const gridSize = type === 'col' ? this._colSize : this._rowSize;\n    let unSetSize = type === 'col' ? this._chartLayoutRect.width : this._chartLayoutRect.height;\n    const willSize: GridSize[] = [];\n    gridSize.forEach(s => {\n      if (s.isUserSetting || s.isLayoutSetting) {\n        unSetSize -= s.value;\n      } else {\n        willSize.push(s);\n      }\n    });\n    if (unSetSize < 0) {\n      console.warn(`layout content ${type} size bigger than chart`);\n    }\n    willSize.forEach(s => (s.value = unSetSize / willSize.length));\n  }\n\n  protected getItemPosition(item: ILayoutItem) {\n    const gridSpec = this.getItemGridInfo(item);\n    const point = { x: this._chartLayoutRect.x, y: this._chartLayoutRect.y };\n    for (let col = 0; col < gridSpec.col; col++) {\n      point.x += this._colSize[col].value;\n    }\n    for (let row = 0; row < gridSpec.row; row++) {\n      point.y += this._rowSize[row].value;\n    }\n    point.x += item.layoutPaddingLeft + item.layoutOffsetX;\n    point.y += item.layoutPaddingTop + item.layoutOffsetY;\n    return point;\n  }\n\n  protected getItemLayoutRect(item: ILayoutItem) {\n    const gridSpec = this.getItemGridInfo(item);\n    // 先设置空间\n    const rect = {\n      width:\n        (this.getSizeFromGrid(gridSpec, 'col') ?? this._chartLayoutRect.width) -\n        item.layoutPaddingLeft -\n        item.layoutPaddingRight,\n      height:\n        (this.getSizeFromGrid(gridSpec, 'row') ?? this._chartLayoutRect.height) -\n        item.layoutPaddingTop -\n        item.layoutPaddingBottom\n    };\n    return rect;\n  }\n\n  layoutItems(_chart: IChart, items: ILayoutItem[], chartLayoutRect: IRect, chartViewBox: IBoundsLike): void {\n    this._chartLayoutRect = chartLayoutRect;\n    this._chartViewBox = chartViewBox;\n    // 先清空旧布局信息\n    this.clearLayoutSize();\n    // 越大越先处理，进行排序调整，利用原地排序特性，排序会受 level 和传进来的数组顺序共同影响\n    items.sort((a, b) => b.layoutLevel - a.layoutLevel);\n\n    // 剔除 region 后，其余元素先布局运算\n    const normalItems = items.filter(item => item.layoutType === 'normal' && item.getModelVisible() !== false);\n    const normalItemsCol = normalItems.filter(item => isColItem(item));\n    const normalItemsRow = normalItems.filter(item => !isColItem(item));\n    normalItems.forEach(item => {\n      this.layoutOneItem(item, 'user', false);\n    });\n\n    // region 和 region 关联元素\n    const regionsRelative = items.filter(x => x.layoutType === 'region-relative');\n    const regionsRelativeCol = regionsRelative.filter(item => isColItem(item));\n    const regionsRelativeRow = regionsRelative.filter(item => !isColItem(item));\n    // 先进行 col 方向布局\n    regionsRelativeCol.forEach(item => this.layoutOneItem(item, 'user', false));\n    // 然后得到最终 col 信息 此时已经是最终 col 信息\n    this.layoutGrid('col');\n    // 再使用宽度信息辅助row方向排序\n    // 此时普通占位元素，会因为布局宽度影响最终布局高度\n    normalItemsRow.forEach(item => this.layoutOneItem(item, 'colGrid', false));\n    regionsRelativeRow.forEach(item => {\n      this.layoutOneItem(item, 'colGrid', false);\n    });\n    // 然后得到最终 row 信息\n    this.layoutGrid('row');\n    // 统一水平方向元素高度\n    regionsRelativeRow.forEach(item => {\n      this.layoutOneItem(item, 'grid', false);\n    });\n    // 再使用宽度信息，第二次次对 col 方向布局\n    normalItemsCol.forEach(item => this.layoutOneItem(item, 'grid', false));\n    regionsRelativeCol.forEach(item => {\n      // 此时从布局逻辑可知，item的layoutRect会发生，将item的layoutTag设置为true\n      this.layoutOneItem(item, 'grid', true);\n    });\n    this.layoutGrid('col');\n\n    // region\n    items.filter(x => x.layoutType === 'region').forEach(item => this.layoutOneItem(item, 'grid', false));\n\n    // 再找出 absolute 元素，无需排序，在 compiler 层需要排序放置\n    this.layoutAbsoluteItems(items.filter(x => x.layoutType === 'absolute'));\n\n    // 最后基于grid 设置位置\n    items\n      .filter(x => x.layoutType !== 'absolute')\n      .forEach(item => {\n        item.setLayoutStartPosition(this.getItemPosition(item));\n      });\n  }\n\n  /**\n   *\n   * 无需排序，在 compiler 层需要排序放置\n   *\n   * 重要：absolute 默认依据 region 进行相对依赖\n   */\n\n  private layoutAbsoluteItems(absoluteItems: ILayoutItem[]) {\n    absoluteItems.forEach(item => {\n      // 设置盒子\n      item.absoluteLayoutInRect(this._chartLayoutRect);\n    });\n  }\n\n  protected layoutOneItem(item: ILayoutItem, sizeType: 'user' | 'grid' | 'colGrid' | 'rowGrid', ignoreTag: boolean) {\n    const sizeCallRow =\n      sizeType === 'rowGrid' || sizeType === 'grid' ? this.getSizeFromGrid.bind(this) : this.getSizeFromUser.bind(this);\n    const sizeCallCol =\n      sizeType === 'colGrid' || sizeType === 'grid' ? this.getSizeFromGrid.bind(this) : this.getSizeFromUser.bind(this);\n    // 先获取 item 的 grid 信息\n    const gridSpec = this.getItemGridInfo(item);\n    // 先设置空间\n    const computeRect = {\n      width:\n        (sizeCallCol(gridSpec, 'col') ?? this._chartLayoutRect.width) -\n        item.layoutPaddingLeft -\n        item.layoutPaddingRight,\n      height:\n        (sizeCallRow(gridSpec, 'row') ?? this._chartLayoutRect.height) -\n        item.layoutPaddingTop -\n        item.layoutPaddingBottom\n    };\n    const rect = item.computeBoundsInRect(computeRect);\n    if (!isValidNumber(rect.width)) {\n      rect.width = computeRect.width;\n    }\n    if (!isValidNumber(rect.height)) {\n      rect.height = computeRect.height;\n    }\n    item.setLayoutRect(sizeType !== 'grid' ? rect : computeRect);\n    // 设置大小到grid\n    this.setItemLayoutSizeToGrid(item, gridSpec);\n  }\n}\n\nfunction isColItem(item: ILayoutItem) {\n  return item.layoutOrient === 'left' || item.layoutOrient === 'right';\n}\n\nexport const registerGridLayout = () => {\n  Factory.registerLayout(GridLayout.type, GridLayout);\n};\n"]}