{"version":3,"sources":["../src/series/circle-packing/circle-packing.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAMhD,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAI7C,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,gCAAgC,EAAE,MAAM,qBAAqB,CAAC;AACvE,OAAO,EAAE,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAG3E,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAC1D,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAE,0BAA0B,EAAE,MAAM,kBAAkB,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAC1F,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC7E,OAAO,EAAE,2BAA2B,EAAE,MAAM,wBAAwB,CAAC;AAErE,OAAO,EAAE,8BAA8B,EAAE,MAAM,aAAa,CAAC;AAE7D,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAC9D,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,uBAAuB,EAAE,MAAM,YAAY,CAAC;AACrD,OAAO,EAAE,qBAAqB,EAAE,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,kDAAkD,CAAC;AAEjF,MAAM,OAAO,mBAEX,SAAQ,eAAkB;IAF5B;;QAIE,SAAI,GAAG,cAAc,CAAC,aAAa,CAAC;IAqQtC,CAAC;IAlPC,gBAAgB,CAAC,CAAS;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,CAAS;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/B,CAAC;IAED,eAAe;QACb,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC;IAED,eAAe;;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,MAAA,IAAI,CAAC,KAAK,CAAC,WAAW,mCAAI,sBAAsB,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACnB,IAA8B,CAAC,aAAa,CAAC;gBAC5C,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;gBACvB,UAAU,EAAE,GAAG,EAAE,WAAC,OAAA,MAAA,IAAI,CAAC,KAAK,CAAC,UAAU,mCAAI,gBAAgB,CAAA,EAAA;gBAC3D,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;aACpC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IACjD,CAAC;IAES,QAAQ;QAChB,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;YAClB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAEnB,IAA8B,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClE;QAGD,gCAAgC,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;QAE5F,gCAAgC,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAGpE,OAAO,CAAC,SAAS,CAAC;YAChB,IAAI,EAAE,qBAAqB;YAC3B,OAAO,EAAE,GAAsB,EAAE;gBAC/B,OAAO;oBACL,OAAO,EAAE,IAAI,CAAC,cAAc;oBAC5B,OAAO,EAAE,IAAI,CAAC,cAAc;oBAC5B,WAAW,EAAE,KAAK;oBAClB,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,IAAI,CAAC;oBACtC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,IAAI,CAAC;iBACzC,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;QAGH,OAAO,CAAC,SAAS,CAAC;YAChB,IAAI,EAAE,SAAS;YACf,OAAO,EAAE;gBACP,QAAQ,EAAE,CAAC,IAA8B,EAAE,EAAE;oBAC3C,IAAI,IAAI,CAAC,KAAK,EAAE;wBACd,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACxC,uCAAY,IAAI,GAAK,QAAQ,EAAG;qBACjC;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAES,mBAAmB;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAI,KAAK,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,EAAE;YAC3B,OAAO;SACR;QAED,gCAAgC,CAAC,OAAO,CAAC,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;QAC1F,OAAO,CAAC,SAAS,CAAC;YAChB,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE;gBACP,UAAU,EAAE,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC1C,IAAI,EAAE,mBAAmB;aAC1B;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,sBAAsB;;QAC5B,IAAI,CAAA,MAAA,IAAI,CAAC,cAAc,0CAAE,OAAO,MAAK,KAAK,EAAE;YAC1C,OAAO;SACR;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE;YAC7E,YAAY,EAAE,IAAI;SACnB,CAAa,CAAC;QAEf,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;IAC1C,CAAC;IAEO,2BAA2B;QACjC,IAAI,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,kBAAkB,EACvB;YACE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACX,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM;YAC1B,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE;YAC9B,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK;SAErB,EACD,gBAAgB,CAAC,YAAY,EAC7B,cAAc,CAAC,MAAM,CACtB,CAAC;IACJ,CAAC;IAEO,cAAc;;QACpB,IAAI,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,MAAK,KAAK,EAAE;YAClC,OAAO;SACR;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE;YACjE,YAAY,EAAE,KAAK;SACpB,CAAc,CAAC;QAEhB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAEO,mBAAmB;QACzB,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,UAAU,EACf;YACE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,EAAE,CAAC,CAAC,EAAE;gBACR,OAAO,CAAC,CAAC,GAAG,CAAC;YACf,CAAC;YACD,MAAM,EAAE,SAAS;SAClB,EACD,gBAAgB,CAAC,YAAY,EAC7B,cAAc,CAAC,MAAM,CACtB,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,OAAO,qBAAqB,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClG,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAClG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpF,CAAC;IAED,aAAa;;QACX,MAAM,YAAY,GAAG,MAAC,IAAI,CAAC,KAAK,CAAC,eAAgE,0CAAE,MAAM,CAAC;QAE1G,IAAI,CAAC,cAAc,OAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;YACnD,IAAI,CAAC,kBAAkB,CACrB,eAAe,CACb,MAAA,OAAO,CAAC,iBAAiB,CAAC,eAAe,CAAC,0CAAG,SAAS,EAAE,YAAY,CAAC,EACrE,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CACvE,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,QAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;YACpD,IAAI,CAAC,kBAAkB,CACrB,eAAe,CACb,MAAA,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,2CAAI,EAC3C,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CACvE,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,KAAK,CAAC,SAAS,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACnB,IAA8B,CAAC,cAAc,EAAE,CAAC;SAClD;IACH,CAAC;IAED,WAAW;QACT,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACpC,CAAC;IAGS,mBAAmB,CAAC,KAAY,EAAE,KAAa;QACvD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACnC,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,EAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACpE,CAAC;;AArQe,wBAAI,GAAW,cAAc,CAAC,aAAa,CAAC;AAG5C,wBAAI,GAAkB,uBAAuB,CAAC;AAC9C,gCAAY,GAAG,EAAE,aAAa,EAAE,CAAC;AAoQnD,KAAK,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;AAEtC,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAAG,EAAE;IAC9C,OAAO,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACtE,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,CAAC;IACnB,2BAA2B,EAAE,CAAC;IAC9B,8BAA8B,EAAE,CAAC;AACnC,CAAC,CAAC","file":"circle-packing.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { isNil, mixin } from '@visactor/vutils';\n\nimport type { ICirclePackingOpt } from '../../data/transforms/circle-packing';\nimport type { CirclePackingAppearPreset, ICirclePackingSeriesSpec } from './interface';\n\nimport type { IMarkSpec } from '../../typings/spec/common';\nimport { Factory } from '../../core/factory';\nimport type { Datum, IArcMarkSpec, IComposedTextMarkSpec, ITextMarkSpec } from '../../typings';\n\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesTypeEnum } from '../interface/type';\n\nimport { CartesianSeries } from '../cartesian/cartesian';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { circlePackingLayout } from '../../data/transforms/circle-packing';\nimport type { IMark, IArcMark, ITextMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { DEFAULT_DATA_KEY } from '../../constant/data';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { DEFAULT_HIERARCHY_ROOT } from '../../constant/hierarchy';\nimport type { CirclePackingNodeElement } from '@visactor/vlayouts';\nimport { flatten } from '../../data/transforms/flatten';\nimport { CirclePackingTooltipHelper } from './tooltip-helper';\nimport { addHierarchyDataKey, initHierarchyKeyMap } from '../../data/transforms/data-key';\nimport { addVChartProperty } from '../../data/transforms/add-property';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { registerScaleInOutAnimation } from '../../animation/config';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { registerCirclePackingAnimation } from './animation';\nimport type { IDrillable } from '../../interaction/drill/drillable';\nimport { Drillable } from '../../interaction/drill/drillable';\nimport { registerArcMark } from '../../mark/arc';\nimport { registerTextMark } from '../../mark/text';\nimport { circlePackingSeriesMark } from './constant';\nimport { appendHierarchyFields } from '../util/hierarchy';\nimport { circlePacking } from '../../theme/builtin/common/series/circle-packing';\n\nexport class CirclePackingSeries<\n  T extends ICirclePackingSeriesSpec = ICirclePackingSeriesSpec\n> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.circlePacking;\n  type = SeriesTypeEnum.circlePacking;\n\n  static readonly mark: SeriesMarkMap = circlePackingSeriesMark;\n  static readonly builtInTheme = { circlePacking };\n\n  // 映射字段\n  protected _categoryField!: string;\n  protected _valueField!: string;\n  // 配置\n  private _layoutPadding: number | number[];\n  private _circlePacking: IMarkSpec<IArcMarkSpec>;\n  private _label: IMarkSpec<ITextMarkSpec>;\n  // Mark\n  private _circlePackingMark: IArcMark;\n  private _labelMark: ITextMark;\n\n  // 钻取功能开启\n  private _drill?: boolean;\n\n  setCategoryField(f: string): string {\n    this._categoryField = f;\n    return this._categoryField;\n  }\n\n  getCategoryField() {\n    return this._categoryField;\n  }\n\n  setValueField(f: string): string {\n    this._valueField = f;\n    return this._valueField;\n  }\n\n  getValueField() {\n    return this._valueField;\n  }\n\n  getDimensionField() {\n    return [this._categoryField];\n  }\n\n  getMeasureField(): string[] {\n    return [this._valueField];\n  }\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n\n    this.setCategoryField(this._spec.categoryField);\n    this.setValueField(this._spec.valueField);\n    this.setSeriesField(this._spec.seriesField ?? DEFAULT_HIERARCHY_ROOT);\n\n    if (this._spec.drill) {\n      (this as unknown as IDrillable).initDrillable({\n        event: this.event,\n        mode: this._option.mode,\n        drillField: () => this._spec.drillField ?? DEFAULT_DATA_KEY,\n        getRawData: () => this.getRawData()\n      });\n    }\n\n    this._circlePacking = this._spec.circlePacking;\n    this._label = this._spec.label;\n    this._layoutPadding = this._spec.layoutPadding;\n  }\n\n  protected initData(): void {\n    super.initData();\n\n    const rawData = this.getRawData();\n\n    if (isNil(rawData)) {\n      return;\n    }\n\n    if (this._spec.drill) {\n      // 对原始数据进行上卷下钻筛选\n      (this as unknown as IDrillable).initDrillableData(this._dataSet);\n    }\n\n    // 注册布局算法\n    registerDataSetInstanceTransform(this._dataSet, 'circlePackingLayout', circlePackingLayout);\n    // 注册扁平化算法\n    registerDataSetInstanceTransform(this._dataSet, 'flatten', flatten);\n\n    // 布局算法\n    rawData.transform({\n      type: 'circlePackingLayout',\n      options: (): ICirclePackingOpt => {\n        return {\n          nodeKey: this._categoryField,\n          padding: this._layoutPadding,\n          includeRoot: false,\n          width: this.getLayoutRect().width || 1,\n          height: this.getLayoutRect().height || 1\n        };\n      }\n    });\n\n    // 布局结果进行扁平化处理\n    rawData.transform({\n      type: 'flatten',\n      options: {\n        callback: (node: CirclePackingNodeElement) => {\n          if (node.datum) {\n            const nodeData = node.datum[node.depth];\n            return { ...node, ...nodeData };\n          }\n          return node;\n        }\n      }\n    });\n  }\n\n  protected _addDataIndexAndKey() {\n    const rawData = this.getRawData();\n    if (isNil(rawData?.dataSet)) {\n      return;\n    }\n    // 为原始数据, 添加层级属性\n    registerDataSetInstanceTransform(rawData.dataSet, 'addVChartProperty', addVChartProperty);\n    rawData.transform({\n      type: 'addVChartProperty',\n      options: {\n        beforeCall: initHierarchyKeyMap.bind(this),\n        call: addHierarchyDataKey\n      }\n    });\n  }\n\n  initMark(): void {\n    this._initCirclePackingMark();\n    this._initLabelMark();\n  }\n\n  initMarkStyle(): void {\n    this._initCirclePackingMarkStyle();\n    this._initLabelMarkStyle();\n  }\n\n  private _initCirclePackingMark() {\n    if (this._circlePacking?.visible === false) {\n      return;\n    }\n\n    const circlePacking = this._createMark(CirclePackingSeries.mark.circlePacking, {\n      isSeriesMark: true\n    }) as IArcMark;\n\n    this._circlePackingMark = circlePacking;\n  }\n\n  private _initCirclePackingMarkStyle() {\n    if (isNil(this._circlePackingMark)) {\n      return;\n    }\n\n    this.setMarkStyle(\n      this._circlePackingMark,\n      {\n        x: d => d.x,\n        y: d => d.y,\n        outerRadius: d => d.radius,\n        innerRadius: 0,\n        startAngle: 0,\n        endAngle: Math.PI * 2,\n        fill: this.getColorAttribute(),\n        zIndex: d => d.depth\n        // Todo 内置根节点和叶节点透明度\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  private _initLabelMark() {\n    if (this._label?.visible === false) {\n      return;\n    }\n    const labelMark = this._createMark(CirclePackingSeries.mark.label, {\n      isSeriesMark: false\n    }) as ITextMark;\n\n    this._labelMark = labelMark;\n  }\n\n  private _initLabelMarkStyle() {\n    if (isNil(this._labelMark)) {\n      return;\n    }\n\n    this.setMarkStyle<IComposedTextMarkSpec>(\n      this._labelMark,\n      {\n        x: d => d.x,\n        y: d => d.y,\n        text: d => {\n          return d.key;\n        },\n        cursor: 'pointer'\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  getStatisticFields() {\n    return appendHierarchyFields(super.getStatisticFields(), this._categoryField, this._valueField);\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new CirclePackingTooltipHelper(this);\n    this._circlePackingMark && this._tooltipHelper.activeTriggerSet.mark.add(this._circlePackingMark);\n    this._labelMark && this._tooltipHelper.activeTriggerSet.mark.add(this._labelMark);\n  }\n\n  initAnimation(): void {\n    const appearPreset = (this._spec.animationAppear as IStateAnimateSpec<CirclePackingAppearPreset>)?.preset;\n\n    this.getMarksInType(MarkTypeEnum.arc).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('circlePacking')?.(undefined, appearPreset),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n\n    this.getMarksInType(MarkTypeEnum.text).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('scaleInOut')?.(),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n  }\n\n  initEvent() {\n    super.initEvent();\n    if (this._spec.drill) {\n      (this as unknown as IDrillable).bindDrillEvent();\n    }\n  }\n\n  onLayoutEnd(): void {\n    super.onLayoutEnd();\n    this._rawData.reRunAllTransform();\n  }\n\n  // make sure this function fast\n  protected _noAnimationDataKey(datum: Datum, index: number): unknown | undefined {\n    return undefined;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._circlePackingMark];\n  }\n  getMarkData(datum: Datum) {\n    return datum?.datum ? datum.datum[datum.datum.length - 1] : datum;\n  }\n}\n\nmixin(CirclePackingSeries, Drillable);\n\nexport const registerCirclePackingSeries = () => {\n  Factory.registerSeries(CirclePackingSeries.type, CirclePackingSeries);\n  registerArcMark();\n  registerTextMark();\n  registerScaleInOutAnimation();\n  registerCirclePackingAnimation();\n};\n"]}