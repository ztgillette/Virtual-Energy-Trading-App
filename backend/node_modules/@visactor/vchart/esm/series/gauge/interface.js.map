{"version":3,"sources":["../src/series/gauge/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IMarkSpec, IMarkTheme } from '../../typings/spec';\nimport type { IArcMarkSpec, IPathMarkSpec, IRectMarkSpec } from '../../typings/visual';\nimport type {\n  IProgressLikeSeriesSpec,\n  IProgressLikeSeriesTheme,\n  ProgressLikeAppearPreset\n} from '../polar/progress-like/interface';\nimport type { IAnimationSpec } from '../../animation/spec';\nimport type { SeriesMarkNameEnum } from '../interface/type';\nimport type { ILabelSpec } from '../../component/label/interface';\n\nexport type GaugePointerMarks = 'pointer' | 'pin' | 'pinBackground';\n\nexport interface IGaugePointerSeriesSpec\n  extends IProgressLikeSeriesSpec,\n    IAnimationSpec<GaugePointerMarks, ProgressLikeAppearPreset> {\n  type: 'gaugePointer';\n\n  /** 数值字段（可影响指针角度） */\n  valueField: string | string[];\n\n  /** 半径字段（可影响指针长度，GaugePointerSeries 没有 categoryField） */\n  radiusField: string;\n\n  /** 图钉前景样式 */\n  [SeriesMarkNameEnum.pin]?: IMarkSpec<IPathMarkSpec> & PinMarkSpec;\n  /** 图钉背景样式 */\n  [SeriesMarkNameEnum.pinBackground]?: IMarkSpec<IPathMarkSpec> & PinMarkSpec;\n  /** 指针样式 */\n  [SeriesMarkNameEnum.pointer]?: IMarkSpec<IPathMarkSpec | IRectMarkSpec> & PointerMarkSpec;\n}\n\nexport type PointerMarkSpec = {\n  type?: 'path' | 'rect';\n\n  /** 指针宽度比例（0~1） */\n  width?: number;\n  /** 指针长度比例（0~1）（为空则挂载 radius） */\n  height?: number;\n  /** 指针靠近圆心的一端离圆心的距离 */\n  innerPadding?: number;\n  /** 指针靠近边缘的一端离边缘的距离 */\n  outerPadding?: number;\n\n  /** 中心点坐标（0~1） */\n  center?: [number, number];\n\n  /** 是否定位于极坐标系的中心，默认为 true。如果为 false，则位置受 innerRadius 影响 */\n  isOnCenter?: boolean;\n};\n\nexport type PinMarkSpec = {\n  /** 宽度 */\n  width?: number;\n  /** 高度 */\n  height?: number;\n  /** 是否定位于极坐标系的中心，默认为 true。如果为 false，则位置受 innerRadius 影响 */\n  isOnCenter?: boolean;\n};\n\nexport interface IGaugePointerSeriesTheme extends IProgressLikeSeriesTheme {\n  /** 图钉前景样式 */\n  [SeriesMarkNameEnum.pin]?: Partial<IMarkTheme<IPathMarkSpec> & PinMarkSpec>;\n  /** 图钉背景样式 */\n  [SeriesMarkNameEnum.pinBackground]?: Partial<IMarkTheme<IPathMarkSpec> & PinMarkSpec>;\n  /** 指针样式 */\n  [SeriesMarkNameEnum.pointer]?: Partial<IMarkTheme<IPathMarkSpec | IRectMarkSpec> & PointerMarkSpec>;\n}\n\nexport type GaugeMarks = 'segment' | 'track';\n\nexport interface IGaugeSeriesSpec\n  extends IProgressLikeSeriesSpec,\n    IAnimationSpec<GaugeMarks, ProgressLikeAppearPreset> {\n  type: 'gauge';\n\n  /** 扇区间隔角度 */\n  padAngle?: number;\n\n  /** 扇区样式 */\n  [SeriesMarkNameEnum.segment]?: IMarkSpec<IArcMarkSpec>;\n  /** 背景样式 */\n  [SeriesMarkNameEnum.track]?: IMarkSpec<IArcMarkSpec>;\n  /** 标签样式 */\n  [SeriesMarkNameEnum.label]?: IGaugeLabelSpec;\n}\n\nexport interface IGaugeSeriesTheme extends IProgressLikeSeriesTheme {\n  /** 扇区间隔角度 */\n  padAngle?: number;\n\n  /** 扇区样式 */\n  [SeriesMarkNameEnum.segment]?: Partial<IMarkTheme<IArcMarkSpec>>;\n  /** 背景样式 */\n  [SeriesMarkNameEnum.track]?: Partial<IMarkTheme<IArcMarkSpec>>;\n  /** 标签样式 */\n  [SeriesMarkNameEnum.label]?: IGaugeLabelSpec;\n}\n\nexport type IGaugeLabelSpec = ILabelSpec;\n"]}