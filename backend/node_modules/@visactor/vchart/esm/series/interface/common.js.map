{"version":3,"sources":["../src/series/interface/common.ts"],"names":[],"mappings":"","file":"common.js","sourcesContent":["import type { DataView } from '@visactor/vdataset';\nimport type { IGrammarItem } from '../../compile/interface';\nimport type {\n  IBaseModelSpecTransformerResult,\n  IModelConstructor,\n  IModelMarkInfo,\n  IModelOption,\n  IModelSpecInfo\n} from '../../model/interface';\nimport type { IRegion } from '../../region/interface';\nimport type { RenderMode } from '../../typings/spec/common';\nimport type { ISeries } from './series';\nimport type { IGroupMark, IMarkOption } from '../../mark/interface';\nimport type { ISeriesSpec, StringOrNumber } from '../../typings';\nimport type { TransformedLabelSpec } from '../../component/label/interface';\nimport type { SeriesMarkNameEnum, SeriesTypeEnum } from './type';\n\n// export type SeriesStyle = 'color' | 'size' | 'shape';\n\nexport interface ISeriesSeriesInfo {\n  key: string;\n  /** 直接取 datum 里的原始值 */\n  originalKey: any;\n  index?: number;\n  // 样式的值类型可能是 StringOrNumber | number[] | xxxx\n  style: (attribute: string) => any;\n  /** series 对应的缩略图类型 */\n  shapeType: string;\n}\n\nexport interface ISeriesOption extends IModelOption {\n  mode: RenderMode;\n  region: IRegion;\n  sourceDataList: DataView[];\n  getSeriesData: (id: StringOrNumber | undefined, index: number | undefined) => DataView | undefined;\n}\n\nexport interface ISeriesConstructor extends IModelConstructor {\n  readonly type: string;\n  mark?: SeriesMarkMap;\n  new (spec: any, options: ISeriesOption): ISeries;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ISeriesInitOption {}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ISeriesUpdateDataOption {}\n\nexport interface ISeriesStackDataNode {\n  groupField?: string;\n  nodes: {\n    [key: string]: ISeriesStackDataMeta;\n  };\n}\nexport interface ISeriesStackDataLeaf {\n  groupField?: string;\n  values: any[];\n  total?: number;\n}\n\nexport type ISeriesStackDataMeta = ISeriesStackDataNode | ISeriesStackDataLeaf;\nexport type ISeriesStackData = ISeriesStackDataNode;\n\n/**\n * 设置图表中系列分组的样式，这里的分组对应了相同的分组字段值\n */\nexport type ISeriesStyle = ISeriesStyleItem[];\n\n/**\n * 特定系列分组的样式配置\n */\nexport type ISeriesStyleItem = {\n  /**\n   * 系列的分组名称\n   */\n  name: string;\n} & {\n  /**\n   * 设置该系列分组下各种图元对应的样式\n   */\n  [markName: string]: {\n    /**\n     * 图元的样式\n     */\n    style?: any;\n  };\n};\n\nexport interface ISeriesMarkInitOption extends Partial<IMarkOption> {\n  /** theme spec */\n  themeSpec?: any;\n\n  /** mark spec */\n  markSpec?: any;\n\n  /** 是否在编译时更新实际数据 */\n  skipBeforeLayouted?: boolean;\n\n  /** 是否是 series field 所作用的 mark（用于 tooltip shape 取色等） */\n  isSeriesMark?: boolean;\n\n  /** 数据 key 值 */\n  key?: string | ((datum: any) => string);\n\n  /** 分组 key 值 */\n  groupKey?: string;\n\n  /** 绑定系列数据（如果是 undefined 则默认是系列的 data，如果是 false 则不配置数据） */\n  dataView?: DataView | false;\n  /** 系列数据编译产物的名称 */\n  dataProductId?: string;\n  /** mark scale 如果需要使用统计信息设置domain的话，使用的series对应的统计数据 */\n  seriesId?: number;\n\n  /**\n   * 状态排序方法，默认状态都是按照添加的顺序处理的，如果有特殊的需求，需要指定状态顺序，可以通过这个方法实现\n   * @since 1.9.0\n   */\n  stateSort?: (stateA: string, stateB: string) => number;\n  /**\n   * use component in extension mark\n   * @since 1.9.0\n   */\n  componentType?: string;\n}\n\nexport interface ISeriesMarkInfo extends IModelMarkInfo {\n  /** mark 名称 */\n  name: SeriesMarkNameEnum | string;\n}\n\nexport type SeriesMarkMap = Partial<Record<SeriesMarkNameEnum, ISeriesMarkInfo>>;\n\nexport interface ISeriesSpecInfo<T extends ISeriesSpec = ISeriesSpec>\n  extends IModelSpecInfo,\n    ISeriesSpecTransformerResult<T, any> {\n  /** model 具体类型 */\n  type: string | SeriesTypeEnum;\n  /** model spec */\n  spec: T;\n  /** model theme */\n  theme: any;\n}\n\nexport interface ISeriesSpecTransformerResult<T, K> extends IBaseModelSpecTransformerResult<T, K> {\n  /** 当前的 mark 标签 spec */\n  markLabelSpec?: Partial<Record<SeriesMarkNameEnum, TransformedLabelSpec[]>>;\n  /** 是否堆叠 */\n  stack?: boolean;\n}\n"]}