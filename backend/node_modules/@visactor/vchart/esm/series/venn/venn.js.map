{"version":3,"sources":["../src/series/venn/venn.ts"],"names":[],"mappings":"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","file":"venn.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { DEFAULT_DATA_KEY } from '../../constant/data';\nimport { AttributeLevel } from '../../constant/attribute';\nimport type { IArcMark, ILabelMark, IMark, IPathMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface';\nimport type { Datum, IArcMarkSpec, IPathMarkSpec, IPoint, StringOrNumber } from '../../typings';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesTypeEnum } from '../interface/type';\nimport type { IVennSeriesSpec } from './interface';\nimport { VennTooltipHelper } from './tooltip-helper';\nimport { registerFadeInOutAnimation } from '../../animation/config';\nimport { vennSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { registerVennAnimation } from './animation';\nimport { VennSeriesSpecTransformer } from './venn-transform';\nimport { BaseSeries } from '../base';\nimport { registerArcMark } from '../../mark/arc';\nimport { registerPathMark } from '../../mark/path';\nimport type { IVennCircleDatum, IVennOverlapDatum } from '@visactor/vlayouts';\nimport { vennMarkTransform } from '@visactor/vlayouts';\nimport type { IBounds } from '@visactor/vutils';\nimport { Bounds, array } from '@visactor/vutils';\nimport { getVennSeriesDataKey } from './util';\nimport { ComponentTypeEnum } from '../../component/interface';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport type { ILegend, IDiscreteLegend } from '../../component/legend/interface';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { vennLayout } from '../../data/transforms/venn';\nimport type { ITransformSpec } from '../../compile/interface';\nimport { venn } from '../../theme/builtin/common/series/venn';\n\nexport class VennSeries<T extends IVennSeriesSpec = IVennSeriesSpec> extends BaseSeries<T> {\n  static readonly type: string = SeriesTypeEnum.venn;\n  type = SeriesTypeEnum.venn;\n\n  static readonly mark: SeriesMarkMap = vennSeriesMark;\n  static readonly builtInTheme = { venn };\n\n  static readonly transformerConstructor = VennSeriesSpecTransformer;\n  readonly transformerConstructor = VennSeriesSpecTransformer;\n\n  private _circleMark: IArcMark;\n  private _overlapMark: IPathMark;\n  private _labelMark: ILabelMark;\n\n  protected declare _spec: T;\n\n  // range for venn layout, change while zoom and pan\n  private _viewBox: IBounds = new Bounds();\n\n  protected _categoryField!: string;\n  getCategoryField() {\n    return this._categoryField;\n  }\n  setCategoryField(f: string): string {\n    this._categoryField = f;\n    return this._categoryField;\n  }\n\n  protected _valueField!: string;\n  getValueField() {\n    return this._valueField;\n  }\n  setValueField(f: string): string {\n    this._valueField = f;\n    return this._valueField;\n  }\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this.setCategoryField(this._spec.categoryField ?? 'sets');\n    this.setValueField(this._spec.valueField ?? 'size');\n    this.setSeriesField(this._spec.seriesField ?? DEFAULT_DATA_KEY);\n  }\n\n  initData() {\n    super.initData();\n\n    registerDataSetInstanceTransform(this._dataSet, 'venn', vennLayout);\n\n    this._data.getDataView()?.transform({\n      type: 'venn',\n      options: {\n        getViewBox: () => {\n          return this._viewBox.empty()\n            ? null\n            : {\n                x0: this._viewBox.x1,\n                x1: this._viewBox.x2,\n                y0: this._viewBox.y1,\n                y1: this._viewBox.y2\n              };\n        },\n        setField: this._categoryField,\n        valueField: this._valueField\n      }\n    });\n  }\n\n  compile(): void {\n    super.compile();\n    this._runVennTransform();\n  }\n\n  protected _runVennTransform(render = false) {\n    this._data.getDataView().reRunAllTransform();\n    if (render) {\n      this.getCompiler().renderNextTick();\n    }\n  }\n\n  initMark() {\n    const circleMark = this._createMark(VennSeries.mark.circle, {\n      isSeriesMark: true\n    });\n    if (circleMark) {\n      circleMark.setTransform([\n        {\n          type: 'vennMark',\n          datumType: 'circle'\n        } as ITransformSpec\n      ]);\n      this._circleMark = circleMark;\n    }\n\n    const overlapMark = this._createMark(VennSeries.mark.overlap, {\n      isSeriesMark: true\n    });\n    if (overlapMark) {\n      overlapMark.setTransform([\n        {\n          type: 'vennMark',\n          datumType: 'overlap'\n        } as ITransformSpec\n      ]);\n      this._overlapMark = overlapMark;\n    }\n  }\n\n  initMarkStyle() {\n    this._initCircleMarkStyle();\n    this._initOverlapMarkStyle();\n  }\n\n  protected _initCircleMarkStyle() {\n    if (!this._circleMark) {\n      return;\n    }\n\n    this.setMarkStyle<IArcMarkSpec>(\n      this._circleMark,\n      {\n        x: datum => (datum as IVennCircleDatum).x,\n        y: datum => (datum as IVennCircleDatum).y,\n        innerRadius: 0,\n        outerRadius: datum => (datum as IVennCircleDatum).radius,\n        startAngle: 0,\n        endAngle: Math.PI * 2,\n        fill: this.getColorAttribute(),\n        stroke: this.getColorAttribute()\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected _initOverlapMarkStyle() {\n    if (!this._overlapMark) {\n      return;\n    }\n    this.setMarkStyle<IPathMarkSpec>(\n      this._overlapMark,\n      {\n        x: datum => (datum as IVennCircleDatum).x,\n        y: datum => (datum as IVennCircleDatum).y,\n        path: datum => (datum as IVennOverlapDatum).path,\n        arcs: (datum: any) => (datum as IVennOverlapDatum).arcs,\n        fill: this.getColorAttribute(),\n        stroke: this.getColorAttribute(),\n        zIndex: datum => {\n          // zIndex 按照重叠的深度来分级\n          return (datum as IVennOverlapDatum).sets.length * 100;\n        }\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n    this.setMarkStyle<IPathMarkSpec>(\n      this._overlapMark,\n      {\n        zIndex: datum => {\n          // hover 态的 zIndex 要比同级更高\n          return (datum as IVennOverlapDatum).sets.length * 100 + 1;\n        }\n      },\n      STATE_VALUE_ENUM.STATE_HOVER,\n      AttributeLevel.Series\n    );\n  }\n\n  initLabelMarkStyle(labelMark: ILabelMark) {\n    if (!labelMark) {\n      return;\n    }\n    this._labelMark = labelMark;\n    labelMark.setRule('venn');\n    this.setMarkStyle(\n      labelMark,\n      {\n        x: datum => (datum as IVennCircleDatum).labelX,\n        y: datum => (datum as IVennCircleDatum).labelY,\n        text: datum => getVennSeriesDataKey((datum as IVennCircleDatum).sets),\n        maxLineWidth: (datum: any) => {\n          const { x, radius, labelX } = datum as IVennCircleDatum;\n          const circleX0 = x - radius;\n          const circleX1 = x + radius;\n          return Math.min(labelX - circleX0, circleX1 - labelX);\n        }\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  initOverlapLabelMarkStyle(labelMark: ILabelMark) {\n    if (!labelMark) {\n      return;\n    }\n    this._labelMark = labelMark;\n    labelMark.setRule('venn');\n    this.setMarkStyle(\n      labelMark,\n      {\n        x: datum => (datum as IVennOverlapDatum).labelX,\n        y: datum => (datum as IVennOverlapDatum).labelY,\n        text: datum => getVennSeriesDataKey((datum as IVennOverlapDatum).sets)\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new VennTooltipHelper(this);\n    this._circleMark && this._tooltipHelper.activeTriggerSet.mark.add(this._circleMark);\n    this._overlapMark && this._tooltipHelper.activeTriggerSet.mark.add(this._overlapMark);\n  }\n\n  getDimensionField() {\n    return [this._categoryField];\n  }\n\n  getMeasureField(): string[] {\n    return [this._valueField];\n  }\n\n  onLayoutEnd(): void {\n    super.onLayoutEnd();\n    this._viewBox.set(0, 0, this.getLayoutRect().width, this.getLayoutRect().height);\n    this._runVennTransform();\n  }\n\n  getDefaultShapeType(): string {\n    return 'circle';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._circleMark, this._overlapMark];\n  }\n\n  getStatisticFields() {\n    const fields: { key: string; operations: Array<'max' | 'min' | 'values'> }[] = [];\n    fields.push({ key: this._categoryField, operations: ['values'] });\n    fields.push({ key: this._valueField, operations: ['max', 'min'] });\n    return fields;\n  }\n\n  getGroupFields(): string[] {\n    return null;\n  }\n\n  dataToPosition(data: Datum, checkInViewData?: boolean): IPoint {\n    return {\n      x: data.x,\n      y: data.y\n    };\n  }\n\n  dataToPositionX(data: Datum): number {\n    return data.x;\n  }\n\n  dataToPositionY(data: Datum): number {\n    return data.y;\n  }\n\n  valueToPosition(value1: any, value2?: any): IPoint {\n    throw new Error('Method not implemented.');\n  }\n\n  getStackGroupFields(): string[] {\n    return [];\n  }\n\n  getStackValueField(): string {\n    return null;\n  }\n\n  protected _getSeriesInfo(field: string, keys: string[]) {\n    const defaultShapeType = this.getDefaultShapeType();\n    return keys.map(originalKey => {\n      const dataKey = getVennSeriesDataKey(originalKey);\n      return {\n        key: dataKey,\n        originalKey,\n        style: this.getSeriesStyle({\n          [field]: originalKey\n        }),\n        shapeType: defaultShapeType\n      };\n    });\n  }\n\n  getSeriesFieldValue(datum: Datum, seriesField?: string) {\n    const value = super.getSeriesFieldValue(datum, seriesField);\n    return getVennSeriesDataKey(value);\n  }\n\n  legendSelectedFilter(component: ILegend, selectedKeys: StringOrNumber[]) {\n    if (component.type === ComponentTypeEnum.discreteLegend) {\n      const legend = component;\n\n      const originalLegendKeys: any[] = (legend as IDiscreteLegend).getLegendDefaultData(true);\n      if (selectedKeys.length === 0 && originalLegendKeys.length) {\n        return [];\n      }\n\n      if (selectedKeys.length === originalLegendKeys.length) {\n        return selectedKeys;\n      }\n\n      // 找到缺失的项\n      const selectedFilter = {};\n      selectedKeys.forEach(s => {\n        selectedFilter[s] = true;\n      });\n      const disableKeys = originalLegendKeys.filter(key => !selectedFilter[getVennSeriesDataKey(key)]);\n\n      // 找到缺失的项的派生项（如 “A&B” 的派生项 “A&B&C”）\n      const derivedDisableKeys = originalLegendKeys.filter(key => {\n        if (disableKeys.includes(key)) {\n          return false;\n        }\n        return disableKeys.some(disableKey => array(disableKey).every(k => key.includes(k)));\n      });\n\n      // 将派生项从 selectedKeys 中移除\n      selectedKeys = selectedKeys.slice();\n      derivedDisableKeys.forEach(key => {\n        selectedKeys.splice(selectedKeys.indexOf(getVennSeriesDataKey(key)), 1);\n      });\n    }\n    return selectedKeys;\n  }\n\n  initAnimation(): void {\n    this.getMarksInType(MarkTypeEnum.arc).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('vennCircle')?.(),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n    this.getMarksInType(MarkTypeEnum.path).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('vennOverlap')?.(),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n  }\n}\n\nexport const registerVennSeries = () => {\n  registerArcMark();\n  registerPathMark();\n  registerVennAnimation();\n  registerFadeInOutAnimation();\n  Factory.registerGrammarTransform('vennMark', {\n    transform: vennMarkTransform\n  });\n  Factory.registerSeries(VennSeries.type, VennSeries);\n};\n"]}