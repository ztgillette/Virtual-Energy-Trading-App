{"version":3,"sources":["../src/series/correlation/correlation.ts"],"names":[],"mappings":"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","file":"correlation.js","sourcesContent":["import { PolarSeries } from '../polar/polar';\nimport type { CorrelationAppearPreset, ICorrelationSeriesSpec } from './interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { SeriesMarkMap } from '../interface';\nimport { correlationSeriesMark } from './constant';\nimport { registerDataSetInstanceTransform, registerDataSetInstanceParser } from '../../data/register';\nimport { correlation } from '../../data/transforms/correlation';\nimport { correlationCenter } from '../../data/transforms/correlation-center';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ICorrelationOpt } from '../../data/transforms/correlation';\nimport type { IBounds } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { Bounds, isValid } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerSymbolMark } from '../../mark/symbol';\nimport type { Datum, ISymbolMarkSpec, IRippleMarkSpec, AdaptiveSpec } from '../../typings';\nimport { DEFAULT_DATA_INDEX } from '../../constant/data';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { LayoutZIndex } from '../../constant/layout';\nimport { DataView, DataSet, dataViewParser } from '@visactor/vdataset';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerRippleMark } from '../../mark/ripple';\n// eslint-disable-next-line no-duplicate-imports\nimport { CORRELATION_X, CORRELATION_Y, CORRELATION_SIZE } from '../../constant/correlation';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { Factory } from '../../core/factory';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerCorrelationAnimation } from './animation';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport type { ILabelMark, IMark, IRippleMark, ISymbolMark } from '../../mark/interface';\nimport { CorrelationSeriesSpecTransformer } from './correlation-transformer';\nimport { CompilableData, type ICompilableData } from '../../compile/data';\nimport { correlation as correlationTheme } from '../../theme/builtin/common/series/correlation';\n\nexport class CorrelationSeries<T extends ICorrelationSeriesSpec = ICorrelationSeriesSpec> extends PolarSeries<\n  AdaptiveSpec<T, 'outerRadius' | 'innerRadius'>\n> {\n  static readonly type: string = SeriesTypeEnum.correlation;\n  type = SeriesTypeEnum.correlation;\n\n  static readonly mark: SeriesMarkMap = correlationSeriesMark;\n  static readonly builtInTheme = { correlation: correlationTheme };\n  static readonly transformerConstructor = CorrelationSeriesSpecTransformer as any;\n  readonly transformerConstructor = CorrelationSeriesSpecTransformer;\n\n  protected _centerSeriesData: ICompilableData;\n\n  private _nodePointMark: ISymbolMark;\n  private _ripplePointMark: IRippleMark;\n  private _centerPointMark: ISymbolMark;\n\n  private _viewBox: IBounds = new Bounds();\n\n  protected _categoryField!: string;\n  getCategoryField() {\n    return this._categoryField;\n  }\n  setCategoryField(f: string): string {\n    this._categoryField = f;\n    return this._categoryField;\n  }\n\n  protected _valueField!: string;\n  getValueField() {\n    return this._valueField;\n  }\n  setValueField(f: string): string {\n    this._valueField = f;\n    return this._valueField;\n  }\n\n  protected _seriesField?: string;\n  getSeriesField() {\n    return this._seriesField;\n  }\n  setSeriesField(field: string) {\n    if (isValid(field)) {\n      this._seriesField = field;\n    }\n  }\n\n  protected _sizeField?: ICorrelationSeriesSpec['sizeField'];\n  getSizeField() {\n    return this._sizeField;\n  }\n  setSizeField(field: string) {\n    if (isValid(field)) {\n      this._sizeField = field;\n    }\n  }\n\n  protected _sizeRange?: ICorrelationSeriesSpec['sizeRange'];\n  getSizeRange() {\n    return this._sizeRange;\n  }\n  setSizeRange(range: number[]) {\n    if (isValid(range)) {\n      this._sizeRange = range;\n    }\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n\n    this.setCategoryField(this._spec.categoryField);\n    this.setValueField(this._spec.valueField);\n\n    this.setSeriesField(this._spec.seriesField);\n    this.setSizeField(this._spec.sizeField);\n    this.setSizeRange(this._spec.sizeRange);\n  }\n\n  protected initData() {\n    super.initData();\n\n    if (!this._data) {\n      return;\n    }\n\n    registerDataSetInstanceTransform(this._dataSet, 'correlation', correlation);\n\n    const centerDataSet = new DataSet();\n    registerDataSetInstanceParser(centerDataSet, 'dataview', dataViewParser);\n    registerDataSetInstanceTransform(centerDataSet, 'correlationCenter', correlationCenter);\n    const centerDataView = new DataView(centerDataSet, { name: `${this.type}_${this.id}_center` });\n    centerDataView.parse([this.getViewData()], {\n      type: 'dataview'\n    });\n    centerDataView.transform({\n      type: 'correlationCenter',\n      options: {\n        keyword: this._spec.centerLabel?.style?.text ?? '',\n        categoryField: this._spec.categoryField\n      }\n    });\n\n    this._centerSeriesData = new CompilableData(this._option, centerDataView);\n  }\n\n  compileData() {\n    super.compileData();\n    this._centerSeriesData?.compile();\n  }\n\n  protected _statisticViewData(): void {\n    super._statisticViewData();\n    this._data.getDataView().transform({\n      type: 'correlation',\n      options: {\n        view: () => {\n          return {\n            x0: this._viewBox.x1,\n            x1: this._viewBox.x2,\n            y0: this._viewBox.y1,\n            y1: this._viewBox.y2\n          };\n        },\n        field: this._spec.valueField,\n        radiusRange: this._spec.sizeRange as [number, number],\n        radiusField: this._spec.sizeField,\n        center: [this._spec.centerX, this._spec.centerY],\n        innerRadius: this._spec.innerRadius,\n        outerRadius: this._spec.outerRadius,\n        startAngle: this._spec.startAngle,\n        endAngle: this._spec.endAngle\n      } as ICorrelationOpt\n    });\n  }\n\n  initMark(): void {\n    const nodePointMark = this._createMark(CorrelationSeries.mark.nodePoint, {\n      groupKey: this._seriesField,\n      isSeriesMark: true,\n      key: DEFAULT_DATA_INDEX\n    }) as ISymbolMark;\n    if (nodePointMark) {\n      nodePointMark.setMarkConfig({ zIndex: LayoutZIndex.Node });\n      this._nodePointMark = nodePointMark;\n    }\n\n    const ripplePointMark = this._createMark(CorrelationSeries.mark.ripplePoint, {\n      key: DEFAULT_DATA_INDEX,\n      dataView: this._centerSeriesData.getDataView(),\n      dataProductId: this._centerSeriesData.getProductId()\n    }) as IRippleMark;\n    if (ripplePointMark) {\n      this._ripplePointMark = ripplePointMark;\n    }\n\n    const centerPointMark = this._createMark(CorrelationSeries.mark.centerPoint, {\n      key: DEFAULT_DATA_INDEX,\n      dataView: this._centerSeriesData.getDataView(),\n      dataProductId: this._centerSeriesData.getProductId()\n    }) as ISymbolMark;\n    if (centerPointMark) {\n      centerPointMark.setMarkConfig({ zIndex: LayoutZIndex.Node });\n      this._centerPointMark = centerPointMark;\n    }\n  }\n\n  initMarkStyle(): void {\n    this._initNodePointMarkStyle();\n    this._initRipplePointMarkStyle();\n    this._initCenterPointMarkStyle();\n  }\n\n  protected _initNodePointMarkStyle() {\n    const nodePointMark = this._nodePointMark;\n    if (!nodePointMark) {\n      return;\n    }\n    const nodePointStyle = this._spec.nodePoint?.style ?? {};\n    this.setMarkStyle<ISymbolMarkSpec>(\n      nodePointMark,\n      {\n        x: (datum: Datum) => datum[CORRELATION_X],\n        y: (datum: Datum) => datum[CORRELATION_Y],\n        size: (datum: Datum) => datum[CORRELATION_SIZE],\n        fill: nodePointStyle.fill ?? this.getColorAttribute(),\n        fillOpacity: nodePointStyle.fillOpacity ?? 1,\n        lineWidth: 0\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected _initRipplePointMarkStyle() {\n    const ripplePointMark = this._ripplePointMark;\n    if (!ripplePointMark) {\n      return;\n    }\n    const ripplePointStyle = this._spec.ripplePoint?.style ?? {};\n\n    this.setMarkStyle<IRippleMarkSpec>(\n      ripplePointMark,\n      {\n        x: () => {\n          return this._spec.centerX ?? (this._viewBox.x1 + this._viewBox.x2) / 2;\n        },\n        y: () => {\n          return this._spec.centerY ?? (this._viewBox.y1 + this._viewBox.y2) / 2;\n        },\n        size: () => {\n          return Math.max(this._viewBox.x2 - this._viewBox.x1, this._viewBox.y2 - this._viewBox.y1) / 2;\n        },\n        fill: ripplePointStyle.fill ?? this.getColorAttribute(),\n        opacity: ripplePointStyle.fillOpacity ?? 0.2,\n        ripple: ripplePointStyle.ripple ?? 0\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected _initCenterPointMarkStyle() {\n    const centerPointMark = this._centerPointMark;\n    if (!centerPointMark) {\n      return;\n    }\n    this.setMarkStyle<ISymbolMarkSpec>(\n      centerPointMark,\n      {\n        x: () => {\n          return this._spec.centerX ?? (this._viewBox.x1 + this._viewBox.x2) / 2;\n        },\n        y: () => {\n          return this._spec.centerY ?? (this._viewBox.y1 + this._viewBox.y2) / 2;\n        },\n        size: () => {\n          return (0.2 * Math.max(this._viewBox.x2 - this._viewBox.x1, this._viewBox.y2 - this._viewBox.y1)) / 2;\n        },\n        fill: this._spec.centerPoint?.style?.fill ?? this.getColorAttribute(),\n        fillOpacity: this._spec.centerPoint?.style?.fillOpacity ?? 1\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._nodePointMark && this._tooltipHelper.activeTriggerSet.mark.add(this._nodePointMark);\n  }\n\n  initLabelMarkStyle(labelMark?: ILabelMark): void {\n    if (!labelMark) {\n      return;\n    }\n    this.setMarkStyle(\n      labelMark,\n      {\n        fill: this.getColorAttribute(),\n        text: (datum: Datum) => {\n          return datum[this._categoryField];\n        },\n        z: this.dataToPositionZ.bind(this)\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  initAnimation() {\n    const appearPreset = (this._spec.animationAppear as IStateAnimateSpec<CorrelationAppearPreset>)?.preset;\n\n    this._nodePointMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('correlation')?.({}, appearPreset),\n        userAnimationConfig(SeriesMarkNameEnum.nodePoint, this._spec, this._markAttributeContext)\n      )\n    );\n  }\n\n  getGroupFields(): string[] {\n    return [];\n  }\n  getStackGroupFields(): string[] {\n    return [];\n  }\n  getStackValueField(): string {\n    return '';\n  }\n  getActiveMarks(): IMark[] {\n    return [this._nodePointMark, this._centerPointMark];\n  }\n\n  /** 获取维度field */\n  getDimensionField(): string[] {\n    return [this._categoryField];\n  }\n  /** 获取指标field */\n  getMeasureField(): string[] {\n    return [this._valueField];\n  }\n\n  onLayoutEnd(): void {\n    super.onLayoutEnd();\n    this._viewBox.set(0, 0, this._region.getLayoutRect().width, this._region.getLayoutRect().height);\n    this._rawData.reRunAllTransform();\n    this.getViewData().reRunAllTransform();\n  }\n}\n\nexport const registerCorrelationSeries = () => {\n  registerSymbolMark();\n  registerRippleMark();\n  Factory.registerSeries(CorrelationSeries.type, CorrelationSeries);\n  registerCorrelationAnimation();\n};\n"]}