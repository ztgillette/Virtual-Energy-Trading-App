{"version":3,"sources":["../src/series/pie/animation/centerOffset.ts"],"names":[],"mappings":"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","file":"centerOffset.js","sourcesContent":["import { ARC_MIDDLE_ANGLE } from '../../../constant/polar';\nimport type { Datum } from '../../../typings';\nimport { isValidNumber, polarToCartesian } from '@visactor/vutils';\nimport type { IArcMark } from '../../../mark/interface';\nimport type { IAnimationTimeline, IAnimationTypeConfig } from '../../../animation/interface';\n\nexport function centerOffsetConfig(mark: IArcMark, originalConfig: IAnimationTypeConfig): IAnimationTimeline {\n  const offset = originalConfig.options?.distance ?? 10;\n  const duration = isValidNumber(originalConfig.duration) ? originalConfig.duration / 2 : 1000;\n  const easing = originalConfig.options.easing ?? 'cubicOut';\n  return {\n    oneByOne: originalConfig.oneByOne,\n    loop: originalConfig.loop ?? false,\n    timeSlices: [\n      {\n        duration,\n        effects: {\n          easing,\n          channel: {\n            x: {\n              from: (datum: Datum) => mark.getAttribute('x', datum),\n              to: (datum: Datum) => {\n                const center = mark.getAttribute('x', datum) as number;\n                const point = polarToCartesian(\n                  {\n                    x: 0,\n                    y: 0\n                  },\n                  offset,\n                  datum[ARC_MIDDLE_ANGLE]\n                );\n                return center + point.x;\n              }\n            },\n            y: {\n              from: (datum: Datum) => mark.getAttribute('y', datum),\n              to: (datum: Datum) => {\n                const center = mark.getAttribute('y', datum) as number;\n                const point = polarToCartesian(\n                  {\n                    x: 0,\n                    y: 0\n                  },\n                  offset,\n                  datum[ARC_MIDDLE_ANGLE]\n                );\n                return center + point.y;\n              }\n            }\n          }\n        }\n      },\n      {\n        duration,\n        effects: {\n          easing,\n          channel: {\n            x: {\n              to: (datum: Datum) => mark.getAttribute('x', datum),\n              from: (datum: Datum) => {\n                const center = mark.getAttribute('x', datum) as number;\n                const point = polarToCartesian(\n                  {\n                    x: 0,\n                    y: 0\n                  },\n                  offset,\n                  datum[ARC_MIDDLE_ANGLE]\n                );\n                return center + point.x;\n              }\n            },\n            y: {\n              to: (datum: Datum) => mark.getAttribute('y', datum),\n              from: (datum: Datum) => {\n                const center = mark.getAttribute('y', datum) as number;\n                const point = polarToCartesian(\n                  {\n                    x: 0,\n                    y: 0\n                  },\n                  offset,\n                  datum[ARC_MIDDLE_ANGLE]\n                );\n                return center + point.y;\n              }\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n"]}