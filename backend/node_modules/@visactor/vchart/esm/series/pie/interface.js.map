{"version":3,"sources":["../src/series/pie/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IAnimationSpec } from '../../animation/spec';\nimport type { IMarkSpec, IMarkTheme } from '../../typings/spec/common';\nimport type { IArcMarkSpec, ITextMarkSpec, ILineMarkSpec } from '../../typings/visual';\nimport type { SeriesMarkNameEnum } from '../interface/type';\nimport type { IPolarSeriesSpec, IPolarSeriesTheme } from '../polar/interface';\nimport type { ILabelSpec, IMultiLabelSpec } from '../../component/label/interface';\nimport type { ICustomPath2D, ILineGraphicAttribute, ITextGraphicAttribute } from '@visactor/vrender-core';\nimport type { ILayoutRect, IPercent } from '../../typings/layout';\nimport type { IPointLike } from '@visactor/vutils';\nimport type { AnimationStateEnum } from '../../animation/interface';\nimport type { Datum } from '../../typings/common';\nimport type { IMarkGraphic } from '../../mark/interface';\n\nexport interface IPieAnimationParams {\n  growField?: 'angle' | 'radius';\n  growFrom: (datum: Datum, g: IMarkGraphic, state: AnimationStateEnum) => number;\n}\n\nexport type PieAppearPreset = 'growAngle' | 'growRadius' | 'fadeIn';\n\nexport type PieMarks = 'pie' | 'label' | 'labelLine';\n\nexport type IBasePieSeriesSpec = Omit<IPieSeriesSpec, 'type'> & { type: string };\n\nexport interface IPieSeriesSpec extends IPolarSeriesSpec, IAnimationSpec<PieMarks, PieAppearPreset> {\n  type: 'pie';\n  /**\n   * 分类字段\n   * @description 饼图每个扇区为独立的系列\n   */\n  categoryField: string;\n  /** 数值字段 */\n  valueField: string;\n  /** 饼图中心点 x 坐标 */\n  centerX?: number | IPercent;\n  /** 饼图中心点 y 坐标 */\n  centerY?: number | IPercent;\n  /** 饼图扇区中心偏移 */\n  centerOffset?: number;\n\n  /**\n   * 饼图扇区半径\n   * @default 0.6\n   * @deprecated use outerRadius instead\n   */\n  radius?: number;\n\n  /**\n   * 饼图扇区外半径\n   * @default 0.6\n   */\n  outerRadius?: number;\n\n  /**\n   * 饼图扇区内半径\n   * @default 0\n   */\n  innerRadius?: number;\n\n  /**\n   * 饼图扇区圆角半径\n   * @default 0\n   */\n  cornerRadius?: number;\n  /**\n   * 饼图的起始角度（0 ~ 360）\n   * @default -90\n   */\n  startAngle?: number;\n  /**\n   * 饼图的结束角度（0 ~ 360）\n   * @default 270\n   */\n  endAngle?: number;\n  /**\n   * 扇区之间的间隔角度\n   */\n  padAngle?: number;\n\n  /**\n   * 最小的扇区角度（0 ~ 360），用于防止某个值过小导致扇区太小影响交互。\n   * @default 0\n   * @since 1.4.0\n   */\n  minAngle?: number;\n\n  /**\n   * @since 1.11.12\n   */\n  layoutRadius?: 'auto' | number | ((layoutRect: ILayoutRect, center: IPointLike) => number);\n\n  /** 扇区样式 */\n  [SeriesMarkNameEnum.pie]?: IMarkSpec<IArcMarkSpec>;\n  /** 标签配置 */\n  [SeriesMarkNameEnum.label]?: IMultiLabelSpec<IArcLabelSpec>;\n\n  /** 数据为空时显示的占位图形 */\n  emptyPlaceholder?: {\n    /** 是否显示占位圆\n     * @default false\n     */\n    showEmptyCircle?: boolean;\n\n    /** 占位圆样式 */\n    emptyCircle?: IMarkSpec<IArcMarkSpec>;\n  };\n\n  /**\n   * 是否在数据均为0时显示均分扇区。\n   * @default false\n   */\n  showAllZero?: boolean;\n\n  /**\n   * 是否将负数按照绝对值进行处理。\n   * @default false\n   */\n  supportNegative?: boolean;\n}\n\nexport interface IPieSeriesTheme extends IPolarSeriesTheme {\n  [SeriesMarkNameEnum.pie]?: Partial<IMarkTheme<IArcMarkSpec>>;\n  /** 标签配置 */\n  [SeriesMarkNameEnum.label]?: IArcLabelSpec;\n  /**\n   * 内标签配置\n   * @since 1.5.1\n   */\n  innerLabel?: IArcLabelSpec;\n  /**\n   * 外标签配置\n   * @since 1.5.1\n   */\n  outerLabel?: IArcLabelSpec;\n  /** 数据为空时显示的占位圆样式\n   * @since 1.12.0\n   */\n  emptyCircle?: Partial<IMarkTheme<IArcMarkSpec>>;\n}\n\nexport interface IArcLabelLineSpec extends Omit<IMarkSpec<ILineMarkSpec>, 'customShape'> {\n  /**\n   * 是否显示引导线\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * 引导线 line1 部分最小长度\n   * @default 20\n   */\n  line1MinLength?: number;\n  /**\n   * 引导线 line2 部分最小长度\n   * @default 10\n   */\n  line2MinLength?: number;\n  /**\n   * 引导线是否光滑\n   * @default false\n   * @since 1.4.0\n   */\n  smooth?: boolean;\n  /**\n   * 标签引导线支持自定义path\n   * @since 1.11.11\n   */\n  customShape?: (\n    text: ITextGraphicAttribute,\n    attrs: Partial<ILineGraphicAttribute>,\n    path: ICustomPath2D\n  ) => ICustomPath2D;\n}\n\nexport type ArcLabelAlignType = 'arc' | 'labelLine' | 'edge';\n\nexport type ArcLabelStrategyType = 'priority' | 'vertical' | 'none';\n\nexport interface IArcLabelLayoutSpec {\n  /**\n   * 标签对齐方式\n   * @default 'arc'\n   */\n  textAlign?: ArcLabelAlignType;\n  /** @deprecate 建议统一使用textAlign，后续将废除 */\n  align?: ArcLabelAlignType;\n  /**\n   * 标签布局策略\n   * @default 'priority'\n   */\n  strategy?: ArcLabelStrategyType;\n  /**\n   * 是否启用切线约束\n   * @default true\n   */\n  tangentConstraint?: boolean;\n}\n\nexport type IArcLabelSpec = Omit<ILabelSpec, 'position'> & {\n  /**\n   * 标签布局方式\n   * @default 'outside'\n   */\n  position?: 'outside' | 'inside' | 'inside-center';\n  /**\n   * 标签内容显示规则\n   * @default 'all'\n   */\n  showRule?: 'all' | 'max' | 'min' | 'minAndMax' | 'headAndTail';\n  /**\n   * 是否允许标签重叠\n   * @default false\n   */\n  coverEnable?: boolean;\n  /**\n   * 是否允许标签旋转\n   * @default true\n   */\n  rotate?: boolean;\n\n  /**\n   * 文字与引导线间隔宽度\n   * @default 5\n   */\n  spaceWidth?: number;\n  /**\n   * 扇区间标签的间隔\n   * @default 6\n   */\n  layoutArcGap?: number;\n  /** 中心点偏移距离 */\n  centerOffset?: number;\n  /** 标签文字样式 */\n  style?: ITextMarkSpec;\n  /** 标签引导线样式 */\n  line?: IArcLabelLineSpec;\n  /** 标签布局配置 */\n  layout?: IArcLabelLayoutSpec;\n};\n"]}