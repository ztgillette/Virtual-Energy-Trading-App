{"version":3,"sources":["../src/series/pie/pie-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AAIpD,MAAM,OAAO,wBAGX,SAAQ,yBAA+B;IAC7B,mBAAmB,CAAC,IAAO;QACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,QAAyB,CAAC;IACvD,CAAC;IAGS,iBAAiB,CAAC,IAAO,EAAE,SAAc;QACjD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,uBAAuB,EAAE,EAAE;YAClC,MAAM,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;YAI/D,OAAO,GAAG,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAQ,CAAC;YAEjE,MAAM,kBAAkB,GAAG,CAAC,QAAmC,EAAE,KAAoB,EAAE,EAAE;gBACvF,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,eAAe,EAAE;oBACzD,OAAO,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;iBACrD;gBACD,OAAO,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACtD,CAAC,CAAC;YAEF,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC1B,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;aACvF;iBAAM;gBACL,OAAO,CAAC,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;aAC3E;SACF;QAED,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAClC,CAAC;IAES,wBAAwB,CAAC,SAAc;;QAC/C,MAAM,IAAI,GAAG,MAAC,KAAK,CAAC,wBAAwB,CAAC,SAAS,CAAS,mCAAI,EAAE,CAAC;QACtE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC;QACvC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IACzD,CAAC;CACF","file":"pie-transformer.js","sourcesContent":["import { isArray, isValid } from '@visactor/vutils';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { BaseSeriesSpecTransformer } from '../base';\nimport { SeriesMarkNameEnum } from '../interface';\nimport type { IArcLabelSpec, IBasePieSeriesSpec, IPieSeriesTheme } from './interface';\n\nexport class PieSeriesSpecTransformer<\n  T extends IBasePieSeriesSpec = IBasePieSeriesSpec,\n  K extends IPieSeriesTheme = IPieSeriesTheme\n> extends BaseSeriesSpecTransformer<T, K> {\n  protected _transformLabelSpec(spec: T): void {\n    this._addMarkLabelSpec(spec, SeriesMarkNameEnum.pie);\n  }\n\n  /** 将 theme merge 到 spec 中 */\n  protected _mergeThemeToSpec(spec: T, chartSpec: any): { spec: T; theme: K } {\n    const theme = this._theme;\n    let newSpec = spec;\n    if (this._shouldMergeThemeToSpec()) {\n      const specFromChart = this._getDefaultSpecFromChart(chartSpec);\n\n      // this._originalSpec + specFromChart + this._theme = this._spec\n      // 动态处理 label 样式，对于展示在内部的 label 默认使用 innerLabel 样式\n      newSpec = mergeSpec({}, this._theme, specFromChart, spec) as any;\n\n      const getMergedLabelSpec = (position: IArcLabelSpec['position'], label: IArcLabelSpec) => {\n        if (position === 'inside' || position === 'inside-center') {\n          return mergeSpec({}, this._theme.innerLabel, label);\n        }\n        return mergeSpec({}, this._theme.outerLabel, label);\n      };\n\n      if (isArray(newSpec.label)) {\n        newSpec.label = newSpec.label.map(label => getMergedLabelSpec(label.position, label));\n      } else {\n        newSpec.label = getMergedLabelSpec(newSpec.label.position, newSpec.label);\n      }\n    }\n\n    return { spec: newSpec, theme };\n  }\n\n  protected _getDefaultSpecFromChart(chartSpec: any): any {\n    const spec = (super._getDefaultSpecFromChart(chartSpec) as any) ?? {};\n    const { centerX, centerY } = chartSpec;\n    if (isValid(centerX)) {\n      spec.centerX = centerX;\n    }\n    if (isValid(centerY)) {\n      spec.centerY = centerY;\n    }\n    return Object.keys(spec).length > 0 ? spec : undefined;\n  }\n}\n"]}