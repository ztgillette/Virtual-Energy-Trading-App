{"version":3,"sources":["../src/series/bar/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { ICartesianSeriesSpec, ICartesianSeriesTheme } from '../cartesian/interface';\nimport type { IMarkSpec, IMarkTheme } from '../../typings/spec/common';\nimport type { IRectMarkSpec } from '../../typings/visual';\nimport type { IAnimationSpec } from '../../animation/spec';\nimport type { ILabelSpec, IMultiLabelSpec } from '../../component/label/interface';\nimport type { IDataSamping, IMarkProgressiveConfig } from '../../mark/interface';\nimport type { SeriesMarkNameEnum } from '../interface/type';\nimport type { Functional } from '@visactor/vrender-components';\nimport type { IRectGraphicAttribute } from '@visactor/vrender-core';\nimport type { Datum, DirectionType } from '../../typings';\nimport type { ISeriesMarkAttributeContext } from '../../compile/mark/interface';\n\ntype BarMarks = 'bar';\n\nexport interface IBarAnimationParams {\n  xField: string;\n  yField: string;\n  direction: DirectionType;\n  // growHeightOverall，需要知道一起生长的起始点\n  // 即 x轴 在canvas上的y（ 或 y轴 在canvas上的x ）。\n  growFrom: () => number;\n}\n\nexport type BarAppearPreset = 'grow' | 'fadeIn' | 'scaleIn';\n\nexport type IStackCornerRadiusCallback = (\n  attr: IRectGraphicAttribute,\n  datum: Datum,\n  ctx: ISeriesMarkAttributeContext\n) => number | number[];\nexport interface IBarSeriesSpec\n  extends ICartesianSeriesSpec,\n    IAnimationSpec<BarMarks, BarAppearPreset>,\n    IMarkProgressiveConfig,\n    IDataSamping {\n  /**\n   *  系列类型\n   */\n  type: 'bar';\n  /**\n   * x轴字段\n   */\n  xField?: string | string[];\n  /**\n   * y轴字段\n   */\n  yField?: string | string[];\n  /**\n   * 图元配置\n   */\n  [SeriesMarkNameEnum.bar]?: IMarkSpec<IRectMarkSpec>;\n  /**\n   * 柱状背景图元\n   * @since 1.6.0\n   */\n  [SeriesMarkNameEnum.barBackground]?: IMarkSpec<IRectMarkSpec> & IBarBackgroundSpec;\n  /** 标签配置*/\n  [SeriesMarkNameEnum.label]?: IMultiLabelSpec<\n    Omit<ILabelSpec, 'position'> & {\n      /**\n       * 标签位置\n       * @since 1.6.0\n       * 支持'top-right' | 'top-left'| 'bottom-right' | 'bottom-left'，以及函数形式配置\n       * */\n      position?: Functional<\n        | 'outside'\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'inside'\n        | 'inside-top'\n        | 'inside-bottom'\n        | 'inside-right'\n        | 'inside-left'\n        | 'top-right'\n        | 'top-left'\n        | 'bottom-right'\n        | 'bottom-left'\n      >;\n    }\n  >;\n  /**\n   * 柱体宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n   * 1. number 类型，表示像素值\n   * 2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)\n   */\n  barWidth?: number | string;\n  /**\n   * 柱体最小宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n   * 1. number 类型，表示像素值\n   * 2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)\n   */\n  barMinWidth?: number | string;\n  /**\n   * 柱体最大宽度，可以设置绝对的像素值，也可以使用百分比（如 '10%'）\n   * 1. number 类型，表示像素值\n   * 2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)\n   */\n  barMaxWidth?: number | string;\n  /**\n   * 分组柱图中各个分组内的柱子间距，可以设置绝对的像素值，也可以使用百分比（如 '10%'）。\n   * 当存在多层分组时，可以使用数组来设置不同层级的间距，如 [10, '20%']，表示第一层分组的间距为 10px，第二层分组的间距为 '20%'。\n   * 如果 barGapInGroup 的数组个数小于分组层数，则后面的分组间距使用最后一个值。\n   * 1. number 类型，表示像素值\n   * 2. string 类型，百分比用法，如 '10%'，该值为对应最后一个分组字段对应的 scale 的 bandWidth 占比(因为柱子是等宽的，所以采用最后一层分组的 scale)\n   * @since 1.2.0\n   */\n  barGapInGroup?: number | string | (number | string)[];\n\n  /**\n   * 柱条最小高度，可用于防止某数据项的值过小的视觉调整。\n   * @since 1.4.0\n   */\n  barMinHeight?: number;\n\n  /**\n   * 堆叠柱整体的圆角 @since 1.10.0\n   * 圆角支持回调配置 @since 1.12.4\n   */\n  stackCornerRadius?: number | number[] | IStackCornerRadiusCallback;\n\n  /**\n   * 柱条间 gap 值 @since 1.13.11\n   */\n  barGap?: number;\n}\n\nexport interface IBarBackgroundSpec {\n  /**\n   * 决定柱状背景图元是否显示在组的层级上，以及显示在哪个层级上。\n   * 例如：在分组柱状图中，xField 为 `['A', 'B', 'C']`，如果配置为 0，则以 'A' 划分的每个组对应一个整体的 barBackground；如果配置为 1，则以 'B' 划分的每个组对应一个整体的 barBackground；如果配置为 2，则每个柱条对应一个 barBackground。\n   * @since 1.9.0\n   */\n  fieldLevel?: number;\n}\n\nexport interface IBarSeriesTheme extends ICartesianSeriesTheme {\n  [SeriesMarkNameEnum.bar]?: Partial<IMarkTheme<IRectMarkSpec>>;\n  /**\n   * 柱状背景图元\n   * @since 1.6.0\n   */\n  [SeriesMarkNameEnum.barBackground]?: Partial<IMarkTheme<IRectMarkSpec>> & IBarBackgroundSpec;\n  /**\n   * 柱体宽度\n   */\n  barWidth?: number;\n  /**\n   * 柱体最小宽度\n   */\n  barMinWidth?: number;\n  /**\n   * 柱体最大宽度\n   */\n  barMaxWidth?: number;\n}\n"]}