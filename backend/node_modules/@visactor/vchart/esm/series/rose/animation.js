import { Factory } from "../../core/factory";

function growInType(growField) {
    return "angle" === growField ? "growAngleIn" : "growRadiusIn";
}

function growOutType(growField) {
    return "angle" === growField ? "growAngleOut" : "growRadiusOut";
}

export const Appear_Grow = params => ({
    type: growInType(params.growField),
    options: {
        overall: !0
    }
});

export const Appear_FadeIn = {
    type: "fadeIn"
};

export const roseEnter = params => ({
    type: growInType(params.growField)
});

export const roseExit = params => ({
    type: growOutType(params.growField)
});

export const roseDisappear = roseExit;

export function rosePresetAnimation(params, preset) {
    if (!1 === preset) return {};
    switch (preset) {
      case "fadeIn":
        return Appear_FadeIn;

      case "growAngle":
        return Appear_Grow(Object.assign(Object.assign({}, params), {
            growField: "angle"
        }));

      default:
        return Appear_Grow(Object.assign(Object.assign({}, params), {
            growField: "radius"
        }));
    }
}

export const registerRoseAnimation = () => {
    Factory.registerAnimation("rose", ((params, preset) => ({
        appear: rosePresetAnimation(params, preset),
        enter: roseEnter(params),
        exit: roseExit(params),
        disappear: roseDisappear(params)
    })));
};
//# sourceMappingURL=animation.js.map
