{"version":3,"sources":["../src/series/funnel/tooltip-helper.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,uBAAuB,EAAE,MAAM,wBAAwB,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAI3C,MAAM,OAAO,yBAA0B,SAAQ,uBAAuB;IAGpE,YAAY,MAAqB;;QAC/B,KAAK,CAAC,MAAM,CAAC,CAAC;QAIhB,kCAA6B,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YAC9E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAuB,CAAC;YAC5C,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBACvD,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACjC;YACD,OAAO,MAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,mCAAI,MAAA,KAAK,CAAC,UAAU,0CAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QAC7F,CAAC,CAAC;QAEF,6BAAwB,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YACzE,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBACvD,MAAM,WAAW,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,kBAAkB,CAAC,CAAC;gBAChD,OAAO,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;aAC7C;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,2BAAsB,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YACvE,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBACvD,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACjC;YACD,MAAM,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAChE,MAAM,iBAAiB,GAAG,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEtE,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5B,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC;YACD,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,iBAAiB,CAAC,CAAC;QACpC,CAAC,CAAC;QA9BA,IAAI,CAAC,mBAAmB,GAAG,MAAA,MAAA,MAAM,CAAC,OAAO,EAAE,0CAAE,kBAAkB,mCAAI,KAAK,CAAC;IAC3E,CAAC;CA8BF","file":"tooltip-helper.js","sourcesContent":["import type { IFunnelSeries, ISeriesTooltipHelper } from '../interface';\nimport { SeriesMarkNameEnum } from '../interface/type';\nimport { BaseSeriesTooltipHelper } from '../base/tooltip-helper';\nimport { FUNNEL_REACH_RATIO } from '../../constant/funnel';\nimport { isValid } from '@visactor/vutils';\nimport type { TooltipHandlerParams } from '../../component/tooltip/interface';\nimport type { Datum } from '../../typings/common';\n\nexport class FunnelSeriesTooltipHelper extends BaseSeriesTooltipHelper implements ISeriesTooltipHelper {\n  private _transformRatioText;\n\n  constructor(series: IFunnelSeries) {\n    super(series);\n    this._transformRatioText = series.getSpec()?.transformRatioText ?? `转化率`;\n  }\n\n  dimensionTooltipTitleCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    const series = this.series as IFunnelSeries;\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      return this._transformRatioText;\n    }\n    return this._getDimensionData(datum) ?? datum.properties?.[`${series.getCategoryField()}`];\n  };\n\n  markTooltipValueCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      const measureData = datum?.[FUNNEL_REACH_RATIO];\n      return `${(measureData * 100).toFixed(1)}%`;\n    }\n    return this._getMeasureData(datum);\n  };\n\n  markTooltipKeyCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      return this._transformRatioText;\n    }\n    const { dimensionFields, seriesFields } = this._seriesCacheInfo;\n    const subDimensionField = dimensionFields[dimensionFields.length - 1];\n\n    if (isValid(seriesFields[0])) {\n      return datum?.[seriesFields[0]];\n    }\n    return datum?.[subDimensionField];\n  };\n}\n"]}