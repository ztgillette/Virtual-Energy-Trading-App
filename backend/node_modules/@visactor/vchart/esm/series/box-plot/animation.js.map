{"version":3,"sources":["../src/series/box-plot/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourcesContent":["import type { EasingType, ILineAttribute, IRectAttribute } from '@visactor/vrender-core';\nimport type { IGlyph } from '@visactor/vrender-core';\nimport type { IAnimationParameters } from '../../animation/interface';\nimport { isValidNumber } from '@visactor/vutils';\nimport { ACustomAnimate, AnimateExecutor } from '@visactor/vrender-animate';\nexport interface IBoxplotScaleAnimationOptions {\n  center?: number;\n}\n\ntype TypeAnimation = (\n  graphic: IGlyph,\n  options: IBoxplotScaleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => { from?: { [channel: string]: any }; to?: { [channel: string]: any } };\n\nconst scaleIn = (\n  computeCenter: (\n    graphic: IGlyph,\n    direction: 'vertical' | 'horizontal',\n    options: IBoxplotScaleAnimationOptions\n  ) => number\n): TypeAnimation => {\n  return (graphic: IGlyph, options: IBoxplotScaleAnimationOptions, animationParameters: IAnimationParameters) => {\n    const finalAttribute = graphic.getFinalAttribute();\n    const direction = finalAttribute.direction ?? 'vertical';\n    const center = computeCenter(graphic, direction, options);\n    if (!isValidNumber(center)) {\n      return {};\n    }\n    const { x, y, min, max, q1, q3, median } = finalAttribute;\n    const animateAttributes: any = { from: { x, y }, to: { x, y } };\n    if (isValidNumber(min)) {\n      animateAttributes.from.min = center;\n      animateAttributes.to.min = min;\n    }\n    if (isValidNumber(max)) {\n      animateAttributes.from.max = center;\n      animateAttributes.to.max = max;\n    }\n    if (isValidNumber(q1)) {\n      animateAttributes.from.q1 = center;\n      animateAttributes.to.q1 = q1;\n    }\n    if (isValidNumber(q3)) {\n      animateAttributes.from.q3 = center;\n      animateAttributes.to.q3 = q3;\n    }\n    if (isValidNumber(median)) {\n      animateAttributes.from.median = center;\n      animateAttributes.to.median = median;\n    }\n    return animateAttributes;\n  };\n};\n\nconst scaleOut = (\n  computeCenter: (mark: IGlyph, direction: 'vertical' | 'horizontal', options: IBoxplotScaleAnimationOptions) => number\n): TypeAnimation => {\n  return (graphic: IGlyph, options: IBoxplotScaleAnimationOptions, animationParameters: IAnimationParameters) => {\n    const finalAttribute = graphic.getFinalAttribute();\n    const direction = finalAttribute.direction ?? 'vertical';\n    const center = computeCenter(graphic, direction, options);\n    if (!isValidNumber(center)) {\n      return {};\n    }\n    const { x, y, min, max, q1, q3, median } = finalAttribute;\n\n    const animateAttributes: any = { from: { x, y }, to: { x, y } };\n    if (isValidNumber(min)) {\n      animateAttributes.to.min = center;\n      animateAttributes.from.min = min;\n    }\n    if (isValidNumber(max)) {\n      animateAttributes.to.max = center;\n      animateAttributes.from.max = max;\n    }\n    if (isValidNumber(q1)) {\n      animateAttributes.to.q1 = center;\n      animateAttributes.from.q1 = q1;\n    }\n    if (isValidNumber(q3)) {\n      animateAttributes.to.q3 = center;\n      animateAttributes.from.q3 = q3;\n    }\n    if (isValidNumber(median)) {\n      animateAttributes.to.median = center;\n      animateAttributes.from.median = median;\n    }\n    return animateAttributes;\n  };\n};\nconst getGlyphChildByName = (mark: IGlyph, name: string) => {\n  return mark.getSubGraphic().find(child => child.name === name);\n};\n\nconst computeBoxplotCenter = (\n  glyphMark: IGlyph,\n  direction: 'vertical' | 'horizontal',\n  options: IBoxplotScaleAnimationOptions\n) => {\n  if (options && isValidNumber(options.center)) {\n    return options.center;\n  }\n  let median: number;\n  let max: number;\n  let min: number;\n  let q1: number;\n  let q3: number;\n  if (direction === 'horizontal') {\n    median = (getGlyphChildByName(glyphMark, 'median')?.attribute as ILineAttribute).points?.[0]?.x;\n    max = (getGlyphChildByName(glyphMark, 'max')?.attribute as ILineAttribute)?.points?.[0]?.x;\n    min = (getGlyphChildByName(glyphMark, 'min')?.attribute as ILineAttribute)?.points?.[0]?.x;\n\n    const boxWidth = (getGlyphChildByName(glyphMark, 'box').attribute as IRectAttribute).width;\n    const boxX = getGlyphChildByName(glyphMark, 'box').attribute.x;\n    q1 = boxX;\n    q3 = boxX + boxWidth;\n  } else {\n    median = (getGlyphChildByName(glyphMark, 'median')?.attribute as ILineAttribute).points?.[0]?.y;\n    max = (getGlyphChildByName(glyphMark, 'max')?.attribute as ILineAttribute)?.points?.[0]?.y;\n    min = (getGlyphChildByName(glyphMark, 'min')?.attribute as ILineAttribute)?.points?.[0]?.y;\n\n    const boxHeight = (getGlyphChildByName(glyphMark, 'box').attribute as IRectAttribute).height;\n    const boxY = getGlyphChildByName(glyphMark, 'box').attribute.y;\n    q1 = boxY;\n    q3 = boxY + boxHeight;\n  }\n\n  if (isValidNumber(median)) {\n    return median;\n  }\n  if (isValidNumber(q1) && isValidNumber(q3)) {\n    return (q1 + q3) / 2;\n  }\n  if (isValidNumber(max) && isValidNumber(min)) {\n    return (max + min) / 2;\n  }\n  if (isValidNumber(min)) {\n    return min;\n  }\n  if (isValidNumber(max)) {\n    return max;\n  }\n  return NaN;\n};\n\nconst computeBarBoxplotCenter = (\n  glyphMark: IGlyph,\n  direction: 'vertical' | 'horizontal',\n  options: IBoxplotScaleAnimationOptions\n) => {\n  if (isValidNumber(options?.center)) {\n    return options.center;\n  }\n  let median: number;\n  let max: number;\n  let min: number;\n  let q1: number;\n  let q3: number;\n  if (direction === 'horizontal') {\n    median = (getGlyphChildByName(glyphMark, 'median')?.attribute as ILineAttribute).points?.[0]?.x;\n    const minMaxBoxWidth = (getGlyphChildByName(glyphMark, 'minMaxBox')?.attribute as IRectAttribute).width;\n    const minMaxBoxBoxX = getGlyphChildByName(glyphMark, 'minMaxBox')?.attribute.x;\n    min = minMaxBoxBoxX;\n    max = minMaxBoxBoxX + minMaxBoxWidth;\n\n    const q1q3BoxWidth = (getGlyphChildByName(glyphMark, 'q1q3Box')?.attribute as IRectAttribute).width;\n    const q1q3BoxX = getGlyphChildByName(glyphMark, 'q1q3Box')?.attribute.x;\n    q1 = q1q3BoxX;\n    q3 = q1q3BoxX + q1q3BoxWidth;\n  } else {\n    median = (getGlyphChildByName(glyphMark, 'median')?.attribute as ILineAttribute).points?.[0]?.y;\n\n    const minMaxBoxHeight = (getGlyphChildByName(glyphMark, 'minMaxBox')?.attribute as IRectAttribute).height;\n    const minMaxBoxBoxY = getGlyphChildByName(glyphMark, 'minMaxBox')?.attribute.y;\n    min = minMaxBoxBoxY;\n    max = minMaxBoxBoxY + minMaxBoxHeight;\n\n    const q1q3BoxHeight = (getGlyphChildByName(glyphMark, 'q1q3Box')?.attribute as IRectAttribute).height;\n    const q1q3BoxY = getGlyphChildByName(glyphMark, 'q1q3Box')?.attribute.y;\n    q1 = q1q3BoxY;\n    q3 = q1q3BoxY + q1q3BoxHeight;\n  }\n\n  if (isValidNumber(median)) {\n    return median;\n  }\n  if (isValidNumber(q1) && isValidNumber(q3)) {\n    return (q1 + q3) / 2;\n  }\n  if (isValidNumber(max) && isValidNumber(min)) {\n    return (max + min) / 2;\n  }\n  if (isValidNumber(min)) {\n    return min;\n  }\n  if (isValidNumber(max)) {\n    return max;\n  }\n  return NaN;\n};\n\nexport class BoxplotScaleIn extends ACustomAnimate<Record<string, number>> {\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IBoxplotScaleAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    super.onBind();\n    const finalAttribute = this.target.getFinalAttribute();\n    if (finalAttribute) {\n      this.target.setAttributes(finalAttribute);\n    }\n    const { from, to } = this.computeAttribute();\n    this.propKeys = Object.keys(to).filter(key => to[key] != null);\n    this.animate.reSyncProps();\n    this.from = from;\n    this.to = to;\n    this.target.setAttributes(this.from);\n  }\n\n  computeAttribute() {\n    return scaleIn(computeBoxplotCenter)(this.target as IGlyph, this.params, this.params.options);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.setAttributes(attribute);\n  }\n}\n\nexport class BoxplotScaleOut extends ACustomAnimate<Record<string, number>> {\n  constructor(from: null, to: null, duration: number, easing: EasingType, params?: IBoxplotScaleAnimationOptions) {\n    super(from, to, duration, easing, params);\n  }\n\n  onBind(): void {\n    // 用于入场的时候设置属性（因为有动画的时候VChart不会再设置属性了）\n    if (this.params?.diffAttrs) {\n      this.target.setAttributes(this.params.diffAttrs);\n    }\n    const { from, to } = this.computeAttribute();\n    this.propKeys = Object.keys(to).filter(key => to[key] != null);\n    this.animate.reSyncProps();\n    this.from = from;\n    this.to = to;\n    this.target.setAttributes(this.from);\n  }\n\n  computeAttribute() {\n    return scaleOut(computeBoxplotCenter)(this.target as IGlyph, this.params, this.params.options);\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const attribute: Record<string, any> = this.target.attribute;\n    this.propKeys.forEach(key => {\n      attribute[key] = this.from[key] + (this.to[key] - this.from[key]) * ratio;\n    });\n    this.target.setAttributes(attribute);\n  }\n}\n\nexport class BarBoxplotScaleIn extends BoxplotScaleIn {\n  computeAttribute() {\n    return scaleIn(computeBarBoxplotCenter)(this.target as IGlyph, this.params, this.params.options);\n  }\n}\n\nexport class BarBoxplotScaleOut extends BoxplotScaleOut {\n  computeAttribute() {\n    return scaleOut(computeBarBoxplotCenter)(this.target as IGlyph, this.params, this.params.options);\n  }\n}\n\nexport const registeBoxPlotScaleAnimation = () => {\n  AnimateExecutor.registerBuiltInAnimate('boxplotScaleIn', BoxplotScaleIn);\n  AnimateExecutor.registerBuiltInAnimate('boxplotScaleOut', BoxplotScaleOut);\n  AnimateExecutor.registerBuiltInAnimate('barBoxplotScaleIn', BarBoxplotScaleIn);\n  AnimateExecutor.registerBuiltInAnimate('barBoxplotScaleOut', BarBoxplotScaleOut);\n};\n"]}