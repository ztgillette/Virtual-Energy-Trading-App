{"version":3,"sources":["../src/series/polar/polar.ts"],"names":[],"mappings":"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","file":"polar.js","sourcesContent":["import type { IBaseScale } from '@visactor/vscale';\nimport type { IPoint, IPolarPoint } from '../../typings/coordinate';\nimport type { IPolarSeries } from '../interface';\nimport { array, isValid, isNil } from '@visactor/vutils';\nimport type { IPolarAxisHelper } from '../../component/axis/polar/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous } from '@visactor/vscale';\nimport { POLAR_DEFAULT_RADIUS } from '../../constant/polar';\nimport { BaseSeries } from '../base/base-series';\nimport type { IPolarSeriesSpec } from './interface';\nimport type { Datum, StringOrNumber } from '../../typings';\nimport { sortDataInAxisHelper } from '../util/utils';\nimport { ChartEvent } from '../../constant/event';\nimport type { StatisticOperations } from '../../data/transforms/interface';\n\nexport abstract class PolarSeries<T extends IPolarSeriesSpec = IPolarSeriesSpec>\n  extends BaseSeries<T>\n  implements IPolarSeries\n{\n  readonly coordinate: 'polar' = 'polar';\n\n  protected _outerRadius: number = POLAR_DEFAULT_RADIUS;\n  public get outerRadius() {\n    return this._outerRadius;\n  }\n\n  protected _innerRadius: number = 0;\n  public get innerRadius() {\n    return this._innerRadius;\n  }\n\n  protected _angleField: string[] = [];\n  getAngleField() {\n    return this._angleField;\n  }\n  setAngleField(f: string | string[]): string[] {\n    this._angleField = isValid(f) ? array(f) : [];\n    return this._angleField;\n  }\n\n  protected _radiusField: string[] = [];\n  getRadiusField() {\n    return this._radiusField;\n  }\n  setRadiusField(f: string | string[]): string[] {\n    this._radiusField = isValid(f) ? array(f) : [];\n    return this._radiusField;\n  }\n\n  protected _specAngleField: string[];\n  protected _specRadiusField: string[];\n\n  protected _innerRadiusField!: string[];\n  public get innerRadiusField() {\n    return this._innerRadiusField;\n  }\n  setInnerRadiusField(f: string | string[]): string[] {\n    this._innerRadiusField = array(f);\n    return this._innerRadiusField;\n  }\n\n  protected _radiusScale!: IBaseScale;\n  public get radiusScale() {\n    return this._radiusScale;\n  }\n  setRadiusScale(s: IBaseScale) {\n    this._radiusScale = s;\n    return s;\n  }\n\n  protected _angleScale!: IBaseScale;\n  public get angleScale() {\n    return this._angleScale;\n  }\n  setAngleScale(s: IBaseScale) {\n    this._angleScale = s;\n    return s;\n  }\n\n  private _angleAxisHelper!: IPolarAxisHelper;\n  public get angleAxisHelper() {\n    return this._angleAxisHelper;\n  }\n\n  public set angleAxisHelper(h: IPolarAxisHelper) {\n    this._angleAxisHelper = h;\n    this.onAngleAxisHelperUpdate();\n  }\n\n  private _radiusAxisHelper!: IPolarAxisHelper;\n  public get radiusAxisHelper() {\n    return this._radiusAxisHelper;\n  }\n  public set radiusAxisHelper(h: IPolarAxisHelper) {\n    this._radiusAxisHelper = h;\n    this.onRadiusAxisHelperUpdate();\n  }\n\n  protected _sortDataByAxis: boolean = false;\n  get sortDataByAxis() {\n    return this._sortDataByAxis;\n  }\n\n  protected _buildMarkAttributeContext() {\n    super._buildMarkAttributeContext();\n    // position\n    this._markAttributeContext.valueToPosition = this.valueToPosition.bind(this);\n    this._markAttributeContext.getCenter = () => this.angleAxisHelper.center();\n    this._markAttributeContext.getLayoutRadius = () => this._computeLayoutRadius();\n  }\n\n  valueToPosition(angleValue: StringOrNumber | StringOrNumber[], radiusValue: StringOrNumber | StringOrNumber[]) {\n    if (isNil(angleValue) || isNil(radiusValue) || !this.angleAxisHelper || !this.radiusAxisHelper) {\n      return { x: Number.NaN, y: Number.NaN };\n    }\n    const radius = this.radiusAxisHelper.dataToPosition(array(radiusValue));\n    if (radius < 0) {\n      // 'link' 实现还有问题\n      if (this._invalidType === 'break' || this._invalidType === 'link') {\n        return { x: Number.NaN, y: Number.NaN };\n      } else if (this._invalidType === 'zero') {\n        return this.angleAxisHelper.center();\n      }\n    }\n    const angle = this.angleAxisHelper.dataToPosition(array(angleValue));\n\n    // FIXME: 由于存在两个轴，这里的 坐标系转换逻辑会有点尬\n    return this.angleAxisHelper.coordToPoint({ angle, radius });\n  }\n\n  dataToPosition(datum: Datum, checkInViewData?: boolean): IPoint {\n    if (!datum || !this.angleAxisHelper || !this.radiusAxisHelper) {\n      return null;\n    }\n    if (checkInViewData && !this.isDatumInViewData(datum)) {\n      return null;\n    }\n    // FIXME: 由于存在两个轴，这里的 坐标系转换逻辑会有点尬\n    return this.valueToPosition(\n      this.getDatumPositionValues(datum, this._angleField),\n      this.getDatumPositionValues(datum, this._radiusField)\n    );\n  }\n\n  dataToPositionX(datum: Datum): number {\n    return this.dataToPosition(datum)?.x;\n  }\n\n  dataToPositionY(datum: Datum): number {\n    return this.dataToPosition(datum)?.y;\n  }\n\n  dataToPositionZ(datum: Datum): number {\n    return 0;\n  }\n\n  // todo: 待实现\n  positionToData(p: IPolarPoint): any {\n    /* do nothing */\n  }\n  radiusToData(r: number): any {\n    /* do nothing */\n  }\n  angleToData(a: number): any {\n    /* do nothing */\n  }\n\n  getStatisticFields() {\n    const fields: { key: string; operations: StatisticOperations }[] = [];\n    if (this.radiusAxisHelper?.getScale) {\n      this._radiusField.forEach(f => {\n        const result: { key: string; operations: Array<'max' | 'min' | 'values'> } = { key: f, operations: [] };\n        if (isContinuous(this.radiusAxisHelper.getScale(0).type)) {\n          result.operations = ['max', 'min'];\n        } else {\n          result.operations = ['values'];\n        }\n        fields.push(result);\n      });\n    }\n    if (this.angleAxisHelper?.getScale) {\n      this._angleField.forEach(f => {\n        const result: { key: string; operations: Array<'max' | 'min' | 'values'> } = { key: f, operations: [] };\n        if (isContinuous(this.angleAxisHelper.getScale(0).type)) {\n          result.operations = ['max', 'min'];\n        } else {\n          result.operations = ['values'];\n        }\n        fields.push(result);\n      });\n    }\n    return fields;\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    if (isValid(this._spec.outerRadius)) {\n      this._outerRadius = this._spec.outerRadius;\n    }\n    if (isValid(this._spec.radius)) {\n      // 优先使用outerRadius, 但要兼容spec.radius\n      this._outerRadius = this._spec.radius;\n    }\n    if (isValid(this._spec.innerRadius)) {\n      this._innerRadius = this._spec.innerRadius;\n    }\n\n    if (isValid(this._spec.sortDataByAxis)) {\n      this._sortDataByAxis = this._spec.sortDataByAxis === true;\n    }\n  }\n\n  onRadiusAxisHelperUpdate(): void {\n    this.onMarkPositionUpdate();\n  }\n  onAngleAxisHelperUpdate(): void {\n    this.onMarkPositionUpdate();\n  }\n\n  afterInitMark(): void {\n    super.afterInitMark();\n  }\n\n  protected _computeLayoutRadius() {\n    const axisHelper = this._angleAxisHelper || this._radiusAxisHelper;\n\n    if (axisHelper) {\n      return axisHelper.layoutRadius();\n    }\n\n    const { width, height } = this._region.getLayoutRect();\n    return Math.min(width / 2, height / 2);\n  }\n\n  protected initEvent() {\n    super.initEvent();\n    // 通过轴事件来进行排序。轴的domain数据变化在系列的统计数据完成后\n    if (this.sortDataByAxis) {\n      this.event.on(\n        ChartEvent.scaleDomainUpdate,\n        {\n          filter: param => param.model.id === this._angleAxisHelper?.getAxisId()\n        },\n        () => {\n          // 只能排序，不能修改数据，此时已经在数据流的统计流程之后\n          this._sortDataInAxisDomain();\n        }\n      );\n    }\n  }\n\n  _sortDataInAxisDomain() {\n    if (this.getViewData()?.latestData?.length) {\n      sortDataInAxisHelper(this.angleAxisHelper, this._angleField[0], this.getViewData().latestData);\n    }\n  }\n\n  protected getInvalidCheckFields() {\n    const fields: string[] = [];\n\n    if (this.angleAxisHelper.isContinuous) {\n      this._angleField.forEach(f => {\n        fields.push(f);\n      });\n    }\n\n    if (this.radiusAxisHelper.isContinuous) {\n      this._radiusField.forEach(f => {\n        fields.push(f);\n      });\n    }\n    return fields;\n  }\n}\n"]}