{"version":3,"sources":["../src/series/polar/rose-like/rose-like.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EACL,eAAe,EACf,uBAAuB,EACvB,iBAAiB,EACjB,yBAAyB,EAC1B,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAGvC,MAAM,OAAgB,cAA8C,SAAQ,WAAc;IACxF,mBAAmB;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,kBAAkB;QAChB,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC1E,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;QACD,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACrC,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;IAC9C,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,mBAAmB;QACjB,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF","file":"rose-like.js","sourcesContent":["import { array } from '@visactor/vutils';\nimport {\n  STACK_FIELD_END,\n  STACK_FIELD_END_PERCENT,\n  STACK_FIELD_START,\n  STACK_FIELD_START_PERCENT\n} from '../../../constant/data';\nimport { PolarSeries } from '../polar';\nimport type { IRoseLikeSeriesSpec } from './interface';\n\nexport abstract class RoseLikeSeries<T extends IRoseLikeSeriesSpec> extends PolarSeries<T> {\n  getStackGroupFields(): string[] {\n    return this._angleField;\n  }\n\n  getStackValueField() {\n    return array(this._spec.valueField)[0] || array(this._spec.radiusField)[0];\n  }\n\n  getGroupFields() {\n    return this._angleField;\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    // 兼容小组件写法，因为 spec 改造前已经开放了\n    this.setAngleField(this._spec.categoryField || this._spec.angleField);\n    this.setRadiusField(this._spec.valueField || this._spec.radiusField);\n    this._specAngleField = this._angleField.slice();\n    this._specRadiusField = this._radiusField.slice();\n    this.setInnerRadiusField(this._spec.valueField || this._spec.radiusField);\n    if (this.getStack()) {\n      this.setValueFieldToStack();\n    }\n    if (this.getPercent()) {\n      this.setValueFieldToPercent();\n    }\n  }\n\n  setValueFieldToStack(): void {\n    this.setRadiusField(STACK_FIELD_END);\n    this.setInnerRadiusField(STACK_FIELD_START);\n  }\n\n  setValueFieldToPercent(): void {\n    this.setRadiusField(STACK_FIELD_END_PERCENT);\n    this.setInnerRadiusField(STACK_FIELD_START_PERCENT);\n  }\n\n  getDimensionField(): string[] {\n    return this._specAngleField;\n  }\n  getMeasureField(): string[] {\n    return this._specRadiusField;\n  }\n\n  getDefaultShapeType(): string {\n    return 'square';\n  }\n}\n"]}