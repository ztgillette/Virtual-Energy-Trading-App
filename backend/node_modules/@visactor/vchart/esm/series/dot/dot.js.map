{"version":3,"sources":["../src/series/dot/dot.ts"],"names":[],"mappings":"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","file":"dot.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { DEFAULT_DATA_SERIES_FIELD } from '../../constant/data';\nimport { CartesianSeries } from '../cartesian/cartesian';\nimport type { Datum } from '../../typings';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { isValid } from '@visactor/vutils';\nimport type { IGroupMark, IMark, IRectMark, IRuleMark, ISymbolMark, ITextMark } from '../../mark/interface';\nimport { SeriesTypeEnum } from '../interface/type';\nimport { dataViewParser } from '@visactor/vdataset';\nimport { registerDataSetInstanceParser, registerDataSetInstanceTransform } from '../../data/register';\nimport type { IModelEvaluateOption } from '../../model/interface';\nimport { DotSeriesTooltipHelper } from './tooltip-helper';\nimport type { FunctionType, IFillMarkSpec, VisualType } from '../../typings/visual';\nimport type { IDotSeriesSpec } from './interface';\nimport { copyDataView } from '../../data/transforms/copy-data-view';\nimport { objFlat } from '../../data/transforms/obj-flat';\nimport { DEFAULT_GRID_BACKGROUND } from './config';\nimport { ColorOrdinalScale } from '../../scale/color-ordinal-scale';\nimport type { SeriesMarkMap } from '../interface';\nimport { registerSymbolMark } from '../../mark/symbol';\nimport { registerTextMark } from '../../mark/text';\nimport { registerRuleMark } from '../../mark/rule';\nimport { registerRectMark } from '../../mark/rect';\nimport { dotSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { TransformLevel } from '../../data/initialize';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { dot } from '../../theme/builtin/common/series/dot';\n\nexport class DotSeries<T extends IDotSeriesSpec = IDotSeriesSpec> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.dot;\n  type = SeriesTypeEnum.dot;\n\n  static readonly mark: SeriesMarkMap = dotSeriesMark;\n\n  static readonly builtInTheme = { dot };\n\n  private _xDimensionStatisticsDomain: any[];\n\n  // csj-Q: 是否需要把这些属性写成接口？\n  protected _seriesGroupField?: string;\n  getSeriesGroupField() {\n    return this._seriesField;\n  }\n  setSeriesGroupField(field: string) {\n    if (isValid(field)) {\n      this._seriesGroupField = field;\n    }\n  }\n\n  protected _titleField?: string;\n  getTitleField() {\n    return this._titleField;\n  }\n  setTitleField(field: string) {\n    if (isValid(field)) {\n      this._titleField = field;\n    }\n  }\n\n  protected _subTitleField?: string;\n  getSubTitleField() {\n    return this._subTitleField;\n  }\n  setSubTitleField(field: string) {\n    if (isValid(field)) {\n      this._subTitleField = field;\n    }\n  }\n\n  protected _dotTypeField?: string;\n  getDotTypeField() {\n    return this._dotTypeField;\n  }\n  setDotTypeField(field: string) {\n    if (isValid(field)) {\n      this._dotTypeField = field;\n    }\n  }\n\n  protected _highLightSeriesGroup?: string;\n  getHighLightSeriesGroup() {\n    return this._highLightSeriesGroup;\n  }\n  setHighLightSeriesGroup(field: string) {\n    if (isValid(field)) {\n      this._highLightSeriesGroup = field;\n    }\n  }\n\n  protected _gridBackground?: IFillMarkSpec;\n  setGridBackground(gridBackground: IFillMarkSpec) {\n    if (isValid(gridBackground)) {\n      this._gridBackground = gridBackground;\n    }\n  }\n\n  /**\n   * @override\n   */\n  initData(): void {\n    super.initData();\n    this._xDimensionStatisticsDomain = this.getRawData().latestData.map((d: Datum) => d[this._fieldY[0]]);\n\n    // data to dataview\n    registerDataSetInstanceTransform(this._option.dataSet, 'objFlat', objFlat);\n    registerDataSetInstanceTransform(this._option.dataSet, 'copyDataView', copyDataView);\n    registerDataSetInstanceParser(this._option.dataSet, 'dataview', dataViewParser);\n\n    this.getViewData()?.transform(\n      {\n        type: 'objFlat',\n        options: 'dots',\n        level: TransformLevel.dotObjFlat\n      },\n      false\n    );\n  }\n\n  getStatisticFields() {\n    return [{ key: this._fieldY[0], operations: ['values'], customize: this._xDimensionStatisticsDomain }] as {\n      key: string;\n      operations: Array<'max' | 'min' | 'values'>;\n      customize: any[];\n    }[];\n  }\n\n  /**\n   * @override\n   */\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this.setSeriesGroupField(this._spec.seriesGroupField);\n    this.setTitleField(this._spec.titleField);\n    this.setSubTitleField(this._spec.subTitleField);\n    this.setDotTypeField(this._spec.dotTypeField);\n    this.setHighLightSeriesGroup(this._spec.highLightSeriesGroup);\n    this.setGridBackground(mergeSpec(DEFAULT_GRID_BACKGROUND, this._spec.grid?.background || {}));\n  }\n\n  private _clipMark: IGroupMark;\n  private _containerMark: IGroupMark;\n  private _gridBackgroundMark: IRectMark;\n  private _gridMark: IRuleMark;\n  private _dotMark: ISymbolMark;\n  private _titleMark: ITextMark;\n  private _subTitleMark: ITextMark;\n  private _symbolMark: ISymbolMark;\n  initMark(): void {\n    this._clipMark = this._createMark(DotSeries.mark.group) as IGroupMark;\n\n    this._containerMark = this._createMark(DotSeries.mark.group, {\n      parent: this._clipMark,\n      dataView: this.getRawData()\n    }) as IGroupMark;\n\n    this._gridBackgroundMark = this._createMark(DotSeries.mark.gridBackground, {\n      parent: this._containerMark,\n      dataView: this.getRawData()\n    }) as IRectMark;\n\n    this._gridMark = this._createMark(DotSeries.mark.grid, {\n      parent: this._containerMark,\n      dataView: this.getRawData()\n    }) as IRuleMark;\n\n    this._dotMark = this._createMark(DotSeries.mark.dot, {\n      skipBeforeLayouted: false,\n      isSeriesMark: true,\n      parent: this._containerMark\n    }) as ISymbolMark;\n\n    this._titleMark = this._createMark(DotSeries.mark.title, {\n      parent: this._containerMark,\n      dataView: this.getRawData()\n    }) as ITextMark;\n\n    this._subTitleMark = this._createMark(DotSeries.mark.subTitle, {\n      parent: this._containerMark,\n      dataView: this.getRawData()\n    }) as ITextMark;\n\n    this._symbolMark = this._createMark(DotSeries.mark.symbol, {\n      parent: this._containerMark,\n      dataView: this.getRawData()\n    }) as ISymbolMark;\n  }\n\n  initMarkStyle(): void {\n    const clipMark = this._clipMark;\n    if (clipMark) {\n      this.setMarkStyle(\n        clipMark,\n        {\n          x: -this._spec.leftAppendPadding,\n          y: 0,\n          // 本应使用this.getLayoutRect().width, 但这该返回值为0。考虑到横向不需要裁剪，故先采用一个较大值\n          width: 10000,\n          height: this._spec.clipHeight\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n      clipMark.setMarkConfig({ interactive: false, clip: true });\n    }\n\n    const containerMark = this._containerMark;\n    if (containerMark) {\n      this.setMarkStyle(\n        containerMark,\n        {\n          x: this._spec.leftAppendPadding\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n      containerMark.setMarkConfig({ interactive: false });\n    }\n\n    const gridBackgroundMark = this._gridBackgroundMark;\n    if (gridBackgroundMark) {\n      this.setMarkStyle(\n        gridBackgroundMark,\n        {\n          x: this.getRegionRectLeft.bind(this),\n          x1: this.getRegionRectRight.bind(this),\n          y: this.dataToGridBackgroundPositionY.bind(this),\n          y1: this.dataToGridBackgroundPositionY1.bind(this),\n          fill: this._gridBackground.fill,\n          fillOpacity: this.dataToGridBackgroundOpacity.bind(this) as FunctionType<number>\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    const gridMark = this._gridMark;\n    if (gridMark) {\n      this.setMarkStyle(\n        gridMark,\n        {\n          stroke: this.getColorAttribute(),\n          x: this.getRegionRectLeft.bind(this),\n          y: this.dataToPositionY.bind(this),\n          x1: this.getRegionRectRight.bind(this),\n          y1: this.dataToPositionY.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    const dotMark = this._dotMark;\n    if (dotMark) {\n      this.setMarkStyle(\n        dotMark,\n        {\n          x: this.dataToPositionX.bind(this),\n          y: this.dataToPositionY.bind(this),\n          fill: this.getDotColorAttribute(),\n          stroke: this.getDotColorAttribute(),\n          fillOpacity: this.dataToOpacity.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    const titleMark = this._titleMark;\n    if (titleMark) {\n      this.setMarkStyle(\n        titleMark,\n        {\n          fill: this.getColorAttribute(),\n          text: (datum: any) => {\n            return datum[this.getTitleField()];\n          },\n          x: this.getRegionRectLeft.bind(this),\n          y: this.dataToPositionY.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    const subTitleMark = this._subTitleMark;\n    if (subTitleMark) {\n      this.setMarkStyle(\n        subTitleMark,\n        {\n          fill: this.getColorAttribute(),\n          text: (datum: any) => {\n            return datum[this.getSubTitleField()];\n          },\n          x: this.getRegionRectLeft.bind(this),\n          y: this.dataToPositionY.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    const symbolMark = this._symbolMark;\n    if (symbolMark) {\n      this.setMarkStyle(\n        symbolMark,\n        {\n          x: this.getRegionRectLeft.bind(this),\n          y: this.dataToPositionY.bind(this),\n          fill: this.getColorAttribute()\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  dataToGridBackgroundPositionY(datum: Datum): number {\n    if (!this._yAxisHelper) {\n      return Number.NaN;\n    }\n    const { dataToPosition, getBandwidth } = this._yAxisHelper;\n\n    return (\n      dataToPosition(this.getDatumPositionValues(datum, this._fieldY), {\n        bandPosition: this._bandPosition\n      }) -\n      getBandwidth(0) / 2\n    );\n  }\n\n  dataToGridBackgroundPositionY1(datum: Datum): number {\n    if (!this._yAxisHelper) {\n      return Number.NaN;\n    }\n    const { dataToPosition, getBandwidth } = this._yAxisHelper;\n\n    return (\n      dataToPosition(this.getDatumPositionValues(datum, this._fieldY), {\n        bandPosition: this._bandPosition\n      }) +\n      getBandwidth(0) / 2\n    );\n  }\n\n  dataToOpacity(datum: Datum): number {\n    if (!this._xAxisHelper) {\n      return Number.NaN;\n    }\n    const { dataToPosition, getScale } = this._xAxisHelper;\n\n    if (\n      dataToPosition(this.getDatumPositionValues(datum, this._fieldX), {\n        bandPosition: this._bandPosition\n      }) < getScale(0).range()[0] ||\n      dataToPosition(this.getDatumPositionValues(datum, this._fieldX), {\n        bandPosition: this._bandPosition\n      }) > getScale(0).range()[1]\n    ) {\n      return 0;\n    }\n    return this._theme?.dot?.style?.fillOpacity ?? 1;\n  }\n\n  dataToGridBackgroundOpacity(datum: Datum): VisualType<number> {\n    if (datum[this._seriesGroupField] === this._highLightSeriesGroup) {\n      return this._gridBackground.fillOpacity;\n    }\n    return 0;\n  }\n\n  onLayoutEnd() {\n    super.onLayoutEnd();\n    const layoutOffsetX = this._spec?.leftAppendPadding ?? 0;\n    this.setMarkStyle(\n      this._clipMark,\n      {\n        width: this.getLayoutRect().width + layoutOffsetX //clip的数值只能在layoutEnd之后获得\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n  }\n\n  /**\n   * @override\n   * @description 如果用户设置了seriesGroup，则seriesGroup作为颜色映射字段\n   */\n  getDefaultColorDomain() {\n    return this._seriesGroupField\n      ? this.getViewDataStatistics()?.latestData[this._seriesGroupField].values\n      : this._seriesField\n      ? this.getViewDataStatistics()?.latestData[this._seriesField].values\n      : [];\n  }\n\n  /**\n   * @override\n   */\n  // 通用的默认颜色映射 用户设置优先级比这个高，会在setStyle中处理\n  getColorAttribute() {\n    return {\n      scale: this._option.globalScale.getScale('color') ?? this._getDefaultColorScale(),\n      field: this._seriesGroupField ?? this._seriesField ?? DEFAULT_DATA_SERIES_FIELD\n    };\n  }\n\n  /**\n   * @override\n   * @description 对于dot来说，dotType优先级高于seriesGroup，作为颜色映射字段\n   */\n  protected getDotColorScale() {\n    const colorDomain = this._dotTypeField\n      ? this.getViewDataStatistics()?.latestData[this._dotTypeField].values\n      : this._seriesGroupField\n      ? this.getViewDataStatistics()?.latestData[this._seriesGroupField].values\n      : this._seriesField\n      ? this.getViewDataStatistics()?.latestData[this._seriesField].values\n      : [];\n    const colorRange = this._getDataScheme();\n    return new ColorOrdinalScale().domain(colorDomain).range(colorRange);\n  }\n\n  /**\n   * @override\n   */\n  // 通用的默认颜色映射 用户设置优先级比这个高，会在setStyle中处理\n  getDotColorAttribute() {\n    return {\n      scale: this._option.globalScale.getScale('color') ?? this.getDotColorScale(),\n      field: this._dotTypeField ?? this._seriesGroupField ?? this._seriesField ?? DEFAULT_DATA_SERIES_FIELD\n    };\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new DotSeriesTooltipHelper(this);\n    this._dotMark && this._tooltipHelper.activeTriggerSet.mark.add(this._dotMark);\n  }\n\n  /**\n   * @description onEvaluateEnd之后可以拿到canvas element，将滚动条挂载到canvas element上\n   */\n  onEvaluateEnd(ctx: IModelEvaluateOption): void {\n    super.onEvaluateEnd(ctx);\n  }\n\n  protected onMarkTreePositionUpdate(marks: IMark[]): void {\n    marks.forEach(m => {\n      m.commit(false, true);\n    });\n  }\n\n  getDotData() {\n    return this._dotMark?.getData();\n  }\n\n  protected _getDataIdKey() {\n    // dot 系列没有动画，可以使用默认的 dataKey\n    return undefined as any;\n  }\n\n  getStackValueField(): string {\n    return null;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._dotMark];\n  }\n}\n\nexport const registerDotSeries = () => {\n  registerSymbolMark();\n  registerRuleMark();\n  registerRectMark();\n  registerTextMark();\n\n  Factory.registerSeries(DotSeries.type, DotSeries);\n};\n"]}