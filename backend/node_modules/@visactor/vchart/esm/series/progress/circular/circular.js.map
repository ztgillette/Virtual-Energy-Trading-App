{"version":3,"sources":["../src/series/progress/circular/circular.ts"],"names":[],"mappings":"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","file":"circular.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { BandScale } from '@visactor/vscale';\nimport type { Datum } from '../../../typings';\nimport { isValidNumber } from '@visactor/vutils';\nimport type { SeriesMarkMap } from '../../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../../interface/type';\nimport { animationConfig, shouldMarkDoMorph, userAnimationConfig } from '../../../animation/utils';\nimport type { ICircularProgressSeriesSpec } from './interface';\nimport { ProgressLikeSeries } from '../../polar/progress-like/progress-like';\nimport type { IStateAnimateSpec } from '../../../animation/spec';\nimport { registerArcMark } from '../../../mark/arc';\nimport { circularProgressSeriesMark } from './constant';\nimport { STACK_FIELD_END, STACK_FIELD_START } from '../../../constant/data';\nimport { AttributeLevel } from '../../../constant/attribute';\nimport { Factory } from '../../../core/factory';\nimport { registerProgressLikeAnimation } from '../../polar/progress-like';\nimport { registerFadeInOutAnimation } from '../../../animation/config';\nimport type { IArcMark, IMark } from '../../../mark/interface';\nimport { CircularProgressSeriesSpecTransformer } from './circular-transformer';\nimport { registerPolarLinearAxis, registerPolarBandAxis } from '../../../component/axis/polar';\nimport { circularProgress } from '../../../theme/builtin/common/series/circular-progress';\n\nexport class CircularProgressSeries<\n  T extends ICircularProgressSeriesSpec = ICircularProgressSeriesSpec\n> extends ProgressLikeSeries<T> {\n  static readonly type: string = SeriesTypeEnum.circularProgress;\n  type = SeriesTypeEnum.circularProgress;\n\n  static readonly mark: SeriesMarkMap = circularProgressSeriesMark;\n  static readonly builtInTheme = { circularProgress };\n  static readonly transformerConstructor = CircularProgressSeriesSpecTransformer as any;\n  readonly transformerConstructor = CircularProgressSeriesSpecTransformer;\n\n  private _progressMark: IArcMark | null = null;\n  private _trackMark: IArcMark | null = null;\n\n  getStackGroupFields(): string[] {\n    return this.getGroupFields();\n  }\n\n  getGroupFields() {\n    return this._radiusField;\n  }\n\n  initMark(): void {\n    super.initMark();\n    this._initTrackMark();\n    this._initProgressMark();\n  }\n\n  initMarkStyle(): void {\n    super.initMarkStyle();\n    this._initTrackMarkStyle();\n    this._initProgressMarkStyle();\n  }\n\n  private _initProgressMark() {\n    this._progressMark = this._createMark(\n      CircularProgressSeries.mark.progress,\n      {\n        parent: this._arcGroupMark,\n        isSeriesMark: true\n      },\n      {\n        morph: shouldMarkDoMorph(this._spec, SeriesMarkNameEnum.progress)\n      }\n    ) as IArcMark;\n    return this._progressMark;\n  }\n\n  private _initProgressMarkStyle() {\n    const progressMark = this._progressMark;\n    if (progressMark) {\n      this.setMarkStyle(\n        progressMark,\n        {\n          x: () => this.angleAxisHelper.center().x,\n          y: () => this.angleAxisHelper.center().y,\n          startAngle: this._getAngleValueStart,\n          endAngle: this._getAngleValueEnd,\n          innerRadius: this._getRadiusValueStart,\n          outerRadius: this._getRadiusValueEnd,\n          cap: this._spec.roundCap ?? false,\n          boundsMode: 'imprecise',\n          cornerRadius: this._spec.cornerRadius,\n          fill: this.getColorAttribute(),\n          zIndex: 200,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          // forceShowCap 是内部属性，不在接口中暴露\n          forceShowCap: true\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  getInteractionTriggers() {\n    const marks: IMark[] = [];\n\n    if (this._trackMark) {\n      marks.push(this._trackMark);\n    }\n\n    if (this._progressMark) {\n      marks.push(this._progressMark);\n    }\n    return this._parseInteractionConfig(marks);\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._progressMark && this._tooltipHelper.activeTriggerSet.mark.add(this._progressMark);\n  }\n\n  private _initTrackMark() {\n    this._trackMark = this._createMark(CircularProgressSeries.mark.track, {\n      parent: this._arcGroupMark\n    }) as IArcMark;\n\n    // 背景条不参与morphing 动画\n    this._trackMark.setMarkConfig({\n      morph: false,\n      morphKey: null,\n      morphElementKey: null\n    });\n    return this._trackMark;\n  }\n\n  private _initTrackMarkStyle() {\n    const trackMark = this._trackMark;\n    if (trackMark) {\n      this.setMarkStyle(\n        trackMark,\n        {\n          visible: (datum: Datum) => {\n            const scale = this.angleAxisHelper.getScale(0);\n            const range = scale.range();\n            const min = Math.min(range[0], range[range.length - 1]);\n            const startValue = this._getAngleValueStartWithoutMask(datum);\n            // 堆叠情况只显示第一组的背景\n            return Math.abs(startValue - min) <= 1e-14;\n          },\n          x: () => this.angleAxisHelper.center().x,\n          y: () => this.angleAxisHelper.center().y,\n          startAngle: () => {\n            const fieldName = this.getStack() ? STACK_FIELD_START : this._angleField[0];\n            const scale = this.angleAxisHelper.getScale(0);\n            const domain = scale.domain();\n            return this._getAngleValueStart({ [fieldName]: domain[0] });\n          },\n          endAngle: () => {\n            const fieldName = this.getStack() ? STACK_FIELD_END : this._angleField[0];\n            const scale = this.angleAxisHelper.getScale(0);\n            const domain = scale.domain();\n            return this._getAngleValueEnd({ [fieldName]: domain[domain.length - 1] });\n          },\n          innerRadius: this._getRadiusValueStart,\n          outerRadius: this._getRadiusValueEnd,\n          cornerRadius: this._spec.cornerRadius,\n          fill: this.getColorAttribute(),\n          zIndex: 100\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  protected _getRadiusValueStart = (datum: Datum) => {\n    if (this.getGroupFields().length > 1) {\n      const value = this.radiusAxisHelper.dataToPosition(this.getDatumPositionValues(datum, this.getGroupFields()));\n      if (isValidNumber(value)) {\n        return value;\n      }\n    }\n    return this.radiusAxisHelper.dataToPosition([datum[this._radiusField[0]]]);\n  };\n\n  protected _getRadiusValueEnd = (datum: Datum) => {\n    if (this.getGroupFields().length > 1) {\n      const value =\n        this.radiusAxisHelper.dataToPosition(this.getDatumPositionValues(datum, this.getGroupFields())) +\n        this.radiusAxisHelper.getBandwidth?.(this._groups ? this._groups.fields.length - 1 : 0);\n      if (isValidNumber(value)) {\n        return value;\n      }\n    }\n    return (\n      this.radiusAxisHelper.dataToPosition([datum[this._radiusField[0]]]) +\n      (this.radiusAxisHelper.getScale(0) as BandScale).step()\n    );\n  };\n\n  initAnimation() {\n    const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<any>)?.preset;\n\n    this._progressMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('circularProgress')?.({ startAngle: this._startAngle }, appearPreset),\n        userAnimationConfig(SeriesMarkNameEnum.progress, this._spec, this._markAttributeContext)\n      )\n    );\n\n    this._trackMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('fadeInOut')?.(),\n        userAnimationConfig(SeriesMarkNameEnum.track, this._spec, this._markAttributeContext)\n      )\n    );\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._progressMark];\n  }\n}\n\nexport const registerCircularProgressSeries = () => {\n  Factory.registerSeries(CircularProgressSeries.type, CircularProgressSeries);\n  registerArcMark();\n  registerProgressLikeAnimation();\n  registerFadeInOutAnimation();\n  registerPolarBandAxis();\n  registerPolarLinearAxis();\n};\n"]}