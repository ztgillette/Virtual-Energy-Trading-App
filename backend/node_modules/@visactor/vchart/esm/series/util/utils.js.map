{"version":3,"sources":["../src/series/util/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGnD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAIhD,MAAM,UAAU,iBAAiB,CAAC,IAAY;IAC5C,OAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,gBAAgB,CAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnH,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,UAA8C,EAAE,KAAa,EAAE,QAAiB;IACnH,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG,WAAW,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5E,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC5B,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAa,EAAE,MAAa,EAAE,EAAE;YAC7C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAa,EAAE,MAAa,EAAE,EAAE;YAC7C,OAAO,CACL,CAAE,KAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAI,KAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/F,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CAAC;QACJ,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,MAAwB;IAE9D,MAAM,SAAS,GAAG,CAAC,KAAU,EAAE,EAAE;;QAC/B,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3F,MAAM,UAAU,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,UAAU,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAChF,MAAM,KAAK,GAAG,CAAC,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,qDAAI,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAE5D,OAAO,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC;IACF,MAAM,SAAS,GAAG,GAAG,EAAE;;QACrB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAChF,OAAO,MAAA,CAAC,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,qDAAI,mCAAI,EAAE,CAAC,CAAC,MAAM,mCAAI,CAAC,CAAC;IAC/C,CAAC,CAAC;IACF,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;AAClC,CAAC","file":"utils.js","sourcesContent":["import type { IAxisHelper as CartesianHelper } from '../../component/axis/cartesian/interface/common';\nimport { SeriesTypeEnum } from '../interface/type';\nimport type { Datum } from '../../typings';\nimport type { IOrdinalScale } from '@visactor/vscale';\nimport { isContinuous } from '@visactor/vscale';\nimport type { IPolarAxisHelper } from '../../component/axis';\nimport type { ICartesianSeries } from '../interface';\n\nexport function isPolarAxisSeries(type: string) {\n  return ([SeriesTypeEnum.rose, SeriesTypeEnum.radar, SeriesTypeEnum.circularProgress] as string[]).includes(type);\n}\n\nexport function sortDataInAxisHelper(axisHelper: CartesianHelper | IPolarAxisHelper, field: string, dataList: Datum[]) {\n  const scale = axisHelper.getScale(0);\n  const isRevert = 'isInverse' in axisHelper ? axisHelper.isInverse() : false;\n  if (isContinuous(scale.type)) {\n    dataList.sort((datumA: Datum, datumB: Datum) => {\n      return (datumA[field] - datumB[field]) * (isRevert ? -1 : 1);\n    });\n  } else {\n    dataList.sort((datumA: Datum, datumB: Datum) => {\n      return (\n        ((scale as IOrdinalScale).index(datumA[field]) - (scale as IOrdinalScale).index(datumB[field])) *\n        (isRevert ? -1 : 1)\n      );\n    });\n  }\n}\n\nexport function getGroupAnimationParams(series: ICartesianSeries) {\n  // 分组数据的 dataIndex 应该与轴顺序一致，而非 data[DEFAULT_DATA_INDEX] 顺序\n  const dataIndex = (datum: any) => {\n    const indexField = series.direction === 'horizontal' ? series.fieldY[0] : series.fieldX[0];\n    const indexValue = datum?.[indexField];\n    const scale = series.direction === 'horizontal' ? series.scaleY : series.scaleX;\n    const index = (scale?.domain?.() ?? []).indexOf(indexValue);\n    // 不应该出现xIndex === -1 || undefined的情况\n    return index || 0;\n  };\n  const dataCount = () => {\n    const scale = series.direction === 'horizontal' ? series.scaleY : series.scaleX;\n    return (scale?.domain?.() ?? []).length ?? 0;\n  };\n  return { dataIndex, dataCount };\n}\n"]}