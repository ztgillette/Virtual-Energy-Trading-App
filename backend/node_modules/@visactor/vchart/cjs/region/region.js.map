{"version":3,"sources":["../src/region/region.ts"],"names":[],"mappings":"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","file":"region.js","sourcesContent":["// eslint-disable-next-line no-duplicate-imports\nimport { isEmpty, isEqual, array, isValid } from '@visactor/vutils';\nimport { MarkTypeEnum } from '../mark/interface/type';\nimport type { ISeries } from '../series/interface';\nimport type { IModelOption } from '../model/interface';\nimport type { CoordinateType } from '../typings/coordinate';\nimport type { IGeoRegionSpec, IRegion, IRegionSpec, IRegionSpecInfo } from './interface';\nimport { ChartEvent } from '../constant/event';\nimport { LayoutZIndex } from '../constant/layout';\nimport { AttributeLevel } from '../constant/attribute';\nimport type { ILayoutType, StringOrNumber } from '../typings';\nimport { LayoutModel } from '../model/layout-model';\nimport { RegionSpecTransformer } from './region-transformer';\nimport type { IGroupMark, IRectMark } from '../mark/interface/mark';\nimport type { IGroup } from '@visactor/vrender-core';\n\nexport class Region<T extends IRegionSpec = IRegionSpec> extends LayoutModel<T> implements IRegion {\n  static type = 'region';\n  static readonly transformerConstructor = RegionSpecTransformer;\n  readonly transformerConstructor = RegionSpecTransformer as any;\n  readonly modelType: string = 'region';\n  static specKey = 'region';\n  specKey: string = 'region';\n\n  type = Region.type;\n  protected _series: ISeries[] = [];\n  layoutType: ILayoutType = 'region';\n  layoutZIndex: number = LayoutZIndex.Region;\n\n  declare getSpecInfo: () => IRegionSpecInfo;\n\n  getMaxWidth() {\n    return this._layout.maxWidth;\n  }\n  setMaxWidth(value: number) {\n    this._layout.maxWidth = value;\n  }\n\n  getMaxHeight() {\n    return this._layout.maxHeight;\n  }\n  setMaxHeight(value: number) {\n    this._layout.maxHeight = value;\n  }\n\n  protected _groupMark!: IGroupMark;\n  getGroupMark() {\n    return this._groupMark;\n  }\n\n  protected _interactionMark!: IGroupMark;\n  getInteractionMark() {\n    return this._interactionMark;\n  }\n\n  getStackInverse() {\n    return this._spec.stackInverse === true;\n  }\n\n  getStackSort() {\n    return this._spec.stackSort === true;\n  }\n\n  protected _backgroundMark?: IRectMark;\n  protected _foregroundMark?: IRectMark;\n\n  constructor(spec: T, ctx: IModelOption) {\n    super(spec, ctx);\n    this.userId = spec.id;\n    this.coordinate = spec.coordinate ?? 'cartesian';\n  }\n\n  protected _getClipDefaultValue() {\n    const chartSpec = this._option.getChart().getSpec();\n    const hasDataZoom = (chartSpec as any).dataZoom?.some?.((entry: any) => {\n      const filterMode = entry.filterMode ?? 'filter';\n      return filterMode === 'axis';\n    });\n    const hasScrollBar = (chartSpec as any).scrollBar?.some?.((entry: any) => {\n      const filterMode = entry.filterMode ?? 'axis';\n      return filterMode === 'axis';\n    });\n\n    return hasDataZoom || hasScrollBar ? true : this._layout.layoutClip;\n  }\n\n  created(): void {\n    this.initLayout();\n    super.created();\n    const clip = this._spec.clip ?? this._getClipDefaultValue();\n    this._groupMark = this._createGroupMark('regionGroup', this.userId, this.layoutZIndex);\n\n    if ((this._spec as IGeoRegionSpec).roam) {\n      this._groupMark.setMarkConfig({ interactive: true });\n    }\n\n    // 交互层\n    this._interactionMark = this._createGroupMark(\n      'regionInteractionGroup',\n      (this.userId ?? this.type) + '_interaction',\n      LayoutZIndex.Interaction\n    );\n\n    // hack: region 的样式不能设置在groupMark上，因为groupMark目前没有计算dirtyBound，会导致拖影问题\n    if (!isEmpty(this._spec.style)) {\n      this._backgroundMark = this._createMark(\n        { type: MarkTypeEnum.rect, name: 'regionBackground' },\n        {\n          parent: this._groupMark\n        }\n      ) as IRectMark;\n      if (clip) {\n        this._foregroundMark = this._createMark(\n          { type: MarkTypeEnum.rect, name: 'regionForeground' },\n          {\n            parent: this._groupMark\n          }\n        ) as IRectMark;\n      }\n      [this._backgroundMark, this._foregroundMark].forEach(mark => {\n        if (mark) {\n          mark.created();\n          this.setMarkStyle(\n            mark,\n            {\n              width: () => this.getLayoutRect().width,\n              height: () => this.getLayoutRect().height\n            },\n            'normal',\n            AttributeLevel.Built_In\n          );\n          this._groupMark.addMark(mark);\n        }\n      });\n      this._backgroundMark && this._backgroundMark.setMarkConfig({ zIndex: LayoutZIndex.SeriesGroup - 1 });\n      this._foregroundMark && this._foregroundMark.setMarkConfig({ zIndex: LayoutZIndex.Mark + 1 });\n    }\n  }\n\n  private _createGroupMark(name: string, userId: StringOrNumber, zIndex: number) {\n    const groupMark = this._createMark({ type: MarkTypeEnum.group, name }) as IGroupMark;\n    groupMark.setUserId(userId);\n    groupMark.setMarkConfig({ zIndex });\n    const clip = this._spec.clip ?? this._getClipDefaultValue();\n    this.setMarkStyle(\n      groupMark,\n      {\n        x: () => this.getLayoutStartPoint().x,\n        y: () => this.getLayoutStartPoint().y,\n        width: () => this.getLayoutRect().width,\n        height: () => this.getLayoutRect().height,\n        clip\n      },\n      'normal',\n      AttributeLevel.Built_In\n    );\n    this.setMarkStyle(\n      groupMark,\n      {\n        cornerRadius: this._spec.style?.cornerRadius\n      },\n      'normal',\n      AttributeLevel.User_Mark\n    );\n\n    this._marks.addMark(groupMark);\n    return groupMark;\n  }\n\n  init(option: any) {\n    super.init(option);\n    this.initMark();\n    this.initSeriesDataflow();\n  }\n  initMark() {\n    this._initBackgroundMarkStyle();\n    this._initForegroundMarkStyle();\n  }\n\n  protected _initBackgroundMarkStyle() {\n    if (this._backgroundMark) {\n      this.setMarkStyle(\n        this._backgroundMark,\n        {\n          fillOpacity: this._spec.style?.fill ? 1 : 0,\n          ...this._spec.style\n        },\n        'normal',\n        AttributeLevel.User_Mark\n      );\n      if (this._spec.clip ?? this._getClipDefaultValue()) {\n        this.setMarkStyle(\n          this._backgroundMark,\n          {\n            strokeOpacity: 0\n          },\n          'normal',\n          AttributeLevel.Built_In\n        );\n      }\n    }\n  }\n\n  protected _initForegroundMarkStyle() {\n    if (this._foregroundMark) {\n      this.setMarkStyle(\n        this._foregroundMark,\n        {\n          ...this._spec.style,\n          fillOpacity: 0,\n          pickable: false\n        },\n        'normal',\n        AttributeLevel.User_Mark\n      );\n    }\n  }\n\n  _compareSpec(spec: T, prevSpec: T) {\n    const result = super._compareSpec(spec, prevSpec);\n    if (!isEqual(prevSpec?.style, spec?.style)) {\n      result.reMake = true;\n    }\n    return result;\n  }\n\n  reInit(spec?: T) {\n    super.reInit(spec);\n    this._initBackgroundMarkStyle();\n    this._initForegroundMarkStyle();\n  }\n\n  addSeries(s: ISeries) {\n    if (!s) {\n      return;\n    }\n    if (!this._series.includes(s)) {\n      this._series.push(s);\n    }\n  }\n\n  removeSeries(s: ISeries) {\n    if (!s) {\n      return;\n    }\n    const index = this._series.findIndex(s_ => s_ === s);\n    if (index >= 0) {\n      this._series.splice(index, 1);\n    }\n  }\n\n  getSeries(\n    opt: {\n      name?: string;\n      userId?: StringOrNumber | StringOrNumber[];\n      specIndex?: number | number[];\n      id?: StringOrNumber;\n      type?: string;\n      coordinateType?: CoordinateType;\n      dataName?: string;\n    } = {}\n  ): ISeries[] {\n    return this._series.filter(\n      s =>\n        (opt.name ? s?.name === opt.name : true) &&\n        (opt.userId ? array(opt.userId).includes(s.userId) : true) &&\n        (isValid(opt.specIndex) ? array(opt.specIndex).includes(s.getSpecIndex()) : true) &&\n        (opt.id ? s.id === opt.id : true) &&\n        (opt.type ? s.type === opt.type : true) &&\n        (opt.coordinateType ? s.coordinate === opt.coordinateType : true) &&\n        (opt.dataName ? s.getRawData?.()?.name === opt.dataName : true)\n    );\n  }\n\n  getSeriesInName(name: string): ISeries {\n    return this.getSeries({ name })[0];\n  }\n  getSeriesInUserId(userId: string): ISeries {\n    return this.getSeries({ userId })[0];\n  }\n  getSeriesInId(id: number): ISeries {\n    return this.getSeries({ id })[0];\n  }\n  getSeriesInType(type: string): ISeries[] {\n    return this.getSeries({ type });\n  }\n  getSeriesInCoordinateType(coordinateType: CoordinateType): ISeries[] {\n    return this.getSeries({ coordinateType });\n  }\n  getSeriesInDataName(dataName: string): ISeries[] {\n    return this.getSeries({ dataName });\n  }\n\n  initSeriesDataflow() {\n    const viewDataFilters = this._series.map(s => s.getViewDataFilter() ?? s.getViewData()).filter(v => !!v);\n    this._option.dataSet.multipleDataViewAddListener(viewDataFilters, 'change', this.seriesDataFilterOver);\n  }\n\n  seriesDataFilterOver = () => {\n    this.event.emit(ChartEvent.regionSeriesDataFilterOver, { model: this, chart: this.getChart() });\n    this._series.forEach(s => {\n      if (s.getViewDataFilter()) {\n        s.reTransformViewData();\n      }\n    });\n  };\n\n  release() {\n    super.release();\n    this._series = [];\n  }\n\n  compileMarks(group?: IGroup) {\n    this.getMarks().forEach(m => {\n      m.compile({ group, context: { model: this } });\n      // m.layout(\n      //   (group: IVGrammarGroupMark, children: IMark[], parentLayoutBounds: IBoundsLike, options?: ILayoutOptions) => {\n      //     // console.log('region mark layout');\n      //   }\n      // );\n    });\n  }\n\n  compile() {\n    this.compileMarks();\n  }\n\n  getBoundsInRect = () => {\n    return {\n      x1: this._layout.getLayoutStartPoint().x,\n      y1: this._layout.getLayoutStartPoint().y,\n      x2: this._layout.getLayoutStartPoint().x + this._layout.getLayoutRect().width,\n      y2: this._layout.getLayoutStartPoint().y + this._layout.getLayoutRect().height\n    };\n  };\n\n  onLayoutEnd(): void {\n    this._series.forEach(s => s.onLayoutEnd());\n    super.onLayoutEnd();\n  }\n}\n"]}