{"version":3,"sources":["../src/util/image.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,mCAAgC;AAKhC,SAAgB,UAAU,CAAC,OAAe,QAAQ,EAAE,GAAW;IAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACzC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9C,CAAC;AAND,gCAMC;AAED,SAAgB,wBAAwB,CAAC,CAAkB;IAEzD,OAAO,IAAI,OAAO,CAAC,CAAC,CAAsB,EAAE,EAAE;QAC5C,CAAC,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE;YAChC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACnB,CAAC,CAAC,MAAM,CAAC,MAAgB,CAAC,CAAC;YAC7B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,4DAWC;AAED,SAAsB,gBAAgB,CAAC,CAAsC,EAAE,GAAqB;;;QAClG,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,EAAE,CAAC;SACX;QACD,IAAI;YACF,IAAI,eAAe,KAAK,SAAS,IAAI,CAAC,YAAY,eAAe,EAAE;gBACjE,OAAO,wBAAwB,CAAC,CAAC,CAAC,CAAC;aACpC;SACF;QAAC,OAAO,MAAM,EAAE;YACf,CAAC,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,mCAAI,aAAK,CAAC,CAAC,4BAA4B,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC1E;QACD,OAA2B,CAAE,CAAC,SAAS,EAAE,CAAC;;CAC3C;AAZD,4CAYC","file":"image.js","sourcesContent":["import type { utilFunctionCtx } from '../typings/params';\nimport { error } from './debug';\n/**\n * @description 图片导出相关接口\n */\n\nexport function URLToImage(name: string = 'vchart', url: string) {\n  const link = document.createElement('a');\n  link.setAttribute('href', url);\n  link.setAttribute('target', '_blank');\n  link.setAttribute('download', `${name}.png`);\n  link.dispatchEvent(new MouseEvent('click'));\n}\n\nexport function OffscreenCanvasToDataURL(c: OffscreenCanvas) {\n  // eslint-disable-next-line promise/param-names\n  return new Promise((r: (s: string) => void) => {\n    c.convertToBlob().then((b: any) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(b);\n      reader.onload = () => {\n        r(reader.result as string);\n      };\n    });\n  });\n}\n\nexport async function getCanvasDataURL(c: HTMLCanvasElement | OffscreenCanvas, ctx?: utilFunctionCtx) {\n  if (!c) {\n    return '';\n  }\n  try {\n    if (OffscreenCanvas !== undefined && c instanceof OffscreenCanvas) {\n      return OffscreenCanvasToDataURL(c);\n    }\n  } catch (_error) {\n    (ctx?.onError ?? error)(`getCanvasDataURL error : ${_error.toString()}`);\n  }\n  return (<HTMLCanvasElement>c).toDataURL();\n}\n"]}