{"version":3,"sources":["../src/util/mark.ts"],"names":[],"mappings":";;;AAIO,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAE,EAAE;IAC/C,OAAO,IAAI,WAAsB,IAAI,IAAI,WAAsB,CAAC;AAClE,CAAC,CAAC;AAFW,QAAA,gBAAgB,oBAE3B;AAEK,MAAM,iBAAiB,GAAG,CAAC,CAAe,EAAE,EAAE;IACnD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;QACpB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;IACrC,IAAI,IAAA,wBAAgB,EAAC,QAAQ,CAAC,EAAE;QAC9B,OAAO,IAAI,CAAC;KACb;IAED,OAAO,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC;AAXW,QAAA,iBAAiB,qBAW5B;AAEK,MAAM,eAAe,GAAG,CAAC,SAAmB,EAAE,MAAgB,EAAE,EAAE;IACvE,IAAI,CAAC,GAAG,MAAM,CAAC;IAEf,OAAO,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,MAAM,KAAI,CAAC,CAAC,MAAM,KAAK,SAAS,EAAE;QAC1C,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QAEb,IAAK,CAAkB,CAAC,OAAO,EAAE;YAC/B,OAAO,CAAC,CAAC;SACV;KACF;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAZW,QAAA,eAAe,mBAY1B;AAEK,MAAM,0BAA0B,GAAG,CAAC,CAAe,EAAE,QAAa,EAAE,EAAE;IAE3E,MAAM,SAAS,GAAwB,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7D,MAAM,SAAS,GAAwB,EAAE,CAAC;IAC1C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAClC,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpC,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;SAChC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAXW,QAAA,0BAA0B,8BAWrC","file":"mark.js","sourcesContent":["import type { IGraphic } from '@visactor/vrender-core';\nimport { MarkTypeEnum } from '../mark/interface';\nimport type { IMarkGraphic } from '../mark/interface/common';\n\nexport const isCollectionMark = (type: string) => {\n  return type === MarkTypeEnum.line || type === MarkTypeEnum.area;\n};\n\nexport const getDatumOfGraphic = (g: IMarkGraphic) => {\n  if (!g || !g.context) {\n    return null;\n  }\n\n  const { data, markType } = g.context;\n  if (isCollectionMark(markType)) {\n    return data;\n  }\n\n  return data?.[0];\n};\n\nexport const findMarkGraphic = (rootGroup: IGraphic, target: IGraphic) => {\n  let g = target;\n\n  while (g?.parent && g.parent !== rootGroup) {\n    g = g.parent;\n\n    if ((g as IMarkGraphic).context) {\n      return g;\n    }\n  }\n\n  return null;\n};\n\nexport const getDiffAttributesOfGraphic = (g: IMarkGraphic, newAttrs: any) => {\n  // diff一下，获取差异的属性\n  const prevAttrs: Record<string, any> = g.getAttributes(true);\n  const diffAttrs: Record<string, any> = {};\n  Object.keys(newAttrs).forEach(key => {\n    if (prevAttrs[key] !== newAttrs[key]) {\n      diffAttrs[key] = newAttrs[key];\n    }\n  });\n\n  return diffAttrs;\n};\n"]}