{"version":3,"sources":["../src/util/theme/merge-theme.ts"],"names":[],"mappings":";;;AAEA,6CAAyC;AAEzC,wDAAqF;AAIrF,iEAAuD;AACvD,gDAA6C;AAE7C,SAAgB,UAAU,CAAC,MAAqB,EAAE,GAAG,OAAwB;IAC3E,OAAO,IAAA,4BAAS,EAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACzF,CAAC;AAFD,gCAEC;AAED,SAAS,qBAAqB,CAAC,KAAqB;;IAClD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAGD,MAAM,WAAW,GAAG,2BAA2B,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAEnE,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;QAC9B,WAAW;QACX,KAAK,EAAE,MAAA,KAAK,CAAC,KAAK,mCAAI,EAAE;QACxB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC;KACrB,CAAC,CAAC;AACxB,CAAC;AAGD,SAAgB,2BAA2B,CAAC,WAAsC;IAChF,IAAI,WAAW,EAAE;QACf,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAoB,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YAC/E,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC,GAAG,CAAC,GAAG,IAAA,2CAAoC,EAAC,KAAK,CAAC,CAAC;YAC1D,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAuB,CAAC,CAAC;KAC7B;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AATD,kEASC;AAGD,SAAgB,2BAA2B,CACzC,WAAgB,EAChB,UAAkB,EAClB,QAAoC;IAEpC,MAAM,iBAAiB,GAAG,iBAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;IAE/D,IAAI,CAAC,iBAAiB,EAAE;QACtB,OAAO,WAAW,CAAC;KACpB;IACD,MAAM,QAAQ,GAAQ,EAAE,CAAC;IACzB,MAAM,CAAC,MAAM,CAAkB,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;QAC3E,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAA,4BAAS,EAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,IAAA,cAAK,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,IAAI,CAAC,CAAC,CAAC;IACtH,CAAC,CAAC,CAAC;IACH,uCACK,WAAW,GACX,QAAQ,EACX;AACJ,CAAC;AAlBD,kEAkBC","file":"merge-theme.js","sourcesContent":["import type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array } from '@visactor/vutils';\nimport type { IGlobalMarkThemeByName, IGlobalMarkThemeByType, ITheme } from '../../theme';\nimport { transformColorSchemeToStandardStruct } from '../../theme/color-scheme/util';\nimport type { IThemeColorScheme } from '../../theme/color-scheme/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ISeriesMarkInfo } from '../../series/interface/common';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { Factory } from '../../core/factory';\n\nexport function mergeTheme(target: Maybe<ITheme>, ...sources: Maybe<ITheme>[]): Maybe<ITheme> {\n  return mergeSpec(transformThemeToMerge(target), ...sources.map(transformThemeToMerge));\n}\n\nfunction transformThemeToMerge(theme?: Maybe<ITheme>): Maybe<ITheme> {\n  if (!theme) {\n    return theme;\n  }\n\n  // 将色板转化为标准形式\n  const colorScheme = transformColorSchemeToMerge(theme.colorScheme);\n\n  return Object.assign({}, theme, {\n    colorScheme,\n    token: theme.token ?? {},\n    series: Object.assign({}, theme.series)\n  } as Partial<ITheme>);\n}\n\n/** 将色板转化为标准形式 */\nexport function transformColorSchemeToMerge(colorScheme?: Maybe<IThemeColorScheme>): Maybe<IThemeColorScheme> {\n  if (colorScheme) {\n    colorScheme = Object.keys(colorScheme).reduce<IThemeColorScheme>((scheme, key) => {\n      const value = colorScheme[key];\n      scheme[key] = transformColorSchemeToStandardStruct(value);\n      return scheme;\n    }, {} as IThemeColorScheme);\n  }\n  return colorScheme;\n}\n\n/** 将全局 mark 主题 merge 进系列主题 */\nexport function transformSeriesThemeToMerge(\n  seriesTheme: any,\n  seriesType: string,\n  getTheme: (...keys: string[]) => any\n): any {\n  const seriesMarkInfoMap = Factory.getSeriesMarkMap(seriesType);\n\n  if (!seriesMarkInfoMap) {\n    return seriesTheme;\n  }\n  const newTheme: any = {};\n  Object.values<ISeriesMarkInfo>(seriesMarkInfoMap).forEach(({ type, name }) => {\n    newTheme[name] = mergeSpec({}, getTheme('mark', array(type)[0]), getTheme('markByName', name), seriesTheme?.[name]);\n  });\n  return {\n    ...seriesTheme,\n    ...newTheme\n  };\n}\n"]}