{"version":3,"sources":["../src/util/debug.ts"],"names":[],"mappings":";;;AAAA,6CAAsD;AAE/C,MAAM,GAAG,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;IACjD,IAAI,CAAC,cAAM,CAAC,MAAM,EAAE;QAClB,OAAO,eAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;KACnE;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AALW,QAAA,GAAG,OAKd;AAEK,MAAM,IAAI,GAAG,CAAC,GAAW,EAAE,MAAY,EAAE,EAAE;IAChD,IAAI,IAAA,mBAAU,EAAC,cAAM,CAAC,WAAW,CAAC,EAAE;QAClC,cAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;KAC5C;IACD,IAAI,MAAM,EAAE;QACV,OAAO,eAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,kBAAkB,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;KACnE;IACD,OAAO,eAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC;AAC5D,CAAC,CAAC;AARW,QAAA,IAAI,QAQf;AAEK,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,MAAY,EAAE,GAAW,EAAE,EAAE;IAC9D,IAAI,cAAM,CAAC,MAAM,EAAE;QACjB,OAAO;KACR;IACD,IAAI,IAAA,mBAAU,EAAC,cAAM,CAAC,YAAY,CAAC,EAAE;QACnC,cAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO;KACR;IACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC;AATW,QAAA,KAAK,SAShB;AAEW,QAAA,MAAM,GAAG;IACpB,MAAM,EAAE,KAAK;IACb,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;CACE,CAAC","file":"debug.js","sourcesContent":["import { Logger, isFunction } from '@visactor/vutils';\n\nexport const log = (msg: string, ...args: any[]) => {\n  if (!config.silent) {\n    return Logger.getInstance().info(`[VChart log]: ${msg}`, ...args);\n  }\n  return null;\n};\n\nexport const warn = (msg: string, detail?: any) => {\n  if (isFunction(config.warnHandler)) {\n    config.warnHandler.call(null, msg, detail);\n  }\n  if (detail) {\n    return Logger.getInstance().warn(`[VChart warn]: ${msg}`, detail);\n  }\n  return Logger.getInstance().warn(`[VChart warn]: ${msg}`);\n};\n\nexport const error = (msg: string, detail?: any, err?: Error) => {\n  if (config.silent) {\n    return;\n  }\n  if (isFunction(config.errorHandler)) {\n    config.errorHandler.call(null, msg, detail);\n    return;\n  }\n  throw new Error(msg);\n};\n\nexport const config = {\n  silent: false,\n  warnHandler: false,\n  errorHandler: false\n} as unknown as IConfig;\n\nexport interface IConfig {\n  /**\n   * 是否开启控制台告警\n   */\n  silent: boolean;\n  /**\n   * 错误处理\n   */\n  errorHandler?: (msg: string, detail?: any) => void;\n  /**\n   * 警告处理\n   */\n  warnHandler?: (msg: string, detail?: any) => void;\n}\n"]}