{"version":3,"sources":["../src/util/type.ts"],"names":[],"mappings":";;;AAAA,6CAgB0B;AAIxB,yFAnBA,iBAAQ,OAmBA;AACR,2FAnBA,mBAAU,OAmBA;AACV,wFAnBA,gBAAO,OAmBA;AACP,yFAnBA,iBAAQ,OAmBA;AACR,yFAnBA,iBAAQ,OAmBA;AACR,yFAnBA,iBAAQ,OAmBA;AACR,0FAnBA,kBAAS,OAmBA;AACT,uFAnBA,eAAM,OAmBA;AACN,4FAnBA,oBAAW,OAmBA;AACX,uFAnBA,eAAM,OAmBA;AACN,sFAnBA,cAAK,OAmBA;AACL,wFAnBA,gBAAO,OAmBA;AACP,4FAnBA,oBAAW,OAmBA;AACX,8FAnBA,sBAAa,OAmBA;AACb,8FAnBA,sBAAa,OAmBA;AAGf,SAAgB,kBAAkB,CAAC,CAAM;IACvC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,EAAE,EAAE;QAC7C,OAAO,KAAK,CAAC;KACd;IACD,IAAI,IAAA,iBAAQ,EAAC,CAAC,CAAC,EAAE;QACf,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACnB,CAAC;AATD,gDASC;AAED,SAAgB,aAAa,CAAC,CAAM;IAClC,IAAI,IAAA,sBAAa,EAAC,CAAC,CAAC,EAAE;QACpB,OAAO,CAAC,CAAC;KACV;IACD,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;IACjB,OAAO,IAAA,sBAAa,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AAND,sCAMC;AAKD,SAAgB,SAAS,CAAC,KAAa;IACrC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,KAAK,CAAC;KACd;IACD,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;AALD,8BAKC;AAED,SAAgB,gBAAgB,CAAC,MAAW;IAC1C,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QAClC,OAAO,KAAK,CAAC;KACd;IACD,IAAI,IAAA,cAAK,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAA,cAAK,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;QAC/C,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAA,gBAAO,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AARD,4CAQC","file":"type.js","sourcesContent":["import {\n  isObject,\n  isFunction,\n  isArray,\n  isString,\n  isNumber,\n  isRegExp,\n  isBoolean,\n  isDate,\n  isUndefined,\n  isNull,\n  isNil,\n  isValid,\n  isArrayLike,\n  isValidNumber,\n  isPlainObject\n} from '@visactor/vutils';\nimport type { IDataDomainSpec } from '../typings';\n\nexport {\n  isObject,\n  isFunction,\n  isArray,\n  isString,\n  isNumber,\n  isRegExp,\n  isBoolean,\n  isDate,\n  isUndefined,\n  isNull,\n  isNil,\n  isValid,\n  isArrayLike,\n  isValidNumber,\n  isPlainObject\n};\n\nexport function couldBeValidNumber(v: any) {\n  if (v === null || v === undefined || v === '') {\n    return false;\n  }\n  if (isNumber(v)) {\n    return true;\n  }\n  // eslint-disable-next-line no-self-compare\n  return +v === +v;\n}\n\nexport function toValidNumber(v: any) {\n  if (isValidNumber(v)) {\n    return v;\n  }\n  const value = +v;\n  return isValidNumber(value) ? value : 0;\n}\n\n/**\n * 检测一段字符串为合法数值\n */\nexport function isNumeric(value: string): boolean {\n  if (typeof value !== 'string') {\n    return false;\n  }\n  return !isNaN(Number(value)) && !isNaN(parseFloat(value));\n}\n\nexport function isDataDomainSpec(domain: any): domain is IDataDomainSpec[] {\n  if (!domain || domain.length === 0) {\n    return false;\n  }\n  if (isNil(domain[0]) || isNil(domain[0].dataId)) {\n    return false;\n  }\n  return isArray(domain[0].fields);\n}\n"]}