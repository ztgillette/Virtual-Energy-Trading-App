{"version":3,"sources":["../src/interaction/triggers/element-active-by-legend.ts"],"names":[],"mappings":"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","file":"element-active-by-legend.js","sourcesContent":["import { Factory } from '../../core/factory';\nimport { BaseTrigger } from './base';\nimport type { IElementActiveByLegendOptions, ITrigger, ITriggerEventHandler } from '../interface/trigger';\nimport { ChartEvent } from '../../constant/event';\nimport { isNil } from '@visactor/vutils';\nimport { generateFilterValue } from './util';\nimport type { IMarkGraphic } from '../../mark/interface';\nimport type { BaseEventParams } from '../../core';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\n\nconst type = 'element-active-by-legend';\nconst defaultOptions: Partial<IElementActiveByLegendOptions> = {\n  state: STATE_VALUE_ENUM.STATE_ACTIVE,\n  filterType: 'groupKey'\n};\n\nexport class ElementActiveByLegend\n  extends BaseTrigger<IElementActiveByLegendOptions>\n  implements ITrigger<IElementActiveByLegendOptions>\n{\n  static type: string = type;\n  type: string = type;\n\n  static defaultOptions = defaultOptions;\n\n  constructor(options?: IElementActiveByLegendOptions) {\n    super(options);\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.updateMarkIdByState([this.options.state]);\n  }\n  protected getEvents(): Array<{ type: string | string[]; handler: ITriggerEventHandler }> {\n    return [\n      {\n        type: ChartEvent.legendItemHover,\n        handler: this.handleStart\n      },\n      {\n        type: ChartEvent.legendItemUnHover,\n        handler: this.handleReset\n      }\n    ];\n  }\n\n  getStartState(): string {\n    return this.options.state;\n  }\n  start(itemKey: string) {\n    if (isNil(itemKey)) {\n      return;\n    }\n    const { interaction, state } = this.options;\n    const filterValue = generateFilterValue(this.options);\n    const statedGraphics = interaction.getStatedGraphics(this);\n    const newStatedGraphics: IMarkGraphic[] = [];\n\n    this.getMarks().forEach(m => {\n      m.getGraphics()?.forEach(g => {\n        if (filterValue(g) === itemKey) {\n          newStatedGraphics.push(g);\n        }\n      });\n    });\n\n    interaction.updateStates(this, newStatedGraphics, statedGraphics, state);\n    interaction.setStatedGraphics(this, newStatedGraphics);\n  }\n\n  resetAll() {\n    const { interaction, state } = this.options;\n\n    interaction.clearAllStatesOfTrigger(this, state);\n\n    interaction.setStatedGraphics(this, []);\n  }\n\n  reset(g?: IMarkGraphic) {\n    const { state, interaction } = this.options;\n\n    if (g) {\n      const statedGraphics = interaction.getStatedGraphics(this);\n      if (statedGraphics && statedGraphics.includes(g)) {\n        g.removeState(state);\n        interaction.setStatedGraphics(\n          this,\n          statedGraphics.filter(sg => sg !== g)\n        );\n      }\n    } else {\n      this.resetAll();\n    }\n  }\n\n  handleStart = (e: BaseEventParams) => {\n    const event = e.event;\n\n    if (event) {\n      this.start(event.detail?.data?.id);\n    }\n  };\n\n  handleReset = (e: BaseEventParams) => {\n    this.resetAll();\n  };\n}\n\nexport const registerElementActiveByLegend = () => {\n  Factory.registerInteractionTrigger(type, ElementActiveByLegend);\n};\n"]}