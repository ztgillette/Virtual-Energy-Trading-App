{"version":3,"sources":["../src/event/events/dimension/interface.ts"],"names":[],"mappings":";;;AAKA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,uDAAiC,CAAA;IACjC,uDAAiC,CAAA;AACnC,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B","file":"interface.js","sourcesContent":["import type { BaseEventParams } from '../../interface';\nimport type { ISeries } from '../../../series/interface';\nimport type { Datum } from '../../../typings';\nimport type { IAxis } from '../../../component/axis/interface';\n\nexport enum DimensionEventEnum {\n  dimensionHover = 'dimensionHover',\n  dimensionClick = 'dimensionClick'\n}\n\nexport interface IDimensionInfo {\n  /** 维度项索引，在连续轴上不存在 */\n  index?: number;\n  /** 维度项原始值，在离散轴上为维度标签，在连续轴上为数字 */\n  value: string | number;\n  /** 维度项所在坐标（scale 执行后的值） */\n  position?: number;\n  /** 维度项所在轴 */\n  axis?: IAxis;\n  /** 维度项对应数据 */\n  data: IDimensionData[];\n  /** 维度对应的类型 */\n  dimType?: string;\n}\n\nexport interface IDimensionData {\n  /** 图元上的原始数据（考虑到有多个图元的情况，实际为数组类型） */\n  datum: Datum[];\n  /** 图元所在的系列实例 */\n  series: ISeries;\n  /** 该数据项的 hash 值 */\n  key?: string;\n}\n\nexport type DimensionEventParams = BaseEventParams & {\n  action: 'enter' | 'leave' | 'move' | 'click';\n  dimensionInfo: IDimensionInfo[];\n};\n"]}