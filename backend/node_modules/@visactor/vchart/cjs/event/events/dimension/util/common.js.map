{"version":3,"sources":["../src/event/events/dimension/util/common.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/* eslint-disable max-depth */\nimport type { IChart } from '../../../../chart/interface';\nimport type { IDimensionData, IDimensionInfo } from '../interface';\nimport { isNil, array, isValid, isValidNumber } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport type { Maybe } from '@visactor/vutils';\nimport type { AxisComponent } from '../../../../component/axis/base-axis';\nimport type { CoordinateType, Datum, ILayoutPoint } from '../../../../typings';\nimport type { IBaseScale } from '@visactor/vscale';\nimport { isDiscrete } from '@visactor/vscale';\nimport type { ICartesianLinearAxisSpec } from '../../../../component';\nimport type { ISeries } from '../../../../series';\n\nconst isInBound = (pos: ILayoutPoint, min: ILayoutPoint, max: ILayoutPoint): boolean =>\n  pos.x >= min.x && pos.x <= max.x && pos.y >= min.y && pos.y <= max.y;\n\nexport const isInRegionBound = (chart: IChart, axis: AxisComponent, pos: ILayoutPoint) => {\n  const regionList = chart.getRegionsInIds(array(axis.layout.layoutBindRegionID));\n  return regionList?.some(region => {\n    const rect = region.getLayoutRect();\n    const startPoint = region.getLayoutStartPoint();\n    return isInBound(\n      pos,\n      { x: startPoint.x, y: startPoint.y },\n      { x: rect.width + startPoint.x, y: rect.height + startPoint.y }\n    );\n  });\n};\n\nexport const isSameDimensionInfo = (a?: IDimensionInfo, b?: IDimensionInfo): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (isNil(a) || isNil(b)) {\n    return false;\n  }\n  if (a.value !== b.value) {\n    return false;\n  }\n  if (a.axis?.id !== b.axis?.id) {\n    return false;\n  }\n  return true;\n};\n\nconst resolveTooltipFilterRange = (spec: ICartesianLinearAxisSpec, scale: IBaseScale) => {\n  const range = spec.tooltipFilterRange;\n  const rangeValue = typeof range === 'function' ? range({ scale }) : range;\n  const rangeArr = (isValidNumber(rangeValue) ? [-rangeValue, rangeValue] : rangeValue) as Maybe<[number, number]>;\n  return rangeArr;\n};\n\n/** 给定维度项的值，获取对应维度数据 */\nexport const getDimensionData = (\n  value: any,\n  axis: AxisComponent,\n  coordinate: CoordinateType,\n  getDimensionField: (series: any) => string | string[]\n): IDimensionData[] => {\n  const scale = axis.getScale();\n  const isDiscreteAxis = isDiscrete(scale.type);\n\n  const data: IDimensionData[] = [];\n  const seriesList = axis.getOption().getChart().getSeriesInIndex(axis.getSpecInfo().seriesIndexes);\n  for (const series of seriesList) {\n    if (series.coordinate === coordinate) {\n      const dimensionField = array(getDimensionField(series));\n      const viewData = series.getViewData()?.latestData;\n      if (dimensionField && viewData) {\n        if (isDiscreteAxis) {\n          const datums: Datum[] = [];\n          const datumIdList: number[] = [];\n          viewData.forEach((datum: any, i: number) => {\n            if (datum[dimensionField[0]]?.toString() === value?.toString()) {\n              datums.push(datum); // 获取该维度项所对应的数据\n              datumIdList.push(i);\n            }\n          });\n          data.push({\n            series,\n            datum: datums,\n            key: getDimensionDataKey(series, datumIdList)\n          });\n        } else {\n          // 连续轴\n          if (isValid(dimensionField[1])) {\n            // 直方图情况，根据范围取 datum\n            const datums: Datum[] = [];\n            const datumIdList: number[] = [];\n            viewData.forEach((datum: any, i: number) => {\n              if (\n                datum[dimensionField[0]]?.toString() === value?.toString() ||\n                (isValid(datum[dimensionField[0]]) &&\n                  isValid(datum[dimensionField[1]]) &&\n                  value >= datum[dimensionField[0]] &&\n                  value < datum[dimensionField[1]])\n              ) {\n                datums.push(datum); // 获取该维度项所对应的数据\n                datumIdList.push(i);\n              }\n            });\n            data.push({\n              series,\n              datum: datums,\n              key: getDimensionDataKey(series, datumIdList)\n            });\n          } else {\n            // 散点图情况，依据轴上的配置判断\n            const spec = axis.getSpec() as ICartesianLinearAxisSpec;\n            const rangeArr = resolveTooltipFilterRange(spec, scale);\n            let datums: Datum[] = [];\n            let datumIdList: number[] = [];\n            if (rangeArr) {\n              // 根据范围取 datum\n              viewData.forEach((datum: Datum, i: number) => {\n                if (isValid(datum[dimensionField[0]])) {\n                  const delta = datum[dimensionField[0]] - value;\n                  if (delta >= rangeArr[0] && delta <= rangeArr[1]) {\n                    datums.push(datum);\n                    datumIdList.push(i);\n                  }\n                }\n              });\n            } else {\n              // 根据最近距离取 datum\n              let minDelta = Infinity;\n              let deltaSign = 0;\n              viewData.forEach((datum: any, i: number) => {\n                if (isValid(datum[dimensionField[0]])) {\n                  const delta = Math.abs(datum[dimensionField[0]] - value);\n                  const sign = Math.sign(datum[dimensionField[0]] - value);\n                  if (delta < minDelta) {\n                    minDelta = delta;\n                    datums = [datum];\n                    datumIdList = [i];\n                    deltaSign = sign;\n                  } else if (delta === minDelta && sign === deltaSign) {\n                    datums.push(datum);\n                    datumIdList.push(i);\n                  }\n                }\n              });\n            }\n            data.push({\n              series,\n              datum: datums,\n              key: getDimensionDataKey(series, datumIdList)\n            });\n          }\n        }\n      }\n    }\n  }\n  return data;\n};\n\nconst getDimensionDataKey = (series: ISeries, datumIdList: number[]) => `${series.id}_${datumIdList.join('_')}`;\n\nexport const getAxis = <T extends AxisComponent>(\n  chart: IChart,\n  filter: (cmp: T) => boolean,\n  pos: ILayoutPoint\n): T[] | null => {\n  const axesComponents = chart\n    .getAllComponents()\n    .filter(c => c.specKey === 'axes' && filter(c as T) && isInRegionBound(chart, c as T, pos)) as T[];\n  if (!axesComponents.length) {\n    return null;\n  }\n  return axesComponents;\n};\n"]}