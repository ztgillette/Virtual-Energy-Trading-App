{"version":3,"sources":["../src/event/bubble.ts"],"names":[],"mappings":";;;AAAA,6CAAuD;AAQvD,MAAa,MAAM;IAIjB;QAHQ,SAAI,GAAgD,IAAI,GAAG,EAAE,CAAC;QAC9D,gBAAW,GAAwC,IAAI,GAAG,EAAE,CAAC;QAGnE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,0BAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,0BAAkB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,0BAAkB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,0BAAkB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,OAAkC,EAAE,KAAuB;;QACpE,MAAM,IAAI,GAAe,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;QAC5C,MAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,0CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa,CAAC,OAAkC;QAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,KAAK,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7E,KAAK,KAAK,SAAS,IAAI,KAAK,IAAI,CAAC,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA,CAAC;QAC7D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,OAAkC;QAC/C,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,OAAkC;QAC7C,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW,CAAC,KAAuB;;QACjC,OAAO,CAAA,MAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,0CAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,EAAE,CAAC;IACtE,CAAC;IAED,cAAc;QACZ,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxE,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACxB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;CACF;AA7DD,wBA6DC","file":"bubble.js","sourcesContent":["import { Event_Bubble_Level } from '../constant/event';\nimport type { EventCallback, EventHandler, EventParams, EventBubbleLevel } from './interface';\n\nexport type BubbleNode = {\n  handler: EventHandler<EventParams>;\n  level: EventBubbleLevel;\n};\n\nexport class Bubble {\n  private _map: Map<EventCallback<EventParams>, BubbleNode> = new Map();\n  private _levelNodes: Map<EventBubbleLevel, BubbleNode[]> = new Map();\n\n  constructor() {\n    this._levelNodes.set(Event_Bubble_Level.vchart, []);\n    this._levelNodes.set(Event_Bubble_Level.chart, []);\n    this._levelNodes.set(Event_Bubble_Level.model, []);\n    this._levelNodes.set(Event_Bubble_Level.mark, []);\n  }\n\n  addHandler(handler: EventHandler<EventParams>, level: EventBubbleLevel): this {\n    const node: BubbleNode = { level, handler };\n    this._levelNodes.get(level)?.push(node);\n    this._map.set(handler.callback, node);\n    return this;\n  }\n\n  removeHandler(handler: EventHandler<EventParams>): this {\n    const node = this._map.get(handler.callback);\n    if (!node) {\n      return this;\n    }\n    this._map.delete(handler.callback);\n    const nodes = this._levelNodes.get(node.level);\n    // 由于顶层 API 封装不是 handler 形式，因此通过 callback 唯一判断\n    const index = nodes?.findIndex(n => n.handler.callback === handler.callback);\n    index !== undefined && index >= 0 && nodes?.splice(index, 1);\n    return this;\n  }\n\n  preventHandler(handler: EventHandler<EventParams>): this {\n    if (handler) {\n      handler.prevented = true;\n    }\n    return this;\n  }\n\n  allowHandler(handler: EventHandler<EventParams>): this {\n    if (handler) {\n      handler.prevented = false;\n    }\n    return this;\n  }\n\n  getHandlers(level: EventBubbleLevel): EventHandler<EventParams>[] {\n    return this._levelNodes.get(level)?.map(node => node.handler) || [];\n  }\n\n  getAllHandlers(): EventHandler<EventParams>[] {\n    return Array.from(this._map.values()).map(node => node.handler) || [];\n  }\n\n  getCount() {\n    return this._map.size;\n  }\n\n  release() {\n    this._map.clear();\n    this._levelNodes.clear();\n  }\n}\n"]}