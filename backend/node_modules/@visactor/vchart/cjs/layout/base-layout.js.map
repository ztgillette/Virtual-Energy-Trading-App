{"version":3,"sources":["../src/layout/base-layout.ts"],"names":[],"mappings":"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","file":"base-layout.js","sourcesContent":["import type { utilFunctionCtx } from '../typings/params';\nimport type { IChart } from '../chart/interface/chart';\nimport { isEqual, type IBoundsLike } from '@visactor/vutils';\nimport type { IBaseLayout, ILayoutItem } from './interface';\nimport type { IOrientType, IPadding, IRect } from '../typings/space';\nimport { error } from '../util/debug';\nimport type { IRecompute } from './util';\nimport {\n  getItemLayoutWithTag,\n  layoutBottomInlineItems,\n  layoutLeftInlineItems,\n  layoutRightInlineItems,\n  layoutTopInlineItems\n} from './util';\nimport type { ILayoutRect } from '../typings/layout';\n\nexport type LayoutSideType = {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n};\n\nexport interface IOffset {\n  offsetLeft: number;\n  offsetRight: number;\n  offsetTop: number;\n  offsetBottom: number;\n}\n\ntype overlapInfo = {\n  items: ILayoutItem[];\n  rect: ILayoutRect;\n};\n\nexport class Layout implements IBaseLayout {\n  static type = 'base';\n\n  leftCurrent: number = 0;\n  topCurrent: number = 0;\n  rightCurrent: number = 0;\n  bottomCurrent: number = 0;\n\n  _chartLayoutRect!: IRect;\n  _chartViewBox!: IBoundsLike;\n\n  recomputeWidth: boolean = false;\n  recomputeHeight: boolean = false;\n\n  protected _onError: (msg: string) => void;\n\n  constructor(_spec?: unknown, ctx?: utilFunctionCtx) {\n    this._onError = ctx?.onError;\n  }\n\n  protected _layoutInit(_chart: IChart, items: ILayoutItem[], chartLayoutRect: IRect, chartViewBox: IBoundsLike) {\n    this._chartLayoutRect = chartLayoutRect;\n    this._chartViewBox = chartViewBox;\n    this.leftCurrent = chartLayoutRect.x;\n    this.topCurrent = chartLayoutRect.y;\n    this.rightCurrent = chartLayoutRect.x + chartLayoutRect.width;\n    this.bottomCurrent = chartLayoutRect.height + chartLayoutRect.y;\n    this.recomputeWidth = false;\n    this.recomputeHeight = false;\n\n    // 越大越先处理，进行排序调整，利用原地排序特性，排序会受 level 和传进来的数组顺序共同影响\n    items.sort((a, b) => b.layoutLevel - a.layoutLevel);\n  }\n\n  protected _layoutNormalItems(items: ILayoutItem[], recompute: IRecompute) {\n    this.layoutNormalInlineItems(\n      items.filter(x => x.layoutType === 'normal-inline'),\n      recompute\n    );\n    this.layoutNormalItems(\n      items.filter(x => x.layoutType === 'normal'),\n      recompute\n    );\n  }\n\n  protected _groupItems(items: ILayoutItem[]) {\n    const regionItems = items.filter(x => x.layoutType === 'region');\n    const relativeItems = items.filter(x => x.layoutType === 'region-relative');\n    const relativeOverlapItems = items.filter(x => x.layoutType === 'region-relative-overlap');\n    const allRelatives = relativeItems.concat(relativeOverlapItems);\n    // 允许重叠元素 ，目前允许重叠元素认为是紧贴region的。最后布局\n    const overlapItems: {\n      [key in IOrientType]: overlapInfo;\n    } = {\n      left: { items: [], rect: { width: 0, height: 0 } },\n      right: { items: [], rect: { width: 0, height: 0 } },\n      top: { items: [], rect: { width: 0, height: 0 } },\n      bottom: { items: [], rect: { width: 0, height: 0 } },\n      z: { items: [], rect: { width: 0, height: 0 } }\n    };\n    relativeOverlapItems.forEach(i => {\n      overlapItems[i.layoutOrient].items.push(i);\n    });\n\n    return {\n      regionItems,\n      relativeItems,\n      relativeOverlapItems,\n      allRelatives,\n      overlapItems\n    };\n  }\n\n  layoutItems(_chart: IChart, items: ILayoutItem[], chartLayoutRect: IRect, chartViewBox: IBoundsLike): void {\n    // 布局初始化\n    this._layoutInit(_chart, items, chartLayoutRect, chartViewBox);\n    const recompute = {\n      recomputeWidth: this.recomputeWidth,\n      recomputeHeight: this.recomputeHeight\n    };\n    // 先布局 normal 类型的元素\n    this._layoutNormalItems(items, recompute);\n    // 开始布局 region 相关元素\n    // 为了缩进先保存一下当前的布局空间\n    const layoutTemp: LayoutSideType = {\n      left: this.leftCurrent,\n      top: this.topCurrent,\n      right: this.rightCurrent,\n      bottom: this.bottomCurrent\n    };\n    const { regionItems, relativeItems, relativeOverlapItems, allRelatives, overlapItems } = this._groupItems(items);\n    // 有元素开启了自动缩进\n    // TODO:目前只有普通占位布局下的 region-relative 元素支持\n    // 主要考虑常规元素超出画布一般为用户个性设置，而且可以设置padding规避裁剪,不需要使用自动缩进\n    this.layoutRegionItems(regionItems, relativeItems, relativeOverlapItems, overlapItems, recompute);\n    // 缩进\n    this._processAutoIndent(\n      regionItems,\n      relativeItems,\n      relativeOverlapItems,\n      overlapItems,\n      allRelatives,\n      layoutTemp,\n      recompute\n    );\n\n    this.layoutAbsoluteItems(items.filter(x => x.layoutType === 'absolute'));\n\n    items.forEach(item => {\n      // 布局完成 ，清除标记\n      item.clearWillLayoutTag();\n    });\n  }\n\n  protected _processAutoIndent(\n    regionItems: ILayoutItem[],\n    relativeItems: ILayoutItem[],\n    relativeOverlapItems: ILayoutItem[],\n    overlapItems: {\n      [key in IOrientType]: overlapInfo;\n    } = {\n      left: { items: [], rect: { width: 0, height: 0 } },\n      right: { items: [], rect: { width: 0, height: 0 } },\n      top: { items: [], rect: { width: 0, height: 0 } },\n      bottom: { items: [], rect: { width: 0, height: 0 } },\n      z: { items: [], rect: { width: 0, height: 0 } }\n    },\n    allRelatives: ILayoutItem[],\n    layoutTemp: LayoutSideType,\n    recompute: IRecompute\n  ): void {\n    // 如果有缩进\n    if (allRelatives.some(i => i.autoIndent)) {\n      // check auto indent\n      const { top, bottom, left, right } = this._checkAutoIndent(allRelatives, layoutTemp);\n      // 如果出现了需要自动缩进的场景 则基于缩进再次布局\n      if (top || bottom || left || right) {\n        // set outer bounds to padding\n        this.topCurrent = layoutTemp.top + top;\n        this.bottomCurrent = layoutTemp.bottom - bottom;\n        this.leftCurrent = layoutTemp.left + left;\n        this.rightCurrent = layoutTemp.right - right;\n        // reLayout\n        this.layoutRegionItems(regionItems, relativeItems, relativeOverlapItems, overlapItems, recompute);\n      }\n    }\n  }\n\n  protected layoutNormalItems(normalItems: ILayoutItem[], recompute: IRecompute): void {\n    normalItems.forEach(item => {\n      // const layoutRect = this.getItemComputeLayoutRect(item);\n      // const rect = item.computeBoundsInRect(layoutRect);\n      // item.setLayoutRect(rect);\n      const { rect } = getItemLayoutWithTag(item, this, recompute);\n      if (item.layoutOrient === 'left') {\n        item.setLayoutStartPosition({\n          x: this.leftCurrent + item.layoutOffsetX + item.layoutPaddingLeft,\n          y: this.topCurrent + item.layoutOffsetY + item.layoutPaddingTop\n        });\n        this.leftCurrent += rect.width + item.layoutPaddingLeft + item.layoutPaddingRight;\n      } else if (item.layoutOrient === 'top') {\n        item.setLayoutStartPosition({\n          x: this.leftCurrent + item.layoutOffsetX + item.layoutPaddingLeft,\n          y: this.topCurrent + item.layoutOffsetY + item.layoutPaddingTop\n        });\n        this.topCurrent += rect.height + item.layoutPaddingTop + item.layoutPaddingBottom;\n      } else if (item.layoutOrient === 'right') {\n        item.setLayoutStartPosition({\n          x: this.rightCurrent + item.layoutOffsetX - rect.width - item.layoutPaddingRight,\n          y: this.topCurrent + item.layoutOffsetY + item.layoutPaddingTop\n        });\n        this.rightCurrent -= rect.width + item.layoutPaddingLeft + item.layoutPaddingRight;\n      } else if (item.layoutOrient === 'bottom') {\n        item.setLayoutStartPosition({\n          x: this.leftCurrent + item.layoutOffsetX + item.layoutPaddingRight,\n          y: this.bottomCurrent + item.layoutOffsetY - rect.height - item.layoutPaddingBottom\n        });\n        this.bottomCurrent -= rect.height + item.layoutPaddingTop + item.layoutPaddingBottom;\n      }\n    });\n  }\n\n  protected layoutNormalInlineItems(normalItems: ILayoutItem[], recompute: IRecompute): boolean {\n    const leftItems = normalItems.filter(item => item.layoutOrient === 'left');\n    const rightItems = normalItems.filter(item => item.layoutOrient === 'right');\n    const topItems = normalItems.filter(item => item.layoutOrient === 'top');\n    const bottomItems = normalItems.filter(item => item.layoutOrient === 'bottom');\n\n    const limitWidth = this._chartLayoutRect.width + this._chartLayoutRect.x;\n    const limitHeight = this._chartLayoutRect.height + this._chartLayoutRect.y;\n\n    // 同 normal，按照 left、top、right、bottom 的顺序进行布局\n    // 各个方向上再按照 position 进行分组布局，顺序为 start middle end\n    leftItems.length && layoutLeftInlineItems(leftItems, this, limitHeight, recompute);\n    topItems.length && layoutTopInlineItems(topItems, this, limitWidth, recompute);\n    rightItems.length && layoutRightInlineItems(rightItems, this, limitHeight, recompute);\n    bottomItems.length && layoutBottomInlineItems(bottomItems, this, limitWidth, recompute);\n    return true;\n  }\n\n  protected _layoutRelativeOverlap(orient: IOrientType, info: overlapInfo, recompute: IRecompute) {\n    // 得到 max rect\n    info.items.forEach((item: ILayoutItem) => {\n      const { rect } = getItemLayoutWithTag(item, this, recompute);\n      info.rect.width = Math.max(rect.width + item.layoutPaddingLeft + item.layoutPaddingRight, info.rect.width);\n      info.rect.height = Math.max(rect.height + item.layoutPaddingTop + item.layoutPaddingBottom, info.rect.height);\n    });\n\n    // 统一设置rect和pos\n    info.items.forEach((item: ILayoutItem) => {\n      if (!isEqual(item.getLayoutRect(), info.rect)) {\n        item.setLayoutRect(info.rect);\n      }\n      if (orient === 'left') {\n        item.setLayoutStartPosition({\n          x: this.leftCurrent + item.layoutOffsetX\n        });\n      } else if (orient === 'right') {\n        item.setLayoutStartPosition({\n          x: this.rightCurrent - info.rect.width + item.layoutOffsetX\n        });\n      } else if (orient === 'top') {\n        item.setLayoutStartPosition({\n          x: this.topCurrent + item.layoutOffsetY\n        });\n      } else {\n        item.setLayoutStartPosition({\n          x: this.bottomCurrent - info.rect.height + item.layoutOffsetY\n        });\n      }\n    });\n\n    if (orient === 'left') {\n      this.leftCurrent += info.rect.width;\n    } else if (orient === 'right') {\n      this.rightCurrent -= info.rect.width;\n    } else if (orient === 'top') {\n      this.topCurrent += info.rect.height;\n    } else {\n      this.bottomCurrent -= info.rect.height;\n    }\n  }\n\n  protected _layoutRelativeItem(item: ILayoutItem, recompute: IRecompute) {\n    const { rect } = getItemLayoutWithTag(item, this, recompute, false);\n    if (item.layoutOrient === 'left' || item.layoutOrient === 'right') {\n      item.setLayoutRect({ width: rect.width });\n    } else {\n      item.setLayoutRect({ height: rect.height });\n    }\n    // 减少尺寸\n    if (item.layoutOrient === 'left') {\n      item.setLayoutStartPosition({\n        x: this.leftCurrent + item.layoutOffsetX + item.layoutPaddingLeft\n      });\n      this.leftCurrent += rect.width + item.layoutPaddingLeft + item.layoutPaddingRight;\n    } else if (item.layoutOrient === 'right') {\n      this.rightCurrent -= rect.width + item.layoutPaddingLeft + item.layoutPaddingRight;\n      item.setLayoutStartPosition({\n        x: this.rightCurrent + item.layoutOffsetX + item.layoutPaddingLeft\n      });\n    } // 减少尺寸\n    else if (item.layoutOrient === 'top') {\n      item.setLayoutStartPosition({\n        y: this.topCurrent + item.layoutOffsetY + item.layoutPaddingTop\n      });\n      this.topCurrent += rect.height + item.layoutPaddingTop + item.layoutPaddingBottom;\n    } else if (item.layoutOrient === 'bottom') {\n      this.bottomCurrent -= rect.height + item.layoutPaddingTop + item.layoutPaddingBottom;\n      item.setLayoutStartPosition({\n        y: this.bottomCurrent + item.layoutOffsetY + item.layoutPaddingTop\n      });\n    }\n  }\n\n  protected _layoutRegionItem(\n    regionItems: ILayoutItem[],\n    regionRelativeTotalWidth: number,\n    regionRelativeTotalHeight: number\n  ) {\n    // region 处理\n    const regionWidth = Math.max(\n      Math.min(regionRelativeTotalWidth, ...regionItems.map(region => region.maxWidth ?? Number.MAX_VALUE)),\n      0\n    );\n    const regionHeight = Math.max(\n      Math.min(regionRelativeTotalHeight, ...regionItems.map(region => region.maxHeight ?? Number.MAX_VALUE)),\n      0\n    );\n    regionItems.forEach(region => {\n      const width = regionWidth - region.layoutPaddingLeft - region.layoutPaddingRight;\n      const height = regionHeight - region.layoutPaddingTop - region.layoutPaddingBottom;\n\n      region.setLayoutRect({\n        width: width,\n        height: height\n      });\n\n      region.setLayoutStartPosition({\n        x: this.leftCurrent + region.layoutOffsetX + region.layoutPaddingLeft,\n        y: this.topCurrent + region.layoutOffsetY + region.layoutPaddingTop\n      });\n    });\n\n    return {\n      regionHeight,\n      regionWidth\n    };\n  }\n\n  /**\n   *\n   * 1. 补全 region-relative rect 和部分 layoutStartPoint\n   * 2. 补全 region rect 和 layoutStartPoint\n   *\n   */\n  protected layoutRegionItems(\n    regionItems: ILayoutItem[],\n    regionRelativeItems: ILayoutItem[],\n    regionRelativeOverlapItems: ILayoutItem[],\n    overlapItems: {\n      [key in IOrientType]: overlapInfo;\n    } = {\n      left: { items: [], rect: { width: 0, height: 0 } },\n      right: { items: [], rect: { width: 0, height: 0 } },\n      top: { items: [], rect: { width: 0, height: 0 } },\n      bottom: { items: [], rect: { width: 0, height: 0 } },\n      z: { items: [], rect: { width: 0, height: 0 } }\n    },\n    recompute: IRecompute\n  ): void {\n    let regionRelativeTotalWidth = this.rightCurrent - this.leftCurrent;\n    let regionRelativeTotalHeight = this.bottomCurrent - this.topCurrent;\n\n    regionRelativeItems\n      .filter(x => x.layoutOrient === 'left' || x.layoutOrient === 'right')\n      .forEach(item => {\n        this._layoutRelativeItem(item, recompute);\n      });\n\n    this._layoutRelativeOverlap('left', overlapItems.left, recompute);\n    this._layoutRelativeOverlap('right', overlapItems.right, recompute);\n\n    regionRelativeTotalWidth = this.rightCurrent - this.leftCurrent;\n\n    regionRelativeItems\n      .filter(x => x.layoutOrient === 'top' || x.layoutOrient === 'bottom')\n      .forEach(item => {\n        this._layoutRelativeItem(item, recompute);\n      });\n\n    this._layoutRelativeOverlap('top', overlapItems.top, recompute);\n    this._layoutRelativeOverlap('bottom', overlapItems.bottom, recompute);\n\n    // 此时得到height\n    regionRelativeTotalHeight = this.bottomCurrent - this.topCurrent;\n\n    // region 处理\n    const { regionWidth, regionHeight } = this._layoutRegionItem(\n      regionItems,\n      regionRelativeTotalWidth,\n      regionRelativeTotalHeight\n    );\n\n    // region-relative 特殊处理\n    regionRelativeItems.concat(regionRelativeOverlapItems).forEach(item => {\n      // 处理特殊元素的宽高\n      if (['left', 'right'].includes(item.layoutOrient)) {\n        // 用户有配置的话，已经处理过，不需要再次处理\n        const relativeRegion = this.filterRegionsWithID(regionItems, item.layoutBindRegionID[0]);\n\n        item.setLayoutRect({\n          height: relativeRegion.getLayoutRect().height\n        });\n        item.setLayoutStartPosition({\n          y: relativeRegion.getLayoutStartPoint().y + item.layoutOffsetY + item.layoutPaddingTop\n        });\n\n        if (item.layoutOrient === 'right') {\n          item.setLayoutStartPosition({\n            x: item.getLayoutStartPoint().x + regionWidth - regionRelativeTotalWidth\n          });\n        }\n      } else if (['top', 'bottom'].includes(item.layoutOrient)) {\n        const relativeRegion = this.filterRegionsWithID(regionItems, item.layoutBindRegionID[0]);\n\n        item.setLayoutRect({\n          width: relativeRegion.getLayoutRect().width\n        });\n\n        item.setLayoutStartPosition({\n          x: relativeRegion.getLayoutStartPoint().x + item.layoutOffsetX + item.layoutPaddingLeft\n        });\n\n        if (item.layoutOrient === 'bottom') {\n          item.setLayoutStartPosition({\n            y: item.getLayoutStartPoint().y + regionHeight - regionRelativeTotalHeight\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * 再找出对 absolute 元素，无需排序，在 compiler 层需要排序放置\n   *\n   * 重要：absolute 默认依据 region 进行相对依赖\n   */\n  protected layoutAbsoluteItems(absoluteItems: ILayoutItem[]) {\n    absoluteItems.forEach(item => {\n      if (item.willLayoutTag) {\n        // 设置盒子\n        item.absoluteLayoutInRect(this._chartLayoutRect);\n      }\n    });\n  }\n\n  // 对普通布局来说，只出一个 region 绑定\n  filterRegionsWithID(items: ILayoutItem[], id: number): ILayoutItem {\n    const target = items.find(x => x.getModelId() === id);\n    if (!target) {\n      (this._onError ?? error)('can not find target region item, invalid id');\n    }\n    return target as ILayoutItem;\n  }\n\n  /**\n   * 工具方法 根据item属性获取给item提供的布局空间\n   * @param item\n   */\n  getItemComputeLayoutRect(item: ILayoutItem) {\n    const result = {\n      width: this.rightCurrent - this.leftCurrent - item.layoutPaddingLeft - item.layoutPaddingRight,\n      height: this.bottomCurrent - this.topCurrent - item.layoutPaddingTop - item.layoutPaddingBottom\n    };\n    return result;\n  }\n\n  protected _checkAutoIndent(\n    items: ILayoutItem[],\n    layoutTemp: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n    }\n  ): IPadding {\n    const result = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    items.forEach(i => {\n      if (!i.getModelVisible() || !i.autoIndent) {\n        return;\n      }\n      const vOrH = i.layoutOrient === 'left' || i.layoutOrient === 'right';\n      const itemOuter = i.getLastComputeOutBounds();\n      const outer = this._getOutInLayout(itemOuter, i, layoutTemp);\n      if (vOrH) {\n        result.top = Math.max(result.top, outer.top);\n        result.bottom = Math.max(result.bottom, outer.bottom);\n      } else {\n        result.left = Math.max(result.left, outer.left);\n        result.right = Math.max(result.right, outer.right);\n      }\n    });\n    return result;\n  }\n\n  private _getOutInLayout(itemOuter: IBoundsLike, i: ILayoutItem, tempBorder: LayoutSideType): LayoutSideType {\n    const { x, y } = i.getLayoutStartPoint();\n    const { width, height } = i.getLayoutRect();\n\n    const result: LayoutSideType = {\n      left: tempBorder.left - (x - itemOuter.x1),\n      right: x + width + itemOuter.x2 - tempBorder.right,\n      top: tempBorder.top - (y - itemOuter.y1),\n      bottom: y + height + itemOuter.y2 - tempBorder.bottom\n    };\n    return result;\n  }\n}\n"]}