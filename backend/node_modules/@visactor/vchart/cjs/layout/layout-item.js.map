{"version":3,"sources":["../src/layout/layout-item.ts"],"names":[],"mappings":"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","file":"layout-item.js","sourcesContent":["import type { ILayoutModel } from './../model/interface';\nimport type { IPadding, IRect, IPoint } from '../typings';\nimport type { IBoundsLike } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isNil, isValidNumber } from '@visactor/vutils';\nimport { calcLayoutNumber, calcPadding, normalizeLayoutPaddingSpec, boundsInRect } from '../util/space';\nimport { LayoutLevel, DEFAULT_LAYOUT_RECT_LEVEL, USER_LAYOUT_RECT_LEVEL } from '../constant/layout';\n\nimport type { ILayoutItem, ILayoutItemInitOption, ILayoutItemSpec } from './interface';\nimport type { IChartLayoutOption } from '../chart/interface/common';\nimport type { ILayoutAlignSelf, ILayoutPoint, ILayoutRect } from '../typings/layout';\n\nexport class LayoutItem implements ILayoutItem {\n  protected _spec: ILayoutItemSpec;\n  getSpec() {\n    return this._spec || {};\n  }\n\n  layoutClip: boolean = false;\n\n  autoIndent: boolean = false;\n\n  private _layoutStartPoint: ILayoutPoint = {\n    x: 0,\n    y: 0\n  };\n\n  getLayoutStartPoint(): ILayoutPoint {\n    return this._layoutStartPoint;\n  }\n\n  private _layoutRect: ILayoutRect = { width: 0, height: 0 };\n\n  // 处理用户和逻辑的优先级覆盖，让用户也可以设置 rect\n  protected _layoutRectLevelMap: ILayoutRect = {\n    width: DEFAULT_LAYOUT_RECT_LEVEL,\n    height: DEFAULT_LAYOUT_RECT_LEVEL\n  };\n  get layoutRectLevelMap() {\n    return this._layoutRectLevelMap;\n  }\n\n  protected _minWidth: number = null;\n  get minWidth() {\n    return this._minWidth;\n  }\n  set minWidth(v: number) {\n    this._minWidth = v;\n  }\n  protected _maxWidth: number = null;\n  get maxWidth() {\n    return this._maxWidth;\n  }\n  set maxWidth(v: number) {\n    this._maxWidth = v;\n  }\n  protected _minHeight: number = null;\n  get minHeight() {\n    return this._minHeight;\n  }\n  set minHeight(v: number) {\n    this._minHeight = v;\n  }\n  protected _maxHeight: number = null;\n  get maxHeight() {\n    return this._maxHeight;\n  }\n  set maxHeight(v: number) {\n    this._maxHeight = v;\n  }\n  /** for layout diff */\n  protected _lastComputeRect: ILayoutRect = null;\n  get lastComputeRect() {\n    return this._lastComputeRect;\n  }\n  protected _lastComputeOutBounds: IBoundsLike = { x1: 0, x2: 0, y1: 0, y2: 0 };\n  getLastComputeOutBounds(): IBoundsLike {\n    return this._lastComputeOutBounds;\n  }\n\n  getLayoutRect: () => ILayoutRect = () => {\n    return this._layoutRect;\n  };\n\n  layoutType: ILayoutItem['layoutType'] = 'normal';\n\n  layoutBindRegionID!: ILayoutItem['layoutBindRegionID'];\n\n  _layoutOrient: ILayoutItem['layoutOrient'] = 'left';\n  get layoutOrient() {\n    return this._layoutOrient;\n  }\n  set layoutOrient(v: ILayoutItem['layoutOrient']) {\n    this._layoutOrient = v;\n  }\n  layoutPaddingLeft: ILayoutItem['layoutPaddingLeft'] = 0;\n  layoutPaddingTop: ILayoutItem['layoutPaddingTop'] = 0;\n  layoutPaddingRight: ILayoutItem['layoutPaddingRight'] = 0;\n  layoutPaddingBottom: ILayoutItem['layoutPaddingBottom'] = 0;\n\n  layoutOffsetX: ILayoutItem['layoutOffsetX'] = 0;\n  layoutOffsetY: ILayoutItem['layoutOffsetY'] = 0;\n\n  layoutLevel: ILayoutItem['layoutLevel'] = LayoutLevel.Region;\n\n  chartLayoutRect!: ILayoutRect;\n\n  alignSelf: ILayoutAlignSelf;\n\n  protected _model: ILayoutModel;\n\n  get model() {\n    return this._model;\n  }\n\n  get type() {\n    return this._model.type;\n  }\n\n  protected _option: ILayoutItemInitOption;\n\n  protected _willLayoutTag: boolean = true;\n  get willLayoutTag() {\n    return this._willLayoutTag;\n  }\n\n  constructor(model: ILayoutModel, option: ILayoutItemInitOption) {\n    this._model = model;\n    this._option = option;\n    this.layoutLevel = option.layoutLevel;\n    this.layoutType = option.layoutType;\n    if (option.layoutOrient) {\n      this.layoutOrient = option.layoutOrient;\n    }\n    this._spec = model?.getSpec?.();\n  }\n\n  private _setLayoutAttributeFromSpec(spec: ILayoutItemSpec, chartViewRect: ILayoutRect) {\n    if (!this._spec) {\n      return;\n    }\n    if ((this._spec as unknown as any).visible !== false) {\n      // 处理 user spec value to px;\n      // 先计算出 padding\n      const padding = normalizeLayoutPaddingSpec(spec.padding);\n      let paddingValue = calcPadding(padding, chartViewRect, chartViewRect);\n      if (this._option.transformLayoutPadding) {\n        paddingValue = this._option.transformLayoutPadding(paddingValue);\n      }\n      this.layoutPaddingLeft = paddingValue.left;\n      this.layoutPaddingRight = paddingValue.right;\n      this.layoutPaddingTop = paddingValue.top;\n      this.layoutPaddingBottom = paddingValue.bottom;\n\n      this._minHeight = isNil(spec.minHeight)\n        ? this._minHeight ?? null\n        : calcLayoutNumber(spec.minHeight, chartViewRect.height, chartViewRect);\n      this._maxHeight = isNil(spec.maxHeight)\n        ? this._maxHeight ?? null\n        : calcLayoutNumber(spec.maxHeight, chartViewRect.height, chartViewRect);\n      this._minWidth = isNil(spec.minWidth)\n        ? this._minWidth ?? null\n        : calcLayoutNumber(spec.minWidth, chartViewRect.width, chartViewRect);\n      this._maxWidth = isNil(spec.maxWidth)\n        ? this._maxWidth ?? null\n        : calcLayoutNumber(spec.maxWidth, chartViewRect.width, chartViewRect);\n      // 处理 user width\n      if (spec.width) {\n        this.setLayoutRect(\n          {\n            width: calcLayoutNumber(spec.width, chartViewRect.width, chartViewRect)\n          },\n          {\n            width: USER_LAYOUT_RECT_LEVEL\n          }\n        );\n      }\n      if (spec.height) {\n        this.setLayoutRect(\n          {\n            height: calcLayoutNumber(spec.height, chartViewRect.height, chartViewRect)\n          },\n          {\n            height: USER_LAYOUT_RECT_LEVEL\n          }\n        );\n      }\n\n      // offset\n      if (!isNil(spec.offsetX)) {\n        this.layoutOffsetX = calcLayoutNumber(spec.offsetX, chartViewRect.width, chartViewRect);\n      }\n      if (!isNil(spec.offsetY)) {\n        this.layoutOffsetY = calcLayoutNumber(spec.offsetY, chartViewRect.height, chartViewRect);\n      }\n\n      if (spec.alignSelf) {\n        this.alignSelf = spec.alignSelf;\n      }\n    }\n  }\n\n  setAttrFromSpec(spec: ILayoutItemSpec, chartViewRect: ILayoutRect) {\n    this._spec = spec;\n    this.layoutType = spec.layoutType ?? this.layoutType;\n    this.layoutLevel = spec.layoutLevel ?? this.layoutLevel;\n    this.layoutOrient = spec.orient ?? this.layoutOrient;\n\n    this._setLayoutAttributeFromSpec(spec, chartViewRect);\n\n    this.layoutClip = spec.clip ?? this.layoutClip;\n  }\n\n  onLayoutStart(layoutRect: IRect, viewRect: ILayoutRect) {\n    // 在 layoutStart 时重新计算 spec 中的布局属性值，确保 resize 后，这些值保持正确的px值。\n    this._setLayoutAttributeFromSpec(this._spec, viewRect);\n  }\n\n  onLayoutEnd() {\n    // do nothing\n  }\n\n  private _getAbsoluteSpecValue(layoutRect: ILayoutRect) {\n    const result: IPadding = { top: null, bottom: null, left: null, right: null };\n    ['top', 'bottom', 'left', 'right'].forEach(k => {\n      if (!isNil(this._spec[k])) {\n        result[k] = calcLayoutNumber(\n          this._spec[k],\n          k === 'top' || k === 'bottom' ? layoutRect.height : layoutRect.width,\n          layoutRect\n        );\n      }\n    });\n    return result;\n  }\n\n  absoluteLayoutInRect(layoutRect: IRect) {\n    const { top, bottom, left, right } = this._getAbsoluteSpecValue(layoutRect);\n\n    // size first\n    const layoutSize = {\n      width: layoutRect.width - this.layoutPaddingLeft - this.layoutPaddingRight,\n      height: layoutRect.height - this.layoutPaddingTop - this.layoutPaddingBottom\n    };\n    if (!isNil(left)) {\n      layoutSize.width -= left;\n    }\n    if (!isNil(right)) {\n      layoutSize.width -= right;\n    }\n    if (!isNil(top)) {\n      layoutSize.height -= top;\n    }\n    if (!isNil(bottom)) {\n      layoutSize.height -= bottom;\n    }\n\n    this.setLayoutRect(layoutSize);\n    const { width, height } = this.computeBoundsInRect(this.getLayoutRect());\n    this.setLayoutRect({ width, height });\n    const pos = { x: layoutRect.x, y: layoutRect.y };\n    if (this._spec.center === true) {\n      pos.x = layoutRect.x + layoutRect.width * 0.5 - width * 0.5;\n      pos.y = layoutRect.y + layoutRect.height * 0.5 - height * 0.5;\n    } else {\n      if (!isNil(left)) {\n        pos.x = layoutRect.x + left + this.layoutPaddingLeft;\n      } else if (!isNil(right)) {\n        pos.x = layoutRect.x + layoutRect.width - this.layoutPaddingRight - right - width;\n      }\n      if (!isNil(top)) {\n        pos.y = layoutRect.y + top + this.layoutPaddingTop;\n      } else if (!isNil(bottom)) {\n        pos.y = layoutRect.y + layoutRect.height - this.layoutPaddingBottom - bottom - height;\n      }\n    }\n\n    this.setLayoutStartPosition(pos);\n  }\n\n  setLayoutStartPosition(pos: Partial<IPoint>): void {\n    if (this._option.transformLayoutPosition) {\n      pos = this._option.transformLayoutPosition(pos);\n    }\n    if (isValidNumber(pos.x)) {\n      this._layoutStartPoint.x = pos.x;\n    }\n    if (isValidNumber(pos.y)) {\n      this._layoutStartPoint.y = pos.y;\n    }\n\n    this._model.afterSetLayoutStartPoint?.(this._layoutStartPoint);\n  }\n\n  setLayoutRect({ width, height }: Partial<ILayoutRect>, levelMap?: Partial<ILayoutRect>) {\n    if (isValidNumber(width) && (levelMap?.width ?? DEFAULT_LAYOUT_RECT_LEVEL) >= this._layoutRectLevelMap.width) {\n      this._layoutRect.width = width;\n      this._layoutRectLevelMap.width = levelMap?.width ?? DEFAULT_LAYOUT_RECT_LEVEL;\n    }\n\n    if (isValidNumber(height) && (levelMap?.height ?? DEFAULT_LAYOUT_RECT_LEVEL) >= this._layoutRectLevelMap.height) {\n      this._layoutRect.height = height;\n      this._layoutRectLevelMap.height = levelMap?.height ?? DEFAULT_LAYOUT_RECT_LEVEL;\n    }\n\n    this.setRectInSpec(this._layoutRect);\n  }\n\n  getLayout(): IRect {\n    return {\n      x: this._layoutStartPoint.x,\n      y: this._layoutStartPoint.y,\n      width: this._layoutRect.width,\n      height: this._layoutRect.height\n    };\n  }\n\n  mergeLayoutRect({ width, height }: ILayoutRect): ILayoutRect {\n    const rect = { width, height };\n    if (this._layoutRectLevelMap.width > DEFAULT_LAYOUT_RECT_LEVEL) {\n      rect.width = this._layoutRect.width;\n    }\n    if (this._layoutRectLevelMap.height > DEFAULT_LAYOUT_RECT_LEVEL) {\n      rect.height = this._layoutRect.height;\n    }\n    return rect;\n  }\n\n  getOrientPosAttribute() {\n    return this._layoutOrient === 'bottom' || this._layoutOrient === 'top' ? 'x' : 'y';\n  }\n  getOrientSizeAttribute() {\n    return this._layoutOrient === 'bottom' || this._layoutOrient === 'top' ? 'width' : 'height';\n  }\n\n  protected changeBoundsBySetting(bounds: IBoundsLike): IBoundsLike {\n    // 用户设置了布局元素宽高的场景下，内部布局结果的 bounds 不能直接作为图表布局bounds\n    if (this._layoutRectLevelMap.width > DEFAULT_LAYOUT_RECT_LEVEL) {\n      bounds.x2 = bounds.x1 + this._layoutRect.width;\n    }\n    if (this._layoutRectLevelMap.height > DEFAULT_LAYOUT_RECT_LEVEL) {\n      bounds.y2 = bounds.y1 + this._layoutRect.height;\n    }\n    bounds.x1 -= this._layoutStartPoint.x;\n    bounds.x2 -= this._layoutStartPoint.x;\n    bounds.y1 -= this._layoutStartPoint.y;\n    bounds.y2 -= this._layoutStartPoint.y;\n    return bounds;\n  }\n\n  setRectInSpec(rect: ILayoutRect) {\n    const result = { ...rect };\n    if (this._layoutRectLevelMap.width < USER_LAYOUT_RECT_LEVEL) {\n      if (!isNil(this._minWidth)) {\n        result.width = Math.max(result.width, this._minWidth);\n      }\n      if (!isNil(this._maxWidth)) {\n        result.width = Math.min(result.width, this._maxWidth);\n      }\n    } else {\n      result.width = this._layoutRect.width;\n    }\n\n    if (this._layoutRectLevelMap.height < USER_LAYOUT_RECT_LEVEL) {\n      if (!isNil(this._minHeight)) {\n        result.height = Math.max(result.height, this._minHeight);\n      }\n      if (!isNil(this._maxHeight)) {\n        result.height = Math.min(result.height, this._maxHeight);\n      }\n    } else {\n      result.height = this._layoutRect.height;\n    }\n    return result;\n  }\n\n  computeBoundsInRect(rect: ILayoutRect): ILayoutRect {\n    // 保留布局使用的rect\n    this._lastComputeRect = rect;\n\n    if (\n      (this.layoutType === 'region-relative' || this.layoutType === 'region-relative-overlap') &&\n      ((this._layoutRectLevelMap.width === USER_LAYOUT_RECT_LEVEL &&\n        (this.layoutOrient === 'left' || this.layoutOrient === 'right')) ||\n        (this._layoutRectLevelMap.height === USER_LAYOUT_RECT_LEVEL &&\n          (this.layoutOrient === 'bottom' || this.layoutOrient === 'top')))\n    ) {\n      return this._layoutRect;\n    }\n    // 将布局空间限制到 spec 设置内\n    // 避免操作到元素本身的 aabbbounds\n    const bounds = { ...this._model.getBoundsInRect(this.setRectInSpec(rect), rect) };\n    // 用户设置了布局元素宽高的场景下，内部布局结果的 bounds 不能直接作为图表布局bounds\n    this.changeBoundsBySetting(bounds);\n    // 保留当前模块的布局超出内容,用来处理自动缩进\n    // 当前 bounds 需要有实际宽高\n    if (this.autoIndent && bounds.x2 - bounds.x1 > 0 && bounds.y2 - bounds.y1 > 0) {\n      this._lastComputeOutBounds.x1 = Math.ceil(-bounds.x1);\n      this._lastComputeOutBounds.x2 = Math.ceil(bounds.x2 - rect.width);\n      this._lastComputeOutBounds.y1 = Math.ceil(-bounds.y1);\n      this._lastComputeOutBounds.y2 = Math.ceil(bounds.y2 - rect.height);\n    }\n    // 返回的布局大小也要限制到 spec 设置内\n    let result = this.setRectInSpec(boundsInRect(bounds, rect));\n    if (this._option.transformLayoutRect) {\n      result = this._option.transformLayoutRect(result);\n    }\n\n    return result;\n  }\n\n  getModelId() {\n    return this._model.id;\n  }\n\n  getModelVisible() {\n    return this._model.getVisible();\n  }\n\n  setWillLayoutTag() {\n    this._willLayoutTag = true;\n  }\n\n  clearWillLayoutTag() {\n    this._willLayoutTag = false;\n  }\n}\n"]}