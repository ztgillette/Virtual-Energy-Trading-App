{"version":3,"sources":["../src/mark/group.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAG5C,yCAA0C;AAE1C,gDAA4C;AAC5C,2CAOqB;AAKrB,yDAA2E;AAC3E,6CAAyC;AACzC,0CAAoD;AACpD,uCAA0D;AAE1D,MAAa,SAAU,SAAQ,oBAAwB;IAAvD;;QAEW,SAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACrB,WAAM,GAAY,EAAE,CAAC;QAKrB,eAAU,GAAG,qBAAS,CAAC,KAAK,CAAC;IA2IzC,CAAC;IA/IC,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAMS,WAAW,CAAC,IAAW;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,SAAS,CAAC;IAC/D,CAAC;IAED,OAAO,CAAC,IAAW;QACjB,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YAC1B,IAAA,YAAI,EAAC,uCAAuC,CAAC,CAAC;YAC9C,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU,CAAC,IAAW;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;QACnF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAA,YAAI,EAAC,0CAA0C,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa,CAAC,IAAc;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe,CAAC,EAAmB;QACjC,IAAI,MAAyB,CAAC;QAC9B,IAAA,wBAAiB,EACf,IAAI,EACJ,CAAC,CAAC,EAAE;YACF,MAAM,GAAG,CAAC,CAAC;QACb,CAAC,EACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,EACzB,IAAI,EACJ,IAAI,CACL,CAAC;QAEF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAClD,CAAC;IAES,eAAe,CAAC,MAA2B;QAEnD,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAQ9B,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAES,mBAAmB,CAAC,QAAgC,EAAE;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAErD,IAAI,CAAC,IAAA,cAAK,EAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;YACxC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;SACrD;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,QAAmC,CAAC,CAAC;IACpD,CAAC;IAED,WAAW;;QACT,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QAED,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,YAAY,mCAAI,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAEjE,IAAI,CAAC,QAAQ,CAAC,OAAO,iDAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,GACrB,IAAI,CAAC,iBAAiB,EAAE,KAC3B,SAAS,EAAE,IAAI,CAAC,UAAU,GAC3B,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAmC,CAAC,CAAC;QAClE,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAGjD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,KAAK,qBAAS,CAAC,MAAM,EAAE;YACxD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACzC,MAAM,SAAS,GAAG,IAAA,iCAA0B,EAAC,IAAI,CAAC,QAAmC,EAAE,QAAQ,CAAC,CAAC;YACjG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;YAE5C,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;gBACnE,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aACjH;YAED,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;aAC5C;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,iBAAiB;QAEf,IAAI,CAAC,UAAU,GAAG,qBAAS,CAAC,MAAM,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAA,WAAG,EAAC,gBAAgB,IAAI,CAAC,YAAY,EAAE,aAAa,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;;AAlJH,8BAmJC;AAlJiB,cAAI,WAAsB;AAoJrC,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,IAAA,iCAAkB,GAAE,CAAC;IACrB,IAAA,4BAAa,GAAE,CAAC;IAChB,iBAAO,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAClD,CAAC,CAAC;AAJW,QAAA,iBAAiB,qBAI5B","file":"group.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { Maybe } from '../typings';\n// eslint-disable-next-line no-duplicate-imports\nimport { log, warn } from '../util/debug';\nimport type { IGroupMarkSpec } from '../typings/visual';\nimport { BaseMark } from './base/base-mark';\nimport {\n  DiffState,\n  type AnimationStateValues,\n  type IGroupMark,\n  type IMark,\n  type IMarkGraphic,\n  type MarkType\n} from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport { type IMarkCompileOption } from '../compile/mark';\nimport type { IGroup, IGroupGraphicAttribute } from '@visactor/vrender-core';\nimport { registerGroup, registerShadowRoot } from '@visactor/vrender-kits';\nimport { isNil } from '@visactor/vutils';\nimport { traverseGroupMark } from '../compile/util';\nimport { getDiffAttributesOfGraphic } from '../util/mark';\n\nexport class GroupMark extends BaseMark<IGroupMarkSpec> implements IGroupMark {\n  static readonly type = MarkTypeEnum.group;\n  readonly type = GroupMark.type;\n  protected _marks: IMark[] = [];\n  getMarks(): IMark[] {\n    return this._marks;\n  }\n\n  protected _diffState = DiffState.enter;\n  protected declare _product: Maybe<IGroup>;\n  declare getProduct: () => Maybe<IGroup>;\n\n  protected isMarkExist(mark: IMark): boolean {\n    return this._marks.find(m => m.id === mark.id) !== undefined;\n  }\n\n  addMark(mark: IMark): boolean {\n    if (this.isMarkExist(mark)) {\n      warn('Mark already exists, add mark failed.');\n      return false;\n    }\n\n    this._marks.push(mark);\n    return true;\n  }\n\n  removeMark(mark: IMark): boolean {\n    const index = this._marks.findIndex(m => m.id === mark.id || m.name === mark.name);\n    if (index === -1) {\n      warn('Mark does not exists, removeMark failed.');\n      return false;\n    }\n    this._marks.splice(index, 1);\n    return true;\n  }\n\n  getMarkInType(type: MarkType) {\n    return this._marks.filter(m => m.type === type);\n  }\n\n  getMarkInId(id: number) {\n    return this._marks.find(m => m.id === id);\n  }\n\n  getMarkInUserId(id: string | number) {\n    let result: IMark | undefined;\n    traverseGroupMark(\n      this,\n      m => {\n        result = m;\n      },\n      m => m.getUserId() === id,\n      null,\n      true\n    );\n\n    return result;\n  }\n\n  getMarkInName(name: string) {\n    return this._marks.filter(m => m.name === name);\n  }\n\n  protected _compileProduct(option?: IMarkCompileOption): void {\n    // 编译自身\n    super._compileProduct(option);\n\n    // 设置zIndex\n    // this._product.configure({\n    //   zIndex: this._markConfig.zIndex\n    // });\n\n    // 编译子元素\n    this.getMarks().forEach(mark => {\n      mark.compile({ group: this._product });\n    });\n  }\n\n  protected _getAttrsFromConfig(attrs: IGroupGraphicAttribute = {}) {\n    const configAttrs = super._getAttrsFromConfig(attrs);\n\n    if (!isNil(this._markConfig.interactive)) {\n      configAttrs.pickable = this._markConfig.interactive;\n    }\n    return attrs;\n  }\n\n  getGraphics(): IMarkGraphic[] {\n    return [this._product as unknown as IMarkGraphic];\n  }\n\n  renderInner() {\n    if (!this._product) {\n      return;\n    }\n\n    const style = this._simpleStyle ?? this.getAttributesOfState({});\n\n    this._product.context = {\n      ...this._product.context,\n      ...this._getCommonContext(),\n      diffState: this._diffState\n    };\n    this._setAnimationState(this._product as unknown as IMarkGraphic);\n    const newAttrs = this._getAttrsFromConfig(style);\n\n    // TODO: 需要优化，现在group mark 走了一些特殊逻辑\n    if (this._product.context.diffState === DiffState.update) {\n      const hasAnimation = this.hasAnimation();\n      const diffAttrs = getDiffAttributesOfGraphic(this._product as unknown as IMarkGraphic, newAttrs);\n      this._product.context.diffAttrs = diffAttrs;\n\n      if (!this.hasAnimationByState(this._product.context.animationState)) {\n        hasAnimation ? this._product.setAttributesAndPreventAnimate(diffAttrs) : this._product.setAttributes(diffAttrs);\n      }\n\n      if (hasAnimation) {\n        this._product.setFinalAttributes(newAttrs);\n      }\n    } else {\n      this._product.setAttributes(newAttrs);\n    }\n\n    this.needClear = true;\n  }\n\n  clearExitGraphics() {\n    // group 暂时不需要clear元素，完成首次渲染后 将状态设置为update\n    this._diffState = DiffState.update;\n  }\n\n  render(): void {\n    if (this._isCommited) {\n      log(`render mark: ${this.getProductId()}, type is ${this.type}`);\n      this.renderInner();\n      this.uncommit();\n    }\n\n    this.getMarks().forEach(mark => {\n      mark.render();\n    });\n  }\n\n  release() {\n    super.release();\n    this.removeProduct();\n  }\n}\n\nexport const registerGroupMark = () => {\n  registerShadowRoot();\n  registerGroup();\n  Factory.registerMark(GroupMark.type, GroupMark);\n};\n"]}