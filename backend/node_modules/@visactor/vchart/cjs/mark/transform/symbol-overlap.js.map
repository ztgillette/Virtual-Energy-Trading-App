{"version":3,"sources":["../src/mark/transform/symbol-overlap.ts"],"names":[],"mappings":"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","file":"symbol-overlap.js","sourcesContent":["import type { ISymbolGraphicAttribute } from '@visactor/vrender-core';\nimport { PREFIX } from '../../constant/base';\nimport { isNil } from '@visactor/vutils';\nimport { Factory } from '../../core/factory';\nimport type { IMarkGraphic } from '../interface';\n\nexport const OVERLAP_HIDE_KEY = `${PREFIX}_hide_`;\n\nfunction setVisible(g: IMarkGraphic, visible: boolean) {\n  if (g.context.finalAttrs) {\n    g.context.finalAttrs.visible = visible;\n  }\n}\n\nfunction reset(graphics: IMarkGraphic[]) {\n  graphics.forEach(g => {\n    const hide = (g as any)[OVERLAP_HIDE_KEY];\n\n    if (hide) {\n      setVisible(g, true);\n\n      (g as any)[OVERLAP_HIDE_KEY] = false;\n    }\n  });\n  return graphics;\n}\n\nfunction overlapX(graphics: IMarkGraphic[], delta: number, deltaMul: number) {\n  let lastX = -Infinity;\n  let lastR = 0;\n  const useDeltaMul = isNil(delta);\n  let itemDelta = delta;\n\n  graphics.forEach(g => {\n    if (g.context.finalAttrs.visible === false) {\n      // skip hidden points\n      return;\n    }\n\n    const r = ((g.context.finalAttrs as ISymbolGraphicAttribute).size as number) / 2;\n    const currentX = g.context.finalAttrs.x;\n    if (useDeltaMul) {\n      itemDelta = (r + lastR) * deltaMul;\n    }\n    if (Math.abs(currentX - lastX) < itemDelta + lastR + r) {\n      if (!(g.context.finalAttrs as any).forceShow) {\n        (g as any)[OVERLAP_HIDE_KEY] = true;\n\n        setVisible(g, false);\n      }\n    } else {\n      lastX = currentX;\n    }\n\n    lastR = r;\n  });\n}\n\nfunction overlapY(graphics: IMarkGraphic[], delta: number, deltaMul: number) {\n  let lastY = -Infinity;\n  let lastR = 0;\n  const useDeltaMul = isNil(delta);\n  let itemDelta = delta;\n\n  graphics.forEach(g => {\n    if (g.context.finalAttrs.visible === false) {\n      // skip hidden points\n      return;\n    }\n\n    const r = ((g.context.finalAttrs as ISymbolGraphicAttribute).size as number) / 2;\n    const currentY = g.context.finalAttrs.y;\n    if (useDeltaMul) {\n      itemDelta = (r + lastR) * deltaMul;\n    }\n    if (Math.abs(currentY - lastY) < itemDelta + lastR + r) {\n      if (!(g.context.finalAttrs as any).forceShow) {\n        (g as any)[OVERLAP_HIDE_KEY] = true;\n\n        setVisible(g, false);\n      }\n    } else {\n      lastY = currentY;\n    }\n\n    lastR = r;\n  });\n}\n\nfunction overlapXY(graphics: IMarkGraphic[], delta: number, deltaMul: number) {\n  const lastX = -Infinity;\n  let lastY = -Infinity;\n  let lastR = 0;\n  let dis = 0;\n  const useDeltaMul = isNil(delta);\n  let itemDelta = delta;\n\n  graphics.forEach(g => {\n    if (g.context.finalAttrs.visible === false) {\n      // skip hidden points\n      return;\n    }\n\n    const r = ((g.context.finalAttrs as ISymbolGraphicAttribute).size as number) / 2;\n    const { x: currentX, y: currentY } = g.context.finalAttrs;\n\n    if (useDeltaMul) {\n      itemDelta = (r + lastR) * deltaMul;\n    }\n    dis = (lastX - currentX) ** 2 + (lastY - currentY) ** 2;\n    if (dis < (itemDelta + lastR + r) ** 2) {\n      if (!(g.context.finalAttrs as any).forceShow) {\n        (g as any)[OVERLAP_HIDE_KEY] = true;\n\n        setVisible(g, false);\n      }\n    } else {\n      lastY = currentY;\n    }\n\n    lastR = r;\n  });\n}\n\n/**\n * 针对mark的防重叠\n * @param {object} options - The parameters for this operator.\n * @param {data} [options.followMark]\n * @constructor\n */\nexport const transform = (\n  options: {\n    direction: number;\n    delta?: number;\n    deltaMul?: number;\n    hideMode?: number;\n    forceUpdate?: boolean;\n    forceUpdateStamp?: number;\n    groupBy?: string;\n    sort?: boolean;\n  },\n  upstreamData: IMarkGraphic[]\n) => {\n  if (!upstreamData || upstreamData.length === 0) {\n    return upstreamData;\n  }\n\n  const { direction, delta, deltaMul = 1, groupBy } = options;\n\n  const handleOverlap = (graphics: IMarkGraphic[]) => {\n    reset(graphics);\n\n    const sortedgraphics = options.sort\n      ? graphics.slice().sort((a, b) => {\n          return a.context.finalAttrs.x - b.context.finalAttrs.x;\n        })\n      : graphics;\n\n    if (direction === 0) {\n      overlapXY(sortedgraphics, delta, deltaMul);\n    } else if (direction === 1) {\n      overlapX(sortedgraphics, delta, deltaMul);\n    } else {\n      overlapY(sortedgraphics, delta, deltaMul);\n    }\n  };\n\n  if (!groupBy) {\n    handleOverlap(upstreamData);\n  } else {\n    // 分组\n    const map = upstreamData.reduce((res: { [key: string]: IMarkGraphic[] }, g: IMarkGraphic) => {\n      const groupName = g.context.data?.[0]?.[groupBy];\n\n      if (res[groupName]) {\n        res[groupName].push(g);\n      } else {\n        res[groupName] = [g];\n      }\n\n      return res;\n    }, {});\n\n    Object.keys(map).forEach(key => {\n      handleOverlap(map[key]);\n    });\n  }\n\n  return upstreamData;\n};\n\nexport const registerSymbolOverlapTransform = () => {\n  Factory.registerGrammarTransform('symbolOverlap', {\n    transform,\n    runType: 'afterEncode'\n  });\n};\n"]}