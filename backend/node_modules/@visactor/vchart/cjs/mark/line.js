"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerLineMark = exports.LineMark = void 0;

const factory_1 = require("./../core/factory"), type_1 = require("../series/interface/type"), base_line_1 = require("./base/base-line"), config_1 = require("../animation/config"), vrender_core_1 = require("@visactor/vrender-core"), vrender_kits_1 = require("@visactor/vrender-kits"), vrender_components_1 = require("@visactor/vrender-components");

class LineMark extends base_line_1.BaseLineMark {
    constructor() {
        super(...arguments), this.type = LineMark.type;
    }
    _getDefaultStyle() {
        return Object.assign(Object.assign({}, super._getDefaultStyle()), {
            lineWidth: 1
        });
    }
    _getIgnoreAttributes() {
        var _a, _b;
        return (null === (_a = this.model) || void 0 === _a ? void 0 : _a.type) === type_1.SeriesTypeEnum.radar && "polar" === (null === (_b = this.model) || void 0 === _b ? void 0 : _b.coordinate) ? [] : [ "fill", "fillOpacity" ];
    }
}

exports.LineMark = LineMark, LineMark.type = "line";

const registerLineMark = () => {
    factory_1.Factory.registerMark(LineMark.type, LineMark), (0, vrender_kits_1.registerShadowRoot)(), 
    (0, vrender_kits_1.registerLine)(), (0, vrender_components_1.registerLineDataLabel)(), 
    (0, vrender_components_1.registerSymbolDataLabel)(), (0, config_1.registerLineOrAreaAnimation)(), 
    factory_1.Factory.registerGraphicComponent("line", vrender_core_1.createLine);
};

exports.registerLineMark = registerLineMark;
//# sourceMappingURL=line.js.map
