"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerSymbolMark = exports.SymbolMark = void 0;

const factory_1 = require("./../core/factory"), base_mark_1 = require("./base/base-mark"), vrender_core_1 = require("@visactor/vrender-core"), vrender_kits_1 = require("@visactor/vrender-kits"), vrender_components_1 = require("@visactor/vrender-components"), vutils_1 = require("@visactor/vutils");

class SymbolMark extends base_mark_1.BaseMark {
    constructor() {
        super(...arguments), this.type = SymbolMark.type;
    }
    _getDefaultStyle() {
        return Object.assign(Object.assign({}, super._getDefaultStyle()), {
            size: 1,
            symbolType: "circle",
            fill: void 0,
            lineWidth: 0
        });
    }
    _transformGraphicAttributes(g, attrs, groupAttrs) {
        var _a, _b, _c;
        const symbolAttrs = super._transformGraphicAttributes(g, attrs, groupAttrs), symbolType = null !== (_b = null !== (_a = symbolAttrs.shape) && void 0 !== _a ? _a : symbolAttrs.symbolType) && void 0 !== _b ? _b : null === (_c = g.attribute) || void 0 === _c ? void 0 : _c.symbolType;
        return (0, vutils_1.isNil)(symbolType) ? symbolAttrs.symbolType = "circle" : symbolAttrs.symbolType = symbolType, 
        symbolAttrs;
    }
}

exports.SymbolMark = SymbolMark, SymbolMark.type = "symbol";

const registerSymbolMark = () => {
    factory_1.Factory.registerMark(SymbolMark.type, SymbolMark), (0, vrender_kits_1.registerShadowRoot)(), 
    (0, vrender_kits_1.registerSymbol)(), (0, vrender_components_1.registerSymbolDataLabel)(), 
    factory_1.Factory.registerGraphicComponent("symbol", vrender_core_1.createSymbol);
};

exports.registerSymbolMark = registerSymbolMark;
//# sourceMappingURL=symbol.js.map
