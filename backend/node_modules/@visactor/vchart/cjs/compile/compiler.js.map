{"version":3,"sources":["../src/compile/compiler.ts"],"names":[],"mappings":"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","file":"compiler.js","sourcesContent":["import { ChartEvent, Event_Source_Type } from './../constant/event';\nimport type {\n  CompilerListenerParameters,\n  ICompiler,\n  ICompilerModel,\n  IRenderContainer,\n  IRenderOption\n} from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { LayoutState } from './interface';\nimport { GrammarType } from './interface/compilable-item';\nimport { isMobileLikeMode, isTrueBrowser } from '../util/env';\nimport { isString } from '../util/type';\nimport type { IBoundsLike } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isObject, isValid } from '@visactor/vutils';\nimport type { EventSourceType } from '../event/interface';\nimport type { IChart } from '../chart/interface';\nimport { createGroup, Stage, vglobal, waitForAllSubLayers } from '@visactor/vrender-core';\nimport type { IColor, IEventTarget, IGroup, IStage } from '@visactor/vrender-core';\nimport type { IMorphConfig } from '../animation/spec';\nimport type { IVChart, IVChartRenderOption } from '../core/interface';\nimport { type IGraphicContext, type IMark, type IMarkGraphic } from '../mark/interface';\nimport { Factory } from '../core/factory';\nimport type { Gesture } from '@visactor/vrender-kits';\nimport { findMarkGraphic, getDatumOfGraphic } from '../util/mark';\nimport { diffMarks, findSimpleMarks, toRenderMode, traverseGroupMark } from './util';\nimport { log } from '../util/debug';\n\ntype EventListener = {\n  type: string;\n  callback: (...args: any[]) => void;\n};\n\nexport class Compiler implements ICompiler {\n  private _count: number = 0;\n  /**\n   *  更新后缓存的mark\n   */\n  private _cachedMarks: IMark[];\n\n  private _progressiveMarks?: IMark[];\n\n  /**\n   * 增量渲染相关的raf id\n   */\n  private _progressiveRafId?: number;\n\n  protected _rootMarks: IMark[] = [];\n\n  protected _stage: IStage;\n\n  protected _rootGroup: IGroup;\n\n  getRootGroup() {\n    return this._rootGroup;\n  }\n\n  protected _viewListeners: Map<(...args: any[]) => any, EventListener> = new Map();\n  protected _windowListeners: Map<(...args: any[]) => any, EventListener> = new Map();\n  protected _canvasListeners: Map<(...args: any[]) => any, EventListener> = new Map();\n\n  isInited: boolean = false;\n\n  private _nextRafId: number;\n\n  protected _width: number;\n  protected _height: number;\n\n  protected _container: IRenderContainer;\n  protected _option: IRenderOption;\n  // 已释放标记\n  private _released: boolean = false;\n\n  /** 布局阶段 */\n  private _layoutState?: LayoutState;\n\n  private _compileChart: IChart = null;\n\n  constructor(container: IRenderContainer, option: IRenderOption) {\n    this._container = container;\n    this._option = option;\n  }\n\n  getChart() {\n    return this._compileChart;\n  }\n  /**\n   * 获取 canvas dom\n   * @returns HTMLCanvasElement | undefined\n   */\n  getCanvas(): HTMLCanvasElement | undefined {\n    return this._stage?.window.getNativeHandler().nativeCanvas;\n  }\n\n  _gestureController?: Gesture;\n  /**\n   * 获取 渲染引擎\n   */\n  getStage(): IStage | undefined {\n    return this._stage;\n  }\n\n  initView() {\n    if (this._released) {\n      return;\n    }\n    this.isInited = true;\n    if (this._stage) {\n      return;\n    }\n\n    const {\n      autoRefreshDpr,\n      dpr,\n      mode,\n      modeParams,\n      gestureConfig,\n      interactive,\n      clickInterval,\n      autoPreventDefault,\n      background\n    } = this._option;\n    vglobal.setEnv(toRenderMode(mode), modeParams ?? {});\n    this._stage =\n      this._option.stage ??\n      (new Stage({\n        background,\n        width: this._width,\n        height: this._height,\n        container: this._container.dom ?? null,\n        canvas: this._container.canvas ?? null,\n        dpr,\n        viewBox: this._option.viewBox,\n        canvasControled: this._option.canvasControled,\n        beforeRender: (stage: IStage) => {\n          this._compileChart?.onBeforeRender();\n          this._option.beforeRender?.(stage);\n        },\n        afterRender: this._option.afterRender,\n        disableDirtyBounds: true,\n        autoRender: true,\n        ticker: this._option.ticker,\n        pluginList: this._option.pluginList,\n        enableHtmlAttribute: this._option.enableHtmlAttribute,\n        optimize: this._option.optimize,\n        supportsTouchEvents: this._option.supportsTouchEvents,\n        supportsPointerEvents: this._option.supportsPointerEvents,\n        event: {\n          clickInterval: clickInterval,\n          autoPreventDefault: autoPreventDefault\n        },\n        ReactDOM: this._option.ReactDOM,\n        autoRefresh: isValid(autoRefreshDpr) ? autoRefreshDpr : !isValid(dpr),\n        ...(this._option.renderHooks ?? {})\n      }) as unknown as IStage);\n\n    this._stage.enableIncrementalAutoRender();\n\n    // 之前vgrammar 设置了一些默认配置\n    (this._stage as any).setTheme({\n      symbol: {\n        shape: 'circle',\n        size: 8\n      },\n      text: {\n        fontSize: 14,\n        fill: '#000000'\n      }\n    });\n\n    const group = createGroup({\n      x: 0,\n      y: 0,\n      width: this._width,\n      height: this._height\n    });\n    group.name = 'root';\n    this._stage.defaultLayer.appendChild(group);\n    this._rootGroup = group;\n    const GestureController =\n      (isValid(gestureConfig) ? (gestureConfig as any) : isMobileLikeMode(mode)) &&\n      interactive !== false &&\n      Factory.getStageEventPlugin('gesture');\n\n    if (GestureController) {\n      this._gestureController = new GestureController(\n        this._stage as unknown as IEventTarget,\n        isObject(gestureConfig) ? gestureConfig : {}\n      ) as Gesture;\n    }\n\n    this._setCanvasStyle();\n\n    // emit afterRender event\n    this.getStage().hooks.afterRender.tap('chart-event', this.handleStageRender);\n\n    if (interactive !== false) {\n      // 将 view 实例化之前监听的事件挂载到 view 上\n      this._viewListeners.forEach(listener => {\n        //this._view?.addEventListener(listener.type, listener.callback);\n      });\n    }\n  }\n\n  getLayoutState() {\n    return this._layoutState;\n  }\n\n  updateLayoutTag() {\n    this._layoutState = LayoutState.before;\n  }\n\n  protected handleLayoutEnd = () => {\n    this._compileChart?.getEvent()?.emit(ChartEvent.afterMarkLayoutEnd, { chart: this._compileChart });\n  };\n\n  protected handleStageRender = () => {\n    this._compileChart?.getEvent()?.emit(ChartEvent.afterRender, { chart: this._compileChart });\n  };\n\n  private _setCanvasStyle() {\n    if (!this._stage) {\n      return;\n    }\n    if (this._container.dom && !isString(this._container.dom)) {\n      this._container.dom.style.display = 'block';\n      this._container.dom.style.position = 'relative';\n      const canvas = this.getCanvas();\n      if (canvas) {\n        canvas.style.display = 'block';\n      }\n    }\n  }\n\n  compile(ctx: { chart: IChart; vChart: IVChart }, option?: IVChartRenderOption) {\n    if (this._released) {\n      return;\n    }\n    const { chart } = ctx;\n    this._compileChart = chart;\n    this.initView();\n    if (!this._stage) {\n      return;\n    }\n\n    if (option?.actionSource !== 'render' && this._cachedMarks) {\n      this.reuseOrMorphing(option.morphConfig);\n      // 清除缓存\n      this._cachedMarks = null;\n    }\n\n    chart.compile();\n    chart.afterCompile();\n  }\n  protected clearNextRender() {\n    if (this._nextRafId) {\n      vglobal.getSpecifiedCancelAnimationFrame(10)(this._nextRafId);\n      this._nextRafId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  clear(ctx: { chart: IChart; vChart: IVChart }) {\n    const { chart } = ctx;\n\n    this.clearNextRender();\n    chart.clear();\n  }\n\n  renderNextTick(morphConfig?: IMorphConfig): void {\n    if (this._released) {\n      return;\n    }\n    if (this._nextRafId) {\n      this.clearNextRender();\n    }\n\n    this._nextRafId = vglobal.getSpecifiedRequestAnimationFrame(10)(() => {\n      this._nextRafId = null;\n      this.render(morphConfig);\n    }) as unknown as number;\n  }\n\n  protected _commitedAll() {\n    return this._rootMarks.some(mark => {\n      return traverseGroupMark(mark, m => m.commit());\n    });\n  }\n\n  protected _hasCommitedMark() {\n    return this._rootMarks.some(mark => {\n      return traverseGroupMark(mark, m => m.isCommited(), null, null, true);\n    });\n  }\n\n  private _handleAfterNextRender = () => {\n    if (this._stage && !this._option.disableDirtyBounds) {\n      this._stage.enableDirtyBounds();\n    }\n\n    if (this._compileChart) {\n      this._compileChart.getEvent()?.emit(ChartEvent.renderFinished, {\n        chart: this._compileChart,\n        vchart: this._compileChart.getOption()?.globalInstance\n      });\n    }\n    this._option.performanceHook?.afterVRenderDraw?.(this._compileChart.getOption().globalInstance);\n  };\n\n  private _doRender(immediately: boolean) {\n    if (this._stage) {\n      this._rootMarks.forEach(g => {\n        traverseGroupMark(\n          g,\n          m => {\n            if (m.needClear) {\n              if (!this._progressiveMarks) {\n                m.runAnimation();\n              }\n              m.clearExitGraphics();\n              m.needClear = false;\n            }\n          },\n          null,\n          true\n        );\n      });\n\n      this._option.performanceHook?.beforeVRenderDraw?.(this._compileChart.getOption().globalInstance);\n      // 全量渲染的时候先关闭dirty bounds 提升性能\n      this._stage.disableDirtyBounds();\n      this._stage.afterNextRender(this._handleAfterNextRender);\n\n      if (immediately) {\n        this._stage.render();\n\n        this._option.performanceHook?.afterVRenderDraw?.(this._compileChart.getOption().globalInstance);\n      }\n    }\n  }\n\n  renderMarks() {\n    if (!this._hasCommitedMark()) {\n      return;\n    }\n\n    log(`--- start of renderMarks(${this._count}) ---`);\n    this.clearProgressive();\n\n    // 更新所有的mark\n    this._rootMarks.forEach(mark => {\n      mark.render();\n    });\n\n    if (this._layoutState === LayoutState.before) {\n      // 需要更新布局\n      this._layoutState = LayoutState.layouting;\n      this._compileChart?.onLayout();\n      this._layoutState = LayoutState.reevaluate;\n\n      if (this._hasCommitedMark()) {\n        // 第二次更新所有的mark\n        this._rootMarks.forEach(mark => {\n          mark.render();\n        });\n      }\n      this.handleLayoutEnd();\n    }\n\n    this.findProgressiveMarks();\n\n    this._doRender(true);\n    this.doPreProgressive();\n\n    log(`--- start of renderMarks(${this._count}) ---`);\n    this._count++;\n  }\n\n  reuseOrMorphing(morphConfig: IMorphConfig = {}) {\n    const { reuse = true, morph = true, morphAll = false, animation = {}, enableExitAnimation = false } = morphConfig;\n    const newMarks = findSimpleMarks(this._rootMarks);\n    const { update, exit } = diffMarks(this._cachedMarks, newMarks, { morph, morphAll, reuse });\n\n    update.forEach(({ prev, next }) => {\n      // const enableMarkMorphConfig =\n      //   prev.every(mark => mark.getMarkConfig().morph) && next.every(mark => mark.getMarkConfig().morph);\n\n      // 优先复用\n      if (reuse && prev.length === 1 && next.length === 1 && prev[0].type === next[0].type) {\n        next[0].reuse(prev[0]);\n      } else {\n        // 执行morphing\n        const prevMark = prev.filter(item => item.getMarkConfig().morph)[0];\n        prevMark &&\n          next.forEach(item => {\n            item.getMarkConfig().morph && item.prepareMorph(prevMark);\n          });\n      }\n    });\n\n    // todo 离场元素执行exit动画\n    exit.forEach(({ prev }) => {\n      prev.forEach(m => {\n        m.removeProduct();\n      });\n    });\n  }\n\n  render(morphConfig?: IMorphConfig) {\n    if (this._released) {\n      return;\n    }\n    this.clearNextRender();\n\n    this.initView();\n    if (!this._stage) {\n      return;\n    }\n\n    const { width, height } = this._rootGroup.attribute;\n\n    // 更新rootGroup的宽高\n    if (this._width !== width || this._height !== height) {\n      this._rootGroup.setAttributes({ width: this._width, height: this._height });\n    }\n\n    this.renderMarks();\n    if (this.clearNextRender()) {\n      this.renderMarks();\n    }\n  }\n\n  updateViewBox(viewBox: IBoundsLike, reRender: boolean = true) {\n    if (!this._stage) {\n      return;\n    }\n    const prevViewBox = this._stage.viewBox;\n    if (\n      viewBox &&\n      (!prevViewBox ||\n        prevViewBox.x1 !== viewBox.x1 ||\n        prevViewBox.y1 !== viewBox.y1 ||\n        prevViewBox.x2 !== viewBox.x2 ||\n        prevViewBox.y2 !== viewBox.y2)\n    ) {\n      (this._stage as any).setViewBox(viewBox, reRender);\n    }\n  }\n\n  resize(width: number, height: number, reRender: boolean = true) {\n    if (!this._stage) {\n      return;\n    }\n    const hasChange = this._width !== width || this._height !== height;\n\n    this._width = width;\n    this._height = height;\n\n    if (hasChange) {\n      this._stage.resize(width, height);\n      this._commitedAll();\n\n      // todo resize\n      if (reRender) {\n        this.render({ morph: false });\n      }\n    }\n  }\n\n  setBackground(color: IColor) {\n    if (this._stage) {\n      this._stage.background = color;\n    }\n  }\n\n  setSize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n    if (!this._stage) {\n      return;\n    }\n\n    // todo set size of stage\n  }\n\n  setViewBox(viewBox: IBoundsLike, reRender: boolean = true) {\n    this.updateViewBox(viewBox, reRender);\n  }\n\n  addEventListener(\n    source: EventSourceType,\n    type: string,\n    callback: (params: CompilerListenerParameters) => void\n  ): void {\n    // TODO: 需要明确一下 interactive 的作用范围，同时考虑是否存在非交互行为的事件以及是否需要生效\n    if (this._option.interactive === false) {\n      return;\n    }\n    if (source === Event_Source_Type.chart) {\n      const rootGroup = this.getRootGroup();\n      const wrappedCallback = function (event: any) {\n        const graphic = event.target;\n        let markGraphic: IMarkGraphic = null;\n\n        if (graphic) {\n          if (isValid(graphic.context)) {\n            markGraphic = graphic;\n          } else {\n            markGraphic = findMarkGraphic(rootGroup, graphic) as unknown as IMarkGraphic;\n          }\n        }\n        const context = (markGraphic?.context ?? {}) as Partial<IGraphicContext>;\n        const markId = isValid(context.markId) ? context.markId : null;\n        const modelId = isValid(context.modelId) ? context.modelId : null;\n        const modelUserId = isValid(context.modelUserId) ? context.modelUserId : null;\n        const markUserId = isValid(context.markUserId) ? context.markUserId : null;\n\n        const params: CompilerListenerParameters = {\n          event,\n          type,\n          source,\n          item: markGraphic,\n          datum: getDatumOfGraphic(markGraphic), // 是否要区分图元\n          markId,\n          modelId,\n          markUserId,\n          modelUserId\n        };\n        callback.call(null, params);\n      }.bind(this);\n      this._viewListeners.set(callback, { type, callback: wrappedCallback });\n      // 如果 view 已经初始化则立刻挂载监听\n      // FIXME: 目前 vgrammar 类型声明没有对齐，事件相关类型声明并没有使用 SceneItem\n      //todo\n      this._stage?.addEventListener(type, wrappedCallback as any);\n    } else if (source === Event_Source_Type.window) {\n      const wrappedCallback = function wrappedCallback(event: any) {\n        // TODO: vgrammar 暂未提供基于事件直接筛选相应 mark 的能力，这里无法获取到相应的 item\n        const params: CompilerListenerParameters = {\n          event,\n          type,\n          source,\n          item: null,\n          datum: null,\n          markId: null,\n          modelId: null,\n          markUserId: null,\n          modelUserId: null\n        };\n        callback.call(null, params);\n      }.bind(this);\n      this._windowListeners.set(callback, { type, callback: wrappedCallback });\n      const windowObject = this._getGlobalThis();\n      windowObject?.addEventListener(type, wrappedCallback);\n    } else if (source === Event_Source_Type.canvas) {\n      const wrappedCallback = function wrappedCallback(event: any) {\n        // TODO: vgrammar 暂未提供基于事件直接筛选相应 mark 的能力，这里无法获取到相应的 item\n        const params: CompilerListenerParameters = {\n          event,\n          type,\n          source,\n          item: null,\n          datum: null,\n          markId: null,\n          modelId: null,\n          markUserId: null,\n          modelUserId: null\n        };\n        callback.call(null, params);\n      }.bind(this);\n      this._canvasListeners.set(callback, { type, callback: wrappedCallback });\n      const canvasObject = this.getStage()?.window;\n      canvasObject?.addEventListener(type, wrappedCallback);\n    }\n  }\n\n  removeEventListener(\n    source: EventSourceType,\n    type: string,\n    callback: (params: CompilerListenerParameters) => void\n  ): void {\n    if (this._option.interactive === false) {\n      return;\n    }\n    if (source === Event_Source_Type.chart) {\n      const wrappedCallback = this._viewListeners.get(callback)?.callback;\n      wrappedCallback && this._stage?.removeEventListener(type, wrappedCallback);\n      this._viewListeners.delete(callback);\n    } else if (source === Event_Source_Type.window) {\n      const windowObject = this._getGlobalThis();\n      const wrappedCallback = this._windowListeners.get(callback)?.callback;\n      wrappedCallback && windowObject?.removeEventListener(type, wrappedCallback);\n      this._windowListeners.delete(callback);\n    } else if (source === Event_Source_Type.canvas) {\n      const canvasObject = this.getStage()?.window;\n      const wrappedCallback = this._canvasListeners.get(callback)?.callback;\n      canvasObject && wrappedCallback && canvasObject?.removeEventListener(type, wrappedCallback);\n      this._canvasListeners.delete(callback);\n    }\n  }\n\n  protected releaseEvent(): void {\n    const stage = this.getStage();\n\n    if (stage) {\n      stage.hooks.afterRender.unTap('chart-event', this.handleStageRender);\n    }\n\n    // 相应的事件remove在model中完成\n    this._viewListeners.clear();\n    this._windowListeners.clear();\n    this._canvasListeners.clear();\n  }\n\n  release(): void {\n    this.clearNextRender();\n    this.releaseEvent();\n    this._option = this._container = null as any;\n    // vgrammar release\n    this.releaseGrammar(true);\n\n    if (this._stage !== this._option?.stage) {\n      // don't release the stage created by outside\n      this._stage.release();\n    }\n    this._stage = null;\n\n    this.isInited = false;\n    this._compileChart = null;\n    this._released = true;\n  }\n\n  /**\n   * 释放VGrammar\n   * @param removeGraphicItems 是否删除场景元素，在同步渲染，并且无动画时，必须设置为true，否则有绘图残留\n   */\n  releaseGrammar(removeGraphicItems: boolean = false) {\n    // this._releaseModel();\n    if (removeGraphicItems) {\n      // 彻底删除图形\n      this._rootMarks.forEach(g => {\n        traverseGroupMark(\n          g,\n          m => {\n            m.removeProduct();\n          },\n          null,\n          true\n        );\n      });\n    } else {\n      this._cachedMarks = findSimpleMarks(this._rootMarks);\n    }\n    this._rootMarks = [];\n  }\n\n  // protected _releaseModel() {\n  //   // 释放model\n  //   Object.keys(this._model).forEach(type => {\n  //     Object.values((this._model as any)[type] as IProductMap<IGrammarItem>).forEach(grammarItemMap => {\n  //       Object.values(grammarItemMap).forEach((item: IGrammarItem) => {\n  //         item.removeProduct(true); // 保留 vgrammar 语法元素，下面一起清空\n  //       });\n  //     });\n  //     (this._model as any)[type] = {};\n  //   });\n  // }\n\n  addRootMark(mark: IMark) {\n    if (!this._rootMarks.includes(mark)) {\n      this._rootMarks.push(mark);\n    }\n  }\n\n  getRootMarks() {\n    return this._rootMarks;\n  }\n\n  removeRootMark(mark: IMark) {\n    const index = this._rootMarks.findIndex(m => m === mark);\n\n    if (index >= 0) {\n      this._rootMarks.splice(index, 1);\n\n      return true;\n    }\n    return false;\n  }\n\n  private _getGlobalThis() {\n    return isTrueBrowser(this._option.mode) ? globalThis : this.getStage()?.window;\n  }\n\n  private _combineIncrementalLayers() {\n    if (this._stage) {\n      waitForAllSubLayers(this._stage).then(() => {\n        // stage might be null in current tick\n        if (this._stage) {\n          this._stage.defaultLayer.combineSubLayer();\n        }\n      });\n    }\n  }\n\n  private findProgressiveMarks() {\n    const marks: IMark[] = [];\n\n    this._rootMarks.forEach(mark => {\n      traverseGroupMark(mark, m => {\n        if (m.isProgressive()) {\n          marks.push(m);\n        }\n      });\n    });\n\n    if (!marks.length) {\n      this._progressiveMarks = null;\n      return null;\n    }\n\n    this._progressiveMarks = marks;\n\n    this._combineIncrementalLayers();\n\n    return marks;\n  }\n\n  private doPreProgressive() {\n    if (this._progressiveMarks && this._progressiveMarks.some(mark => mark.isDoingProgressive())) {\n      const raf = vglobal.getSpecifiedRequestAnimationFrame(10);\n      this._progressiveRafId = raf(this.handleProgressiveFrame);\n    } else if (this._progressiveMarks && this._progressiveMarks.every(mark => mark.canAnimateAfterProgressive())) {\n      this._progressiveMarks.forEach(mark => {\n        mark.runAnimation();\n      });\n    } else if (this._progressiveMarks) {\n      this._progressiveMarks = null;\n    }\n  }\n\n  /** 监听frame事件，更新增量元素的mark */\n  private handleProgressiveFrame = () => {\n    if (this._progressiveMarks.length) {\n      this._progressiveMarks.forEach(mark => {\n        if (mark.isDoingProgressive()) {\n          mark.renderProgressive();\n        }\n      });\n    }\n\n    this.doPreProgressive();\n  };\n\n  /** 清除 */\n  private clearProgressive() {\n    if (this._progressiveRafId) {\n      const cancelRaf = vglobal.getSpecifiedCancelAnimationFrame(10);\n      cancelRaf(this._progressiveRafId);\n    }\n\n    if (this._progressiveMarks && this._progressiveMarks.length) {\n      this._progressiveMarks.forEach(entry => {\n        entry.clearProgressive();\n      });\n\n      this._progressiveMarks = null;\n    }\n  }\n}\n"]}