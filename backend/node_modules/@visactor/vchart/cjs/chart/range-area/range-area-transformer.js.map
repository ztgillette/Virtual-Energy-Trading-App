{"version":3,"sources":["../src/chart/range-area/range-area-transformer.ts"],"names":[],"mappings":";;;AACA,4CAA6D;AAC7D,kCAA+D;AAG/D,MAAa,6BAEX,SAAQ,yCAAgC;IAC9B,qBAAqB,CAAC,IAAO;;QACrC,MAAM,MAAM,GAAQ,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,SAAS,iBAAyB,EAAE;YAC3C,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;aAAM;YACL,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;QACD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAA,2CAAoC,EAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF;AArBD,sEAqBC","file":"range-area-transformer.js","sourcesContent":["import { Direction } from '../../typings';\nimport { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { IRangeAreaChartSpec } from './interface';\n\nexport class RangeAreaChartSpecTransformer<\n  T extends IRangeAreaChartSpec = IRangeAreaChartSpec\n> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const series: any = super._getDefaultSeriesSpec(spec);\n    series.area = spec.area;\n    series.point = spec.point;\n    series.line = spec.line;\n    if (spec.direction === Direction.horizontal) {\n      series.xField = spec.xField ?? [spec.minField, spec.maxField];\n    } else {\n      series.yField = spec.yField ?? [spec.minField, spec.maxField];\n    }\n    series.stack = false;\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}