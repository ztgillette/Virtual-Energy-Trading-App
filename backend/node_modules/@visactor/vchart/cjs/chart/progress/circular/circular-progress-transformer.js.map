{"version":3,"sources":["../src/chart/progress/circular/circular-progress-transformer.ts"],"names":[],"mappings":";;;AACA,uCAA+D;AAG/D,MAAa,oCAEX,SAAQ,wCAAyD;IACvD,qBAAqB,CAAC,IAAO;;QACrC,MAAM,MAAM,GAAG,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAEjD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,MAAM,CAAC,YAAY,GAAG,MAAA,IAAI,CAAC,YAAY,mCAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,QAAQ,GAAG,MAAA,IAAI,CAAC,QAAQ,mCAAI,KAAK,CAAC;QACzC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAA6B;QACzC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,0BAA0B,CAC7B,IAAI,EACJ;YACE,MAAM,EAAE,OAAO;YACf,OAAO,EAAE,KAAK;SACf,EACD;YACE,MAAM,EAAE,QAAQ;YAChB,OAAO,EAAE,KAAK;SACf,EACD;YACE,aAAa,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,KAAK;SAChE,CACF,CAAC;IACJ,CAAC;CACF;AA/BD,oFA+BC","file":"circular-progress-transformer.js","sourcesContent":["import type { AdaptiveSpec } from '../../../typings';\nimport { ProgressLikeChartSpecTransformer } from '../../polar';\nimport type { ICircularProgressChartSpec } from './interface';\n\nexport class CircularProgressChartSpecTransformer<\n  T extends ICircularProgressChartSpec = ICircularProgressChartSpec\n> extends ProgressLikeChartSpecTransformer<AdaptiveSpec<T, 'axes'>> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const series = super._getDefaultSeriesSpec(spec);\n\n    series.progress = spec.progress;\n    series.track = spec.track;\n    series.tickMask = spec.tickMask;\n    series.cornerRadius = spec.cornerRadius ?? 0;\n    series.roundCap = spec.roundCap ?? false;\n    return series;\n  }\n\n  transformSpec(spec: AdaptiveSpec<T, 'axes'>): void {\n    super.transformSpec(spec);\n    this._transformProgressAxisSpec(\n      spec,\n      {\n        orient: 'angle',\n        visible: false\n      },\n      {\n        orient: 'radius',\n        visible: false\n      },\n      {\n        forceInitTick: spec.tickMask && spec.tickMask.visible !== false\n      }\n    );\n  }\n}\n"]}