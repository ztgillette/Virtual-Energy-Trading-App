"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerCircularProgressChart = exports.CircularProgressChart = void 0;

const type_1 = require("../../../series/interface/type"), circular_1 = require("../../../series/progress/circular"), factory_1 = require("../../../core/factory"), circular_progress_transformer_1 = require("./circular-progress-transformer"), base_1 = require("../../base"), stack_1 = require("../../stack"), vutils_1 = require("@visactor/vutils"), dimension_hover_1 = require("../../../interaction/triggers/dimension-hover"), events_1 = require("../../../event/events"), polar_1 = require("../../../event/events/dimension/util/polar"), dimension_tooltip_1 = require("../../../component/tooltip/processor/dimension-tooltip"), mark_tooltip_1 = require("../../../component/tooltip/processor/mark-tooltip");

class CircularProgressChart extends base_1.BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = circular_progress_transformer_1.CircularProgressChartSpecTransformer, 
        this.type = "circularProgress", this.seriesType = type_1.SeriesTypeEnum.circularProgress;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = polar_1.getPolarDimensionInfo;
    }
}

exports.CircularProgressChart = CircularProgressChart, CircularProgressChart.type = "circularProgress", 
CircularProgressChart.seriesType = type_1.SeriesTypeEnum.circularProgress, CircularProgressChart.transformerConstructor = circular_progress_transformer_1.CircularProgressChartSpecTransformer, 
(0, vutils_1.mixin)(CircularProgressChart, stack_1.StackChartMixin);

const registerCircularProgressChart = () => {
    (0, dimension_tooltip_1.registerDimensionTooltipProcessor)(), (0, mark_tooltip_1.registerMarkTooltipProcessor)(), 
    (0, events_1.registerDimensionEvents)(), (0, dimension_hover_1.registerDimensionHover)(), 
    (0, circular_1.registerCircularProgressSeries)(), factory_1.Factory.registerChart(CircularProgressChart.type, CircularProgressChart);
};

exports.registerCircularProgressChart = registerCircularProgressChart;
//# sourceMappingURL=circular.js.map
