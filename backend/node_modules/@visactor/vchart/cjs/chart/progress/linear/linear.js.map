{"version":3,"sources":["../src/chart/progress/linear/linear.ts"],"names":[],"mappings":";;;AACA,yDAAgE;AAEhE,4DAA+E;AAC/E,mDAAgD;AAChD,+EAAmF;AACnF,qCAAuC;AACvC,uCAA8C;AAC9C,6CAAyC;AACzC,mFAAuF;AACvF,kDAAgE;AAChE,8EAAoH;AACpH,4EAAyF;AACzF,8FAA2G;AAC3G,oFAAiG;AAEjG,MAAa,mBAAmF,SAAQ,gBAAY;IAApH;;QAIW,2BAAsB,GAAG,gEAAkC,CAAC;QAC5D,SAAI,oBAAwC;QAC5C,eAAU,GAAW,qBAAc,CAAC,cAAc,CAAC;IAO9D,CAAC;IALW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qCAAyB,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,mCAAuB,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,qCAAyB,CAAC;IACvE,CAAC;;AAZH,kDAaC;AAZiB,wBAAI,oBAAwC;AAC5C,8BAAU,GAAW,qBAAc,CAAC,cAAc,CAAC;AACnD,0CAAsB,GAAG,gEAAkC,CAAC;AAY9E,IAAA,cAAK,EAAC,mBAAmB,EAAE,uBAAe,CAAC,CAAC;AAErC,MAAM,2BAA2B,GAAG,GAAG,EAAE;IAC9C,IAAA,qDAAiC,GAAE,CAAC;IACpC,IAAA,2CAA4B,GAAE,CAAC;IAC/B,IAAA,gCAAuB,GAAE,CAAC;IAC1B,IAAA,wCAAsB,GAAE,CAAC;IACzB,IAAA,qCAA4B,GAAE,CAAC;IAC/B,iBAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;AACvE,CAAC,CAAC;AAPW,QAAA,2BAA2B,+BAOtC","file":"linear.js","sourcesContent":["import { ChartTypeEnum } from '../../interface';\nimport { SeriesTypeEnum } from '../../../series/interface/type';\nimport type { ILinearProgressChartSpec } from './interface';\nimport { registerLinearProgressSeries } from '../../../series/progress/linear';\nimport { Factory } from '../../../core/factory';\nimport { LinearProgressChartSpecTransformer } from './linear-progress-transformer';\nimport { BaseChart } from '../../base';\nimport { StackChartMixin } from '../../stack';\nimport { mixin } from '@visactor/vutils';\nimport { registerDimensionHover } from '../../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../../event/events';\nimport { getCartesianDimensionInfo, getDimensionInfoByValue } from '../../../event/events/dimension/util/cartesian';\nimport { getCartesianCrosshairRect } from '../../../component/crosshair/utils/cartesian';\nimport { registerDimensionTooltipProcessor } from '../../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../../component/tooltip/processor/mark-tooltip';\n\nexport class LinearProgressChart<T extends ILinearProgressChartSpec = ILinearProgressChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartTypeEnum.linearProgress;\n  static readonly seriesType: string = SeriesTypeEnum.linearProgress;\n  static readonly transformerConstructor = LinearProgressChartSpecTransformer;\n  readonly transformerConstructor = LinearProgressChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.linearProgress;\n  readonly seriesType: string = SeriesTypeEnum.linearProgress;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getCartesianDimensionInfo;\n    this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue;\n    this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;\n  }\n}\n\nmixin(LinearProgressChart, StackChartMixin);\n\nexport const registerLinearProgressChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerLinearProgressSeries();\n  Factory.registerChart(LinearProgressChart.type, LinearProgressChart);\n};\n"]}