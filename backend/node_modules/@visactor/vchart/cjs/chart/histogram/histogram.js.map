{"version":3,"sources":["../src/chart/histogram/histogram.ts"],"names":[],"mappings":";;;AAAA,8CAAyD;AACzD,sDAA6D;AAE7D,sCAAiD;AACjD,gDAA6C;AAE7C,mEAAwE;AACxE,gFAAoF;AACpF,+CAA6D;AAC7D,2EAAiH;AACjH,yEAAsF;AACtF,2FAAwG;AACxG,iFAA8F;AAC9F,mFAAgG;AAEhG,MAAa,cAAoE,SAAQ,yBAAqB;IAA9G;;QAIW,2BAAsB,GAAG,qDAA6B,CAAC;QACvD,SAAI,eAAmC;QACvC,eAAU,GAAW,qBAAc,CAAC,GAAG,CAAC;IAOnD,CAAC;IALW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qCAAyB,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,mCAAuB,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,qCAAyB,CAAC;IACvE,CAAC;;AAZH,wCAaC;AAZiB,mBAAI,eAAmC;AACvC,yBAAU,GAAW,qBAAc,CAAC,GAAG,CAAC;AACxC,qCAAsB,GAAG,qDAA6B,CAAC;AAYlE,MAAM,sBAAsB,GAAG,GAAG,EAAE;IACzC,IAAA,qDAAiC,GAAE,CAAC;IACpC,IAAA,2CAA4B,GAAE,CAAC;IAC/B,IAAA,6CAA6B,GAAE,CAAC;IAChC,IAAA,gCAAuB,GAAE,CAAC;IAC1B,IAAA,wCAAsB,GAAE,CAAC;IACzB,IAAA,uBAAiB,GAAE,CAAC;IACpB,iBAAO,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC7D,CAAC,CAAC;AARW,QAAA,sBAAsB,0BAQjC","file":"histogram.js","sourcesContent":["import { registerBarSeries } from '../../series/bar/bar';\nimport { SeriesTypeEnum } from '../../series/interface/type';\nimport { ChartTypeEnum } from '../interface/type';\nimport { BaseHistogramChart } from './base/base';\nimport { Factory } from '../../core/factory';\nimport type { IHistogramChartSpec } from './interface';\nimport { HistogramChartSpecTransformer } from './histogram-transformer';\nimport { registerDimensionHover } from '../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../event/events';\nimport { getCartesianDimensionInfo, getDimensionInfoByValue } from '../../event/events/dimension/util/cartesian';\nimport { getCartesianCrosshairRect } from '../../component/crosshair/utils/cartesian';\nimport { registerDimensionTooltipProcessor } from '../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../component/tooltip/processor/mark-tooltip';\nimport { registerGroupTooltipProcessor } from '../../component/tooltip/processor/group-tooltip';\n\nexport class HistogramChart<T extends IHistogramChartSpec = IHistogramChartSpec> extends BaseHistogramChart<T> {\n  static readonly type: string = ChartTypeEnum.histogram;\n  static readonly seriesType: string = SeriesTypeEnum.bar;\n  static readonly transformerConstructor = HistogramChartSpecTransformer;\n  readonly transformerConstructor = HistogramChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.histogram;\n  readonly seriesType: string = SeriesTypeEnum.bar;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getCartesianDimensionInfo;\n    this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue;\n    this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;\n  }\n}\n\nexport const registerHistogramChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerGroupTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerBarSeries();\n  Factory.registerChart(HistogramChart.type, HistogramChart);\n};\n"]}