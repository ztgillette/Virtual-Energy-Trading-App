{"version":3,"sources":["../src/chart/histogram/base/histogram-base-transformer.ts"],"names":[],"mappings":";;;AACA,+CAAgE;AAGhE,MAAa,iCAAiE,SAAQ,yCAAgC;IACpH,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAA8B,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;IAChF,CAAC;IAES,qBAAqB,CAAC,IAAO;QACrC,OAAO,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC9G,CAAC;CACF;AATD,8EASC","file":"histogram-base-transformer.js","sourcesContent":["import type { ICartesianAxisCommonSpec } from '../../../component/axis';\nimport { CartesianChartSpecTransformer } from '../../cartesian';\nimport type { IHistogramChartSpec } from '../interface';\n\nexport class BaseHistogramChartSpecTransformer<T extends IHistogramChartSpec> extends CartesianChartSpecTransformer<T> {\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    spec.axes.forEach((axis: ICartesianAxisCommonSpec) => (axis.type = 'linear'));\n  }\n\n  protected _getDefaultSeriesSpec(spec: T): any {\n    return super._getDefaultSeriesSpec(spec, ['x2Field', 'y2Field', 'barMinHeight', 'barBackground', 'barGap']);\n  }\n}\n"]}