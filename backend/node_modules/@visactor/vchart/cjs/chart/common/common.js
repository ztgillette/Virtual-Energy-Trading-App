"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerCommonChart = exports.CommonChart = void 0;

const base_chart_1 = require("../base/base-chart"), factory_1 = require("../../core/factory"), common_transformer_1 = require("./common-transformer"), stack_1 = require("../stack"), vutils_1 = require("@visactor/vutils"), dimension_hover_1 = require("../../interaction/triggers/dimension-hover"), events_1 = require("../../event/events"), cartesian_1 = require("../../event/events/dimension/util/cartesian"), polar_1 = require("../../event/events/dimension/util/polar"), cartesian_2 = require("../../component/crosshair/utils/cartesian"), dimension_tooltip_1 = require("../../component/tooltip/processor/dimension-tooltip"), mark_tooltip_1 = require("../../component/tooltip/processor/mark-tooltip"), group_tooltip_1 = require("../../component/tooltip/processor/group-tooltip");

class CommonChart extends base_chart_1.BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = common_transformer_1.CommonChartSpecTransformer, 
        this.type = "common";
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = (chart, point, isTooltip) => {
            var _a, _b;
            return [ ...null !== (_a = (0, cartesian_1.getCartesianDimensionInfo)(chart, point, isTooltip)) && void 0 !== _a ? _a : [], ...null !== (_b = (0, 
            polar_1.getPolarDimensionInfo)(chart, point)) && void 0 !== _b ? _b : [] ];
        }, this._modelOption.getDimensionInfoByValue = cartesian_1.getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = cartesian_2.getCartesianCrosshairRect;
    }
}

exports.CommonChart = CommonChart, CommonChart.type = "common", CommonChart.transformerConstructor = common_transformer_1.CommonChartSpecTransformer, 
(0, vutils_1.mixin)(CommonChart, stack_1.StackChartMixin);

const registerCommonChart = () => {
    (0, dimension_tooltip_1.registerDimensionTooltipProcessor)(), (0, mark_tooltip_1.registerMarkTooltipProcessor)(), 
    (0, group_tooltip_1.registerGroupTooltipProcessor)(), (0, events_1.registerDimensionEvents)(), 
    factory_1.Factory.registerChart(CommonChart.type, CommonChart), (0, dimension_hover_1.registerDimensionHover)();
};

exports.registerCommonChart = registerCommonChart;
//# sourceMappingURL=common.js.map
