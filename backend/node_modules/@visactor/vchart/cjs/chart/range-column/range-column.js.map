{"version":3,"sources":["../src/chart/range-column/range-column.ts"],"names":[],"mappings":";;;AACA,sDAA6D;AAE7D,gDAA6C;AAC7C,yEAAmF;AACnF,yEAA6E;AAC7E,kCAAoC;AACpC,gFAAoF;AACpF,+CAA6D;AAC7D,2EAAiH;AACjH,yEAAsF;AACtF,2FAAwG;AACxG,iFAA8F;AAE9F,MAAa,gBAA0E,SAAQ,gBAAY;IAA3G;;QAIW,2BAAsB,GAAG,0DAA+B,CAAC;QACzD,SAAI,iBAAqC;QACzC,eAAU,GAAW,qBAAc,CAAC,WAAW,CAAC;IAS3D,CAAC;IAPW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qCAAyB,CAAC;QAE/D,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,mCAAuB,CAAC;QAEpE,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,qCAAyB,CAAC;IACvE,CAAC;;AAdH,4CAeC;AAdiB,qBAAI,iBAAqC;AACzC,2BAAU,GAAW,qBAAc,CAAC,WAAW,CAAC;AAChD,uCAAsB,GAAG,0DAA+B,CAAC;AAcpE,MAAM,wBAAwB,GAAG,GAAG,EAAE;IAC3C,IAAA,qDAAiC,GAAE,CAAC;IACpC,IAAA,2CAA4B,GAAE,CAAC;IAC/B,IAAA,gCAAuB,GAAE,CAAC;IAC1B,IAAA,wCAAsB,GAAE,CAAC;IACzB,IAAA,wCAAyB,GAAE,CAAC;IAC5B,iBAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACjE,CAAC,CAAC;AAPW,QAAA,wBAAwB,4BAOnC","file":"range-column.js","sourcesContent":["import { ChartTypeEnum } from '../interface/type';\nimport { SeriesTypeEnum } from '../../series/interface/type';\nimport type { IRangeColumnChartSpec } from './interface';\nimport { Factory } from '../../core/factory';\nimport { registerRangeColumnSeries } from '../../series/range-column/range-column';\nimport { RangeColumnChartSpecTransformer } from './range-column-transformer';\nimport { BaseChart } from '../base';\nimport { registerDimensionHover } from '../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../event/events';\nimport { getCartesianDimensionInfo, getDimensionInfoByValue } from '../../event/events/dimension/util/cartesian';\nimport { getCartesianCrosshairRect } from '../../component/crosshair/utils/cartesian';\nimport { registerDimensionTooltipProcessor } from '../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../component/tooltip/processor/mark-tooltip';\n\nexport class RangeColumnChart<T extends IRangeColumnChartSpec = IRangeColumnChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartTypeEnum.rangeColumn;\n  static readonly seriesType: string = SeriesTypeEnum.rangeColumn;\n  static readonly transformerConstructor = RangeColumnChartSpecTransformer;\n  readonly transformerConstructor = RangeColumnChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.rangeColumn;\n  readonly seriesType: string = SeriesTypeEnum.rangeColumn;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getCartesianDimensionInfo;\n\n    this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue;\n\n    this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;\n  }\n}\n\nexport const registerRangeColumnChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerRangeColumnSeries();\n  Factory.registerChart(RangeColumnChart.type, RangeColumnChart);\n};\n"]}