{"version":3,"sources":["../src/chart/range-column/range-column-transformer.ts"],"names":[],"mappings":";;;AACA,4CAA6D;AAC7D,kCAA+D;AAG/D,MAAa,+BAEX,SAAQ,yCAAgC;IAC9B,qBAAqB,CAAC,IAAO;;QACrC,MAAM,MAAM,GAAQ,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACpD,UAAU;YACV,aAAa;YACb,aAAa;YACb,eAAe;YACf,eAAe;YACf,cAAc;YACd,mBAAmB;YACnB,KAAK;SACN,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,SAAS,iBAAyB,EAAE;YAC3C,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;aAAM;YACL,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAA,2CAAoC,EAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF;AA3BD,0EA2BC","file":"range-column-transformer.js","sourcesContent":["import { Direction } from '../../typings';\nimport { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { IRangeColumnChartSpec } from './interface';\n\nexport class RangeColumnChartSpecTransformer<\n  T extends IRangeColumnChartSpec = IRangeColumnChartSpec\n> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const series: any = super._getDefaultSeriesSpec(spec, [\n      'barWidth',\n      'barMaxWidth',\n      'barMinWidth',\n      'barGapInGroup',\n      'barBackground',\n      'barMinHeight',\n      'stackCornerRadius',\n      'bar'\n    ]);\n\n    if (spec.direction === Direction.horizontal) {\n      series.xField = spec.xField ?? [spec.minField, spec.maxField];\n    } else {\n      series.yField = spec.yField ?? [spec.minField, spec.maxField];\n    }\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}