{"version":3,"sources":["../src/chart/box-plot/box-plot.ts"],"names":[],"mappings":";;;AAAA,sDAA6D;AAG7D,6DAAuE;AACvE,gDAA6C;AAC7C,iEAAqE;AACrE,kCAAoC;AACpC,gFAAoF;AACpF,+CAA6D;AAC7D,2EAAiH;AACjH,yEAAsF;AACtF,2FAAwG;AACxG,iFAA8F;AAE9F,MAAa,YAA8D,SAAQ,gBAAY;IAA/F;;QAIW,2BAAsB,GAAG,kDAA2B,CAAC;QACrD,SAAI,aAAiC;QACrC,eAAU,GAAW,qBAAc,CAAC,OAAO,CAAC;IAOvD,CAAC;IALW,eAAe;QACvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,qCAAyB,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,mCAAuB,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,qCAAyB,CAAC;IACvE,CAAC;;AAZH,oCAaC;AAZiB,iBAAI,aAAiC;AACrC,uBAAU,GAAW,qBAAc,CAAC,OAAO,CAAC;AAC5C,mCAAsB,GAAG,kDAA2B,CAAC;AAYhE,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,IAAA,qDAAiC,GAAE,CAAC;IACpC,IAAA,2CAA4B,GAAE,CAAC;IAC/B,IAAA,gCAAuB,GAAE,CAAC;IAC1B,IAAA,wCAAsB,GAAE,CAAC;IACzB,IAAA,gCAAqB,GAAE,CAAC;IACxB,iBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACzD,CAAC,CAAC;AAPW,QAAA,oBAAoB,wBAO/B","file":"box-plot.js","sourcesContent":["import { SeriesTypeEnum } from '../../series/interface/type';\nimport { ChartTypeEnum } from '../interface/type';\nimport type { IBoxPlotChartSpec } from './interface';\nimport { registerBoxplotSeries } from '../../series/box-plot/box-plot';\nimport { Factory } from '../../core/factory';\nimport { BoxPlotChartSpecTransformer } from './box-plot-transformer';\nimport { BaseChart } from '../base';\nimport { registerDimensionHover } from '../../interaction/triggers/dimension-hover';\nimport { registerDimensionEvents } from '../../event/events';\nimport { getCartesianDimensionInfo, getDimensionInfoByValue } from '../../event/events/dimension/util/cartesian';\nimport { getCartesianCrosshairRect } from '../../component/crosshair/utils/cartesian';\nimport { registerDimensionTooltipProcessor } from '../../component/tooltip/processor/dimension-tooltip';\nimport { registerMarkTooltipProcessor } from '../../component/tooltip/processor/mark-tooltip';\n\nexport class BoxPlotChart<T extends IBoxPlotChartSpec = IBoxPlotChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartTypeEnum.boxPlot;\n  static readonly seriesType: string = SeriesTypeEnum.boxPlot;\n  static readonly transformerConstructor = BoxPlotChartSpecTransformer;\n  readonly transformerConstructor = BoxPlotChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.boxPlot;\n  readonly seriesType: string = SeriesTypeEnum.boxPlot;\n\n  protected _setModelOption() {\n    this._modelOption.getDimensionInfo = getCartesianDimensionInfo;\n    this._modelOption.getDimensionInfoByValue = getDimensionInfoByValue;\n    this._modelOption.getRectByDimensionData = getCartesianCrosshairRect;\n  }\n}\n\nexport const registerBoxplotChart = () => {\n  registerDimensionTooltipProcessor();\n  registerMarkTooltipProcessor();\n  registerDimensionEvents();\n  registerDimensionHover();\n  registerBoxplotSeries();\n  Factory.registerChart(BoxPlotChart.type, BoxPlotChart);\n};\n"]}