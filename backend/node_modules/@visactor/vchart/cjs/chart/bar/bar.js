"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerBarChart = exports.BarChart = void 0;

const bar_1 = require("../../series/bar/bar"), type_1 = require("../../series/interface/type"), factory_1 = require("../../core/factory"), bar_transformer_1 = require("./bar-transformer"), base_1 = require("../base"), vutils_1 = require("@visactor/vutils"), stack_1 = require("../stack"), dimension_hover_1 = require("../../interaction/triggers/dimension-hover"), events_1 = require("../../event/events"), cartesian_1 = require("../../event/events/dimension/util/cartesian"), cartesian_2 = require("../../component/crosshair/utils/cartesian"), dimension_tooltip_1 = require("../../component/tooltip/processor/dimension-tooltip"), mark_tooltip_1 = require("../../component/tooltip/processor/mark-tooltip"), group_tooltip_1 = require("../../component/tooltip/processor/group-tooltip");

class BarChart extends base_1.BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = bar_transformer_1.BarChartSpecTransformer, 
        this.type = "bar", this.seriesType = type_1.SeriesTypeEnum.bar;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = cartesian_1.getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = cartesian_1.getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = cartesian_2.getCartesianCrosshairRect;
    }
}

exports.BarChart = BarChart, BarChart.type = "bar", BarChart.seriesType = type_1.SeriesTypeEnum.bar, 
BarChart.transformerConstructor = bar_transformer_1.BarChartSpecTransformer, (0, 
vutils_1.mixin)(BarChart, stack_1.StackChartMixin);

const registerBarChart = () => {
    (0, dimension_tooltip_1.registerDimensionTooltipProcessor)(), (0, mark_tooltip_1.registerMarkTooltipProcessor)(), 
    (0, group_tooltip_1.registerGroupTooltipProcessor)(), (0, dimension_hover_1.registerDimensionHover)(), 
    (0, bar_1.registerBarSeries)(), (0, events_1.registerDimensionEvents)(), factory_1.Factory.registerChart(BarChart.type, BarChart);
};

exports.registerBarChart = registerBarChart;
//# sourceMappingURL=bar.js.map
