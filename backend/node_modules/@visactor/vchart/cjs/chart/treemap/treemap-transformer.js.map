{"version":3,"sources":["../src/chart/treemap/treemap-transformer.ts"],"names":[],"mappings":";;;AACA,kCAAmD;AAGnD,MAAa,2BAEX,SAAQ,+BAA4D;IAC1D,qBAAqB,CAAC,IAAO;QACrC,MAAM,MAAM,GAAQ,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACpD,eAAe;YACf,YAAY;YACZ,aAAa;YACb,WAAW;YACX,UAAU;YACV,UAAU;YACV,aAAa;YACb,gBAAgB;YAChB,wBAAwB;YACxB,wBAAwB;YACxB,MAAM;YACN,OAAO;YACP,YAAY;YACZ,MAAM;YACN,SAAS;YACT,cAAc;SACf,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACF;AA7BD,kEA6BC","file":"treemap-transformer.js","sourcesContent":["import type { AdaptiveSpec } from '../../typings';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { ITreemapChartSpec } from './interface';\n\nexport class TreemapChartSpecTransformer<\n  T extends ITreemapChartSpec = ITreemapChartSpec\n> extends BaseChartSpecTransformer<AdaptiveSpec<T, 'data' | 'series'>> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const series: any = super._getDefaultSeriesSpec(spec, [\n      'categoryField',\n      'valueField',\n      'aspectRatio',\n      'splitType',\n      'maxDepth',\n      'gapWidth',\n      'nodePadding',\n      'minVisibleArea',\n      'minChildrenVisibleArea',\n      'minChildrenVisibleSize',\n      'roam',\n      'drill',\n      'drillField',\n      'leaf',\n      'nonLeaf',\n      'nonLeafLabel'\n    ]);\n    return series;\n  }\n\n  transformSpec(spec: any): void {\n    super.transformSpec(spec);\n    this.transformSeriesSpec(spec);\n  }\n}\n"]}