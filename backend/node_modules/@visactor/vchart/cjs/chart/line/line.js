"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerLineChart = exports.LineChart = void 0;

const type_1 = require("../../series/interface/type"), line_1 = require("../../series/line/line"), factory_1 = require("../../core/factory"), line_transformer_1 = require("./line-transformer"), base_1 = require("../base"), stack_1 = require("../stack"), vutils_1 = require("@visactor/vutils"), dimension_hover_1 = require("../../interaction/triggers/dimension-hover"), events_1 = require("../../event/events"), cartesian_1 = require("../../event/events/dimension/util/cartesian"), cartesian_2 = require("../../component/crosshair/utils/cartesian"), dimension_tooltip_1 = require("../../component/tooltip/processor/dimension-tooltip"), mark_tooltip_1 = require("../../component/tooltip/processor/mark-tooltip"), group_tooltip_1 = require("../../component/tooltip/processor/group-tooltip");

class LineChart extends base_1.BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = line_transformer_1.LineChartSpecTransformer, 
        this.type = "line", this.seriesType = type_1.SeriesTypeEnum.line;
    }
    _setModelOption() {
        this._modelOption.getDimensionInfo = cartesian_1.getCartesianDimensionInfo, this._modelOption.getDimensionInfoByValue = cartesian_1.getDimensionInfoByValue, 
        this._modelOption.getRectByDimensionData = cartesian_2.getCartesianCrosshairRect;
    }
}

exports.LineChart = LineChart, LineChart.type = "line", LineChart.seriesType = type_1.SeriesTypeEnum.line, 
LineChart.transformerConstructor = line_transformer_1.LineChartSpecTransformer, 
(0, vutils_1.mixin)(LineChart, stack_1.StackChartMixin);

const registerLineChart = () => {
    (0, dimension_tooltip_1.registerDimensionTooltipProcessor)(), (0, mark_tooltip_1.registerMarkTooltipProcessor)(), 
    (0, group_tooltip_1.registerGroupTooltipProcessor)(), (0, events_1.registerDimensionEvents)(), 
    (0, dimension_hover_1.registerDimensionHover)(), (0, line_1.registerLineSeries)(), 
    factory_1.Factory.registerChart(LineChart.type, LineChart);
};

exports.registerLineChart = registerLineChart;
//# sourceMappingURL=line.js.map
