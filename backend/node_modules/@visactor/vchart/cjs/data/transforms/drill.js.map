{"version":3,"sources":["../src/data/transforms/drill.ts"],"names":[],"mappings":";;;AACA,oDAAkF;AAClF,6CAAgD;AAGhD,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,oCAAuB,CAAA;IACvB,gCAAmB,CAAA;AACrB,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAWM,MAAM,WAAW,GAAG,CACzB,IAAkB,EAClB,EAGC,EACD,EAAE;IAEF,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;IACvB,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC/B,MAAM,OAAO,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAC;IAE1B,IAAI,IAAA,cAAK,EAAC,OAAO,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IAGD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,SAAS,EAAE;QACrC,MAAM,UAAU,GAAG,IAAA,6BAAiB,EAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC1E,OAAO,IAAA,cAAK,EAAC,UAAU,CAAC,CAAC;KAC1B;IAGD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,OAAO,EAAE;QACnC,MAAM,UAAU,GAAG,IAAA,mCAAuB,EAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAChF,IAAI,UAAU,EAAE;YACd,OAAO,IAAA,cAAK,EAAC,UAAU,CAAC,CAAC;SAC1B;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AA9BW,QAAA,WAAW,eA8BtB","file":"drill.js","sourcesContent":["import type { Datum } from '../../typings';\nimport { findHierarchyNode, findHierarchyNodeParent } from '../../util/hierarchy';\nimport { array, isNil } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\n\nexport enum DrillEnum {\n  DrillDown = 'drillDown',\n  DrillUp = 'drillUp'\n}\n\nexport type DrillInfo = {\n  key: string;\n  type: DrillEnum;\n  path: string[];\n};\n\n/**\n * 通用的上卷下钻的数据过滤方法.\n */\nexport const drillFilter = (\n  data: Array<Datum>,\n  op: {\n    info: () => DrillInfo;\n    keyField: () => string;\n  }\n) => {\n  // 根据key找到节点\n  const info = op.info();\n  const keyField = op.keyField();\n  const dataKey = info?.key;\n\n  if (isNil(dataKey)) {\n    return data;\n  }\n\n  // 下钻, 找到当前选中节点\n  if (info.type === DrillEnum.DrillDown) {\n    const targetNode = findHierarchyNode(data, dataKey, keyField, 'children');\n    return array(targetNode);\n  }\n\n  // 上卷, 找到当前选中节点的父节点\n  if (info.type === DrillEnum.DrillUp) {\n    const targetNode = findHierarchyNodeParent(data, dataKey, keyField, 'children');\n    if (targetNode) {\n      return array(targetNode);\n    }\n  }\n  return data;\n};\n"]}