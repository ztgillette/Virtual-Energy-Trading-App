{"version":3,"sources":["../src/data/transforms/flatten.ts"],"names":[],"mappings":";;;AAAA,iDAAkD;AAa3C,MAAM,OAAO,GAAG,CAAC,IAAkB,EAAE,KAAkB,EAAE,EAAE,EAAE;IAClE,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,EAAE,CAAC;KACX;IAED,MAAM,MAAM,GAAG,EAA0B,CAAC;IAC1C,IAAA,uBAAY,EAAC,IAAuC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;IAClE,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AARW,QAAA,OAAO,WAQlB","file":"flatten.js","sourcesContent":["import { flattenNodes } from '@visactor/vlayouts';\nimport type { Datum } from '../../typings';\n// eslint-disable-next-line no-duplicate-imports\nimport type { TreemapNodeElement, SunburstNodeElement } from '@visactor/vlayouts';\n\nexport type FlattenNodeElement = TreemapNodeElement | SunburstNodeElement;\n\nexport interface IFlattenOpt {\n  output?: Datum[];\n  maxDepth?: number;\n  callback?: <T>(node: FlattenNodeElement) => T;\n}\n\nexport const flatten = (data: Array<Datum>, op: IFlattenOpt = {}) => {\n  if (!data) {\n    return [];\n  }\n\n  const result = [] as FlattenNodeElement[];\n  flattenNodes(data as unknown as FlattenNodeElement[], result, op);\n  return result;\n};\n"]}