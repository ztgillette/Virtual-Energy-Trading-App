{"version":3,"sources":["../src/data/transforms/circle-packing.ts"],"names":[],"mappings":";;;AAIA,iDAAyD;AAUlD,MAAM,mBAAmB,GAAG,CAAC,IAAkB,EAAE,EAA2B,EAAE,EAAE;IACrF,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IACD,MAAM,OAAO,GAAG,EAAE,EAAE,CAAC;IACrB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;IAClC,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;QAC/B,OAAO,IAAI,CAAC;KACb;IACD,MAAM,MAAM,GAAG,IAAI,8BAAmB,CAAC,OAAO,CAAC,CAAC;IAChD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AAChD,CAAC,CAAC;AAXW,QAAA,mBAAmB,uBAW9B","file":"circle-packing.js","sourcesContent":["import type { Datum } from '../../typings';\n\n// eslint-disable-next-line no-duplicate-imports\nimport type { CirclePackingOptions } from '@visactor/vlayouts';\nimport { CirclePackingLayout } from '@visactor/vlayouts';\n\nexport interface ICirclePackingOpt extends CirclePackingOptions {\n  width: number;\n  height: number;\n}\n\n/**\n * CirclePacking布局算法，VGrammar 提供.\n */\nexport const circlePackingLayout = (data: Array<Datum>, op: () => ICirclePackingOpt) => {\n  if (!data) {\n    return data;\n  }\n  const options = op();\n  const { width, height } = options;\n  if (width === 0 || height === 0) {\n    return data;\n  }\n  const layout = new CirclePackingLayout(options);\n  return layout.layout(data, { width, height });\n};\n"]}