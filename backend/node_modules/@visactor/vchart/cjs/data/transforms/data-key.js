"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.addHierarchyDataKey = exports.initHierarchyKeyMap = exports.addDataKey = exports.initKeyMap = void 0;

const data_1 = require("../../constant/data"), hierarchy_1 = require("../../constant/hierarchy");

function initKeyMap() {
    return {
        keyMap: new Map,
        needDefaultSeriesField: !this._seriesField,
        defaultSeriesField: this._seriesField ? null : this.getSeriesKeys()[0],
        getKey: this.generateDefaultDataKey(this._spec.dataKey)
    };
}

function addDataKey(d, i, context) {
    d && (context.needDefaultSeriesField && (d[data_1.DEFAULT_DATA_SERIES_FIELD] = context.defaultSeriesField), 
    d[data_1.DEFAULT_DATA_INDEX] = i, d[data_1.DEFAULT_DATA_KEY] = context.getKey(d, i, context));
}

function initHierarchyKeyMap() {
    return {
        keyMap: new Map,
        needDefaultSeriesField: !0,
        defaultSeriesField: this.getSeriesKeys()[0],
        getKey: this.generateDefaultDataKey(this._spec.dataKey),
        categoryField: this.getCategoryField()
    };
}

function addHierarchyDataKey(d, i, context, depth = 0, root, rootIndex) {
    void 0 === rootIndex && (rootIndex = i), addDataKey(d, i, context), d[hierarchy_1.DEFAULT_HIERARCHY_DEPTH] = depth, 
    d[hierarchy_1.DEFAULT_HIERARCHY_ROOT] = root || d[context.categoryField], d[hierarchy_1.DEFAULT_HIERARCHY_ROOT_INDEX] = rootIndex, 
    d.children && d.children.length && d.children.forEach(((_d, _i) => addHierarchyDataKey(_d, _i, context, d[hierarchy_1.DEFAULT_HIERARCHY_DEPTH] + 1, d[hierarchy_1.DEFAULT_HIERARCHY_ROOT], rootIndex)));
}

exports.initKeyMap = initKeyMap, exports.addDataKey = addDataKey, exports.initHierarchyKeyMap = initHierarchyKeyMap, 
exports.addHierarchyDataKey = addHierarchyDataKey;
//# sourceMappingURL=data-key.js.map
