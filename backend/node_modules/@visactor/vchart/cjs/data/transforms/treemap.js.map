{"version":3,"sources":["../src/data/transforms/treemap.ts"],"names":[],"mappings":";;;AACA,iDAAiE;AACjE,wDAAkE;AAE3D,MAAM,aAAa,GAAG,CAC3B,IAAgB,EAChB,EAQC,EACD,EAAE;IACF,MAAM,OAAO,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC;IAEhC,IAAI,OAAO,EAAE;QACX,MAAM,MAAM,GAAG,IAAI,wBAAa,CAAC,EAAE,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC;QAEjD,MAAM,KAAK,GAAyB,EAAE,CAAC;QACvC,IAAA,uBAAY,EAAC,GAAG,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,QAAQ,EAAE,CAAC,CAAC;QAErD,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,KAAK,EAAE;gBACT,CAAC,kCAAsB,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC5C,KAAa,CAAC,GAAG,CAAC,GAAI,KAAa,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACxE,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;KACd;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAjCW,QAAA,aAAa,iBAiCxB","file":"treemap.js","sourcesContent":["import type { TreemapNodeElement, TreemapOptions } from '@visactor/vlayouts';\nimport { flattenNodes, TreemapLayout } from '@visactor/vlayouts';\nimport { DEFAULT_HIERARCHY_ROOT } from '../../constant/hierarchy';\n\nexport const treemapLayout = (\n  data: Array<any>,\n  op: TreemapOptions & {\n    getViewBox: () => {\n      x0: number;\n      x1: number;\n      y0: number;\n      y1: number;\n    };\n    nameField: string;\n  }\n) => {\n  const viewBox = op.getViewBox();\n\n  if (viewBox) {\n    const layout = new TreemapLayout(op);\n    const res = layout.layout(data, op.getViewBox());\n\n    const nodes: TreemapNodeElement[] = [];\n    flattenNodes(res, nodes, { maxDepth: op?.maxDepth });\n\n    nodes.forEach((datum, i) => {\n      if (datum) {\n        [DEFAULT_HIERARCHY_ROOT, 'name'].forEach(key => {\n          (datum as any)[key] = (datum as any).datum[datum.depth][op.nameField];\n        });\n      }\n    });\n\n    return nodes;\n  }\n\n  return [];\n};\n"]}