{"version":3,"sources":["../src/component/tooltip/interface/spec.ts"],"names":[],"mappings":"","file":"spec.js","sourcesContent":["import type { EventSourceType, EventType } from '../../../event/interface';\nimport type {\n  IGroupTooltipPattern,\n  ITooltipActual,\n  ITooltipPattern,\n  Maybe,\n  MaybeArray,\n  TooltipActiveType,\n  TooltipData\n} from '../../../typings';\nimport type { ITooltipActiveTypeAsKeys, TooltipHandlerParams, TooltipResult } from './common';\nimport type { ITooltipTheme } from './theme';\n\nexport interface ITooltipSpec\n  extends Partial<\n    /**\n     * mark tooltip pattern\n     * & dimension tooltip pattern\n     * （*支持在series上设置）\n     */\n    ITooltipActiveTypeAsKeys<\n      ITooltipPattern & {\n        /**\n         * mark tooltip是否展示触发点所在的所有图形的数据\n         */\n        checkOverlap?: boolean;\n      },\n      ITooltipPattern,\n      IGroupTooltipPattern\n    >\n  > {\n  /**\n   * 是否显示\n   * （*支持在series上设置）\n   * （*会影响自定义handler）\n   */\n  visible?: boolean;\n  /**\n   * 受支持的激活类型\n   * （*支持在series上设置）\n   * （*会影响自定义handler）\n   */\n  activeType?: TooltipActiveType | TooltipActiveType[];\n  /**\n   * tooltip触发方式\n   * （*会影响自定义handler）\n   * @since 1.12.10 支持自定义的事件触发\n   */\n  trigger?:\n    | MaybeArray<'hover' | 'click' | { eventType: EventType; source?: EventSourceType; consume?: boolean }>\n    | 'none';\n  /**\n   * 隐藏tooltip的触发方式（目前仅支持和trigger一致的设置以及none）\n   * （*会影响自定义handler）\n   * @since 1.12.10 支持自定义的事件触发\n   */\n  triggerOff?:\n    | MaybeArray<\n        | 'hover'\n        | 'click'\n        | { eventType: EventType; source?: EventSourceType; consume?: boolean; checkOutside?: boolean }\n      >\n    | 'none';\n  /**\n   * 当设置了`enterable: true`，且 trigger类型为`hover`的时候，为了方便鼠标进入提示信息的内容区域，设置的显示延迟时长\n   * 其他情况设置无效\n   * @since 1.12.8\n   */\n  showDelay?: number;\n\n  /**\n   * 隐藏计时器\n   * @since 1.11.7\n   */\n  hideTimer?: number;\n  /**\n   * 点击后锁定，只有点击才可以更新位置或者解锁，通常用于 trigger 为 `['hover', 'click']` 的场景\n   * （*会影响自定义handler）\n   * @since 1.10.0\n   */\n  lockAfterClick?: boolean;\n  /**\n   * tooltip样式，是现在支持的三种类型的tooltip组件（包括dimension、mark、group）的公共样式\n   */\n  style?: Omit<ITooltipTheme<string>, 'offset' | 'transitionDuration'>;\n\n  /**\n   * 自定义handler方法\n   */\n  handler?: Partial<ITooltipHandlerSpec>;\n\n  /**\n   * tooltip 渲染方式，默认为 html\n   */\n  renderMode?: 'html' | 'canvas';\n  /**\n   * 是否将 tooltip 框限制在画布区域内，renderMode 为 canvas 时，默认开启。\n   */\n  confine?: boolean;\n\n  /**\n   * tooltip dom元素的 className，仅当 renderMode: 'html' 时生效\n   */\n  className?: string;\n  /**\n   * tooltip dom 元素的挂载点，可传 id 或 dom 对象\n   */\n  parentElement?: Maybe<string | HTMLElement | HTMLCanvasElement>;\n  /**\n   * 鼠标是否可进入提示框浮层中，默认为false，如需详情内交互，如添加链接，按钮，可设置为 true。\n   * 该属性目前只对 renderMode 为 html 时生效\n   * TODO: 支持 renderMode: canvas\n   */\n  enterable?: boolean;\n\n  /**\n   * 浮层移动动画过渡时间，单位是 ms，设置为 0 的时候会紧跟着鼠标移动（目前仅影响 dom tooltip）\n   */\n  transitionDuration?: number;\n\n  /**\n   * 更新 tooltip 的防抖动时间间隔，单位是 ms\n   */\n  throttleInterval?: number;\n\n  /**\n   * 更新 tooltip dom 元素，仅当 renderMode: 'html' 时生效\n   * @since 1.6.0\n   */\n  updateElement?: (tooltipElement: HTMLElement, actualTooltip: ITooltipActual, params: TooltipHandlerParams) => void;\n  /**\n   * 计算tooltip位置时候的偏移量\n   */\n  offset?: {\n    /**\n     * x 方向的偏移量\n     */\n    x?: number;\n    /**\n     * y 方向的偏移量\n     */\n    y?: number;\n  };\n}\n\ntype ISeriesToolipPattern = Pick<\n  ITooltipPattern,\n  | 'visible'\n  | 'title'\n  | 'content'\n  | 'hasShape'\n  | 'shapeColor'\n  | 'shapeFill'\n  | 'shapeHollow'\n  | 'shapeLineWidth'\n  | 'shapeSize'\n  | 'shapeStroke'\n  | 'shapeType'\n  | 'updateContent'\n  | 'updateTitle'\n  | 'updatePosition'\n>;\n\n/**\n * 系列上的tooltip配置，优先级高于全局tooltip配置\n * 对于visible相当配置，系列tooltip只能关闭，不能覆盖全局tooltip配置\n */\nexport interface ISeriesTooltipSpec extends Pick<ITooltipSpec, 'visible' | 'activeType' | 'handler'> {\n  /**\n   * 该系列数据在dimension tooltip中特有的配置\n   */\n  dimension?: ISeriesToolipPattern;\n  /**\n   * 该系列数据在mark tooltip中特有的配置\n   */\n  mark?: ISeriesToolipPattern;\n  /**\n   * 该系列数据在group tooltip中特有的配置\n   */\n  group?: Pick<IGroupTooltipPattern, 'triggerMark'> & ISeriesToolipPattern;\n}\n\nexport interface ITooltipHandlerSpec {\n  /** 显示 tooltip，可以选择返回是否遇到异常 */\n  showTooltip: (\n    activeType: TooltipActiveType,\n    tooltipData: TooltipData,\n    params: TooltipHandlerParams\n  ) => Maybe<TooltipResult>;\n  /** 隐藏 tooltip，可以选择返回是否遇到异常 */\n  hideTooltip: (params: TooltipHandlerParams) => Maybe<TooltipResult>;\n  /** 释放 tooltip */\n  release: () => void;\n  /** 可选，判断 tooltip 是否正在显示 */\n  isTooltipShown?: () => boolean;\n}\n"]}