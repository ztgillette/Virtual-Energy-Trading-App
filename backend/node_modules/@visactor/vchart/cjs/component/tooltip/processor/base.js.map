{"version":3,"sources":["../src/component/tooltip/processor/base.ts"],"names":[],"mappings":";;;AAAA,6CAAkD;AAOlD,mDAAqD;AAIrD,gDAA0D;AAC1D,4CAAsD;AACtD,0CAA0E;AAE1E,MAAsB,oBAAoB;IAMxC,YAAY,SAAmB;QASrB,0BAAqB,GAAG,CAAC,IAA6B,EAAE,MAA4B,EAAiB,EAAE;;YAC/G,IAAI,IAAA,cAAK,EAAC,IAAI,CAAC,EAAE;gBACf,SAA4B;aAC7B;YAED,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBAC9B,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;YAGD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACnC,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACnC,IAAI,IAAA,cAAK,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;gBACzC,SAA4B;aAC7B;YACD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC9C,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAGhC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YAEhC,MAAM,OAAO,GAAG,IAAA,cAAK,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,IAAI,IAAA,cAAK,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,IAAI,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAA,CAAC;YAE7E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAU,CAAC,WAAW,EAAE,gCAC7C,MAAM,KACT,cAAc,EAAE,OAAO,EACvB,WAAW,EAAE,IAAI,EACjB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,OAAO,EAAE,IAAI,CAAC,SAAS,GACF,CAAC,CAAC;YAEzB,IAAI,OAAO,EAAE;gBACX,SAA4B;aAC7B;YAGD,IAAI,WAAW,CAAC;YAChB,IAAI,MAAA,IAAI,CAAC,OAAO,0CAAE,WAAW,EAAE;gBAC7B,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3D;iBAAM,IAAI,MAAA,IAAI,CAAC,SAAS,CAAC,cAAc,0CAAE,WAAW,EAAE;gBACrD,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;aAC7F;YACD,IAAI,WAAW,EAAE;gBACf,OAAO,MAAA,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC,oCAAyB,CAAC;aAC5E;YACD,SAA4B;QAC9B,CAAC,CAAC;QAtDA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAuDS,wBAAwB,CAAC,aAAgC;QACjE,MAAM,gBAAgB,GAAqB,EAAE,CAAC;QAC9C,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,MAAM,EAAE,mCACH,IAAI,KACP,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CACpB,CAAC,EAAE,MAAM,EAAO,EAAE,EAAE,eAAC,OAAA,CAAA,MAAA,MAAA,MAAM,CAAC,OAAO,EAAE,0CAAE,OAAO,0CAAE,OAAO,MAAK,KAAK,CAAA,EAAA,CAClE,GACF,CAAC;YACF,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,OAAO,gBAAgB,CAAC;SACzB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAMS,eAAe,CAAC,IAAiB,EAAE,MAA4B;;QACvE,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACjD,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAE7C,IAAI,CAAC,gBAAgB,GAAG,IAAA,gCAAqB,EAC3C,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EACxB,KAAgB,EAChB,IAAI,EACJ,MAAM,CACP,CAAC;YAEF,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,IAAA,cAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,IAAA,gBAAO,EAAC,WAAW,CAAC,OAAO,CAAC,EAAE;oBACxE,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;iBACrD;gBACD,MAAM,UAAU,GAAG,MAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,mCAAI,EAAE,CAAC;gBACtD,MAAM,WAAW,GAAG,MAAA,IAAI,CAAC,gBAAgB,CAAC,WAAW,mCAAI,UAAU,CAAC,WAAW,CAAC;gBAChF,MAAM,aAAa,GAAG,MAAA,IAAI,CAAC,gBAAgB,CAAC,aAAa,mCAAI,UAAU,CAAC,aAAa,CAAC;gBACtF,MAAM,YAAY,GAAG,MAAA,MAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,mCAAI,UAAU,CAAC,YAAY,mCAAI,iCAAsB,CAAC;gBAE7G,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,gBAAgB,CAAC,KAAK;wBACzB,MAAA,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,mCAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;iBACzF;gBAED,IAAI,aAAa,EAAE;oBACjB,IAAI,CAAC,gBAAgB,CAAC,OAAO;wBAC3B,MAAA,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,mCAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;iBAC/F;qBAAM,IAAI,YAAY,IAAI,CAAC,IAAI,CAAA,MAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,0CAAE,MAAM,IAAG,YAAY,EAAE;oBACpF,MAAM,UAAU,GAAG,MAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,mCAAI,UAAU,CAAC,UAAU,CAAC;oBAC7E,MAAM,SAAS,GAAG,UAAU;wBAC1B,CAAC,iCACM,8BAAmB,GACnB,UAAU,EAEjB,CAAC,CAAC,8BAAmB,CAAC;oBACxB,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG;wBAC9B,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC;wDAEtD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,GAC/C,SAAS;qBAEf,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAGD,mBAAmB,CAAC,MAAuB,EAAE,IAAiB;;QAC5D,IAAI,IAAA,cAAK,EAAC,IAAI,CAAC,EAAE;YACf,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAA,4BAAmB,EAAC,IAAI,CAAC,UAAU,EAAE,MAAA,MAAC,MAAM,CAAC,KAAiB,0CAAE,aAAa,0CAAE,IAAI,CAAC,CAAC;IAC9F,CAAC;IAED,UAAU;QACR,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACpC,CAAC;CACF;AApJD,oDAoJC","file":"base.js","sourcesContent":["import { isNil, isValid } from '@visactor/vutils';\nimport type { BaseEventParams } from '../../../event/interface';\nimport type { ITooltipActual, TooltipActiveType, TooltipData } from '../../../typings';\nimport type { ITooltip, TooltipHandlerParams } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { TooltipResult } from '../interface/common';\nimport type { MouseEventData, TooltipInfo } from './interface';\nimport { ChartEvent } from '../../../constant/event';\nimport type { TooltipEventParams } from '../interface/event';\nimport type { IDimensionInfo } from '../../../event/events/dimension/interface';\nimport type { ISeries } from '../../../series/interface';\nimport { getTooltipSpecForShow } from '../utils/get-spec';\nimport { isActiveTypeVisible } from '../utils/common';\nimport { TOOLTIP_MAX_LINE_COUNT, TOOLTIP_OTHERS_LINE } from '../constant';\n\nexport abstract class BaseTooltipProcessor {\n  readonly component: ITooltip;\n  abstract activeType: TooltipActiveType;\n\n  protected _cacheActiveSpec: ITooltipActual | undefined;\n\n  constructor(component: ITooltip) {\n    this.component = component;\n  }\n\n  /** 触发对应类型的 tooltip */\n  abstract showTooltip(info: TooltipInfo, params: BaseEventParams, changePositionOnly: boolean): TooltipResult;\n  /** 获取触发 tooltip 需要的信息 */\n  abstract getMouseEventData(params: BaseEventParams): MouseEventData;\n\n  protected _showTooltipByHandler = (data: TooltipData | undefined, params: TooltipHandlerParams): TooltipResult => {\n    if (isNil(data)) {\n      return TooltipResult.failed;\n    }\n\n    if (!params.changePositionOnly) {\n      this.clearCache();\n    }\n\n    // 更新 this._cacheActiveSpec\n    this._updateViewSpec(data, params);\n    const spec = this._cacheActiveSpec;\n    if (isNil(spec) || spec.visible === false) {\n      return TooltipResult.failed;\n    }\n    params.tooltipSpec = this.component.getSpec();\n    params.activeTooltipSpec = spec;\n\n    // 判断 tooltip 是否为空\n    const { title, content } = spec;\n\n    const isEmpty = isNil(title?.key) && isNil(title?.value) && !content?.length;\n    // 触发事件\n    this.component.event.emit(ChartEvent.tooltipShow, {\n      ...params,\n      isEmptyTooltip: isEmpty,\n      tooltipData: data,\n      activeType: this.activeType,\n      tooltip: this.component\n    } as TooltipEventParams);\n\n    if (isEmpty) {\n      return TooltipResult.failed;\n    }\n\n    // 显示 tooltip\n    let showTooltip;\n    if (spec.handler?.showTooltip) {\n      showTooltip = spec.handler.showTooltip.bind(spec.handler);\n    } else if (this.component.tooltipHandler?.showTooltip) {\n      showTooltip = this.component.tooltipHandler.showTooltip.bind(this.component.tooltipHandler);\n    }\n    if (showTooltip) {\n      return showTooltip(this.activeType, data, params) ?? TooltipResult.success;\n    }\n    return TooltipResult.failed;\n  };\n\n  protected _preprocessDimensionInfo(dimensionInfo?: IDimensionInfo[]): IDimensionInfo[] | undefined {\n    const newDimensionInfo: IDimensionInfo[] = [];\n    dimensionInfo?.forEach(info => {\n      const di: IDimensionInfo = {\n        ...info,\n        data: info.data.filter(\n          ({ series }: any) => series.getSpec()?.tooltip?.visible !== false // 过滤掉不需要显示的维度数据\n        )\n      };\n      if (di.data.length > 0) {\n        newDimensionInfo.push(di);\n      }\n    });\n    if (newDimensionInfo.length > 0) {\n      return newDimensionInfo;\n    }\n    return undefined;\n  }\n\n  /**\n   * 合成实际显示的 tooltip spec\n   * @param params\n   */\n  protected _updateViewSpec(data: TooltipData, params: TooltipHandlerParams) {\n    const { changePositionOnly, model } = params;\n    if (!changePositionOnly || !this._cacheActiveSpec) {\n      const tooltipSpec = this.component.getSpec();\n      /** spec 预处理 */\n      this._cacheActiveSpec = getTooltipSpecForShow(\n        this.activeType,\n        this.component.getSpec(),\n        model as ISeries,\n        data,\n        params\n      );\n\n      if (this._cacheActiveSpec) {\n        if (isNil(this._cacheActiveSpec.handler) && isValid(tooltipSpec.handler)) {\n          this._cacheActiveSpec.handler = tooltipSpec.handler;\n        }\n        const specByType = tooltipSpec[this.activeType] ?? {};\n        const updateTitle = this._cacheActiveSpec.updateTitle ?? specByType.updateTitle;\n        const updateContent = this._cacheActiveSpec.updateContent ?? specByType.updateContent;\n        const maxLineCount = this._cacheActiveSpec.maxLineCount ?? specByType.maxLineCount ?? TOOLTIP_MAX_LINE_COUNT;\n\n        if (updateTitle) {\n          this._cacheActiveSpec.title =\n            updateTitle(this._cacheActiveSpec.title, data, params) ?? this._cacheActiveSpec.title;\n        }\n\n        if (updateContent) {\n          this._cacheActiveSpec.content =\n            updateContent(this._cacheActiveSpec.content, data, params) ?? this._cacheActiveSpec.content;\n        } else if (maxLineCount >= 1 && this._cacheActiveSpec.content?.length > maxLineCount) {\n          const othersLine = this._cacheActiveSpec.othersLine ?? specByType.othersLine;\n          const otherLine = othersLine\n            ? {\n                ...TOOLTIP_OTHERS_LINE,\n                ...othersLine\n              }\n            : TOOLTIP_OTHERS_LINE;\n          this._cacheActiveSpec.content = [\n            ...this._cacheActiveSpec.content.slice(0, maxLineCount - 1),\n            {\n              ...this._cacheActiveSpec.content[maxLineCount - 1],\n              ...otherLine\n            }\n          ];\n        }\n      }\n    }\n  }\n\n  /** 判断是否应该触发 tooltip */\n  shouldHandleTooltip(params: BaseEventParams, info: TooltipInfo): boolean {\n    if (isNil(info)) {\n      return false;\n    }\n\n    return isActiveTypeVisible(this.activeType, (params.model as ISeries)?.tooltipHelper?.spec);\n  }\n\n  clearCache() {\n    this._cacheActiveSpec = undefined;\n  }\n}\n"]}