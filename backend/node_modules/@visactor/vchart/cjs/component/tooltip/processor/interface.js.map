{"version":3,"sources":["../src/component/tooltip/processor/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IMark } from '../../../mark/interface';\nimport type { ISeries } from '../../../series/interface';\nimport type { IDimensionInfo } from '../../../event/events/dimension/interface';\nimport type { Datum } from '../../../typings/common';\nimport type { BaseEventParams } from '../../../event/interface';\nimport type { ITooltip, TooltipResult } from '../interface/common';\n\nexport type DimensionTooltipInfo = IDimensionInfo[];\n\nexport type MarkTooltipInfo<T = Datum> = {\n  datum: T;\n  mark: IMark;\n  series: ISeries;\n};\n\nexport type GroupTooltipInfo = MarkTooltipInfo<Datum | Datum[]>;\n\nexport type TooltipInfo = DimensionTooltipInfo | MarkTooltipInfo | GroupTooltipInfo;\n\nexport type MouseEventData = {\n  /** 展示 tooltip 需要的信息 */\n  tooltipInfo: TooltipInfo;\n  /** 是否忽略该 tooltip */\n  ignore: boolean;\n};\n\nexport interface ITooltipProcessor<T> {\n  shouldHandleTooltip: (params: BaseEventParams, info: TooltipInfo) => boolean;\n  clearCache: () => void;\n  showTooltip: (info: T, params: BaseEventParams, changePositionOnly: boolean) => TooltipResult;\n  getMouseEventData: (params: BaseEventParams) => MouseEventData;\n}\n\nexport interface ITooltipProcessorConstructor {\n  new (comp: ITooltip):\n    | ITooltipProcessor<DimensionTooltipInfo>\n    | ITooltipProcessor<MarkTooltipInfo>\n    | ITooltipProcessor<GroupTooltipInfo>;\n}\n"]}