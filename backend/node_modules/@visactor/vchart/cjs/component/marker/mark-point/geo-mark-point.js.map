{"version":3,"sources":["../src/component/marker/mark-point/geo-mark-point.ts"],"names":[],"mappings":";;;AAAA,+CAAyD;AACzD,oCAAqC;AACrC,qEAAwE;AACxE,mDAAgD;AAChD,uDAAkD;AAElD,mFAA+E;AAE/E,MAAa,YAAa,SAAQ,+BAAa;IAA/C;;QAEE,SAAI,GAAG,wBAAiB,CAAC,YAAY,CAAC;QACtC,SAAI,GAAW,wBAAiB,CAAC,YAAY,CAAC;QAE9C,mBAAc,GAAG,KAAuB,CAAC;IAmB3C,CAAC;IAbW,kBAAkB;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAA,iBAAS,EAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,OAAO,EAAE,KAAK,EAAE,CAAC;IACnB,CAAC;IAES,eAAe;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAY,CAAC;QAC/B,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3F,OAAO,EAAE,OAAO,EAAE,CAAC;IACrB,CAAC;;AAvBH,oCAwBC;AAvBQ,iBAAI,GAAG,wBAAiB,CAAC,YAAY,CAAC;AAGtC,2BAAc,GAAW,KAAK,CAAC;AAGtB,yBAAY,GAAG;IAC7B,YAAY,EAAE,sBAAS;CACxB,CAAC;AAiBG,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,iBAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC3D,IAAA,6CAAwB,GAAE,CAAC;AAC7B,CAAC,CAAC;AAHW,QAAA,oBAAoB,wBAG/B","file":"geo-mark-point.js","sourcesContent":["import { ComponentTypeEnum } from '../../interface/type';\nimport { geoLayout } from '../utils';\nimport { registerMarkPointAnimate } from '@visactor/vrender-components';\nimport { Factory } from '../../../core/factory';\nimport { BaseMarkPoint } from './base-mark-point';\nimport type { CoordinateType } from '../../../typings';\nimport { markPoint } from '../../../theme/builtin/common/component/mark-point';\n\nexport class GeoMarkPoint extends BaseMarkPoint {\n  static type = ComponentTypeEnum.geoMarkPoint;\n  type = ComponentTypeEnum.geoMarkPoint;\n  name: string = ComponentTypeEnum.geoMarkPoint;\n  static coordinateType: string = 'geo';\n  coordinateType = 'geo' as CoordinateType;\n\n  static readonly builtInTheme = {\n    geoMarkPoint: markPoint\n  };\n\n  protected _computePointsAttr() {\n    const data = this._markerData;\n    const relativeSeries = this._relativeSeries;\n    const point = geoLayout(data, relativeSeries)[0][0];\n\n    return { point };\n  }\n\n  protected _computeOptions(): any {\n    const spec = this._spec as any;\n    const options = [this._processSpecByDims([{ dim: 'areaName', specValue: spec.areaName }])];\n    return { options };\n  }\n}\n\nexport const registerGeoMarkPoint = () => {\n  Factory.registerComponent(GeoMarkPoint.type, GeoMarkPoint);\n  registerMarkPointAnimate();\n};\n"]}