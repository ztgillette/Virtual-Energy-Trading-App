{"version":3,"sources":["../src/component/marker/mark-line/polar-mark-line.ts"],"names":[],"mappings":"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","file":"polar-mark-line.js","sourcesContent":["import type { DataView } from '@visactor/vdataset';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../../interface/type';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IOptionAggr, IOptionWithCoordinates, IOptionRegr } from '../../../data/transforms/interface';\nimport { polarLayout, getMarkLineProcessInfo, polarCoordinateLayout } from '../utils';\nimport type { MarkArcLineAttrs, MarkLineAttrs } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport {\n  MarkArcLine as MarkArcLineComponent,\n  MarkLine as MarkLineComponent,\n  registerMarkArcLineAnimate,\n  registerMarkLineAnimate\n} from '@visactor/vrender-components';\nimport { Factory } from '../../../core/factory';\nimport type { CoordinateType, IPoint, IPolarPoint } from '../../../typings';\nimport type { IPolarSeries } from 'src/series';\nimport { BaseMarkLine } from './base-mark-line';\nimport { polarToCartesian } from '@visactor/vutils';\nimport { markLine } from '../../../theme/builtin/common/component/mark-line';\n\nexport class PolarMarkLine extends BaseMarkLine {\n  static type = ComponentTypeEnum.polarMarkLine;\n  type = ComponentTypeEnum.polarMarkLine;\n  name: string = ComponentTypeEnum.polarMarkLine;\n  static coordinateType = 'polar';\n  coordinateType = 'polar' as CoordinateType;\n\n  static readonly builtInTheme = {\n    polarMarkLine: markLine\n  };\n\n  protected declare _markerComponent: MarkArcLineComponent;\n\n  protected _newMarkLineComponent(attr: MarkArcLineAttrs | MarkLineAttrs): MarkArcLineComponent | MarkLineComponent {\n    const { doRadiusProcess, doRadAngAng1Process } = getMarkLineProcessInfo(this._spec as any);\n    const isArcLine = doRadiusProcess || doRadAngAng1Process;\n    return isArcLine\n      ? new MarkArcLineComponent(attr as MarkArcLineAttrs)\n      : new MarkLineComponent(attr as MarkLineAttrs);\n  }\n\n  protected _computePointsAttr() {\n    const spec = this._spec as any;\n    const data = this._markerData;\n    const startRelativeSeries = this._startRelativeSeries;\n    const endRelativeSeries = this._endRelativeSeries;\n    const relativeSeries = this._relativeSeries;\n    const autoRange = spec.autoRange ?? false;\n\n    const {\n      doAngleProcess,\n      doRadiusProcess,\n      doAngRadRad1Process,\n      doRadAngAng1Process,\n      doRadAngProcess,\n      doCoordinatesProcess\n    } = getMarkLineProcessInfo(spec);\n\n    let points: IPolarPoint[] = [];\n    let pointsAttr: {\n      points?: IPoint[];\n      radius?: number;\n      startAngle?: number;\n      endAngle?: number;\n      center?: IPoint;\n    } = {};\n\n    const center = {\n      x:\n        this._relativeSeries.getRegion().getLayoutStartPoint().x +\n        (this._relativeSeries as IPolarSeries).angleAxisHelper.center().x,\n      y:\n        this._relativeSeries.getRegion().getLayoutStartPoint().y +\n        (this._relativeSeries as IPolarSeries).angleAxisHelper.center().y\n    };\n\n    if (doAngleProcess || doRadiusProcess || doAngRadRad1Process || doRadAngAng1Process || doRadAngProcess) {\n      const polarPoints = polarLayout(\n        data,\n        startRelativeSeries as IPolarSeries,\n        endRelativeSeries as IPolarSeries,\n        relativeSeries as IPolarSeries,\n        autoRange\n      );\n\n      points = (polarPoints.length === 1 ? polarPoints[0] : polarPoints.map(point => point[0])) as IPolarPoint[];\n\n      if (points[0].radius === points[1].radius) {\n        pointsAttr = {\n          radius: points[0].radius,\n          startAngle: points[0].angle,\n          endAngle: points[1].angle,\n          center\n        };\n      } else {\n        pointsAttr = {\n          points: points.map(point => {\n            return polarToCartesian(center, point.radius, point.angle);\n          })\n        };\n      }\n    } else if (doCoordinatesProcess) {\n      points = polarCoordinateLayout(data, relativeSeries, autoRange);\n      pointsAttr = {\n        points: points.map(point => {\n          return polarToCartesian(center, point.radius, point.angle);\n        })\n      };\n    }\n    return pointsAttr;\n  }\n\n  protected _computeOptions(): any {\n    const spec = this._spec as any;\n    const {\n      doAngleProcess,\n      doRadiusProcess,\n      doAngRadRad1Process,\n      doRadAngAng1Process,\n      doRadAngProcess,\n      doCoordinatesProcess\n    } = getMarkLineProcessInfo(spec);\n\n    let options: IOptionAggr[] | IOptionRegr | IOptionWithCoordinates;\n    const processData: DataView = this._getRelativeDataView();\n    const needAggr: boolean = true;\n    const needRegr: boolean = false;\n\n    if (doRadAngProcess) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius }\n        ]),\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle1 },\n          { dim: 'radius', specValue: spec.radius1 }\n        ])\n      ];\n    } else if (doAngleProcess) {\n      options = [this._processSpecByDims([{ dim: 'angle', specValue: spec.angle }])];\n    } else if (doRadiusProcess) {\n      options = [this._processSpecByDims([{ dim: 'radius', specValue: spec.radius }])];\n    } else if (doAngRadRad1Process) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius }\n        ]),\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius1 }\n        ])\n      ];\n    } else if (doRadAngAng1Process) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle },\n          { dim: 'radius', specValue: spec.radius }\n        ]),\n        this._processSpecByDims([\n          { dim: 'angle', specValue: spec.angle1 },\n          { dim: 'radius', specValue: spec.radius }\n        ])\n      ];\n    } else if (doCoordinatesProcess) {\n      options = this._processSpecCoo(spec);\n    }\n\n    return { options, needAggr, needRegr, processData };\n  }\n}\n\nexport const registerPolarMarkLine = () => {\n  Factory.registerComponent(PolarMarkLine.type, PolarMarkLine);\n  registerMarkArcLineAnimate();\n  registerMarkLineAnimate();\n};\n"]}