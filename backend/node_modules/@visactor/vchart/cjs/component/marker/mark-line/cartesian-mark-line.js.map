{"version":3,"sources":["../src/component/marker/mark-line/cartesian-mark-line.ts"],"names":[],"mappings":"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","file":"cartesian-mark-line.js","sourcesContent":["import { DataView } from '@visactor/vdataset';\nimport type { IStepMarkLineSpec } from './interface';\nimport { ComponentTypeEnum } from '../../interface/type';\nimport type { IOptionAggr, IOptionWithCoordinates, IOptionRegr } from '../../../data/transforms/interface';\nimport { cartesianCoordinateLayout, positionLayout, xyLayout, getMarkLineProcessInfo } from '../utils';\nimport {\n  type MarkLineAttrs,\n  MarkLine as MarkLineComponent,\n  registerMarkLineAnimate\n} from '@visactor/vrender-components';\nimport { array, isValid, isValidNumber } from '@visactor/vutils';\nimport type { IDataPos, IMarkProcessOptions } from '../interface';\nimport { getInsertPoints, getTextOffset } from './util';\nimport { Factory } from '../../../core/factory';\nimport { isPercent } from '../../../util';\nimport type { CoordinateType, IPoint } from '../../../typings';\nimport { BaseMarkLine } from './base-mark-line';\nimport { markLine } from '../../../theme/builtin/common/component/mark-line';\n\nexport class CartesianMarkLine extends BaseMarkLine {\n  static type = ComponentTypeEnum.markLine;\n  type = ComponentTypeEnum.markLine;\n  name: string = ComponentTypeEnum.markLine;\n  static coordinateType = 'cartesian';\n  coordinateType = 'cartesian' as CoordinateType;\n\n  static readonly builtInTheme = {\n    markLine\n  };\n\n  protected declare _markerComponent: MarkLineComponent;\n\n  protected _newMarkLineComponent(attr: MarkLineAttrs): MarkLineComponent {\n    return new MarkLineComponent(attr);\n  }\n  protected _computePointsAttr() {\n    const spec = this._spec as any;\n    const data = this._markerData;\n    const startRelativeSeries = this._startRelativeSeries;\n    const endRelativeSeries = this._endRelativeSeries;\n    const relativeSeries = this._relativeSeries;\n\n    const isValidCoordinates = isValid(spec.coordinates);\n    const isValidProcess = isValid(spec.process);\n    const isValidProcessX = isValidProcess && isValid(spec.process.x);\n    const isValidProcessY = isValidProcess && isValid(spec.process.y);\n    const isPositionLayout = isValid(spec.positions);\n    const autoRange = spec.autoRange ?? false;\n\n    const { doXProcess, doYProcess, doXYY1Process, doYXX1Process, doXYProcess, doCoordinatesProcess } =\n      getMarkLineProcessInfo(spec);\n\n    let points: IPoint[] = [];\n    if (\n      doXProcess ||\n      doXYY1Process ||\n      doYProcess ||\n      doYXX1Process ||\n      doXYProcess ||\n      (isValidCoordinates && isValidProcessX) ||\n      (isValidCoordinates && isValidProcessY)\n    ) {\n      const xyPoints = xyLayout(data, startRelativeSeries, endRelativeSeries, relativeSeries, autoRange);\n      // 这里不同的场景返回的值不同，如果同时声明了 x x1 y y1，会返回两个数值的数组（如 [[{}], [{}]]），所以需要分别处理下\n      points = (xyPoints.length === 1 ? xyPoints[0] : xyPoints.map(point => point[0])) as IPoint[];\n    } else if (doCoordinatesProcess) {\n      points = cartesianCoordinateLayout(data, relativeSeries, autoRange, spec.coordinatesOffset);\n    } else if (isPositionLayout) {\n      points = positionLayout(spec.positions, relativeSeries, spec.regionRelative);\n    }\n    return { points };\n  }\n\n  protected _markerLayout() {\n    const updateAttrs = this._getUpdateMarkerAttrs();\n\n    if ((this._spec as IStepMarkLineSpec).type === 'type-step') {\n      const startRelativeSeries = this._startRelativeSeries;\n      const endRelativeSeries = this._endRelativeSeries;\n\n      const { multiSegment, mainSegmentIndex } = (this._spec as IStepMarkLineSpec).line || {};\n      const { connectDirection, expandDistance = 0 } = this._spec as IStepMarkLineSpec;\n\n      let expandDistanceValue: number;\n      if (isPercent(expandDistance)) {\n        const regionStart = startRelativeSeries.getRegion();\n        const regionStartLayoutStartPoint = regionStart.getLayoutStartPoint();\n        const regionEnd = endRelativeSeries.getRegion();\n        const regionEndLayoutStartPoint = regionEnd.getLayoutStartPoint();\n\n        if (connectDirection === 'bottom' || connectDirection === 'top') {\n          const regionHeight = Math.abs(\n            Math.min(regionStartLayoutStartPoint.y, regionEndLayoutStartPoint.y) -\n              Math.max(\n                regionStartLayoutStartPoint.y + regionStart.getLayoutRect().height,\n                regionEndLayoutStartPoint.y + regionEnd.getLayoutRect().height\n              )\n          );\n          expandDistanceValue = (Number(expandDistance.substring(0, expandDistance.length - 1)) * regionHeight) / 100;\n        } else {\n          const regionWidth = Math.abs(\n            Math.min(regionStartLayoutStartPoint.x, regionEndLayoutStartPoint.x) -\n              Math.max(\n                regionStartLayoutStartPoint.x + regionStart.getLayoutRect().width,\n                regionEndLayoutStartPoint.x + regionEnd.getLayoutRect().width\n              )\n          );\n          expandDistanceValue = (Number(expandDistance.substring(0, expandDistance.length - 1)) * regionWidth) / 100;\n        }\n      } else {\n        expandDistanceValue = expandDistance as number;\n      }\n      const { points, limitRect } = updateAttrs;\n\n      const joinPoints = getInsertPoints(\n        (points as IPoint[])[0],\n        (points as IPoint[])[1],\n        connectDirection,\n        expandDistanceValue\n      );\n\n      let labelPositionAttrs: any;\n      if (multiSegment && isValid(mainSegmentIndex)) {\n        // 如果用户配置了主线段，则不进行 label 的偏移处理，直接显示在主线段中间\n        labelPositionAttrs = {\n          position: 'middle',\n          autoRotate: false\n        };\n      } else {\n        labelPositionAttrs = {\n          position: 'start',\n          autoRotate: false,\n          ...getTextOffset((points as IPoint[])[0], (points as IPoint[])[1], connectDirection, expandDistanceValue)\n        };\n      }\n\n      const markerComponentAttr = this._markerComponent?.attribute ?? {};\n      const prevLabelAttrs = array(markerComponentAttr.label);\n      const updateLabels = array(updateAttrs.label);\n      const labelsInSpec = array(this._spec.label);\n      this._markerComponent?.setAttributes({\n        points: multiSegment\n          ? [\n              [joinPoints[0], joinPoints[1]],\n              [joinPoints[1], joinPoints[2]],\n              [joinPoints[2], joinPoints[3]]\n            ]\n          : joinPoints,\n        label: updateLabels.map((labelItem, index) => {\n          let refX = 0;\n          let refY = 0;\n          let dx = labelPositionAttrs.dx ?? 0;\n          let dy = labelPositionAttrs.dy ?? 0;\n          const labelSpec = labelsInSpec[index] ?? labelsInSpec[0];\n          if (isValidNumber(labelSpec?.refX)) {\n            refX += labelSpec.refX;\n          }\n          if (isValidNumber(labelSpec?.refY)) {\n            refY += labelSpec.refY;\n          }\n          if (isValidNumber(labelSpec?.dx)) {\n            dx += labelSpec.dx;\n          }\n          if (isValidNumber(labelSpec?.dy)) {\n            dy += labelSpec.dy;\n          }\n          return {\n            ...labelItem,\n            ...labelPositionAttrs,\n            refX,\n            refY,\n            dx,\n            dy,\n            textStyle: {\n              ...prevLabelAttrs[index]?.textStyle,\n              textAlign: 'center',\n              textBaseline: 'middle'\n            }\n          };\n        }),\n        limitRect,\n        multiSegment,\n        mainSegmentIndex,\n        dx: this._layoutOffsetX,\n        dy: this._layoutOffsetY\n      } as any);\n    } else {\n      this._markerComponent?.setAttributes(updateAttrs);\n    }\n  }\n\n  protected _computeOptions(): IMarkProcessOptions {\n    let options: IOptionAggr[] | IOptionRegr | IOptionWithCoordinates;\n    let processData: DataView = this._getRelativeDataView();\n    let needAggr: boolean = true;\n    let needRegr: boolean = false;\n    const spec: any = this._spec;\n    const relativeSeries = this._relativeSeries;\n\n    const { doXProcess, doYProcess, doXYY1Process, doYXX1Process, doXYProcess, doCoordinatesProcess } =\n      getMarkLineProcessInfo(spec);\n\n    if (doXYProcess) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x },\n          { dim: 'y', specValue: spec.y }\n        ]),\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x1 },\n          { dim: 'y', specValue: spec.y1 }\n        ])\n      ];\n    } else if (doXProcess) {\n      options = [this._processSpecByDims([{ dim: 'x', specValue: spec.x }])];\n    } else if (doYProcess) {\n      options = [this._processSpecByDims([{ dim: 'y', specValue: spec.y }])];\n    } else if (doXYY1Process) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x },\n          { dim: 'y', specValue: spec.y }\n        ]),\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x },\n          { dim: 'y', specValue: spec.y1 }\n        ])\n      ];\n    } else if (doYXX1Process) {\n      options = [\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x },\n          { dim: 'y', specValue: spec.y }\n        ]),\n        this._processSpecByDims([\n          { dim: 'x', specValue: spec.x1 },\n          { dim: 'y', specValue: spec.y }\n        ])\n      ];\n    } else if (doCoordinatesProcess) {\n      options = this._processSpecCoo(spec);\n      needAggr = false;\n      processData = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_data` })\n        .parse([relativeSeries.getViewData()], {\n          type: 'dataview'\n        })\n        .transform({\n          type: 'markerAggregation',\n          options\n        });\n      if (spec.process && isValid(spec.process.x)) {\n        options = [this._processSpecByDims([{ dim: 'x', specValue: spec.process.x as unknown as IDataPos }])];\n        needAggr = true;\n      }\n      if (spec.process && isValid(spec.process.y)) {\n        options = options = [this._processSpecByDims([{ dim: 'y', specValue: spec.process.y as unknown as IDataPos }])];\n        needAggr = true;\n      }\n      if (spec.process && isValid(spec.process.xy)) {\n        const { xField, yField } = relativeSeries.getSpec();\n        options = {\n          fieldX: xField,\n          fieldY: yField\n        };\n        needRegr = true;\n      }\n    } else {\n      needAggr = false;\n    }\n    return { options, needAggr, needRegr, processData };\n  }\n}\n\nexport const registerMarkLine = () => {\n  Factory.registerComponent(CartesianMarkLine.type, CartesianMarkLine);\n  registerMarkLineAnimate();\n};\n"]}