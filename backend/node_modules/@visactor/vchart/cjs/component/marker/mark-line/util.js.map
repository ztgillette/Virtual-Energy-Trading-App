{"version":3,"sources":["../src/component/marker/mark-line/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import type { IPoint } from '../../../typings';\n\nexport function getInsertPoints(\n  start: IPoint,\n  end: IPoint,\n  direction: 'top' | 'bottom' | 'left' | 'right',\n  offset: number = 0\n) {\n  const points: IPoint[] = [];\n  const dy = start.y - end.y;\n  const dx = start.x - end.x;\n\n  switch (direction) {\n    case 'top':\n      points.push(start);\n      points.push({\n        x: start.x,\n        y: dy > 0 ? start.y - offset - Math.abs(dy) : start.y - offset\n      });\n      points.push({\n        x: end.x,\n        y: dy > 0 ? end.y - offset : end.y - offset - Math.abs(dy)\n      });\n      points.push(end);\n      break;\n    case 'bottom':\n      points.push(start);\n      points.push({ x: start.x, y: dy < 0 ? start.y + offset + Math.abs(dy) : start.y + offset });\n      points.push({ x: end.x, y: dy < 0 ? end.y + offset : end.y + offset + Math.abs(dy) });\n      points.push(end);\n      break;\n    case 'left':\n      points.push(start);\n      points.push({\n        x: dx > 0 ? start.x - offset - Math.abs(dx) : start.x - offset,\n        y: start.y\n      });\n      points.push({\n        x: dx > 0 ? end.x - offset : end.x - offset - Math.abs(dx),\n        y: end.y\n      });\n      points.push(end);\n      break;\n    case 'right':\n      points.push(start);\n      points.push({\n        x: dx > 0 ? start.x + offset : start.x + offset + Math.abs(dx),\n        y: start.y\n      });\n      points.push({\n        x: dx > 0 ? end.x + offset + Math.abs(dx) : end.x + offset,\n        y: end.y\n      });\n      points.push(end);\n      break;\n    default:\n      break;\n  }\n  return points;\n}\n\nexport function getTextOffset(\n  start: IPoint,\n  end: IPoint,\n  direction: 'top' | 'bottom' | 'left' | 'right',\n  offset: number = 0\n) {\n  const dy = start.y - end.y;\n  const dx = start.x - end.x;\n\n  if (direction === 'bottom') {\n    return {\n      dx: dx > 0 ? -dx / 2 : Math.abs(dx / 2),\n      dy: dy > 0 ? offset : Math.abs(dy) + offset\n    };\n  }\n\n  if (direction === 'top') {\n    return {\n      dx: dx > 0 ? -Math.abs(dx / 2) : +Math.abs(dx / 2),\n      dy: dy > 0 ? -(Math.abs(dy) + offset) : -offset\n    };\n  }\n\n  if (direction === 'left') {\n    return {\n      dx: dx > 0 ? -dx - offset : -offset,\n      dy: dy > 0 ? -(dy / 2) : Math.abs(dy / 2)\n    };\n  }\n\n  if (direction === 'right') {\n    return {\n      dx: dx > 0 ? offset : Math.abs(dx) + offset,\n      dy: dy > 0 ? -(dy / 2) : Math.abs(dy / 2)\n    };\n  }\n\n  return {};\n}\n"]}