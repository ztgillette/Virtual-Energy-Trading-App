{"version":3,"sources":["../src/component/marker/mark-line/interface/spec.ts"],"names":[],"mappings":"","file":"spec.js","sourcesContent":["import type { IComponent } from '../../../interface';\nimport type {\n  IAggrType,\n  IMarkerPositionsSpec,\n  IDataPointSpec,\n  IMarkerSpec,\n  IDataPos,\n  IDataPosCallback,\n  IMarkerLabelSpec,\n  IMarkerCrossSeriesSpec,\n  OffsetPoint,\n  MarkerStateValue,\n  MarkerStateCallback,\n  IMarkerSupportSeries\n} from '../../interface';\nimport type { IRegressType } from '../../mark-area/interface';\nimport type { IMarkLineTheme } from './theme';\nimport type { Datum, ILineMarkSpec, IPoint } from '../../../../typings';\nimport type { BaseMarkerAnimation, MarkCommonLineAnimationType } from '@visactor/vrender-components';\n\nexport type IMarkLine = IComponent;\n\n/**\n * 辅助线配置，一般用于展示图表的趋势线、平均线等\n */\nexport type IMarkLineSpec =\n  | (IMarkerSpec &\n      /**\n       * 标注目标：笛卡尔坐标系坐标空间\n       */\n      (| IMarkLineXSpec\n        | IMarkLineYSpec\n        | IMarkLineXYSpec\n        | IMarkLineXYY1Spec\n        | IMarkLineYXX1Spec\n        /**\n         * 标注目标: 极坐标系\n         * @since 1.11.0\n         */\n        | IMarkLineAngleSpec\n        | IMarkLineRadiusSpec\n        | IMarkLineAngRadRad1Spec\n        | IMarkLineRadAngAng1Spec\n        | IMarkLineAngRadSpec\n        // 标注目标：数据元素\n        | IMarkLineCoordinateSpec\n        // 标注目标: 任意位置\n        | IMarkerPositionsSpec\n      ) &\n      IMarkLineTheme &\n      /**\n       * 动画配置\n       * @since 1.11.0\n       */\n      BaseMarkerAnimation<MarkCommonLineAnimationType>)\n  | (IStepMarkLineSpec & BaseMarkerAnimation<MarkCommonLineAnimationType>); // 标注目标：任意位置\n\nexport interface IMarkLineXSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 单独声明 x 属性，可以绘制一条贯穿 y 轴的标注线\n   * x 轴上的参考线。可以配置参考线在 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，用于表示将 x 绘制在 marker 所在 region 横轴（从左往右）的百分之 15 位置处。\n   */\n  x: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineXYY1Spec extends IMarkerCrossSeriesSpec {\n  /**\n   * 参考线在 x 轴上位置，可以配置参考线在 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，表示该位置位于 region 横轴（从左往右）的百分之 15 位置处。\n   */\n  x: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线在 y 轴的起点位置，可以配置 y 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 y 配置为 '15%' 百分比的形式，表示该位置位于 region 纵轴（从上到下）的百分之 15 位置处。\n   */\n  y: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线在 y 轴的终点位置，可以配置 y 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 y 配置为 '15%' 百分比的形式，表示该位置位于 region 纵轴（从上到下）的百分之 15 位置处。\n   * @since 1.7.3\n   */\n  y1: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineYSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 单独声明 y 属性，可以绘制一条贯穿 x 轴的标注线\n   * y轴上的参考线。可以配置参考线在y轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算\n   * 可以将 y 配置为 '15%' 百分比的形式，用于表示将 x 绘制在 marker 所在 region 纵轴（从上到下）的百分之 15 位置处\n   */\n  y: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineYXX1Spec extends IMarkerCrossSeriesSpec {\n  /**\n   * 参考线在 y 轴上位置，可以配置参考线在 y 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 y 配置为 '15%' 百分比的形式，表示该位置位于  region 纵轴（从上到下）的百分之 15 位置处。\n   */\n  y: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线在 x 轴的起点位置，可以配置 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，表示该位置位于 region 横轴（从左往右）的百分之 15 位置处。\n   */\n  x: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线在 x 轴的终点位置，可以配置 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，表示该位置位于 region 横轴（从左往右）的百分之 15 位置处。\n   * @since 1.7.3\n   */\n  x1: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineXYSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 参考线起始点在 x 轴上位置，可以配置参考线在 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，表示该位置位于 region 横轴（从左往右）的百分之 15 位置处。\n   */\n  x: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线起始点在 y 轴的起点位置，可以配置 y 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 y 配置为 '15%' 百分比的形式，表示该位置位于 region 纵轴（从上到下）的百分之 15 位置处。\n   */\n  y: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线终点在 x 轴的终点位置，可以配置 x 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 x 配置为 '15%' 百分比的形式，表示该位置位于 region 横轴（从左往右）的百分之 15 位置处。\n   * @since 1.7.3\n   */\n  x1: IDataPos | IDataPosCallback;\n  /**\n   * 该参考线终点在 y 轴的终点位置，可以配置 y 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * 可以将 y 配置为 '15%' 百分比的形式，表示该位置位于 region 纵轴（从上到下）的百分之 15 位置处。\n   * @since 1.7.3\n   */\n  y1: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineAngleSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineRadiusSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineAngRadRad1Spec extends IMarkerCrossSeriesSpec {\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius1: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineRadAngAng1Spec extends IMarkerCrossSeriesSpec {\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle1: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius: IDataPos | IDataPosCallback;\n}\n\nexport interface IMarkLineAngRadSpec extends IMarkerCrossSeriesSpec {\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 angle 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  angle1: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius: IDataPos | IDataPosCallback;\n  /**\n   * 极坐标系下,  参考线在 radius 轴上位置，可以配置参考线在 angle 轴上的值，或者聚合计算类型，或者以回调的形式通过数据自行计算。\n   * @since 1.11.0\n   */\n  radius1: IDataPos | IDataPosCallback;\n}\n\nexport type IMarkLineCoordinateSpec = {\n  /**\n   * 指定数据点的参考线。基于指定数据点进行参考线的绘制，可以对数据点进行数据处理\n   * `coordinates` 自 1.12.0 版本开始支持回调函数\n   */\n  coordinates: IDataPointSpec[] | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => IDataPointSpec[]);\n  /**\n   * 对每个数据点转化后的画布坐标点进行偏移，该偏移值可以是像素值，也可以是 string 类型，如 '20%' 代表百分比\n   * 每个元素对应一个坐标点的偏移量\n   * @since 1.7.3\n   */\n  coordinatesOffset?: OffsetPoint[];\n  /**\n   * 数据点的处理方法。 如果不配置则按照coordinate数组直接连接成line。\n   */\n  process?:\n    | {\n        x: IAggrType;\n      }\n    | {\n        y: IAggrType;\n      }\n    | {\n        xy: IRegressType; // FIXME: xy属性名称不太合理，可能需调整\n      };\n};\n\nexport type IStepMarkLineSpec = IMarkerSpec & {\n  /**\n   * 指定辅助线的连接类型，step 的连接方式为由交替的水平线和处置线组成的\n   */\n  type: 'type-step';\n  /**\n   * 线的链接方向\n   */\n  connectDirection: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * 在连接方向的扩展距离。\n   * number 类型为像素值\n   * string 类型为百分比，相对于 region 区域宽度/高度的百分比，如 '30%'\n   */\n  expandDistance?: number | string;\n  /**\n   * 标注线的标签样式\n   */\n  label?: IMarkerLabelSpec;\n  /**\n   * 标注线的线配置\n   */\n  line?: {\n    /**\n     * 是否对 points 进行多段处理，默认为 false，即直接将所有的点连接成线。\n     * 如果需要进行多段处理，需要将 points 属性配置为 Point[][] 类型\n     * @default false\n     */\n    multiSegment?: boolean;\n    /**\n     * 在 `multiSegment` 属性开启的前提下，用于声明那一段线段用来作为主线段，如果不声明，默认全段为主线段\n     */\n    mainSegmentIndex?: number;\n    /**\n     * 当进行多段配置时，可以通过数组的方式传入\n     */\n    style?: ILineMarkSpec | ILineMarkSpec[];\n    state?: Record<\n      MarkerStateValue,\n      ILineMarkSpec | ILineMarkSpec[] | MarkerStateCallback<ILineMarkSpec | ILineMarkSpec[]>\n    >;\n  };\n} & Omit<IMarkLineTheme, 'label' | 'line'> &\n  (\n    | {\n        /**\n         * 指定数据点的参考线。基于指定数据点进行参考线的绘制，可以对数据点进行数据处理\n         * `coordinates` 自 1.12.0 版本开始支持回调函数\n         */\n        coordinates:\n          | [IDataPointSpec, IDataPointSpec]\n          | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => [IDataPointSpec, IDataPointSpec]);\n        /**\n         * 数据点的处理方法。 如果不配置则按照coordinate数组直接连接成line。\n         */\n        process?:\n          | {\n              x: IAggrType;\n            }\n          | {\n              y: IAggrType;\n            }\n          | {\n              xy: IRegressType; // FIXME: xy属性名称不太合理，可能需调整\n            };\n      }\n    | {\n        /**\n         * 画布坐标\n         * `positions` 自 1.12.0 版本开始支持回调函数\n         */\n        positions: [IPoint, IPoint] | ((seriesData: Datum[], relativeSeries: IMarkerSupportSeries) => [IPoint, IPoint]);\n        /**\n         * 是否为相对 region 的坐标，默认为 false，即相对画布的坐标\n         * @default false\n         * @since 1.7.0\n         */\n        regionRelative?: boolean;\n      }\n  );\n"]}