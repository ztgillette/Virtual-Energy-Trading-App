{"version":3,"sources":["../src/component/indicator/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { Datum, IFormatMethod } from '../../typings';\nimport type { IPercent } from '../../typings/layout';\nimport type { ConvertToMarkStyleSpec, ITextMarkSpec } from '../../typings/visual';\nimport type { IComponentSpec } from '../base/interface';\nimport type { IComponent } from '../interface';\nimport type { ITextGraphicAttribute } from '@visactor/vrender-core';\n\nexport interface IIndicatorItemSpec {\n  /**\n   * 是否显示当前项\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * 文字内容字段\n   * 优先级高于样式中 text 配置\n   */\n  field?: string;\n  /**\n   * title.space: title 和 content 之间的间距\n   * contentItem.space: content 之间的间距\n   * 兼容gap\n   */\n  space?: number;\n  /**\n   * 是否自适应文字空间进行缩略\n   * @default false\n   */\n  autoLimit?: boolean;\n  /**\n   * 是否自适应文字空间缩放文字大小\n   * @default false\n   */\n  autoFit?: boolean;\n  /**\n   * 自适应文字宽度与可用空间的比例\n   * @default 0.5\n   */\n  fitPercent?: number;\n  /**\n   * 自适应文字策略\n   * @default 'local'\n   * @since 1.9.0\n   */\n  fitStrategy?: 'default' | 'inscribed';\n  /**\n   * 格式化方法\n   * @since 1.11.11\n   * @param text 文本内容\n   * @param textStyle 计算出来的文本样式\n   */\n  formatMethod?: (\n    text: string | number,\n    textStyle: ITextGraphicAttribute\n  ) => IFormatMethod<[activeDatum: Datum]> | ITextMarkSpec['text'] | ReturnType<IFormatMethod<[activeDatum: Datum]>>;\n  /**\n   * 文字样式\n   */\n  style?: Omit<ConvertToMarkStyleSpec<ITextMarkSpec>, 'visible' | 'text'> & {\n    /**\n     * 文本类型\n     * @deprecated\n     * */\n    type?: 'text' | 'rich';\n    text?:\n      | IFormatMethod<[activeDatum: Datum]>\n      | ITextMarkSpec['text']\n      | ReturnType<IFormatMethod<[activeDatum: Datum]>>;\n  };\n}\n\nexport type IIndicator = IComponent & {\n  updateDatum: (datum: any) => void;\n};\n\nexport interface IIndicatorSpec extends IComponentSpec {\n  /**\n   * 是否显示指标卡组件\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * 保持指标卡内容显示 / 交互后才显示\n   * @default true\n   */\n  fixed?: boolean;\n  /**\n   * 交互触发类型\n   * @default 'select'\n   */\n  trigger?: 'hover' | 'select' | 'none';\n  /**\n   * 指标卡文字间隔\n   * @deparated 已弃用，请使用 title.space 或者 content.space\n   * @default 0\n   */\n  gap?: number;\n  /**\n   * 指标卡 x 方向偏移\n   * 支持两种格式：像素值、百分比\n   * @default 0\n   */\n  offsetX?: number | IPercent;\n  /**\n   * 指标卡 y 方向偏移\n   * 支持两种格式：像素值、百分比\n   * @default 0\n   */\n  offsetY?: number | IPercent;\n  /**\n   * 指标卡宽度占内容区域的最大比值（从0到1）\n   */\n  limitRatio?: number;\n  /**\n   * 指标卡标题文字配置\n   */\n  title?: IIndicatorItemSpec;\n  /**\n   * 指标卡内容文字配置\n   */\n  content?: IIndicatorItemSpec[] | IIndicatorItemSpec;\n}\n\nexport interface IIndicatorItemTheme extends Omit<IIndicatorItemSpec, 'style'> {\n  style?: Omit<ITextMarkSpec, 'visible'>;\n}\n\nexport interface IIndicatorTheme extends Omit<IIndicatorSpec, 'content' | 'title'> {\n  /**\n   * 指标卡标题文字配置\n   */\n  title?: IIndicatorItemTheme;\n  /**\n   * 指标卡内容文字配置\n   */\n  content?: IIndicatorItemTheme;\n}\n"]}