{"version":3,"sources":["../src/component/data-zoom/data-zoom/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IMarkSpec } from '../../../typings/spec';\nimport type {\n  IAreaMarkSpec,\n  ILineMarkSpec,\n  IRectMarkSpec,\n  ISymbolMarkSpec,\n  ITextMarkSpec\n} from '../../../typings/visual';\nimport type { IComponentSpec } from '../../base/interface';\nimport type { ComponentThemeWithDirection, IComponent } from '../../interface';\nimport type { IFilterMode, IDataFilterComponent, IDataFilterComponentSpec } from '../interface';\n\nexport type IDataZoom = IComponent & IDataFilterComponent;\n\n// TODO: 开放的状态样式配置较少，暂时不使用markSpec方式配置\nexport interface IDataZoomStyle {\n  /**\n   * 是否显示startText和endText\n   * @default 'auto' 鼠标hover在选中区域时才显示startText和endText\n   */\n  showDetail?: 'auto' | boolean;\n  /**\n   * 中间手柄样式\n   */\n  middleHandler?: {\n    /**\n     * 中间手柄是否可见\n     */\n    visible?: boolean;\n    /**\n     * 中间手柄的中点图标\n     */\n    icon?: ISymbolMarkSpec;\n    /**\n     * 中间手柄的背景矩形\n     */\n    background?: {\n      /**\n       * 中间手柄背景矩形的尺寸（当缩略轴为横向时，该尺寸代表高度；同理，当缩略轴为纵向时，该尺寸代表宽度）。\n       */\n      size?: number;\n    } & IRectMarkSpec;\n  };\n  /**\n   * 缩略轴的背景矩形\n   */\n  background?: {\n    /**\n     * 缩略轴背景矩形的尺寸（当缩略轴为横向时，该尺寸代表高度；同理，当缩略轴为纵向时，该尺寸代表宽度）\n     */\n    size?: number;\n  } & IRectMarkSpec;\n  /**\n   * 缩略轴的起点手柄\n   */\n  startHandler?: ISymbolMarkSpec;\n  /**\n   * 缩略轴的终点手柄\n   */\n  endHandler?: ISymbolMarkSpec;\n  /**\n   * 起点文字样式配置\n   */\n  startText?: {\n    /**\n     * 起点文字外边距配置\n     */\n    padding?: number;\n  } & ITextMarkSpec;\n  /**\n   * 终点文字样式配置\n   */\n  endText?: {\n    /**\n     * 终点文字外边距配置\n     */\n    padding?: number;\n  } & ITextMarkSpec;\n  /**\n   * 缩略轴的拖拽轨迹图元\n   */\n  dragMask?: IRectMarkSpec;\n  /**\n   * 缩略轴的选中部分对应的矩形样式配置\n   */\n  selectedBackground?: IRectMarkSpec;\n  /**\n   * 缩略轴的预览图表\n   */\n  backgroundChart?: {\n    /**\n     * 缩略轴的预览图表，line 样式配置\n     */\n    line?: ILineMarkSpec;\n    /**\n     * 缩略轴的预览图表，area 样式配置\n     */\n    area?: IAreaMarkSpec;\n  };\n  /**\n   * 缩略轴的选中部分预览图表样式配置\n   */\n  selectedBackgroundChart?: {\n    /**\n     * 缩略轴的选中部分，line 样式配置\n     */\n    line?: ILineMarkSpec;\n    /**\n     * 缩略轴的选中部分，area 样式配置\n     */\n    area?: IAreaMarkSpec;\n  };\n}\n\n/** spec */\nexport interface IDataZoomSpec extends IDataZoomStyle, IDataFilterComponentSpec {\n  /**\n   * 是否展示背景图\n   * @since 1.11.3\n   */\n  showBackgroundChart?: boolean;\n  /**\n   * 数据过滤模式\n   * 'filter' 为过滤数据从而达到缩放轴的效果, 'axis'为直接缩放轴, 不过滤数据\n   * 具体效果可参考: https://www.visactor.io/vchart/demo/sequence-chart/social-media-event?keyword=dataZoom\n   * @default 'filter' （dataZoom默认数据过滤模式）\n   */\n  filterMode?: IFilterMode;\n  /**\n   * 背景趋势线对应的字段\n   */\n  valueField?: string;\n  /**\n   * 起始点文字标签format格式配置\n   */\n  startText?: {\n    /**\n     * 起点文字外边距配置\n     */\n    padding?: number;\n    /**\n     * 起点文字文本样式配置\n     */\n    style?: ITextMarkSpec;\n    /**\n     * 起点文字格式化配置，使用回调函数的形式配置。\n     */\n    formatMethod?: (text: string | number) => string | string[];\n    /**\n     * 格式化模板\n     * @description 可以通过类似 `{value:.2f}%` 的形式对指定数据字段进行格式化\n     * @since 1.10.0\n     */\n    formatter?: string | string[];\n  };\n  endText?: {\n    /**\n     * 终点文字外边距配置\n     */\n    padding?: number;\n    /**\n     * 终点文字文本样式配置\n     */\n    style?: ITextMarkSpec;\n    /**\n     *\n     * 终点文字格式化配置, 使用回调函数的形式配置\n     */\n    formatMethod?: (text: string | number) => string | string[];\n    /**\n     * 格式化模板\n     * @description 可以通过类似 `{value:.2f}%` 的形式对指定数据字段进行格式化\n     * @since 1.10.0\n     */\n    formatter?: string | string[];\n  };\n  /**\n   * 是否开启框选, 如果不开启则支持selectedBackground拖拽（框选和拖拽两者互斥）\n   * @default false\n   */\n  brushSelect?: boolean;\n  /**\n   * 是否忽略轴上配置的固定 bandSize\n   * 如果置为 true，则 datazoom 可以任意改变轴的 bandSize。\n   * 但如果轴上配置了 bandSize 范围，则第一次渲染会保持 bandSize 在配置范围内。\n   * 该配置仅在 auto 设为 true 时生效。\n   * @since 1.7.0\n   */\n  ignoreBandSize?: boolean;\n\n  /**\n   * 背景图表节点压缩率, 如果不配置则默认将节点限制在10000个\n   * @since 1.10.0\n   */\n  tolerance?: number;\n}\n\nexport type IDataZoomCommonTheme = IComponentSpec &\n  IDataZoomStyle & {\n    /** 显示的位置 */\n    orient?: IDataZoomSpec['orient'];\n    /** 组件宽度 */\n    width?: IDataZoomSpec['width'];\n    /** 组件高度 */\n    height?: IDataZoomSpec['height'];\n    /**\n     * 是否开启框选, 如果不开启则支持selectedBackground拖拽（框选和拖拽两者互斥）\n     * @default false\n     */\n    brushSelect?: boolean;\n  };\n\nexport type IDataZoomTheme = ComponentThemeWithDirection<IDataZoomCommonTheme>;\n"]}