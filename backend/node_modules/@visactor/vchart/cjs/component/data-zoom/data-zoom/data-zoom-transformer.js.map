{"version":3,"sources":["../src/component/data-zoom/data-zoom/data-zoom-transformer.ts"],"names":[],"mappings":";;;AACA,wCAAwC;AACxC,qCAA0D;AAE1D,iEAAuD;AAEvD,MAAa,uBAGX,SAAQ,mCAAoE;IAElE,iBAAiB,CACzB,IAAyC,EACzC,SAAc;QAEd,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,uBAAuB,EAAE,EAAE;YAElC,MAAM,KAAK,GAAG,CAAC,YAAiB,EAAE,EAAE;gBAClC,MAAM,MAAM,GAAG,IAAA,4BAAS,EACtB;oBACE,uBAAuB,EAAE;wBACvB,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,EAAE;qBACT;iBACF,EACD,IAAI,CAAC,MAAM,EACX,YAAY,CACb,CAAC;gBAGF,MAAM,EAAE,uBAAuB,GAAG,EAAE,EAAE,GAAG,YAAY,CAAC;gBACtD,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,uBAAuB,CAAC;gBAE/C,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;oBAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,mCACpC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,KAC5C,OAAO,EAAE,IAAI,GACd,CAAC;iBACH;gBACD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;oBAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,mCACpC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,KAC5C,OAAO,EAAE,IAAI,GACd,CAAC;iBACH;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;YAEF,MAAM,QAAQ,GAAG,IAAI,CAAC;YACtB,IAAI,IAAA,cAAO,EAAC,QAAQ,CAAC,EAAE;gBACrB,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAmB,CAAC;aAC/D;iBAAM;gBACL,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;aAC3B;SACF;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAClC,CAAC;CACF;AAxDD,0DAwDC","file":"data-zoom-transformer.js","sourcesContent":["import type { AdaptiveSpec } from '../../../typings';\nimport { isArray } from '../../../util';\nimport { BaseComponentSpecTransformer } from '../../base';\nimport type { IDataZoomSpec, IDataZoomTheme } from './interface';\nimport { mergeSpec } from '@visactor/vutils-extension';\n\nexport class DataZoomSpecTransformer<\n  T extends IDataZoomSpec = IDataZoomSpec,\n  K extends IDataZoomTheme = IDataZoomTheme\n> extends BaseComponentSpecTransformer<AdaptiveSpec<T, 'width' | 'height'>, K> {\n  /** 将 theme merge 到 spec 中 */\n  protected _mergeThemeToSpec(\n    spec: AdaptiveSpec<T, 'width' | 'height'>,\n    chartSpec: any\n  ): { spec: AdaptiveSpec<T, 'width' | 'height'>; theme: K } {\n    const theme = this._theme;\n    let newSpec = spec;\n    if (this._shouldMergeThemeToSpec()) {\n      // this._originalSpec + this._theme = this._spec\n      const merge = (originalSpec: any) => {\n        const result = mergeSpec(\n          {\n            selectedBackgroundChart: {\n              line: {},\n              area: {}\n            }\n          },\n          this._theme,\n          originalSpec\n        );\n\n        // 兼容：为了减少主题更改造成的影响，如果用户在 spec 配置了主题默认关闭的 mark，则自动加上 visible: true\n        const { selectedBackgroundChart = {} } = originalSpec;\n        const { line, area } = selectedBackgroundChart;\n\n        if (line && line.visible !== false) {\n          result.selectedBackgroundChart.line.style = {\n            ...result.selectedBackgroundChart.line.style,\n            visible: true // FIXME: visible 应该提到更上面，等 datazoom 支持\n          };\n        }\n        if (area && area.visible !== false) {\n          result.selectedBackgroundChart.area.style = {\n            ...result.selectedBackgroundChart.area.style,\n            visible: true // FIXME: visible 应该提到更上面，等 datazoom 支持\n          };\n        }\n\n        return result;\n      };\n\n      const baseSpec = spec;\n      if (isArray(baseSpec)) {\n        newSpec = baseSpec.map(spec => merge(spec)) as unknown as any;\n      } else {\n        newSpec = merge(baseSpec);\n      }\n    }\n\n    this._adjustPadding(newSpec);\n    return { spec: newSpec, theme };\n  }\n}\n"]}