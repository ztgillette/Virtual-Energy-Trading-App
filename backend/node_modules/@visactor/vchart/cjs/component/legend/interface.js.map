{"version":3,"sources":["../src/component/legend/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { LegendTitle } from '@visactor/vrender-components';\nimport type {\n  Datum,\n  IOrientType,\n  IPadding,\n  IRectMarkSpec,\n  ISymbolMarkSpec,\n  ITextMarkSpec,\n  StringOrNumber\n} from '../../typings';\nimport type { IComponent } from '../interface';\nimport type { IComponentSpec } from '../base/interface';\nimport type { IDiscreteLegendSpec } from './discrete/interface';\nimport type { IColorLegendSpec, ISizeLegendSpec } from './continuous/interface';\n\nexport type ILegend = IComponent & {\n  getLegendData: () => Datum[];\n  getSelectedData: () => StringOrNumber[];\n  setSelectedData: (d: StringOrNumber[]) => void;\n};\n\nexport interface IDiscreteLegend extends ILegend {\n  getLegendDefaultData: (originalData?: boolean) => StringOrNumber[];\n}\n\nexport type NoVisibleMarkStyle<T> = Omit<T, 'visible'>;\n\nexport type ITitle = {\n  /** 标题文本样式 */\n  textStyle?: NoVisibleMarkStyle<ITextMarkSpec>;\n  /**\n   * @deprecated 请使用 textStyle 配置文本样式\n   */\n  style?: NoVisibleMarkStyle<ITextMarkSpec>;\n  /** 文本前 mark 图元 */\n  shape?: {\n    /**\n     * 是否展示 shape\n     */\n    visible?: boolean;\n    /**\n     * shape 同 文本的间距\n     */\n    space?: number;\n    style?: NoVisibleMarkStyle<ISymbolMarkSpec>;\n  };\n  /**\n   * 标题的背景面板配置\n   */\n  background?: {\n    /**\n     * 是否绘制背景层\n     */\n    visible?: boolean;\n    /**\n     * 背景层样式\n     */\n    style?: Omit<NoVisibleMarkStyle<IRectMarkSpec>, 'visible' | 'width' | 'height'>;\n  };\n} & Omit<LegendTitle, 'textStyle' | 'style' | 'background'>;\n\n// 图例组件通用配置\nexport type ILegendCommonSpec = {\n  /**\n   * 是否显示图例\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * 图例的位置，相对于region区域的四个方位，\n   * left - 图例在左侧\n   * right - 图例在右侧\n   * top - 图例在上方\n   * bottom - 图例在下方\n   * @default 'left'\n   */\n  orient?: IOrientType;\n  /**\n   * 图例在当前行或者列的对齐方式，起始 | 居中 | 末尾，\n   * 对于orient为'left'或者'right'的图例，\n   * start - 图例在左侧\n   * middle - 图例居中\n   * end - 图例在右侧\n   * 对于orient为'top'或者'bottom'的图例，\n   * start - 图例在上方\n   * middle - 图例居中\n   * end - 图例在下方\n   * @default 'middle'\n   */\n  position?: 'start' | 'middle' | 'end';\n  /**\n   * 图例组件的布局配置，默认自动跟随显示位置进行调整。\n   * 1. `orient` 为 'top' 或者 'bottom' 时，默认为 'horizontal' 水平布局\n   * 2. `orient` 为 'left' 或者 'right' 时，默认为 'vertical' 垂直布局\n   */\n  layout?: 'horizontal' | 'vertical';\n\n  /**\n   * 是否进行数据筛选，默认为 true\n   */\n  filter?: boolean;\n  /**\n   * 自定义筛选函数\n   * @since 1.13.1\n   * @param data 当前数据\n   * @param selectedRange 选中的数据范围\n   * @param datumField 筛选数据对应的字段\n   * @returns 最终展示的数据\n   */\n  customFilter?: (data: any, selectedRange: StringOrNumber[], datumField: string) => any;\n\n  /**\n   * 图例标题配置\n   */\n  title?: ITitle;\n\n  /**\n   * 图例背景配置\n   */\n  background?: {\n    /**\n     * 是否绘制背景层\n     */\n    visible?: boolean;\n    /**\n     * 背景内边距\n     */\n    padding?: IPadding | number | number[];\n    /**\n     * 背景层样式\n     */\n    style?: Omit<NoVisibleMarkStyle<IRectMarkSpec>, 'visible' | 'width' | 'height'>;\n  };\n  /**\n   * 是否允许交互\n   * @default true\n   */\n  interactive?: boolean;\n} & Omit<IComponentSpec, 'orient'>;\n\nexport type ILegendSpec = IDiscreteLegendSpec | IColorLegendSpec | ISizeLegendSpec;\n"]}