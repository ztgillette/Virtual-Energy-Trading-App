{"version":3,"sources":["../src/component/legend/continuous/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IRectMarkSpec, ISymbolMarkSpec, ITextMarkSpec, StringOrNumber } from '../../../typings';\nimport type { ComponentThemeWithDirection } from '../../interface';\nimport type { ILegendCommonSpec, NoVisibleMarkStyle } from '../interface';\n\ntype Text = StringOrNumber;\n\nexport type TextAttribute = {\n  /** 是否展示 */\n  visible?: boolean;\n  /** 文本内容 */\n  text?: Text;\n  /**\n   * 文本同滑块的间距，默认为 6\n   */\n  space?: number;\n  /**\n   * 文本样式\n   */\n  style?: Omit<NoVisibleMarkStyle<ITextMarkSpec>, 'text'>;\n};\n\nexport type HandlerTextAttribute = {\n  /** 是否展示 */\n  visible?: boolean;\n  /**\n   * 数据展示的小数精度，默认为0，无小数点。\n   */\n  precision?: number;\n  /** 文本内容格式化函数 */\n  formatter?: (text: Text) => Text;\n  /**\n   * 文本同滑块的间距，默认为 6\n   */\n  space?: number;\n  /**\n   * 文本样式\n   */\n  style?: Omit<NoVisibleMarkStyle<ITextMarkSpec>, 'text'>;\n};\n\n// 连续图例通用配置\nexport type IContinuousLegendSpec = ILegendCommonSpec & {\n  /**\n   * 连续图例是否开启反向展示，最小值和最大值会发生反向\n   * @default false\n   * @since 1.11.0\n   */\n  inverse?: boolean;\n  /**\n   * 声明关联的映射字段\n   */\n  field?: string;\n  /**\n   * 连续图例关联的映射 scale\n   */\n  scale?: string;\n  /**\n   * 默认筛选的数据范围\n   */\n  defaultSelected?: [number, number];\n  /**\n   * 是否允许拖动，默认为 true\n   */\n  slidable?: boolean;\n  /**\n   * 滑块轨道配置\n   */\n  rail?: {\n    /**\n     * 滑块的宽度\n     */\n    width?: number;\n    /**\n     * 滑块的高度\n     */\n    height?: number;\n    /**\n     * 背景轨道样式配置\n     */\n    style?: Omit<NoVisibleMarkStyle<IRectMarkSpec>, 'width' | 'height'>;\n  };\n  /**\n   * 滑块手柄配置\n   */\n  handler?: {\n    /**\n     * 是否绘制 handler，默认为 true\n     */\n    visible?: boolean;\n    /**\n     * 滑块手柄的样式配置\n     */\n    style?: NoVisibleMarkStyle<ISymbolMarkSpec>;\n  };\n  /**\n   * 选中区域样式配置\n   */\n  track?: {\n    style?: Omit<NoVisibleMarkStyle<IRectMarkSpec>, 'width' | 'height'>;\n  };\n  /**\n   * 滑块首部文本配置\n   */\n  startText?: TextAttribute;\n  /**\n   * 滑块尾部文本配置\n   */\n  endText?: TextAttribute;\n  /**\n   * 滑块对应的文本配置项\n   */\n  handlerText?: HandlerTextAttribute;\n};\n\n// 颜色图例配置\nexport type IColorLegendSpec = IContinuousLegendSpec & {\n  /**\n   * 声明 color 类型图例\n   */\n  type: 'color';\n};\n\n// 尺寸图例配置\nexport type ISizeLegendSpec = IContinuousLegendSpec & {\n  /**\n   * 声明 size 类型图例\n   */\n  type: 'size';\n  /**\n   * size 背景样式配置\n   */\n  sizeBackground?: Omit<NoVisibleMarkStyle<IRectMarkSpec>, 'visible' | 'width' | 'height'>;\n  /**\n   * 指定组件中手柄和文字的摆放位置，可选值为：\n   * 'left' 手柄和label在滑块左侧，layout 为 vertical 时有效。\n   * 'right' 手柄和label在滑块右侧，layout 为 vertical 时有效。\n   * 'top' 手柄和label在滑块上侧，layout 为 horizontal 时有效。\n   * 'bottom' 手柄和label在滑块下侧，layout 为 horizontal 时有效。\n   */\n  align?: 'top' | 'bottom' | 'left' | 'right';\n};\n\nexport type IContinuousLegendTheme = Omit<\n  IContinuousLegendSpec,\n  'type' | 'field' | 'scale' | 'regionIndex' | 'regionId' | 'seriesIndex' | 'seriesId' | 'id' | 'defaultSelected'\n>;\n\nexport type ISizeLegendCommonTheme = IContinuousLegendTheme & {\n  sizeBackground?: ISizeLegendSpec['sizeBackground'];\n};\n\nexport type IColorLegendTheme = ComponentThemeWithDirection<IContinuousLegendTheme>;\n\nexport type ISizeLegendTheme = ComponentThemeWithDirection<ISizeLegendCommonTheme>;\n"]}