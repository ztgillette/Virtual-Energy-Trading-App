{"version":3,"sources":["../src/component/legend/continuous/legend.ts"],"names":[],"mappings":"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","file":"legend.js","sourcesContent":["/**\n * @description color legend component\n */\nimport type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { debounce, isEmpty, isNil, get } from '@visactor/vutils';\nimport { DataView } from '@visactor/vdataset';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IModelInitOption, IModelSpecInfo } from '../../../model/interface';\nimport type { IComponentOption } from '../../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../../interface/type';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerDataSetInstanceTransform } from '../../../data/register';\nimport { eachSeries, getSeries } from '../../../util/model';\nimport { getFieldAlias } from '../../../util/data';\nimport { isDataDomainSpec } from '../../../util/type';\nimport type { IColorLegendSpec, ISizeLegendSpec } from './interface';\nimport {\n  continuousLegendDataMake,\n  continuousLegendFilter\n} from '../../../data/transforms/legend-data/continuous/continuous';\nimport { ContinuousLegendMap, getContinuousLegendAttributes, isContinuousLegend } from './util';\nimport { BaseLegend } from '../base-legend';\nimport { ChartEvent } from '../../../constant/event';\nimport { Factory } from '../../../core/factory';\nimport { TransformLevel } from '../../../data/initialize';\nimport type { ILayoutRect } from '../../../typings/layout';\nimport { getSpecInfo } from '../../util';\nimport { colorLegend } from '../../../theme/builtin/common/component/legend/color-legend';\nimport { sizeLegend } from '../../../theme/builtin/common/component/legend/size-legend';\n\nconst SINGLE_SEQUENCE = ['#C4E7FF', '#98CAFF', '#75ACFF', '#518FF9', '#2775DC', '#005CBE', '#00429F', '#00287E'];\nconst SIZE = [2, 10];\n\nexport class ContinuousLegend<\n  T extends IColorLegendSpec | ISizeLegendSpec = IColorLegendSpec | ISizeLegendSpec\n> extends BaseLegend<T> {\n  static specKey = 'legends';\n\n  static readonly builtInTheme = {\n    colorLegend,\n    sizeLegend\n  };\n  static type = ComponentTypeEnum.continuousLegend;\n  type = ComponentTypeEnum.colorLegend;\n  name: string = ComponentTypeEnum.colorLegend;\n\n  private _field: string | undefined;\n  private _legendType: string;\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const infos = getSpecInfo<IColorLegendSpec | ISizeLegendSpec>(\n      chartSpec,\n      this.specKey,\n      this.type,\n      (s: IColorLegendSpec | ISizeLegendSpec) => {\n        return isContinuousLegend(s.type);\n      }\n    );\n\n    if (infos) {\n      infos.forEach(info => {\n        info.type = info.spec.type === 'color' ? ComponentTypeEnum.colorLegend : ComponentTypeEnum.sizeLegend;\n      });\n    }\n\n    return infos;\n  }\n\n  constructor(spec: T, options: IComponentOption) {\n    super(spec, options);\n\n    // 这里需要区分下是 colorLegend 还是 sizeLegend\n    const legendName = this._spec.type === 'color' ? ComponentTypeEnum.colorLegend : ComponentTypeEnum.sizeLegend;\n    this.type = legendName;\n    this.name = legendName;\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this._field = this._spec.field;\n    this._legendType = this._spec.type;\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    eachSeries(\n      this._regions,\n      s => {\n        s.addViewDataFilter({\n          type: 'continuousLegendFilter',\n          options: {\n            selected: () => this._selectedData,\n            field: () => this._field,\n            data: () => this._legendData.getLatestData(),\n            isHierarchyData: s.isHierarchyData,\n            customFilter: this._spec.customFilter\n          },\n          level: TransformLevel.legendFilter\n        });\n      },\n      {\n        userId: this._seriesUserId,\n        specIndex: this._seriesIndex\n      }\n    );\n  }\n\n  private _getScaleInGlobal() {\n    const globalScale = this._option.globalScale;\n    let scaleKey = this._spec.scale;\n    if (!scaleKey) {\n      scaleKey = this._legendType;\n    }\n    return globalScale.getScale(scaleKey);\n  }\n\n  protected _initLegendData(): DataView {\n    registerDataSetInstanceTransform(this._option.dataSet, 'continuousLegendFilter', continuousLegendFilter);\n    registerDataSetInstanceTransform(this._option.dataSet, 'continuousLegendDataMake', continuousLegendDataMake);\n    const legendData = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_data` });\n    legendData.transform({\n      type: 'continuousLegendDataMake',\n      options: {\n        series: () => {\n          return getSeries(this._regions, {\n            userId: this._seriesUserId,\n            specIndex: this._seriesIndex\n          });\n        },\n        field: () => this._field,\n        scale: this._getScaleInGlobal.bind(this)\n      }\n    });\n    return legendData;\n  }\n\n  protected _initSelectedData(): void {\n    if (this._spec.defaultSelected) {\n      this._selectedData = this._spec.defaultSelected.slice();\n    } else {\n      this._selectedData = this._legendData.getLatestData();\n    }\n  }\n\n  private _addDefaultTitleText(attrs: any) {\n    if (attrs.title?.visible && isNil(attrs.title.text) && isNil(attrs.title.style?.text)) {\n      const field = this._field;\n      if (field) {\n        // 默认使用第0个系列的对应别名\n        const series = this._regions?.[0]?.getSeries()[0];\n        if (!series) {\n          return;\n        }\n        // 如果没有别名继续保持 空字符串\n        attrs.title.text = getFieldAlias(series.getRawData(), field);\n        return;\n      }\n      let scaleKey = this._spec.scale;\n      if (!scaleKey) {\n        scaleKey = this._legendType;\n      }\n      const scaleSpec = this._option.globalScale.getScaleSpec(scaleKey);\n      if (!isDataDomainSpec(scaleSpec?.domain)) {\n        return;\n      }\n      const dataInfo = scaleSpec.domain[0];\n      if (dataInfo.fields.length === 0) {\n        return;\n      }\n      // 如果没有别名继续保持 空字符串\n      attrs.title.text = getFieldAlias(this._option.dataSet.getDataView(dataInfo.dataId), dataInfo.fields[0]);\n      return;\n    }\n  }\n\n  protected _getLegendAttributes(rect: ILayoutRect) {\n    const layout = this.layoutOrient === 'bottom' || this.layoutOrient === 'top' ? 'horizontal' : 'vertical';\n    const align = layout === 'horizontal' ? 'bottom' : this.layoutOrient;\n\n    // 获取关联的 scale 以获取 colors / size\n    let visualMappingRange = [];\n    const scale = this._getScaleInGlobal();\n    if (scale && scale.type === 'linear') {\n      visualMappingRange = scale.range();\n    }\n    if (isEmpty(visualMappingRange)) {\n      visualMappingRange = this._legendType === 'color' ? SINGLE_SEQUENCE : SIZE;\n    }\n    let min = this._legendData.getLatestData()[0] ?? 0;\n    let max = this._legendData.getLatestData()[1] ?? 1;\n\n    const isSame = this._legendData.getLatestData()[0] === this._legendData.getLatestData()[1];\n    if (isSame) {\n      min = Math.min(0, this._legendData.getLatestData()[0]);\n      max = this._legendData.getLatestData()[0] === 0 ? 1 : Math.max(0, this._legendData.getLatestData()[0]);\n    }\n\n    const attrs: any = {\n      layout,\n      align,\n      zIndex: this.layoutZIndex,\n      min,\n      max,\n      value: this._spec.defaultSelected,\n      [this._legendType === 'color' ? 'colors' : 'sizeRange']: visualMappingRange,\n      ...getContinuousLegendAttributes(this._spec)\n    };\n    this._addDefaultTitleText(attrs);\n    return attrs;\n  }\n\n  protected _getLegendConstructor() {\n    return (ContinuousLegendMap as any)[this._legendType];\n  }\n\n  protected _initEvent() {\n    if (this._legendComponent) {\n      const doFilter = this._spec.filter !== false;\n      this._legendComponent.addEventListener(\n        'change',\n        debounce((e: any) => {\n          const selectedData = get(e, 'detail.value');\n          if (doFilter) {\n            this.setSelectedData(selectedData);\n          }\n          this.event.emit(ChartEvent.legendFilter, { model: this, value: selectedData, event: e });\n        }, 30)\n      );\n    }\n  }\n}\n\nexport const registerContinuousLegend = () => {\n  Factory.registerComponent(ContinuousLegend.type, ContinuousLegend);\n};\n"]}