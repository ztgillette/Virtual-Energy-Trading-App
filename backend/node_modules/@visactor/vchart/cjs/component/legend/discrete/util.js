"use strict";

var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0 && (t[p] = s[p]);
    if (null != s && "function" == typeof Object.getOwnPropertySymbols) {
        var i = 0;
        for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
    }
    return t;
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.getLegendAttributes = void 0;

const vutils_1 = require("@visactor/vutils"), space_1 = require("../../../util/space"), vutils_extension_1 = require("@visactor/vutils-extension"), style_1 = require("../../../util/style"), util_1 = require("../util");

function getLegendAttributes(spec, rect) {
    const {title: title = {}, item: item = {}, pager: pager = {}, background: background = {}, type: type, id: id, visible: visible, orient: orient, position: position, data: data, filter: filter, regionId: regionId, regionIndex: regionIndex, seriesIndex: seriesIndex, seriesId: seriesId, padding: padding} = spec, attrs = __rest(spec, [ "title", "item", "pager", "background", "type", "id", "visible", "orient", "position", "data", "filter", "regionId", "regionIndex", "seriesIndex", "seriesId", "padding" ]);
    return title.visible ? attrs.title = (0, util_1.transformLegendTitleAttributes)(title) : attrs.title = {
        visible: !1
    }, (0, vutils_1.isEmpty)(item.focusIconStyle) || (0, style_1.transformToGraphic)(item.focusIconStyle), 
    item.shape && (item.shape = (0, style_1.transformComponentStyle)(item.shape)), item.label && (item.label = (0, 
    style_1.transformComponentStyle)(item.label)), item.value && (item.value = (0, style_1.transformComponentStyle)(item.value)), 
    item.background && (item.background = (0, style_1.transformComponentStyle)(item.background)), 
    (0, space_1.isPercent)(item.maxWidth) && (item.maxWidth = Number(item.maxWidth.substring(0, item.maxWidth.length - 1)) * rect.width / 100), 
    (0, space_1.isPercent)(item.width) && (item.width = Number(item.width.substring(0, item.width.length - 1)) * rect.width / 100), 
    (0, space_1.isPercent)(item.height) && (item.height = Number(item.height.substring(0, item.height.length - 1)) * rect.width / 100), 
    attrs.item = item, "scrollbar" === pager.type ? ((0, vutils_1.isEmpty)(pager.railStyle) || (0, 
    style_1.transformToGraphic)(pager.railStyle), (0, vutils_1.isEmpty)(pager.sliderStyle) || (0, 
    style_1.transformToGraphic)(pager.sliderStyle)) : ((0, vutils_1.isEmpty)(pager.textStyle) || (0, 
    style_1.transformToGraphic)(pager.textStyle), pager.handler && (0, style_1.transformComponentStyle)(pager.handler)), 
    attrs.pager = pager, background.visible && !(0, vutils_1.isEmpty)(background.style) && ((0, 
    vutils_extension_1.mergeSpec)(attrs, background.style), (0, vutils_1.isValid)(background.padding) && (attrs.padding = background.padding)), 
    attrs;
}

exports.getLegendAttributes = getLegendAttributes;
//# sourceMappingURL=util.js.map
