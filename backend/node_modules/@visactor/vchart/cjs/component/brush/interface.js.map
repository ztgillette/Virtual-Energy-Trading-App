{"version":3,"sources":["../src/component/brush/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { SymbolType } from '@visactor/vrender-core';\nimport type { IPolygonMarkSpec } from '../../typings';\nimport type { IComponent } from '../interface';\nimport type { IDelayType } from '../../typings/event';\n\nexport type IBrush = IComponent;\n\ninterface IBrushDataBindSpec {\n  /**\n   * 可刷取的regionIndex\n   */\n  regionIndex?: number | number[]; // 默认为所有region\n  /**\n   * 可刷取的regionId\n   */\n  regionId?: string | string[]; // 默认为所有region\n  /**\n   * 可刷取的seriesIndex（在可刷取的region范围内）\n   */\n  seriesIndex?: number | number[]; // 默认为所有系列\n  /**\n   * 可刷取的seriesId（在可刷取的region范围内）\n   */\n  seriesId?: string | string[]; // 默认为所有系列\n  /**\n   * 刷取联动的seriesIndex\n   */\n  brushLinkSeriesIndex?: number | number[]; // 默认无系列\n  /**\n   * 刷取联动的seriesId\n   */\n  brushLinkSeriesId?: string | string[]; // 默认无系列\n\n  /**\n   * 刷取后是否更新axis/dataZoom范围\n   * @default false\n   * @since 0.10.0\n   */\n  zoomAfterBrush?: boolean;\n  /**\n   * 刷取到空数据时, 是否更新axis/dataZoom范围\n   * @default false\n   * @since 1.12.2\n   */\n  zoomWhenEmpty?: boolean;\n  /**\n   * 刷取联动的axisId\n   * 如果开启刷取下钻, 默认联动所有关联axis和dataZoom\n   * dataZoom filterMode: 'axis'时刷取才能正常进行（filterMode: 'filter'会改变axis domain, 导致计算错误）\n   * @since 0.10.0\n   */\n  axisId?: string | string[];\n  /**\n   * 刷取联动的axisIndex\n   * 如果开启刷取下钻, 默认联动所有关联axis和dataZoom\n   * dataZoom filterMode: 'axis'时刷取才能正常进行（filterMode: 'filter'会改变axis domain, 导致计算错误）\n   * @since 0.10.0\n   */\n  axisIndex?: number | number[];\n  /**\n   * 更新dataZoom范围时, 按百分比进行范围拓展, 比如: dataZoomRangeExpand = 0.05, 则代表更新时newStart - 0.05 & newEnd + 0.05\n   * @since 1.10.0\n   * 原因:\n   * 1) 轴的zero、nice、min、max等配置可能导致轴范围与dataZoom范围不一致）\n   * 2) 散点图按照散点中心定位, 如果严格按照中心范围更新，会出现散点超出画布的现象\n   */\n  axisRangeExpand?: number;\n}\n\nexport interface IBrushTheme {\n  /**\n   * brush 的框选样式\n   */\n  style?: Partial<IPolygonMarkSpec>;\n\n  /**\n   * 框选范围内的图元样式\n   */\n  inBrush?: selectedItemStyle;\n  /**\n   * 框选范围外的图元样式\n   */\n  outOfBrush?: selectedItemStyle;\n  /**\n   * 框选模式\n   * @default 'single'\n   */\n  brushMode?: IBrushMode;\n  /**\n   * 框选类型\n   * @default 'rect'\n   */\n  brushType?: IBrushType;\n  /**\n   * 是否可被平移\n   * @default true\n   */\n  brushMoved?: boolean;\n  /**\n   * brushMode为'single'时，是否单击清除选框\n   * @default true\n   */\n  removeOnClick?: boolean;\n  /**\n   * 事件触发延迟类型\n   * @default 'throttle'\n   */\n  delayType?: IDelayType;\n  /**\n   * 事件触发延迟时长\n   * @default 10\n   */\n  delayTime?: number;\n  /**\n   * brush选框的大小阈值\n   * @default 5\n   * @since 1.2.0\n   */\n  sizeThreshold?: number;\n  /**\n   * 不需要被brush操作的mark类型\n   * @since 1.13.9\n   */\n  markTypeFilter?: string[];\n  /**\n   * 自定义brush事件, 触发时机: 框选结束\n   * 返回true, 则清空brush\n   * @since 1.13.9\n   */\n  onBrushEnd?: (e: any) => boolean;\n}\n\nexport interface IBrushSpec extends IBrushTheme, IBrushDataBindSpec {\n  /** 组件 id */\n  id?: string;\n  /**\n   * 组件可见性\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * 是否更新图元状态\n   * 关闭时, brush 事件不会触发图元状态更新, 优化缩放场景下的性能\n   * @default true\n   * @since 1.13.13\n   */\n  updateElementsState?: boolean;\n}\n\nexport type IBrushType = 'x' | 'y' | 'rect' | 'polygon';\nexport type IBrushMode = 'single' | 'multiple';\n\nexport type selectedItemStyle = {\n  /**\n   * 图元的图形类别\n   */\n  symbol?: SymbolType;\n  /**\n   * 图元的大小\n   */\n  symbolSize?: number;\n  /**\n   * 图元的颜色\n   */\n  color?: string;\n  /**\n   * 图元的颜色透明度\n   */\n  colorAlpha?: number;\n} & Partial<IPolygonMarkSpec>;\n\nexport type BrushInteractiveRangeAttr = {\n  interactiveRange: {\n    minY: number;\n    maxY: number;\n    minX: number;\n    maxX: number;\n  };\n  xRange: [number, number];\n  yRange: [number, number];\n};\n"]}