{"version":3,"sources":["../src/component/axis/cartesian/interface/spec.ts"],"names":[],"mappings":"","file":"spec.js","sourcesContent":["import type { ILayoutNumber, IRectMarkSpec, StringOrNumber } from '../../../../typings';\nimport type { IBandAxisSpec, ILinearAxisSpec, IGrid, ICommonAxisSpec } from '../../interface';\nimport type {\n  ICartesianDomainLine,\n  ICartesianLabel,\n  ITimeLayerType,\n  ICartesianTitle,\n  ICartesianAxisUnit\n} from './common';\nimport type { AxisItemStateStyle } from '@visactor/vrender-components';\n\n/** spec */\nexport type ICartesianAxisSpec =\n  | ICartesianLinearAxisSpec\n  | ICartesianBandAxisSpec\n  | ICartesianTimeAxisSpec\n  | ICartesianLogAxisSpec\n  | ICartesianSymlogAxisSpec;\n\nexport type ICartesianVertical = {\n  /**\n   * 坐标轴的位置\n   */\n  orient: 'left' | 'right';\n  /**\n   * 内padding/留白\n   * @since 1.8.10\n   */\n  innerOffset?: {\n    /**\n     * 顶部留白\n     */\n    top?: ILayoutNumber;\n    /**\n     * 底部留白\n     */\n    bottom?: ILayoutNumber;\n  };\n};\nexport type ICartesianHorizontal = {\n  /**\n   * 坐标轴的位置\n   */\n  orient: 'top' | 'bottom';\n  /**\n   * 内padding/留白\n   * @since 1.8.10\n   */\n  innerOffset?: {\n    /**\n     * 左侧留白\n     */\n    left?: ILayoutNumber;\n    /**\n     * 右侧留白\n     */\n    right?: ILayoutNumber;\n  };\n};\nexport type ICartesianZ = {\n  /**\n   * 坐标轴的位置\n   */\n  orient: 'z';\n};\n\nexport type ICartesianAxisCommonSpec = ICommonAxisSpec & {\n  /**\n   * 网格线配置\n   */\n  grid?: IGrid;\n  /**\n   * 子网格线配置\n   */\n  subGrid?: IGrid;\n  /**\n   * 轴线配置\n   */\n  domainLine?: ICartesianDomainLine;\n  /**\n   * 轴标签配置\n   */\n  label?: ICartesianLabel;\n  /**\n   * 轴标题配置\n   */\n  title?: ICartesianTitle;\n  /**\n   * 是否进行自动缩进\n   * 设置为 true 时，当轴元素超出绘图区会被裁剪时，会对图表增加额外的padding，使轴可以显示完整\n   */\n  autoIndent?: boolean;\n  /**\n   * 坐标轴背景配置\n   */\n  background?: {\n    /**\n     * 是否绘制坐标轴背景\n     * @default false\n     */\n    visible: boolean;\n    /**\n     * 背景样式\n     */\n    style?: Partial<IRectMarkSpec>;\n    /**\n     * 背景在交互状态下的样式配置\n     */\n    state?: AxisItemStateStyle<Partial<IRectMarkSpec>>;\n  };\n  /**\n   * 是否是3d模式的轴\n   */\n  mode?: '2d' | '3d';\n  /**\n   * 轴的z方向深度\n   */\n  depth?: number;\n  /**\n   * 轴单位配置，仅支持直角坐标系下的坐标轴\n   * @since 1.5.1\n   */\n  unit?: ICartesianAxisUnit;\n  /**\n   * 是否在此轴上指定显示 dimension tooltip\n   * （离散轴默认不需要配置）\n   * @since 1.9.0\n   */\n  hasDimensionTooltip?: boolean;\n} & (ICartesianVertical | ICartesianHorizontal | ICartesianZ);\n\nexport interface ILinearAxisSync {\n  /**\n   * 配置参照的轴 id\n   */\n  axisId: StringOrNumber;\n  /**\n   * 是否保持 2 个轴的 0 值对齐\n   * @default false\n   */\n  zeroAlign?: boolean;\n  /**\n   * 是否使这个轴的 tick 与目标轴保持比例对齐\n   * @default false\n   */\n  tickAlign?: boolean;\n}\n\nexport type ICartesianLinearAxisSpec = ICartesianAxisCommonSpec &\n  ILinearAxisSpec & {\n    /**\n     * 设置轴同步相关内容，包含0值对齐和刻度对齐功能\n     */\n    sync?: ILinearAxisSync;\n  };\n\nexport type ICartesianBandAxisSpec = ICartesianAxisCommonSpec &\n  IBandAxisSpec & {\n    /**\n     * 轴组宽设置\n     * @since 1.4.0\n     */\n    bandSize?: number;\n    /**\n     * 轴最大组宽设置\n     * @since 1.4.0\n     */\n    maxBandSize?: number;\n    /**\n     * 轴最小组宽设置\n     * @since 1.4.0\n     */\n    minBandSize?: number;\n\n    /**\n     * 指定在哪个 scale 层级上设置 bandSize，默认为 0\n     * @since 1.10.0\n     */\n    bandSizeLevel?: number;\n\n    /**\n     * 在当前 scale 层级设置 bandSize 后，当前层级 range 的扩增值\n     * @since 1.10.0\n     */\n    bandSizeExtend?: {\n      /** 两个 band 之间的 gap，单位为 px 或者百分比 */\n      gap?: number | string;\n      /** 当前层级 range 的总体扩增值，单位为 px */\n      extend?: number;\n    };\n\n    /**\n     * 是否根据组宽自动计算 region 宽度或高度，仅当 `bandSize` 或 `maxBandSize` 配置时生效\n     * @since 1.4.0\n     */\n    autoRegionSize?: boolean;\n  };\n\nexport type ICartesianTimeAxisSpec = Omit<ICartesianAxisCommonSpec, 'inverse'> & {\n  /**\n   * 轴的层级配置。\n   * layer[0] 为主轴，即离坐标轴线最近的轴\n   * @description 目前仅支持单层 / 双层，即layers.length <= 2\n   */\n  layers?: ITimeLayerType[];\n};\n\nexport type ICartesianLogAxisSpec = ICartesianLinearAxisSpec & {\n  /**\n   * 底数\n   * @default 10\n   */\n  base?: number;\n};\n\nexport type ICartesianSymlogAxisSpec = ICartesianLinearAxisSpec & {\n  /**\n   * 底数\n   * @default 10\n   */\n  constant?: number;\n};\n"]}