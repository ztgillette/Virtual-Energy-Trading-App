{"version":3,"sources":["../src/component/axis/cartesian/symlog-axis.ts"],"names":[],"mappings":";;;AAAA,+CAAoD;AACpD,+CAAyD;AACzD,kEAA6D;AAC7D,6CAA+C;AAC/C,6CAAyC;AAEzC,mDAAgD;AAChD,4CAA4C;AAC5C,qEAAuF;AACvF,qDAA0E;AAG1E,gDAAyD;AACzD,0FAAsF;AACtF,0FAAsF;AACtF,gGAA2F;AAM3F,MAAa,mBAEX,SAAQ,iCAAsB;IAFhC;;QAIE,SAAI,GAAG,wBAAiB,CAAC,mBAAmB,CAAC;QAUnC,UAAK,GAAY,KAAK,CAAC;QAEvB,WAAM,GAAgB,IAAI,oBAAW,EAAE,CAAC;IAqBpD,CAAC;IAfW,UAAU;;QAClB,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,mCAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAES,sBAAsB;QAC9B,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,QAAQ,CAAC;QAClC,IAAA,2CAAgC,EAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,oCAAe,CAAC,CAAC;QAE9E,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oBAAoB;IAEpB,CAAC;;AApCH,kDAqCC;AAlCQ,wBAAI,GAAG,wBAAiB,CAAC,mBAAmB,CAAC;AAG7C,2BAAO,GAAG,MAAM,CAAC;AACR,gCAAY,GAAG;IAC7B,IAAI,EAAE,wBAAU;IAChB,UAAU,EAAV,wBAAU;IACV,KAAK,EAAL,sBAAK;IACL,KAAK,EAAL,sBAAK;CACN,CAAC;AA2BJ,IAAA,cAAK,EAAC,mBAAmB,EAAE,mCAAe,CAAC,CAAC;AAErC,MAAM,2BAA2B,GAAG,GAAG,EAAE;IAC9C,iBAAO,CAAC,wBAAwB,CAAC,iBAAQ,CAAC,QAAQ,EAAE,CAAC,KAAU,EAAE,OAAgC,EAAE,EAAE;QACnG,OAAO,IAAI,6BAAQ,CAAC,KAAK,EAAE,OAAO,CAAsB,CAAC;IAC3D,CAAC,CAAC,CAAC;IACH,iBAAO,CAAC,wBAAwB,CAAC,iBAAQ,CAAC,YAAY,EAAE,CAAC,KAAU,EAAE,OAAgC,EAAE,EAAE;QACvG,OAAO,IAAI,iCAAY,CAAC,KAAK,EAAE,OAAO,CAAsB,CAAC;IAC/D,CAAC,CAAC,CAAC;IACH,IAAA,wBAAY,GAAE,CAAC;IACf,iBAAO,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;AAC3E,CAAC,CAAC;AATW,QAAA,2BAA2B,+BAStC","file":"symlog-axis.js","sourcesContent":["import { CartesianLinearAxis } from './linear-axis';\nimport { ComponentTypeEnum } from '../../interface/type';\nimport { LinearAxisMixin } from '../mixin/linear-axis-mixin';\nimport { SymlogScale } from '@visactor/vscale';\nimport { mixin } from '@visactor/vutils';\nimport type { ICartesianSymlogAxisSpec } from './interface';\nimport { Factory } from '../../../core/factory';\nimport { registerAxis } from '../base-axis';\nimport { continuousTicks, LineAxis, LineAxisGrid } from '@visactor/vrender-components';\nimport { registerDataSetInstanceTransform } from '../../../data/register';\nimport type { VRenderComponentOptions } from '../../../core/interface';\nimport type { IGroup } from '@visactor/vrender-core';\nimport { AxisEnum, GridEnum } from '../interface/common';\nimport { commonAxis } from '../../../theme/builtin/common/component/axis/common-axis';\nimport { axisLinear } from '../../../theme/builtin/common/component/axis/linear-axis';\nimport { axisX, axisY } from '../../../theme/builtin/common/component/axis/cartesian-axis';\n\nexport interface CartesianSymlogAxis<T extends ICartesianSymlogAxisSpec = ICartesianSymlogAxisSpec>\n  extends Pick<LinearAxisMixin, 'valueToPosition'>,\n    CartesianLinearAxis<T> {}\n\nexport class CartesianSymlogAxis<\n  T extends ICartesianSymlogAxisSpec = ICartesianSymlogAxisSpec\n> extends CartesianLinearAxis<T> {\n  static type = ComponentTypeEnum.cartesianSymlogAxis;\n  type = ComponentTypeEnum.cartesianSymlogAxis;\n\n  static specKey = 'axes';\n  static readonly builtInTheme = {\n    axis: commonAxis,\n    axisLinear,\n    axisX,\n    axisY\n  };\n\n  protected _zero: boolean = false;\n\n  protected _scale: SymlogScale = new SymlogScale();\n  protected declare _scales: SymlogScale[];\n\n  /**\n   * @override\n   */\n  protected initScales() {\n    super.initScales();\n    this._scale.constant(this._spec.constant ?? 10);\n  }\n\n  protected registerTicksTransform() {\n    const name = `${this.type}-ticks`;\n    registerDataSetInstanceTransform(this._option.dataSet, name, continuousTicks);\n\n    return name;\n  }\n\n  transformScaleDomain() {\n    // do nothing\n  }\n}\n\nmixin(CartesianSymlogAxis, LinearAxisMixin);\n\nexport const registerCartesianSymlogAxis = () => {\n  Factory.registerGraphicComponent(AxisEnum.lineAxis, (attrs: any, options: VRenderComponentOptions) => {\n    return new LineAxis(attrs, options) as unknown as IGroup;\n  });\n  Factory.registerGraphicComponent(GridEnum.lineAxisGrid, (attrs: any, options: VRenderComponentOptions) => {\n    return new LineAxisGrid(attrs, options) as unknown as IGroup;\n  });\n  registerAxis();\n  Factory.registerComponent(CartesianSymlogAxis.type, CartesianSymlogAxis);\n};\n"]}