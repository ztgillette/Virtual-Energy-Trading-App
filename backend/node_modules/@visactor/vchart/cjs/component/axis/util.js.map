{"version":3,"sources":["../src/component/axis/util.ts"],"names":[],"mappings":";;;AAAA,6CAAuC;AAEvC,4CAA2D;AAI9C,QAAA,mBAAmB,GAAG;IACjC,IAAI,EAAE;QACJ,SAAS,EAAE,QAAQ;QACnB,YAAY,EAAE,QAAQ;KACvB;IACD,KAAK,EAAE;QACL,SAAS,EAAE,QAAQ;QACnB,YAAY,EAAE,QAAQ;KACvB;IACD,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;CACV,CAAC;AAEF,SAAgB,sBAAsB,CAAC,OAAY;IACjD,OAAO,GAAG,IAAA,+BAAuB,EAAC,OAAO,CAAC,CAAC;IAC3C,OAAO,CAAC,WAAW,GAAG,IAAA,+BAAuB,EAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACnE,OAAO,CAAC,SAAS,GAAG,IAAA,+BAAuB,EAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE/D,OAAO,OAAO,CAAC;AACjB,CAAC;AAND,wDAMC;AAED,SAAgB,kBAAkB,CAAC,QAAyB;IAC1D,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,IAAA,YAAG,EAAC,QAAQ,EAAE,cAAc,CAAC,EAAE;QACjC,WAAW,IAAI,IAAA,YAAG,EAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;KAC/C;IAED,IAAI,IAAA,YAAG,EAAC,QAAQ,EAAE,eAAe,CAAC,EAAE;QAClC,WAAW,IAAI,IAAA,YAAG,EAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;KAC7C;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AAXD,gDAWC;AAED,SAAgB,uBAAuB,CACrC,QAAyB,EACzB,aAGC;;IAGD,OAAO;QACL,GAAG,EAAE,MAAA,MAAA,QAAQ,CAAC,GAAG,mCAAI,MAAA,QAAQ,CAAC,KAAK,0CAAE,GAAG,mCAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG;QAC9D,GAAG,EAAE,MAAA,MAAA,QAAQ,CAAC,GAAG,mCAAI,MAAA,QAAQ,CAAC,KAAK,0CAAE,GAAG,mCAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG;KAC/D,CAAC;AACJ,CAAC;AAZD,0DAYC;AAED,SAAgB,oBAAoB,CAAC,IAAS;IAC5C,MAAM,MAAM,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;IAC5B,OAAO,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI,MAAM,KAAK,GAAG,CAAC;AAC9G,CAAC;AAHD,oDAGC;AAED,SAAgB,gBAAgB,CAAC,IAAS;IACxC,MAAM,MAAM,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;IAC5B,OAAO,MAAM,KAAK,OAAO,IAAI,MAAM,KAAK,QAAQ,CAAC;AACnD,CAAC;AAHD,4CAGC;AAEM,MAAM,cAAc,GAAG,CAAC,QAAkB,EAAE,EAAE,CACnD,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,OAAO,CAAC;AAD3D,QAAA,cAAc,kBAC6C;AAExE,SAAgB,WAAW,CAAC,KAAU,EAAE,eAAuB;IAC7D,OAAO;QACL,EAAE,EAAE,KAAK;QACT,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,eAAe;QACtB,QAAQ,EAAE,KAAK;KAChB,CAAC;AACJ,CAAC;AAPD,kCAOC;AAGD,SAAgB,gBAAgB,CAC9B,SAAyC,EACzC,SAAyC,EACzC,WAAoB;IAEpB,OAAO,WAAW,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,EAAE,KAAK,SAAS,CAAC,SAAS,EAAE,CAAC;AACtF,CAAC;AAND,4CAMC","file":"util.js","sourcesContent":["import { get } from '@visactor/vutils';\nimport type { AxisType, ICommonAxisSpec, ILinearAxisSpec } from './interface';\nimport { transformComponentStyle } from '../../util/style';\nimport type { IAxisHelper } from './cartesian/interface/common';\nimport type { IPolarAxisHelper } from './polar/interface/common';\n\nexport const DEFAULT_TITLE_STYLE = {\n  left: {\n    textAlign: 'center',\n    textBaseline: 'bottom'\n  },\n  right: {\n    textAlign: 'center',\n    textBaseline: 'bottom'\n  },\n  radius: {},\n  angle: {}\n};\n\nexport function transformAxisLineStyle(lineCfg: any) {\n  lineCfg = transformComponentStyle(lineCfg);\n  lineCfg.startSymbol = transformComponentStyle(lineCfg.startSymbol);\n  lineCfg.endSymbol = transformComponentStyle(lineCfg.endSymbol);\n\n  return lineCfg;\n}\n\nexport function getAxisLabelOffset(axisSpec: ICommonAxisSpec) {\n  let labelOffset = 0;\n  if (get(axisSpec, 'tick.visible')) {\n    labelOffset += get(axisSpec, 'tick.tickSize');\n  }\n\n  if (get(axisSpec, 'label.visible')) {\n    labelOffset += get(axisSpec, 'label.space');\n  }\n\n  return labelOffset;\n}\n\nexport function getLinearAxisSpecDomain(\n  axisSpec: ILinearAxisSpec,\n  defaultDomain?: {\n    min?: number;\n    max?: number;\n  }\n) {\n  // 兼容策略\n  return {\n    min: axisSpec.min ?? axisSpec.range?.min ?? defaultDomain?.min,\n    max: axisSpec.max ?? axisSpec.range?.max ?? defaultDomain?.max\n  };\n}\n\nexport function isValidCartesianAxis(spec: any) {\n  const orient = spec?.orient;\n  return orient === 'top' || orient === 'bottom' || orient === 'left' || orient === 'right' || orient === 'z';\n}\n\nexport function isValidPolarAxis(spec: any) {\n  const orient = spec?.orient;\n  return orient === 'angle' || orient === 'radius';\n}\n\nexport const isDiscreteAxis = (axisType: AxisType) =>\n  axisType === 'band' || axisType === 'ordinal' || axisType === 'point';\n\nexport function getAxisItem(value: any, normalizedValue: number) {\n  return {\n    id: value,\n    label: value,\n    value: normalizedValue,\n    rawValue: value\n  };\n}\n\n// 更新的条件: 指定绑定关系 或 初次绑定 或 更新前后id一致(防止声明多个轴时, 后面的轴覆盖前面的轴)\nexport function shouldUpdateAxis(\n  preHelper: IAxisHelper | IPolarAxisHelper,\n  curHelper: IAxisHelper | IPolarAxisHelper,\n  forceUpdate: boolean\n) {\n  return forceUpdate || !preHelper || preHelper.getAxisId() === curHelper.getAxisId();\n}\n"]}