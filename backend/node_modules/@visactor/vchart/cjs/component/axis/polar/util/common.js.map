{"version":3,"sources":["../src/component/axis/polar/util/common.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { POLAR_END_ANGLE, POLAR_START_ANGLE } from '../../../../constant/polar';\nimport { calculateMaxRadius, isFunction, isNumber, isValid } from '@visactor/vutils';\nimport { ComponentTypeEnum } from '../../../interface';\nimport type { IPolarAxisCommonSpec } from '../interface';\nimport type { ILayoutRect } from '../../../../typings/layout';\nimport type { IPoint } from '../../../../typings/coordinate';\nimport type { IPolarOrientType } from '../../../../typings/space';\nimport type { AxisType } from '../../interface/common';\nimport type { ITheme } from '../../../../theme/interface';\nimport { getComponentThemeFromOption } from '../../../util';\nimport { mergeSpec } from '@visactor/vutils-extension';\n\nexport const getPolarAxisInfo = (spec: IPolarAxisCommonSpec, chartSpec: any) => {\n  // TODO: 基于数据处理 axis 类型\n  const axisType = spec.type ?? (spec.orient === 'angle' ? 'band' : 'linear');\n  const componentName = `${ComponentTypeEnum.polarAxis}-${axisType}`;\n\n  const startAngleFromSpec = spec.startAngle ?? chartSpec.startAngle;\n  const endAngleFromSpec = spec.endAngle ?? chartSpec.endAngle;\n  return {\n    axisType,\n    componentName,\n    startAngle: startAngleFromSpec ?? POLAR_START_ANGLE,\n    endAngle: endAngleFromSpec ?? (isValid(startAngleFromSpec) ? startAngleFromSpec + 360 : POLAR_END_ANGLE),\n    center: isValid(chartSpec.center)\n      ? chartSpec.center\n      : isValid(chartSpec?.centerX) || isValid(chartSpec?.centerY)\n      ? {\n          x: chartSpec?.centerX,\n          y: chartSpec?.centerY\n        }\n      : undefined,\n    // 优先使用 outerRadius, 但要兼容 radius\n    outerRadius: spec.outerRadius ?? spec.radius ?? chartSpec.outerRadius ?? chartSpec.radius,\n    layoutRadius: chartSpec.layoutRadius\n  };\n};\n\nexport const computeLayoutRadius = (\n  getLayoutRadius: () => 'auto' | number | ((layoutRect: ILayoutRect, center: IPoint) => number),\n  getLayoutRect: () => ILayoutRect,\n  getCenter: () => IPoint,\n  getAngles: () => { startAngle: number; endAngle: number }\n) => {\n  const layoutRadius = getLayoutRadius();\n  if (isNumber(layoutRadius)) {\n    return layoutRadius;\n  } else if (isFunction(layoutRadius)) {\n    return layoutRadius(getLayoutRect(), getCenter());\n  }\n\n  const rect = getLayoutRect();\n\n  if (layoutRadius === 'auto' && rect.width > 0 && rect.height > 0) {\n    const { startAngle = 0, endAngle = 2 * Math.PI } = getAngles();\n    return calculateMaxRadius(rect, getCenter(), startAngle, endAngle);\n  }\n\n  return Math.min(rect.width / 2, rect.height / 2);\n};\n\nexport const getPolarAxisTheme = (orient: IPolarOrientType, type: AxisType, getTheme: (...keys: string[]) => any) => {\n  const axisTypeTheme =\n    (type === 'band'\n      ? getComponentThemeFromOption('axisBand', getTheme)\n      : type === 'linear'\n      ? getComponentThemeFromOption('axisLinear', getTheme)\n      : {}) ?? {};\n  const axisTheme =\n    orient === 'angle'\n      ? getComponentThemeFromOption('axisAngle', getTheme)\n      : getComponentThemeFromOption('axisRadius', getTheme);\n  return mergeSpec({}, getComponentThemeFromOption('axis', getTheme), axisTypeTheme, axisTheme);\n};\n"]}