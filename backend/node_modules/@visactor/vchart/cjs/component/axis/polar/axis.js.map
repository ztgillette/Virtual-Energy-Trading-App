{"version":3,"sources":["../src/component/axis/polar/axis.ts"],"names":[],"mappings":"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","file":"axis.js","sourcesContent":["import { POLAR_DEFAULT_RADIUS, POLAR_END_RADIAN, POLAR_START_RADIAN } from '../../../constant/polar';\nimport type { IBaseScale, BandScale } from '@visactor/vscale';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous } from '@visactor/vscale';\nimport { LayoutZIndex } from '../../../constant/layout';\nimport type { IPolarAxis, IPolarAxisCommonSpec } from './interface';\nimport type { IComponentOption } from '../../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../../interface/type';\nimport { Factory } from '../../../core/factory';\nimport { eachSeries } from '../../../util/model';\nimport type { IPolarTickDataOpt } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IPolarSeries } from '../../../series/interface';\nimport type {\n  IPoint,\n  IPolarOrientType,\n  IPolarPoint,\n  Datum,\n  StringOrNumber,\n  ILayoutType,\n  ILayoutNumber\n} from '../../../typings';\nimport { isPolarAxisSeries } from '../../../series/util/utils';\nimport { getAxisItem, getAxisLabelOffset, isValidPolarAxis, shouldUpdateAxis } from '../util';\nimport type { Dict, Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport {\n  PointService,\n  degreeToRadian,\n  isValid,\n  isArray,\n  isValidNumber,\n  polarToCartesian,\n  cartesianToPolar\n} from '@visactor/vutils';\nimport type { IEffect, IModelSpecInfo } from '../../../model/interface';\nimport { AxisComponent } from '../base-axis';\nimport type { IBandAxisSpec, ITick } from '../interface';\nimport { computeLayoutRadius, getPolarAxisInfo } from './util';\n// eslint-disable-next-line no-duplicate-imports\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { calcLayoutNumber } from '../../../util/space';\n\nexport abstract class PolarAxis<T extends IPolarAxisCommonSpec = IPolarAxisCommonSpec>\n  extends AxisComponent<T>\n  implements IPolarAxis\n{\n  static type = ComponentTypeEnum.polarAxis;\n  type = ComponentTypeEnum.polarAxis;\n  name: string = ComponentTypeEnum.polarAxis;\n\n  static specKey = 'axes';\n\n  protected readonly _defaultBandPosition = 0;\n  protected readonly _defaultBandInnerPadding = 0;\n  protected readonly _defaultBandOuterPadding = 0;\n\n  layoutType: ILayoutType = 'absolute';\n  layoutZIndex: number = LayoutZIndex.Axis;\n  protected _tick: ITick | undefined = undefined;\n\n  protected _center: { x: string | number; y: string | number } | null = null;\n  get center() {\n    return this._center;\n  }\n\n  protected _startAngle: number = POLAR_START_RADIAN;\n  get startAngle() {\n    return this._startAngle;\n  }\n\n  protected _endAngle: number = POLAR_END_RADIAN;\n  get endAngle() {\n    return this._endAngle;\n  }\n\n  protected _orient: IPolarOrientType = 'radius';\n  getOrient() {\n    return this._orient;\n  }\n\n  protected getDefaultInteractive() {\n    return this._orient !== 'angle';\n  }\n\n  protected _groupScales: IBaseScale[] = [];\n  getGroupScales() {\n    return this._groupScales;\n  }\n\n  private _axisStyle: any;\n  private _gridStyle: any;\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    if (!chartSpec[this.specKey]) {\n      return null;\n    }\n    const isArraySpec = isArray(chartSpec[this.specKey]);\n    const axesSpec = isArraySpec ? chartSpec[this.specKey] : [chartSpec[this.specKey]];\n    const specInfos: IModelSpecInfo[] = [];\n    let angleAxisIndex: number;\n    let radiusAxisIndex: number;\n    const radiusAxisSpecInfos: IModelSpecInfo[] = [];\n    const angleAxisSpecInfos: IModelSpecInfo[] = [];\n\n    axesSpec.forEach((s: any, i: number) => {\n      if (!isValidPolarAxis(s)) {\n        return;\n      }\n      const { axisType, componentName, startAngle, endAngle, center, outerRadius, layoutRadius } = getPolarAxisInfo(\n        s,\n        chartSpec\n      );\n      s.center = center;\n      s.startAngle = startAngle;\n      s.endAngle = endAngle;\n      s.outerRadius = outerRadius;\n      s.type = axisType;\n      s.layoutRadius = layoutRadius;\n      const info = {\n        spec: s,\n        specPath: isArraySpec ? [this.specKey, i] : [this.specKey],\n        specInfoPath: ['component', this.specKey, i],\n        type: componentName\n      };\n      specInfos.push(info);\n      if (s.orient === 'radius') {\n        radiusAxisSpecInfos.push(info);\n        radiusAxisIndex = i;\n      } else {\n        angleAxisSpecInfos.push(info);\n        angleAxisIndex = i;\n      }\n    });\n    radiusAxisSpecInfos.forEach(info => {\n      (info as any).angleAxisIndex = angleAxisIndex;\n    });\n\n    angleAxisSpecInfos.forEach(info => {\n      (info as any).radiusAxisIndex = radiusAxisIndex;\n    });\n    return specInfos;\n  }\n\n  static createComponent(specInfo: IModelSpecInfo, options: IComponentOption) {\n    const { spec, ...others } = specInfo;\n    const C = Factory.getComponentInKey(others.type);\n    if (C) {\n      return new C(spec, {\n        ...options,\n        ...others\n      }) as IPolarAxis;\n    }\n    options.onError(`Component ${others.type} not found`);\n    return null;\n  }\n\n  constructor(spec: T, options: IComponentOption) {\n    super(spec, options);\n\n    this._coordinateType = 'polar';\n  }\n\n  effect: IEffect = {\n    scaleUpdate: param => {\n      this.computeData(param?.value);\n      eachSeries(\n        this._regions,\n        s => {\n          if (this.getOrient() === 'radius') {\n            if (\n              shouldUpdateAxis(\n                (s as IPolarSeries).radiusAxisHelper,\n                this.axisHelper(),\n                isValid(this._seriesUserId) || isValid(this._seriesIndex)\n              )\n            ) {\n              (s as IPolarSeries).radiusAxisHelper = this.axisHelper();\n            }\n          } else {\n            if (\n              shouldUpdateAxis(\n                (s as IPolarSeries).angleAxisHelper,\n                this.axisHelper(),\n                isValid(this._seriesUserId) || isValid(this._seriesIndex)\n              )\n            ) {\n              (s as IPolarSeries).angleAxisHelper = this.axisHelper();\n            }\n          }\n        },\n        {\n          userId: this._seriesUserId,\n          specIndex: this._seriesIndex\n        }\n      );\n    }\n  };\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n\n    if (this.visible) {\n      this._axisStyle = this._getAxisAttributes();\n      this._gridStyle = this._getGridAttributes();\n    }\n\n    this._tick = this._spec.tick;\n    this._orient = this._spec.orient === 'angle' ? 'angle' : 'radius';\n    this._center = this._spec.center;\n    this._startAngle = degreeToRadian(this._spec.startAngle);\n    this._endAngle = degreeToRadian(this._spec.endAngle);\n    this._inverse = this._spec.inverse;\n  }\n\n  _transformLayoutPosition = (pos: Partial<IPoint>) => {\n    const region = this.getRegions()?.[0];\n    return region ? region.getLayoutStartPoint() : pos;\n  };\n\n  protected _tickTransformOption() {\n    return {\n      ...super._tickTransformOption(),\n      noDecimal: this._tick?.noDecimals,\n      startAngle: this.startAngle,\n      labelOffset: getAxisLabelOffset(this._spec),\n      getRadius: () => this.getOuterRadius(),\n      inside: this._spec.inside\n    } as IPolarTickDataOpt;\n  }\n\n  protected updateScaleRange() {\n    const prevRange = this._scale.range();\n    let newRange: [number, number];\n\n    if (this.getOrient() === 'radius') {\n      newRange = this._inverse\n        ? [this.computeLayoutOuterRadius(), this.computeLayoutInnerRadius()]\n        : [this.computeLayoutInnerRadius(), this.computeLayoutOuterRadius()];\n    } else {\n      newRange = this._inverse ? [this._endAngle, this._startAngle] : [this._startAngle, this._endAngle];\n    }\n\n    if (prevRange && newRange && prevRange[0] === newRange[0] && prevRange[1] === newRange[1]) {\n      return false;\n    }\n\n    this._scale.range(newRange);\n\n    return true;\n  }\n\n  protected collectSeriesField(depth: number, series: IPolarSeries) {\n    let field: string | string[];\n\n    if (depth > 0) {\n      field = series.getGroups()?.fields?.[depth];\n    } else {\n      field = this.getOrient() === 'radius' ? series.getRadiusField() : series.getAngleField();\n    }\n    return field;\n  }\n\n  protected abstract computeDomain(data: { min: number; max: number; values: any[] }[]): StringOrNumber[];\n\n  protected updateSeriesScale(): void {\n    eachSeries(\n      this._regions,\n      s => {\n        if (this.getOrient() === 'radius') {\n          if (\n            shouldUpdateAxis(\n              (s as IPolarSeries).radiusAxisHelper,\n              this.axisHelper(),\n              isValid(this._seriesUserId) || isValid(this._seriesIndex)\n            )\n          ) {\n            (s as IPolarSeries).setRadiusScale(this._scale);\n            (s as IPolarSeries).radiusAxisHelper = this.axisHelper();\n          }\n        } else {\n          if (\n            shouldUpdateAxis(\n              (s as IPolarSeries).angleAxisHelper,\n              this.axisHelper(),\n              isValid(this._seriesUserId) || isValid(this._seriesIndex)\n            )\n          ) {\n            (s as IPolarSeries).setAngleScale(this._scale);\n            (s as IPolarSeries).angleAxisHelper = this.axisHelper();\n          }\n        }\n      },\n      {\n        userId: this._seriesUserId,\n        specIndex: this._seriesIndex\n      }\n    );\n  }\n\n  protected getSeriesStatisticsField(s: IPolarSeries) {\n    const f = this.getOrient() === 'radius' ? s.getRadiusField() : s.getAngleField();\n    if (isContinuous(this._scale.type)) {\n      return f;\n    }\n    return [f[0]];\n  }\n\n  protected initGroupScales() {\n    // do nothing\n  }\n\n  // axisHelper\n  protected axisHelper() {\n    const getScale = (depth: number = 0) => {\n      return this._scales[depth];\n    };\n\n    const helper = {\n      isContinuous: isContinuous(this._scale.type),\n      dataToPosition: this.dataToPosition.bind(this),\n      coordToPoint: this.coordToPoint.bind(this),\n      pointToCoord: this.pointToCoord.bind(this),\n      center: this.getCenter.bind(this),\n      layoutRadius: this._computeLayoutRadius.bind(this),\n      getScale,\n      getAxisId: () => this.id,\n      getSpec: () => this._spec\n    };\n    return helper;\n  }\n\n  positionToData(position: IPoint) {\n    const coord = this.pointToCoord(position);\n    if (this.getOrient() === 'radius') {\n      return this.invert(coord.radius);\n    }\n    return this.invert(coord.angle);\n  }\n\n  /**\n   * 将半径和角度转换为笛卡尔坐标点\n   * @param point 角度 & 弧度信息\n   * @returns 笛卡尔坐标点 { x, y }\n   */\n  coordToPoint(point: IPolarPoint): IPoint {\n    // center & startAngle 都是坐标系转换的配置，在 scale 中不生效，仅在最终转换时生效\n    const center = this.getCenter();\n\n    return polarToCartesian(center, point.radius, point.angle);\n  }\n\n  /**\n   * 将笛卡尔坐标转换为对应的半径和弧度\n   * @param point 笛卡尔坐标点 { x, y }\n   * @returns 角度 & 弧度信息 { radius, angle }\n   */\n  pointToCoord(point: IPoint): IPolarPoint {\n    const center = this.getCenter();\n    const startAngle = this._startAngle;\n    const endAngle = this._endAngle;\n    return cartesianToPolar(point, center, startAngle, endAngle);\n  }\n\n  /**\n   * 获取坐标轴圆心位置\n   * @returns 圆心位置\n   */\n  getCenter = (): IPoint => {\n    const layoutRect = this.getRefLayoutRect();\n    const { width, height } = layoutRect;\n\n    return {\n      x: calcLayoutNumber(this._center?.x as ILayoutNumber, width, layoutRect, width / 2),\n      y: calcLayoutNumber(this._center?.y as ILayoutNumber, height, layoutRect, height / 2)\n    };\n  };\n\n  /**\n   * 获取极坐标半径值\n   * @returns 半径数值\n   */\n  getOuterRadius(): number {\n    return this.computeLayoutOuterRadius();\n  }\n\n  /**\n   * 获取极坐标内半径值\n   * @returns 内半径数值\n   */\n  getInnerRadius(): number {\n    return this.computeLayoutInnerRadius();\n  }\n\n  updateLayoutAttribute(): void {\n    if (this._visible) {\n      if (this.getOrient() === 'radius') {\n        this._layoutRadiusAxis();\n      } else {\n        this._layoutAngleAxis();\n      }\n    }\n\n    super.updateLayoutAttribute();\n  }\n\n  protected _getNormalizedValue(values: any[], length: number) {\n    return length === 0 ? 0 : (this.dataToPosition(values) - this._getStartValue()) / length;\n  }\n\n  protected getLabelItems(length: number) {\n    const tickLatestData = this.getTickData()?.getLatestData();\n    if (tickLatestData && tickLatestData.length) {\n      return [\n        tickLatestData.map((obj: Datum) => {\n          return getAxisItem(obj.value, this._getNormalizedValue([obj.value], length));\n        })\n      ];\n    }\n    return [];\n  }\n  protected _getStartValue() {\n    if (this.getOrient() === 'radius') {\n      return this.computeLayoutInnerRadius();\n    }\n\n    return this._startAngle;\n  }\n\n  private _layoutAngleAxis(): void {\n    const center = this.getCenter();\n    const radius = this.computeLayoutOuterRadius();\n    const innerRadius = this.computeLayoutInnerRadius();\n    const angleRange = this._endAngle - this._startAngle;\n    const items = this.getLabelItems(angleRange);\n    const commonAttrs = {\n      ...this.getLayoutStartPoint(),\n      inside: this._spec.inside,\n      center,\n      radius,\n      innerRadius,\n      startAngle: this._startAngle,\n      endAngle: this._endAngle,\n      sides: this._getRelatedAxis((this._option as any).radiusAxisIndex)?.getSpec()?.grid?.smooth\n        ? undefined\n        : this.getScale().domain().length\n    };\n    const attrs: any = {\n      ...commonAttrs,\n      size: this.getRefLayoutRect(),\n      title: {\n        text: this._spec.title.text || this._dataFieldText\n      },\n      items,\n      orient: 'angle',\n      scale: this._scale\n    };\n    if (this._spec.grid.visible) {\n      attrs.grid = {\n        type: 'line',\n        smoothLink: true,\n        items: items[0],\n        ...commonAttrs\n      };\n    }\n    this._update(attrs);\n  }\n\n  private _layoutRadiusAxis(): void {\n    const center = this.getCenter();\n    const radius = this.computeLayoutOuterRadius();\n    const innerRadius = this.computeLayoutInnerRadius();\n    const endPoint = this.coordToPoint({ angle: this._startAngle, radius });\n    const startPoint = this.coordToPoint({ angle: this._startAngle, radius: innerRadius });\n    const distance = PointService.distancePP(startPoint, endPoint);\n    const items = this.getLabelItems(distance);\n    const commonAttrs = {\n      ...this.getLayoutStartPoint(),\n      start: startPoint,\n      end: endPoint,\n      verticalFactor: -1\n    };\n    const attrs: any = {\n      ...commonAttrs,\n      title: {\n        text: this._spec.title.text || this._dataFieldText\n      },\n      items,\n      orient: 'radius',\n      scale: this._scale.clone()\n    };\n    if (this._spec.grid?.visible) {\n      attrs.grid = {\n        items: items[0],\n        type: this._spec.grid?.smooth ? 'circle' : 'polygon',\n        center,\n        closed: true,\n        sides: this._getRelatedAxis((this._option as any).angleAxisIndex)\n          ?.getScale()\n          .domain().length,\n        startAngle: this._startAngle,\n        endAngle: this._endAngle,\n        ...commonAttrs\n      };\n    }\n    this._update(attrs);\n  }\n\n  protected _getRelatedAxis(index: number): IPolarAxis | undefined {\n    if (isValid(index)) {\n      return this._option.getComponentByIndex(this.specKey, index) as IPolarAxis;\n    }\n    return undefined;\n  }\n\n  private _computeLayoutRadius() {\n    return computeLayoutRadius(\n      () => this._spec.layoutRadius,\n      this.getRefLayoutRect,\n      this.getCenter,\n      () => ({ startAngle: this._startAngle, endAngle: this._endAngle })\n    );\n  }\n\n  private computeLayoutOuterRadius() {\n    /**\n     * 兼容radius旧配置\n     * @deprecated use outerRadius instead\n     */\n    const radius = this._spec.outerRadius ?? this._spec.radius;\n    const outerRadius = radius ?? this.getRefSeriesRadius().outerRadius;\n    return this._computeLayoutRadius() * outerRadius;\n  }\n\n  private computeLayoutInnerRadius() {\n    const innerRadius = this._spec.innerRadius ?? this.getRefSeriesRadius().innerRadius;\n    return this._computeLayoutRadius() * innerRadius;\n  }\n\n  private getRefLayoutRect = () => {\n    return this.getRegions()[0].getLayoutRect();\n  };\n\n  private getRefSeriesRadius() {\n    let outerRadius: number = POLAR_DEFAULT_RADIUS;\n    let innerRadius: number = 0;\n    const chartSpec = this.getChart().getSpec() as any;\n    // FIXME: 为了保证 common 图表能够应用系列的 radius 配置，当前从相应的 region 中取到 radius 信息\n    eachSeries(\n      this.getRegions(),\n      s => {\n        const series = s as IPolarSeries;\n        if (isPolarAxisSeries(series.type)) {\n          const {\n            outerRadius: seriesRadius = chartSpec.outerRadius,\n            innerRadius: seriesInnerRadius = chartSpec.innerRadius\n          } = series;\n          if (isValidNumber(seriesRadius)) {\n            outerRadius = seriesRadius;\n          }\n          if (isValidNumber(seriesInnerRadius)) {\n            innerRadius = seriesInnerRadius;\n          }\n        }\n      },\n      {\n        userId: this._seriesUserId,\n        specIndex: this._seriesIndex\n      }\n    );\n    return { outerRadius, innerRadius };\n  }\n\n  private _update(attrs: Dict<unknown>) {\n    const { grid: gridAttrs, ...axisAttrs } = attrs;\n    const axisProduct = this._axisMark.getComponent(); // 获取语法元素并更新\n    axisProduct.setAttributes(mergeSpec({}, this._axisStyle, axisAttrs));\n\n    if (this._gridMark) {\n      const gridProduct = this._gridMark.getComponent(); // 获取语法元素并更新\n      gridProduct.setAttributes(mergeSpec({}, this._gridStyle, gridAttrs));\n    }\n  }\n\n  invert(value: number): number {\n    if (this.getOrient() === 'angle' && this._scale.type === 'band') {\n      //极坐标轴需要手动取模，超出range时默认会截断\n      const range = this._scale.range();\n      const rangeValue = range[range.length - 1] - range[0];\n      const bandPosition = (this.getSpec() as IBandAxisSpec).bandPosition ?? this._defaultBandPosition;\n      const offset = bandPosition === 0.5 ? 0 : (this._scale as BandScale).bandwidth() / 2;\n      if (range[0] < 0) {\n        const angle = value + offset;\n        const transformedAngle = ((angle + Math.abs(range[0])) % rangeValue) - Math.abs(range[0]);\n        return this._scale.invert(transformedAngle);\n      }\n      return this._scale.invert((value + offset) % rangeValue);\n    }\n\n    return this._scale.invert(value);\n  }\n}\n"]}