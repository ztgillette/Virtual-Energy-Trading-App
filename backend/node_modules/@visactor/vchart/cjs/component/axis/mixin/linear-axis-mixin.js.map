{"version":3,"sources":["../src/component/axis/mixin/linear-axis-mixin.ts"],"names":[],"mappings":"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","file":"linear-axis-mixin.js","sourcesContent":["import { isValidNumber, isNil, isValid, isFunction, last } from '@visactor/vutils';\nimport type { LinearScale } from '@visactor/vscale';\nimport { combineDomains, maxInArr, minInArr } from '../../../util/array';\nimport { getLinearAxisSpecDomain } from '../util';\nimport type { IAxisLocationCfg, ILinearAxisBreakSpec, ITick } from '../interface';\nimport { ChartEvent } from '../../../constant/event';\nimport type { IEvent } from '../../../event/interface';\nimport { isXAxis } from '../cartesian/util/common';\nimport type { IOrientType } from '../../../typings/space';\nimport type { IComponentOption } from '../../interface/common';\nimport type { StringOrNumber } from '../../../typings';\nimport { breakData } from './util/break-data';\n\nexport const e10 = Math.sqrt(50);\nexport const e5 = Math.sqrt(10);\nexport const e2 = Math.sqrt(2);\nconst DEFAULT_TICK_COUNT = 5;\n\nexport interface LinearAxisMixin {\n  _scale: LinearScale;\n  _scales: LinearScale[];\n  _spec: any;\n  _nice: boolean;\n  _zero: boolean;\n  /**\n   * spec中申明的min,max\n   */\n  _domain: { min?: number; max?: number };\n  /**\n   * 记录一下解析spec后，获取到的domain，\n   * 用于在插件（如0值对齐等功能）中使用\n   */\n  _domainAfterSpec: number[];\n  _softMinValue?: number;\n  _softMaxValue?: number;\n  _expand?: { max?: number; min?: number };\n  _tick: ITick | undefined;\n  isSeriesDataEnable: any;\n  computeDomain: any;\n  collectData: (depth?: number) => { min: number; max: number; values: any[] }[];\n  /**\n   * 这个变量在其他break相关组件和扩展中都有使用\n   */\n  _break: {\n    domain: [number, number][];\n    scope: [number, number][];\n    breakDomains: [number, number][];\n    breaks: ILinearAxisBreakSpec[];\n  };\n  event: IEvent;\n  _orient: IOrientType;\n  _option: IComponentOption;\n  niceLabelFormatter: (value: StringOrNumber) => StringOrNumber;\n}\n\nexport class LinearAxisMixin {\n  protected _extend: { [key: string]: number } = {};\n\n  niceLabelFormatter: (value: StringOrNumber) => StringOrNumber = null;\n\n  setExtraAttrFromSpec() {\n    isValid(this._spec.nice) && (this._nice = this._spec.nice);\n    isValid(this._spec.zero) && (this._zero = this._spec.zero);\n    this._expand = this._spec.expand;\n    this._domain = getLinearAxisSpecDomain(this._spec);\n  }\n  transformScaleDomain() {\n    this.setScaleNice();\n  }\n\n  setLinearScaleNice() {\n    if (!this._nice) {\n      return false;\n    }\n    let tickCount: number = DEFAULT_TICK_COUNT;\n    const tick = this._spec.tick || {};\n\n    if (isValidNumber(tick.forceTickCount)) {\n      tickCount = tick.forceTickCount;\n    } else if (isFunction(tick.tickCount)) {\n      const range = this._scale.range();\n      let rangeSize = Math.abs(last(range) - range[0]);\n\n      if (rangeSize === 1 && this._option) {\n        // TODO: need to be optimized, when the range is not updated, use the size of view\n        const isX = isXAxis(this._orient);\n        rangeSize = isX ? this._option.getChartViewRect().width : this._option.getChartViewRect().height;\n      }\n\n      // tickCount需要一致，不然会导致效果不一致, fix #2050\n      tickCount = tick.tickCount({\n        axisLength: rangeSize,\n        labelStyle: this._spec.label && this._spec.label.style\n      });\n    } else if (isValidNumber(tick.tickCount)) {\n      tickCount = tick.tickCount;\n    } else {\n      tickCount = DEFAULT_TICK_COUNT;\n    }\n    // 如果配置了精度优先，那么最低是 5\n    // 否则就直接使用tickCount即可\n    if (this._spec.niceType === 'accurateFirst') {\n      tickCount = Math.max(DEFAULT_TICK_COUNT, tickCount);\n    }\n    const { min, max } = this._domain ?? {};\n    if (isNil(min) && isNil(max) && isNil(this._softMaxValue) && isNil(this._softMinValue)) {\n      return this._scale.nice(tickCount);\n    } else if ((isValid(min) || isValid(this._softMinValue)) && isNil(max) && isNil(this._softMaxValue)) {\n      return this._scale.niceMax(tickCount);\n    } else if (isNil(min) && isNil(this._softMinValue) && (isValid(max) || isValid(this._softMaxValue))) {\n      return this._scale.niceMin(tickCount);\n    }\n\n    return false;\n  }\n\n  setLogScaleNice() {\n    if (!this._nice) {\n      return false;\n    }\n\n    const { min, max } = this._domain ?? {};\n    if (isNil(min) && isNil(max) && isNil(this._softMaxValue) && isNil(this._softMinValue)) {\n      return this._scale.nice();\n    } else if ((isValid(min) || isValid(this._softMinValue)) && isNil(max) && isNil(this._softMaxValue)) {\n      return this._scale.niceMax();\n    } else if (isNil(min) && isNil(this._softMinValue) && (isValid(max) || isValid(this._softMaxValue))) {\n      return this._scale.niceMin();\n    }\n\n    return false;\n  }\n\n  setScaleNice() {\n    if (this._spec.type === 'log') {\n      return this.setLogScaleNice();\n    }\n    return this.setLinearScaleNice();\n  }\n\n  dataToPosition(values: any[], cfg?: IAxisLocationCfg): number {\n    return this.valueToPosition(values[0]);\n  }\n\n  valueToPosition(value: any): number {\n    return this._scale.scale(value);\n  }\n\n  computeLinearDomain(data: { min: number; max: number; values: any[] }[]): number[] {\n    let domain: number[] = [];\n\n    if (data.length) {\n      const userSetBreaks = this._spec.breaks && this._spec.breaks.length;\n      let values: any[] = [];\n      let minDomain: number;\n      let maxDomain: number;\n      data.forEach(d => {\n        const { min, max } = d;\n        minDomain = minDomain === undefined ? min : Math.min(minDomain, min as number);\n        maxDomain = maxDomain === undefined ? max : Math.max(maxDomain, max as number);\n        if (userSetBreaks) {\n          values = values.concat(d.values);\n        }\n      });\n\n      if (userSetBreaks) {\n        const breakRanges = [];\n        const breaks = [];\n        // 如果用户手动的手指了max，可以将break的最大值限制在用户设置的最大值范围内\n        const breakMaxLimit = isNil(this._domain.max) ? maxDomain : this._domain.max;\n        for (let index = 0; index < this._spec.breaks.length; index++) {\n          const { range } = this._spec.breaks[index];\n          if (range[0] <= range[1] && range[1] <= breakMaxLimit) {\n            breakRanges.push(range);\n            breaks.push(this._spec.breaks[index]);\n          }\n        }\n        breakRanges.sort((a: [number, number], b: [number, number]) => a[0] - b[0]);\n        if (breakRanges.length) {\n          const { domain: breakDomains, scope: breakScopes } = breakData(\n            values,\n            combineDomains(breakRanges),\n            this._spec.breaks[0].scopeType\n          );\n\n          domain = combineDomains(breakDomains);\n          this._break = {\n            domain: breakDomains,\n            scope: breakScopes,\n            breakDomains: breakRanges,\n            breaks\n          };\n        } else {\n          domain = [minDomain, maxDomain];\n        }\n      } else {\n        domain = [minDomain, maxDomain];\n      }\n    } else {\n      // default value for linear axis\n      domain[0] = 0;\n      domain[1] = 0;\n    }\n    this.setSoftDomainMinMax(domain);\n    this.expandDomain(domain);\n    this.includeZero(domain);\n    this.setDomainMinMax(domain);\n    return domain;\n  }\n\n  protected expandDomain(domain: number[]): void {\n    if (!this._expand) {\n      return;\n    }\n\n    let domainMin = domain[0];\n    let domainMax = last(domain);\n\n    if (domainMin === domainMax) {\n      if (domainMax === 0) {\n        domainMax = 1;\n      } else if (domainMax > 0) {\n        domainMin = 0;\n      } else if (domainMax < 0) {\n        domainMax = 0;\n      }\n    }\n\n    if (isValid(this._expand.min)) {\n      domain[0] = domainMin - (domainMax - domainMin) * this._expand.min;\n    }\n    if (isValid(this._expand.max)) {\n      domain[domain.length - 1] = domainMax + (domainMax - domainMin) * this._expand.max;\n    }\n  }\n\n  protected niceDomain(domain: number[]) {\n    const { min: userMin, max: userMax } = getLinearAxisSpecDomain(this._spec);\n    if (isValid(userMin) || isValid(userMax) || this._spec.type !== 'linear') {\n      // 如果用户设置了 min 或者 max 则按照用户设置的为准\n      // 如果是非 linear 类型也不处理\n      return domain;\n    }\n    if (Math.abs(minInArr(domain) - maxInArr(domain)) <= 1e-12) {\n      let num = domain[0];\n      const flag = num >= 0 ? 1 : -1;\n      num = Math.abs(num);\n      if (num < 1) {\n        domain[0] = 0;\n        domain[domain.length - 1] = 1; // 在[0, 1) 区间变成[0, 1]\n      } else {\n        let step = num / DEFAULT_TICK_COUNT; // 默认5个ticks\n        const power = Math.floor(Math.log(step) / Math.LN10);\n        const err = step / Math.pow(10, power);\n        step = (err >= e10 ? 10 : err >= e5 ? 5 : err >= e2 ? 2 : 1) * Math.pow(10, power);\n\n        domain[0] = 0;\n        domain[domain.length - 1] = step * 10;\n      }\n      if (flag < 0) {\n        domain.reverse();\n        domain[0] *= -1;\n        domain[domain.length - 1] *= -1;\n      }\n    }\n    return domain;\n  }\n\n  protected includeZero(domain: number[]): void {\n    if (this._zero) {\n      domain[0] = Math.min(domain[0], 0);\n      domain[domain.length - 1] = Math.max(last(domain), 0);\n    }\n  }\n\n  // 用户其他模块扩充轴scale的区间\n  setExtendDomain(key: string, value: number | undefined) {\n    if (value === undefined) {\n      delete this._extend[key];\n      return;\n    }\n    this._extend[key] = value;\n    const domain = this._scale.domain();\n    this.extendDomain(domain);\n    this.includeZero(domain);\n    this.setDomainMinMax(domain);\n    this.niceDomain(domain);\n    this._scale.domain(domain, this._nice);\n\n    if (this._nice) {\n      const niced = this.setScaleNice();\n\n      !niced && this._scale.rescale();\n    }\n\n    this.event.emit(ChartEvent.scaleUpdate, { model: this as any, value: 'domain' });\n  }\n\n  protected extendDomain(domain: number[]) {\n    let temp;\n    const domainLast = domain.length - 1;\n    const reverse = domain[0] - domain[domainLast] > 0;\n    const min = reverse ? domainLast : 0;\n    const max = reverse ? 0 : domainLast;\n    for (const key in this._extend) {\n      temp = this._extend[key];\n      temp > domain[max] && (domain[max] = temp);\n      temp < domain[min] && (domain[min] = temp);\n    }\n  }\n\n  getDomainSpec() {\n    return this._domain;\n  }\n\n  protected setDomainMinMax(domain: number[]): void {\n    if (!this._domain) {\n      return;\n    }\n    const { min, max } = this._domain;\n    isValid(min) && (domain[0] = min);\n    isValid(max) && (domain[domain.length - 1] = max);\n  }\n\n  protected setSoftDomainMinMax(domain: number[]): void {\n    const { softMin, softMax } = this._spec;\n\n    if (isValid(softMin)) {\n      let softMinValue = isFunction(softMin) ? softMin(domain) : (softMin as number);\n\n      if (isNil(softMinValue)) {\n        softMinValue = domain[0];\n      }\n\n      if (softMinValue <= domain[0]) {\n        domain[0] = softMinValue;\n        this._softMinValue = softMinValue;\n      }\n    }\n\n    if (isValid(softMax)) {\n      let softMaxValue = isFunction(softMax) ? softMax(domain) : (softMax as number);\n\n      if (isNil(softMaxValue)) {\n        softMaxValue = last(domain);\n      }\n\n      if (softMaxValue >= last(domain)) {\n        domain[domain.length - 1] = softMaxValue;\n      }\n\n      this._softMaxValue = softMaxValue;\n    }\n  }\n\n  setZero(zero: boolean) {\n    if (this._zero !== zero) {\n      this._zero = zero;\n      this.updateScaleDomain();\n    }\n  }\n  /**\n   * @override\n   * TODO event.emit是否可以考虑用decorator\n   */\n  protected updateScaleDomain() {\n    if (!this.isSeriesDataEnable()) {\n      return;\n    }\n    const data = this.collectData();\n    const domain: number[] = this.computeLinearDomain(data) as number[];\n    this.updateScaleDomainByModel(domain);\n  }\n\n  /**\n   * TODO event.emit是否可以考虑用decorator\n   * 数据逻辑外，模块的设置更新对scale-domain的修改操作\n   */\n  protected updateScaleDomainByModel(domain?: number[]) {\n    domain = domain ?? this._scale.domain();\n    // 其他模块的设置 domain\n    this.extendDomain(domain);\n    this.includeZero(domain);\n    // 用户 spec 的 min-max\n    this.setDomainMinMax(domain);\n    // nice 优先级最高\n    this.niceDomain(domain);\n    this._scale.domain(domain, this._nice);\n    // 设置scale的nice-min-max\n    if (this._nice) {\n      const niced = this.setScaleNice();\n\n      !niced && this._scale.rescale();\n    }\n    this._updateNiceLabelFormatter(domain);\n\n    this._domainAfterSpec = this._scale.domain();\n    this.event.emit(ChartEvent.scaleDomainUpdate, { model: this as any });\n    this.event.emit(ChartEvent.scaleUpdate, { model: this as any, value: 'domain' });\n  }\n\n  getDomainAfterSpec() {\n    return this._domainAfterSpec;\n  }\n\n  protected _updateNiceLabelFormatter(domain: number[]) {\n    // 根据轴 domain 范围做动态判断，取最多 n + 2 位小数\n    const domainSpan = Math.abs(last(domain) - domain[0]);\n    const n = Math.max(-Math.floor(Math.log10(domainSpan)), 0) + 2;\n    const unit = Math.pow(10, n);\n    this.niceLabelFormatter = (value: StringOrNumber) => {\n      if (isValidNumber(+value)) {\n        return Math.round((+value as number) * unit) / unit;\n      }\n      return value;\n    };\n  }\n}\n"]}