{"version":3,"sources":["../src/component/axis/mixin/band-axis-mixin.ts"],"names":[],"mappings":"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","file":"band-axis-mixin.js","sourcesContent":["import type { BandScale } from '@visactor/vscale';\nimport type { Dict } from '@visactor/vutils';\nimport { array, isArray } from '@visactor/vutils';\nimport type { Datum, IOrientType, IPolarOrientType, StringOrNumber } from '../../../typings';\nimport type { IEvent } from '../../../event/interface';\nimport { ChartEvent } from '../../../constant/event';\nimport type { IModel } from '../../../model/interface';\nimport type { IAxisLocationCfg } from '../interface';\nimport { CompilableData } from '../../../compile/data/compilable-data';\nimport type { AxisItem } from '@visactor/vrender-components';\nimport { getAxisItem } from '../util';\n\nexport interface BandAxisMixin {\n  _orient: IOrientType | IPolarOrientType;\n  _option: any;\n  _scale: BandScale;\n  _scales: BandScale[];\n  _spec: any;\n  _tick: any;\n  _tickData: CompilableData[];\n  _defaultBandPosition: number;\n  _defaultBandInnerPadding: number;\n  _defaultBandOuterPadding: number;\n  event: IEvent;\n  isSeriesDataEnable: () => boolean;\n  collectData: (depth: number, rawData?: boolean) => { min: number; max: number; values: any[] }[];\n  computeDomain: (data: { min: number; max: number; values: any[] }[]) => StringOrNumber[];\n  transformScaleDomain: () => void;\n  _initTickDataSet: (options: any, index?: number) => any;\n  _tickTransformOption: () => any;\n  _forceLayout: () => void;\n  _getNormalizedValue: (values: any[], length: number) => number;\n  _onTickDataChange: (compilableData: CompilableData) => void;\n  registerTicksTransform: () => string;\n}\n\nexport class BandAxisMixin {\n  private _tickDataMap: Dict<any>;\n  protected _initData() {\n    if (this._spec.showAllGroupLayers && this._scales.length > 1) {\n      // 显示所有分组层级\n      for (let layer = 0; layer < this._scales.length; layer++) {\n        const layers = this._spec.layers ?? [];\n        const layerConfig = layers[this._scales.length - 1 - layer] || {};\n        if (layerConfig.visible !== false && layerConfig.tickCount !== 0 && layerConfig.forceTickCount !== 0) {\n          const tickData = this._initTickDataSet(\n            {\n              ...this._tickTransformOption(),\n              ...layerConfig\n            },\n            layer\n          );\n          const compilableData = new CompilableData(this._option, tickData);\n          this._tickData.push(compilableData);\n          tickData.target.addListener('change', () => {\n            this._onTickDataChange(compilableData);\n          });\n\n          if (!this._tickDataMap) {\n            this._tickDataMap = {};\n          }\n          this._tickDataMap[layer] = compilableData;\n        }\n      }\n    } else {\n      const tickData = this._initTickDataSet(this._tickTransformOption());\n      const compilableData = new CompilableData(this._option, tickData);\n      tickData.target.addListener('change', () => {\n        this._onTickDataChange(compilableData);\n      });\n      this._tickData = [compilableData];\n      this._tickDataMap = {\n        0: compilableData\n      };\n    }\n  }\n\n  protected _updateData() {\n    const tickTransformType = this.registerTicksTransform();\n\n    if (this._spec.showAllGroupLayers && this._scales.length > 1) {\n      const layers = this._spec.layers ?? [];\n      Object.keys(this._tickDataMap).forEach(layer => {\n        const layerConfig = layers[this._scales.length - 1 - +layer] || {};\n        const tickData = this._tickDataMap[layer];\n        const tickTransform = tickData?.getDataView().transformsArr.find((t: any) => t.type === tickTransformType);\n\n        tickTransform &&\n          (tickTransform.options = {\n            ...this._tickTransformOption(),\n            ...layerConfig\n          });\n      });\n    } else {\n      const tickTransform = this._tickData?.[0]?.getDataView().transformsArr.find(t => t.type === tickTransformType);\n\n      tickTransform && (tickTransform.options = this._tickTransformOption());\n    }\n  }\n\n  protected _rawDomainIndex: { [key: string | number | symbol]: number }[] = [];\n\n  dataToPosition(values: any[], cfg: IAxisLocationCfg = {}): number {\n    if (values.length === 0 || this._scales.length === 0) {\n      return 0;\n    }\n    const { position, bandScale } = this.getPosition(values);\n    return (\n      position + bandScale.bandwidth() * (cfg.bandPosition ?? this._spec.bandPosition ?? this._defaultBandPosition)\n    );\n  }\n\n  valueToPosition(value: any): number {\n    const bandStart = this._scale.scale(value);\n    return bandStart;\n  }\n\n  updateGroupScaleRange() {\n    let parentScale = this._scale;\n    this._scales.forEach((scale, i) => {\n      if (i > 0) {\n        scale.range([0, parentScale.bandwidth()]);\n        parentScale = scale;\n      }\n    });\n  }\n\n  getPosition(values: any[]) {\n    let position = 0;\n    let bandScale = this._scale;\n    // 要不要性能优化？\n    // 优化有没有用？\n    if (this._scales.length === 1 || values.length === 1) {\n      position = this.valueToPosition(values[0]);\n    } else {\n      const max = Math.min(values.length, this._scales.length);\n      for (let i = 0; i < max; i++) {\n        position += this._scales[i].scale(values[i]);\n      }\n      bandScale = this._scales[max - 1];\n    }\n    return { position, bandScale };\n  }\n\n  calcScales(DEFAULT_BAND_INNER_PADDING: number, DEFAULT_BAND_OUTER_PADDING: number) {\n    const { bandPadding, paddingInner, paddingOuter } = this._spec;\n    const isBandPaddingArray = isArray(bandPadding);\n    const isPaddingInnerArray = isArray(paddingInner);\n    const isPaddingOuterArray = isArray(paddingOuter);\n\n    for (let i = 0; i < this._scales.length; i++) {\n      const _padding = isBandPaddingArray ? bandPadding[i] : bandPadding;\n      const _paddingInner = isPaddingInnerArray ? paddingInner[i] : paddingInner;\n      const _paddingOuter = isPaddingOuterArray ? paddingOuter[i] : paddingOuter;\n\n      this._scales[i]\n        .paddingInner(_paddingInner ?? _padding ?? DEFAULT_BAND_INNER_PADDING, true)\n        .paddingOuter(_paddingOuter ?? _padding ?? DEFAULT_BAND_OUTER_PADDING, true);\n    }\n  }\n  computeBandDomain(data: { min: number; max: number; values: any[] }[]): StringOrNumber[] {\n    if (!data.length) {\n      return [];\n    }\n\n    // 性能优化 9.13\n    if (data.length === 1) {\n      return data[0].values;\n    }\n    const tempSet = new Set();\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data[i].values.length; j++) {\n        tempSet.add(data[i].values[j]);\n      }\n    }\n    return Array.from(tempSet) as StringOrNumber[];\n  }\n\n  protected updateScaleDomain() {\n    if (!this.isSeriesDataEnable()) {\n      return;\n    }\n    if (!this._rawDomainIndex?.length && this._scales.length) {\n      this._updateRawDomain();\n    }\n    const userDomain = this._spec.domain;\n    for (let i = 0; i < this._scales.length; i++) {\n      if (userDomain && userDomain.length && i === 0) {\n        // 当数字映射字段存在分组时，只作用于第一个分组的domain，如 xField: ['x', 'type']\n        this._scales[i].domain(userDomain);\n      } else {\n        const data = this.collectData(i);\n        const domain = this.computeBandDomain(data);\n        this._scales[i].domain(domain.sort((a, b) => this._rawDomainIndex[i][a] - this._rawDomainIndex[i][b]));\n      }\n    }\n    this.transformScaleDomain();\n    this.event.emit(ChartEvent.scaleDomainUpdate, { model: this as unknown as IModel });\n    this.event.emit(ChartEvent.scaleUpdate, { model: this as unknown as IModel, value: 'domain' });\n  }\n\n  protected getLabelItems(length: number) {\n    const labelItems: Dict<any>[][] = [];\n    let preData: any[] = [];\n\n    // 只有需要展示多层标签的时候，才需要计算，否则不需要计算\n    (this._spec.showAllGroupLayers ? this._scales : [this._scales[0]]).forEach((scale, index) => {\n      const tickData = this._tickDataMap[index];\n\n      // 因为多层级标签会依赖上一层标签的分组值定位，所以如果上一层标签没有内容，那么就直接获取 bandScale 的 domain()\n      const isTickDataHaveData = tickData?.getLatestData()?.length;\n      const ticks: string[] = isTickDataHaveData\n        ? tickData.getLatestData().map((obj: Datum) => obj.value)\n        : scale.domain();\n      if (ticks && ticks.length) {\n        if (preData && preData.length) {\n          const currentLabelItems: any[] = [];\n          const curData: any[] = [];\n          preData.forEach(value => {\n            ticks.forEach(tick => {\n              const values = array(value).concat(tick);\n              curData.push(values);\n\n              if (isTickDataHaveData) {\n                const axisItem = getAxisItem(tick, this._getNormalizedValue(values, length));\n                currentLabelItems.push(axisItem);\n              }\n            });\n          });\n          if (isTickDataHaveData) {\n            labelItems.push(currentLabelItems.filter((entry: AxisItem) => entry.value >= 0 && entry.value <= 1));\n          }\n          preData = curData;\n        } else {\n          ticks.forEach(tick => {\n            preData.push(tick);\n          });\n          if (isTickDataHaveData) {\n            labelItems.push(\n              tickData\n                .getLatestData()\n                .map((obj: Datum) => {\n                  return getAxisItem(obj.value, this._getNormalizedValue([obj.value], length));\n                })\n                .filter((entry: AxisItem) => entry.value >= 0 && entry.value <= 1)\n            );\n          }\n        }\n      }\n    });\n\n    return labelItems.reverse();\n  }\n\n  protected _updateRawDomain() {\n    // 默认值设置了无效？\n    this._rawDomainIndex = [];\n\n    const userDomain = this._spec.domain;\n    for (let i = 0; i < this._scales.length; i++) {\n      if (userDomain && userDomain.length && i === 0) {\n        // 当数字映射字段存在分组时，只作用于第一个分组的domain，如 xField: ['x', 'type']\n        this._scales[i].domain(userDomain);\n      } else {\n        const data = this.collectData(i, true);\n        const domain = this.computeBandDomain(data);\n        this._rawDomainIndex[i] = {};\n        domain.forEach((d, _i) => (this._rawDomainIndex[i][d] = _i));\n      }\n    }\n  }\n\n  protected _clearRawDomain() {\n    this._rawDomainIndex = [];\n  }\n}\n"]}