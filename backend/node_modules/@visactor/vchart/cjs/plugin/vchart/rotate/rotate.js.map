{"version":3,"sources":["../src/plugin/vchart/rotate/rotate.ts"],"names":[],"mappings":";;;AACA,wDAAoD;AAEpD,0CAAmD;AAEnD,yDAOgC;AAEhC,MAAa,YAAa,SAAQ,wBAAU;IAa1C;QACE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QARlB,SAAI,GAAW,cAAc,CAAC;QAsBvC,0BAAqB,GAAG,CAAC,SAAsB,EAAE,EAAE;YACjD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,MAAM,YAAY,GAChB,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,YAAY;gBAC5C,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC;gBAC7D,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAClE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,qBAAqB,EAAE,CAAC;YACpE,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;YACxB,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;YACvB,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;YAE1B,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC;YAC5C,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,GAAG,YAAY,MAAM,YAAY,IAAI,CAAC;YACxE,MAAM,OAAO,GAAG,GAAG,EAAE;gBACnB,OAAO;oBACL,EAAE;oBACF,EAAE;oBACF,EAAE;oBACF,EAAE;iBACY,CAAC;YACnB,CAAC,CAAC;YAEF,MAAM,qBAAqB,GAAG,GAAG,EAAE;gBAEjC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;oBACjC,OAAO;wBACL,KAAK,EAAE,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW;wBAChE,MAAM,EAAE,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,YAAY;qBACpE,CAAC;iBACH;gBAED,IAAI,sBAAO,IAAI,iBAAiB,IAAI,sBAAO,IAAI,sBAAO,CAAC,eAAe,EAAE;oBAEtE,OAAO,sBAAO,CAAC,eAAe,EAAE,CAAC;iBAClC;gBAED,OAAO,SAAS,CAAC,qBAAqB,EAAE,CAAC;YAC3C,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,GAAG,EAAE;gBACrB,MAAM,aAAa,GAAG,qBAAqB,EAAE,CAAC,KAAK,CAAC;gBACpD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,qBAAqB,EAAE,CAAC;gBACpE,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;gBACvB,MAAM,EAAE,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC;gBAEzC,MAAM,MAAM,GAAG,6BAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACzB,MAAM,OAAO,GAAG,YAAY,GAAG,EAAE,CAAC;gBAClC,MAAM,OAAO,GAAG,YAAY,GAAG,EAAE,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;YACF,IAAA,6CAA8B,EAAC,sBAAO,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAuB,CAAC,CAAC;YAClH,IAAA,6CAA8B,EAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAC3B,SAAS,EACT,OAAO,EACP,sCAAuB,CACxB,CAAC;YACF,IAAI,CAAC,wBAAwB,GAAG,sBAAO,CAAC,gBAAgB,CAAC;YACzD,sBAAO,CAAC,gBAAgB,GAAG,wCAAyB,CAAC;QAKvD,CAAC,CAAC;QACF,oBAAe,GAAG,CAAC,SAAsB,EAAE,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YACnC,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,qBAAqB,EAAE,CAAC;YACpE,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;YACxB,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;YACvB,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;YAE1B,MAAM,OAAO,GAAG,GAAG,EAAE;gBACnB,OAAO;oBACL,EAAE;oBACF,EAAE;oBACF,EAAE;oBACF,EAAE;iBACY,CAAC;YACnB,CAAC,CAAC;YACF,MAAM,SAAS,GAAG,GAAG,EAAE;gBACrB,MAAM,MAAM,GAAG,6BAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACzB,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;YACF,IAAA,6CAA8B,EAAC,sBAAO,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAuB,CAAC,CAAC;YAClH,IAAA,6CAA8B,EAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAC3B,SAAS,EACT,OAAO,EACP,sCAAuB,CACxB,CAAC;YACF,sBAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAC3D,CAAC,CAAC;IApHF,CAAC;IAED,MAAM,CAAC,OAA6B;QAClC,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;QAC3C,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,MAAM,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC1D,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAChD,CAAC;IA2GD,OAAO;QACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;;AA1IH,oCA2IC;AA1IiB,uBAAU,GAAa,QAAQ,CAAC;AAEhC,oBAAO,GAAG,QAAQ,CAAC;AAEnB,iBAAI,GAAW,cAAc,CAAC;AAwIzC,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,IAAA,+BAAoB,EAAC,YAAY,CAAC,CAAC;AACrC,CAAC,CAAC;AAFW,QAAA,oBAAoB,wBAE/B","file":"rotate.js","sourcesContent":["import type { IAABBBounds, Matrix } from '@visactor/vutils';\nimport { BasePlugin } from '../../base/base-plugin';\nimport type { IVChartPlugin, IVChartPluginService } from '../interface';\nimport { registerVChartPlugin } from '../register';\nimport type { IVChart } from '../../../core/interface';\nimport {\n  matrixAllocate,\n  transformPointForCanvas,\n  mapToCanvasPointForCanvas,\n  registerGlobalEventTransformer,\n  registerWindowEventTransformer,\n  vglobal\n} from '@visactor/vrender-core';\n\nexport class RotatePlugin extends BasePlugin implements IVChartPlugin {\n  static readonly pluginType: 'vchart' = 'vchart';\n\n  static readonly specKey = 'rotate';\n\n  static readonly type: string = 'rotatePlugin';\n  readonly type: string = 'rotatePlugin';\n\n  private rotateDegree: number;\n  private matrix: Matrix;\n  private vglobal_mapToCanvasPoint: any; // 保存vrender中vglobal的mapToCanvasPoint原方法\n  private _vchart: IVChart;\n\n  constructor() {\n    super(RotatePlugin.type);\n  }\n\n  onInit(service: IVChartPluginService) {\n    const { globalInstance: vchart } = service;\n    if (!vchart) {\n      return;\n    }\n    this._vchart = vchart;\n    //将函数rotate90WithTransform绑定到table实例上，一般情况下插件不需要将api绑定到table实例上，可以直接自身实现某个api功能\n    vchart.rotate90WithTransform = this.rotate90WithTransform;\n    vchart.cancelTransform = this.cancelTransform;\n  }\n\n  rotate90WithTransform = (rotateDom: HTMLElement) => {\n    this.rotateDegree = 90;\n    const rotateCenter =\n      rotateDom.clientWidth < rotateDom.clientHeight\n        ? Math.max(rotateDom.clientWidth, rotateDom.clientHeight) / 2\n        : Math.min(rotateDom.clientWidth, rotateDom.clientHeight) / 2;\n    const domRect = this._vchart.getContainer().getBoundingClientRect();\n    const x1 = domRect.left;\n    const y1 = domRect.top;\n    const x2 = domRect.right;\n    const y2 = domRect.bottom;\n\n    rotateDom.style.transform = 'rotate(90deg)';\n    rotateDom.style.transformOrigin = `${rotateCenter}px ${rotateCenter}px`;\n    const getRect = () => {\n      return {\n        x1,\n        y1,\n        x2,\n        y2\n      } as IAABBBounds;\n    };\n    // 获取视口尺寸的通用方法\n    const getViewportDimensions = () => {\n      // 浏览器环境\n      if (typeof window !== 'undefined') {\n        return {\n          width: window.innerWidth || document.documentElement.clientWidth,\n          height: window.innerHeight || document.documentElement.clientHeight\n        };\n      }\n      // 如果有 vglobal 上的方法可以使用\n      if (vglobal && 'getViewportSize' in vglobal && vglobal.getViewportSize) {\n        // @ts-ignore\n        return vglobal.getViewportSize();\n      }\n      // 默认使用容器的尺寸\n      return rotateDom.getBoundingClientRect();\n    };\n\n    const getMatrix = () => {\n      const viewPortWidth = getViewportDimensions().width; //获取整个视口的尺寸\n      const domRect = this._vchart.getContainer().getBoundingClientRect(); //TODO 这个地方应该获取窗口的宽高 最好能从vglobal上直接获取\n      const x1 = domRect.top;\n      const y1 = viewPortWidth - domRect.right;\n\n      const matrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n      matrix.translate(x1, y1);\n      const centerX = rotateCenter - x1;\n      const centerY = rotateCenter - y1;\n      matrix.translate(centerX, centerY);\n      matrix.rotate(Math.PI / 2);\n      matrix.translate(-centerX, -centerY);\n      this.matrix = matrix;\n      return matrix;\n    };\n    registerGlobalEventTransformer(vglobal, this._vchart.getContainer(), getMatrix, getRect, transformPointForCanvas);\n    registerWindowEventTransformer(\n      this._vchart.getStage().window,\n      this._vchart.getContainer(),\n      getMatrix,\n      getRect,\n      transformPointForCanvas\n    );\n    this.vglobal_mapToCanvasPoint = vglobal.mapToCanvasPoint;\n    vglobal.mapToCanvasPoint = mapToCanvasPointForCanvas;\n    //transformPointForCanvas和mapToCanvasPointForCanvas时相对应的\n    //具体逻辑在 VRender/packages/vrender-core/src/common/event-transformer.ts中\n    // 可以自定义这两个函数 来修改事件属性，transformPointForCanvas中将坐标转换后存放了_canvasX _canvasY，mapToCanvasPointForCanvas中加以利用\n    // 在VTable的touch文件中，利用到了_canvasX _canvasY 所以如果自定义上面两个函数也需提供_canvasX _canvasY\n  };\n  cancelTransform = (rotateDom: HTMLElement) => {\n    this.rotateDegree = 0;\n    rotateDom.style.transform = 'none';\n    rotateDom.style.transformOrigin = 'none';\n    const domRect = this._vchart.getContainer().getBoundingClientRect();\n    const x1 = domRect.left;\n    const y1 = domRect.top;\n    const x2 = domRect.right;\n    const y2 = domRect.bottom;\n\n    const getRect = () => {\n      return {\n        x1,\n        y1,\n        x2,\n        y2\n      } as IAABBBounds;\n    };\n    const getMatrix = () => {\n      const matrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n      matrix.translate(x1, y1);\n      return matrix;\n    };\n    registerGlobalEventTransformer(vglobal, this._vchart.getContainer(), getMatrix, getRect, transformPointForCanvas);\n    registerWindowEventTransformer(\n      this._vchart.getStage().window,\n      this._vchart.getContainer(),\n      getMatrix,\n      getRect,\n      transformPointForCanvas\n    );\n    vglobal.mapToCanvasPoint = this.vglobal_mapToCanvasPoint;\n  };\n\n  release() {\n    this._vchart = null;\n    this.vglobal_mapToCanvasPoint = null;\n    this.matrix = null;\n    super.release();\n  }\n}\n\nexport const registerRotatePlugin = () => {\n  registerVChartPlugin(RotatePlugin);\n};\n"]}