{"version":3,"sources":["../src/plugin/components/tooltip-handler/base.ts"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["import { DEFAULT_CHART_WIDTH, DEFAULT_CHART_HEIGHT } from '../../../constant/base';\n// eslint-disable-next-line no-duplicate-imports\nimport { DEFAULT_OPTIONS } from './constants';\nimport type { Maybe, IPoint, RenderMode } from '../../../typings';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ITooltipPositionFixedValue, TooltipPositionKeys } from '../../../typings/tooltip/position';\n// eslint-disable-next-line no-duplicate-imports\nimport { isTrueBrowser } from '../../../util/env';\nimport type {\n  TooltipData,\n  ITooltipActual,\n  TooltipActiveType,\n  ITooltipHandler,\n  ITooltipPositionActual,\n  IGlobalTooltipPositionPattern\n} from '../../../typings/tooltip';\n// eslint-disable-next-line no-duplicate-imports\nimport type { TooltipFixedPosition } from '../../../typings/tooltip';\nimport { getScale } from './utils/common';\nimport {\n  getActualTooltipPositionValue,\n  getPositionType,\n  isFixedTooltipPositionPattern,\n  isGlobalTooltipPositionPattern\n} from './utils/position';\nimport type { IGroup } from '@visactor/vrender-core';\nimport type { AABBBounds } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isNumber, isObject, isValidNumber, isValid, isFunction } from '@visactor/vutils';\nimport type { ILayoutModel } from '../../../model/interface';\nimport type { IContainerSize } from '@visactor/vrender-components';\nimport type { IChartOption } from '../../../chart/interface';\nimport type { ITooltipSpec, Tooltip, TooltipHandlerParams } from '../../../component/tooltip';\n// eslint-disable-next-line no-duplicate-imports\nimport { TooltipResult } from '../../../component/tooltip';\nimport type { IComponentPlugin, IComponentPluginService } from '../interface';\nimport { BasePlugin } from '../../base/base-plugin';\nimport { getTooltipPatternValue } from '../../../component/tooltip/utils';\nimport type { IDimensionData, IDimensionInfo } from '../../../event/events/dimension/interface';\nimport type { ITooltipHandlerOptions } from './interface';\nimport type { ICompiler } from '../../../compile/interface/compilable-item';\n\ntype ChangeTooltipFunc = (visible: boolean, params: TooltipHandlerParams, data?: TooltipData) => TooltipResult;\n\ntype ChangeTooltipPositionFunc = (params: TooltipHandlerParams, data: TooltipData) => TooltipResult;\n\n/**\n * The tooltip handler class.\n */\nexport abstract class BaseTooltipHandler extends BasePlugin implements ITooltipHandler, IComponentPlugin {\n  static readonly pluginType: 'component';\n  static readonly specKey = 'tooltip';\n\n  readonly type: string;\n\n  /** 是否可见 */\n  protected _visible = true;\n\n  // protected _style: ITooltipStyle = {};\n\n  protected _option: ITooltipHandlerOptions;\n\n  protected _chartOption: IChartOption;\n\n  protected _env: RenderMode;\n  public get env() {\n    return this._env;\n  }\n\n  protected _component: Tooltip;\n\n  protected _chartContainer: Maybe<HTMLElement>;\n  protected _compiler: ICompiler;\n\n  // tooltip 容器\n  protected _container!: Maybe<IGroup | HTMLElement>;\n\n  protected _isReleased: boolean = false;\n\n  onAdd(service: IComponentPluginService<any>): void {\n    super.onAdd(service);\n    const component = service.component as Tooltip;\n    this._component = component;\n    this._chartOption = component.getOption() as any;\n    this._env = this._chartOption.mode;\n    this._chartContainer = this._chartOption.globalInstance.getContainer();\n    this._compiler = component.getCompiler();\n    this._initFromSpec();\n  }\n\n  showTooltip = (activeType: TooltipActiveType, data: TooltipData, params: TooltipHandlerParams) => {\n    const { changePositionOnly } = params;\n\n    if (changePositionOnly) {\n      return this.changeTooltipPosition(params, data);\n    }\n    return this.changeTooltip(true, params, data);\n  };\n\n  /** 改变 tooltip 内容和位置（不带 throttle 版本），返回是否遇到异常 */\n  protected changeTooltip: ChangeTooltipFunc = (visible: boolean, params: TooltipHandlerParams, data?: TooltipData) => {\n    if (this._isReleased) {\n      return TooltipResult.failed;\n    }\n\n    if (!visible) {\n      /** 关闭 tooltip */\n      this._updateTooltip(false, params);\n      return TooltipResult.success;\n    }\n\n    return this.changeTooltipPosition(params, data);\n  };\n\n  /** 改变 tooltip 位置（不带 throttle 版本），返回是否遇到异常 */\n  protected changeTooltipPosition: ChangeTooltipPositionFunc = (params: TooltipHandlerParams, data: TooltipData) => {\n    if (this._isReleased) {\n      return TooltipResult.failed;\n    }\n\n    const event = params.event as MouseEvent;\n    const { tooltipSpec, activeTooltipSpec, changePositionOnly } = params;\n\n    if (!activeTooltipSpec) {\n      return TooltipResult.failed;\n    }\n\n    const activeType = activeTooltipSpec.activeType;\n\n    /** 用户自定义逻辑 */\n    if (activeTooltipSpec.handler) {\n      return activeTooltipSpec.handler.showTooltip?.(activeType, data, params) ?? TooltipResult.success;\n    }\n\n    /** 默认逻辑 */\n    const pattern = activeTooltipSpec;\n\n    // 计算 tooltip 位置\n    const position = this._getActualTooltipPosition(\n      activeTooltipSpec,\n      params,\n      this._getTooltipBoxSize(activeTooltipSpec, changePositionOnly)\n    );\n    activeTooltipSpec.position = position;\n    const updatePosition = activeTooltipSpec.updatePosition ?? tooltipSpec[activeType]?.updatePosition;\n\n    if (updatePosition) {\n      activeTooltipSpec.position = updatePosition(activeTooltipSpec.position, data, params);\n    }\n\n    // 判断 tooltip 可见性\n    let tooltipVisible = pattern?.visible !== false;\n    if (\n      !data ||\n      event.type === 'pointerout' ||\n      !activeTooltipSpec.visible ||\n      (!activeTooltipSpec.title && !activeTooltipSpec.content)\n    ) {\n      tooltipVisible = false;\n    }\n\n    this._updateTooltip(tooltipVisible, {\n      ...params,\n      changePositionOnly\n    });\n    return TooltipResult.success;\n  };\n\n  hideTooltip(params: TooltipHandlerParams): TooltipResult {\n    return this.changeTooltip(false, params);\n  }\n\n  release(): void {\n    const spec = this._component?.getSpec() ?? {};\n    /** 用户自定义逻辑 */\n    if (spec.handler) {\n      spec.handler.release?.();\n      return;\n    }\n    /** 默认逻辑 */\n    this._removeTooltip();\n\n    this._isReleased = true;\n    this._chartOption = null;\n    this._component = null;\n  }\n\n  /* -----需要子类继承的方法开始----- */\n\n  protected abstract _updateTooltip(visible: boolean, params: TooltipHandlerParams): void;\n  protected abstract _removeTooltip(): void;\n  protected abstract _getTooltipBoxSize(\n    actualTooltip: ITooltipActual,\n    changePositionOnly: boolean\n  ): IContainerSize | undefined;\n\n  /* -----需要子类继承的方法结束----- */\n\n  protected _getDefaultOption(): ITooltipHandlerOptions {\n    const { offset } = this._component.getSpec();\n\n    return offset\n      ? {\n          offsetX: offset.x ?? DEFAULT_OPTIONS.offsetX,\n          offsetY: offset.y ?? DEFAULT_OPTIONS.offsetY\n        }\n      : DEFAULT_OPTIONS;\n  }\n\n  /**\n   * 计算实际的 tooltip 位置\n   */\n  protected _getActualTooltipPosition = (\n    actualTooltip: ITooltipActual,\n    params: TooltipHandlerParams,\n    tooltipBoxSize: IContainerSize | undefined\n  ): ITooltipPositionActual => {\n    const getCartesianCrosshairRect = this._chartOption.getRectByDimensionData;\n    const { tooltipSpec } = params;\n    const invalidPosition = {\n      x: Infinity,\n      y: Infinity\n    };\n    if (!tooltipSpec) {\n      return invalidPosition;\n    }\n    const event = params.event as MouseEvent;\n    const { activeType, data } = actualTooltip;\n    const firstDim =\n      activeType === 'dimension' ? (data as IDimensionInfo[])[0]?.data?.[0] : (data as IDimensionData[])?.[0];\n\n    const { offsetX, offsetY } = this._option;\n\n    const spec = tooltipSpec[activeType];\n    const position = getTooltipPatternValue(spec?.position, data, params);\n    const positionMode =\n      getTooltipPatternValue(spec?.positionMode, data, params) ?? (activeType === 'mark' ? 'mark' : 'pointer');\n    const { width: tooltipBoxWidth = 0, height: tooltipBoxHeight = 0 } = tooltipBoxSize ?? {};\n\n    const isCanvas = tooltipSpec.renderMode === 'canvas';\n    const canvasRect = params?.chart?.getCanvasRect();\n    const canvasWidth = canvasRect?.width ?? DEFAULT_CHART_WIDTH;\n    const canvasHeight = canvasRect?.height ?? DEFAULT_CHART_HEIGHT;\n    let isFixedPosition = false;\n\n    const containerSize = {\n      width: 0,\n      height: 0\n    };\n    let relativePosOffset = { x: 0, y: 0 };\n    let tooltipParentElementRect: IPoint | DOMRect = { x: 0, y: 0 };\n    let chartElementRect: DOMRect;\n    let chartElementScale = 1;\n    let tooltipParentElementScale = 1;\n    const isBrowser = isTrueBrowser(this._env);\n\n    if (isBrowser && !tooltipSpec.confine) {\n      // 只有在 browser 模式下才可以获取到 window 对象\n      containerSize.width = window.innerWidth;\n      containerSize.height = window.innerHeight;\n    } else {\n      containerSize.width = canvasWidth;\n      containerSize.height = canvasHeight;\n    }\n    if (isBrowser && !isCanvas) {\n      const tooltipParentElement = this._getParentElement(tooltipSpec);\n      tooltipParentElementRect = tooltipParentElement?.getBoundingClientRect?.() ?? invalidPosition;\n      const chartElement = (this._compiler.getCanvas() ?? this._chartContainer) as HTMLElement;\n      chartElementRect = chartElement?.getBoundingClientRect();\n      relativePosOffset = {\n        x: chartElementRect.x - tooltipParentElementRect.x,\n        y: chartElementRect.y - tooltipParentElementRect.y\n      };\n      chartElementScale = getScale(chartElement, chartElementRect);\n      tooltipParentElementScale = getScale(tooltipParentElement, tooltipParentElementRect as DOMRect);\n    }\n    const tooltipSizeScale = tooltipParentElementScale / chartElementScale;\n\n    /* 一、计算 left、top、right、bottom */\n\n    const calcPos: { top?: number; bottom?: number; left?: number; right?: number } = {};\n    const pointerFixedPosition: {\n      x: TooltipFixedPosition;\n      y: TooltipFixedPosition;\n    } = { x: position as any, y: position as any };\n    const dimToPos = { x: ['left', 'right'], y: ['top', 'bottom'] };\n\n    const processCartesianFixedPosition = ({ orient, mode, offset }: ITooltipPositionFixedValue, dim: 'x' | 'y') => {\n      let dim1: number;\n      let dim2: number;\n      const model = params.model as ILayoutModel;\n      const startPoint = model?.getLayoutStartPoint();\n      const dimOffset = offset ?? (dim === 'x' ? offsetX : offsetY);\n\n      if (mode === 'mark') {\n        isFixedPosition = true;\n        const markGraphic = params.item;\n        const bounds = markGraphic?.AABBBounds as AABBBounds;\n        if (bounds && startPoint) {\n          dim1 = (dim === 'x' ? bounds.x1 : bounds.y1) + startPoint[dim];\n          dim2 = (dim === 'x' ? bounds.x2 : bounds.y2) + startPoint[dim];\n        }\n      } else if (\n        getCartesianCrosshairRect &&\n        mode === 'crosshair' &&\n        firstDim?.series?.coordinate === 'cartesian' &&\n        firstDim.datum &&\n        firstDim.datum.length\n      ) {\n        isFixedPosition = true;\n        const rect = getCartesianCrosshairRect(firstDim, startPoint);\n        if (rect) {\n          dim1 = rect.start[dim];\n          dim2 = rect.end[dim];\n        }\n      } else {\n        pointerFixedPosition[dim] = orient;\n      }\n\n      if (isFixedPosition) {\n        const posKey = dimToPos[dim][0] as TooltipPositionKeys;\n        const boxSize = dim === 'x' ? tooltipBoxWidth : tooltipBoxHeight;\n        switch (getPositionType(orient, dim)) {\n          case -2:\n            calcPos[posKey] = dim1 - boxSize * tooltipSizeScale - dimOffset;\n            break;\n          case -1.5:\n            calcPos[posKey] = dim1 + dimOffset;\n            break;\n          case 0:\n            calcPos[posKey] = (dim1 + dim2) / 2 - (boxSize * tooltipSizeScale) / 2;\n            break;\n          case -1:\n            calcPos[posKey] = (dim1 + dim2) / 2 - boxSize * tooltipSizeScale - dimOffset;\n            break;\n          case 1:\n            calcPos[posKey] = (dim1 + dim2) / 2 + dimOffset;\n            break;\n          case 1.5:\n            calcPos[posKey] = dim2 - boxSize * tooltipSizeScale - dimOffset;\n            break;\n          case 2:\n            calcPos[posKey] = dim2 + dimOffset;\n            break;\n        }\n      }\n    };\n    const dims = ['x', 'y'] as ('x' | 'y')[];\n    if (isObject(position)) {\n      if (isGlobalTooltipPositionPattern(position)) {\n        const {\n          left: posLeft,\n          right: posRight,\n          top: posTop,\n          bottom: posBottom\n        } = position as IGlobalTooltipPositionPattern;\n        calcPos.left = getActualTooltipPositionValue(posLeft, event);\n        calcPos.top = getActualTooltipPositionValue(posTop, event);\n        calcPos.right = getActualTooltipPositionValue(posRight, event);\n        calcPos.bottom = getActualTooltipPositionValue(posBottom, event);\n      } else if (isFixedTooltipPositionPattern(position)) {\n        dims.forEach(dim => {\n          const dimValue = position[dim];\n          if (isNumber(dimValue) || isFunction(dimValue)) {\n            calcPos[dimToPos[dim][0] as TooltipPositionKeys] = getActualTooltipPositionValue(\n              dimValue as number | ((event: MouseEvent) => number),\n              event\n            );\n          } else {\n            processCartesianFixedPosition(dimValue as ITooltipPositionFixedValue, dim);\n          }\n        });\n      }\n    } else if (isValid(position)) {\n      processCartesianFixedPosition({ orient: position, mode: positionMode } as ITooltipPositionFixedValue, 'x');\n      processCartesianFixedPosition({ orient: position, mode: positionMode } as ITooltipPositionFixedValue, 'y');\n    }\n\n    const result: ITooltipPositionActual = { x: null, y: null };\n\n    dims.forEach(dim => {\n      /* 二、换算成 x 和 y */\n      const boxSize = dim === 'x' ? tooltipBoxWidth : tooltipBoxHeight;\n      const canvasSize = dim === 'x' ? canvasWidth : canvasHeight;\n      const offset = dim === 'x' ? offsetX : offsetY;\n      const posType = getPositionType(pointerFixedPosition[dim], dim);\n      if (isValidNumber(calcPos[dimToPos[dim][0] as TooltipPositionKeys])) {\n        result[dim] = calcPos[dimToPos[dim][0] as TooltipPositionKeys];\n      } else if (isValidNumber(calcPos[dimToPos[dim][1] as TooltipPositionKeys])) {\n        result[dim] = canvasSize - boxSize * tooltipSizeScale - calcPos[dimToPos[dim][1] as TooltipPositionKeys];\n      } else {\n        const value0 = dim === 'x' ? (event as any).canvasX : (event as any).canvasY;\n\n        if (posType > 0) {\n          result[dim] = value0 + offset;\n        } else if (posType === 0) {\n          result[dim] = value0 - (boxSize * tooltipSizeScale) / 2;\n        } else {\n          result[dim] = value0 - boxSize * tooltipSizeScale - offset;\n        }\n      }\n      result[dim] *= chartElementScale;\n\n      if (isBrowser) {\n        result[dim] += relativePosOffset[dim];\n      }\n      result[dim] /= tooltipParentElementScale;\n\n      /* 三、确保tooltip在视区内 */\n      const containerDimSize = dim === 'x' ? containerSize.width : containerSize.height;\n      const leftOrTop = tooltipSpec.confine\n        ? -(tooltipParentElementRect[dim] - (chartElementRect?.[dim] ?? 0) / chartElementScale) /\n          tooltipParentElementScale\n        : -tooltipParentElementRect[dim] / tooltipParentElementScale;\n      const rightOrBottom = containerDimSize / tooltipParentElementScale + leftOrTop - boxSize;\n\n      // 处理左右\n      if (posType !== 2 && result[dim] < leftOrTop) {\n        // 优先检测left\n        if (isFixedPosition) {\n          result[dim] = leftOrTop;\n        } else {\n          if (posType === 0) {\n            // 从居中 挪至 右侧\n            result[dim] += offset + boxSize / 2;\n          } else {\n            // 从居左/左侧 挪至 居右/右侧\n            result[dim] += offset * 2 + boxSize;\n          }\n\n          if (result[dim] > rightOrBottom) {\n            // 位置不超出视区右界\n            result[dim] = rightOrBottom;\n          }\n        }\n      } else if (posType !== -2 && result[dim] > rightOrBottom) {\n        // 优先检测right\n        // 位置不超出视区右界\n        if (isFixedPosition) {\n          result[dim] = rightOrBottom;\n        } else {\n          if (posType === 0) {\n            // 从居中 挪至 左侧\n            result[dim] -= offset + boxSize / 2;\n          } else {\n            // 从居右/右侧 挪至 居左/左侧\n            result[dim] -= offset * 2 + boxSize;\n          }\n\n          if (result[dim] < leftOrTop) {\n            // 位置不超出视区左界\n            result[dim] = leftOrTop;\n          }\n        }\n      }\n    });\n\n    return result;\n  };\n\n  protected _getParentElement(spec: ITooltipSpec): HTMLElement {\n    return spec.parentElement as any;\n  }\n\n  getTooltipContainer() {\n    return this._container;\n  }\n\n  protected _initFromSpec() {\n    this._option = this._getDefaultOption();\n  }\n\n  reInit() {\n    this._initFromSpec();\n  }\n}\n"]}