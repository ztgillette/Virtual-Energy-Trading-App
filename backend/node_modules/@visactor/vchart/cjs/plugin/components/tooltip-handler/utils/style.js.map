{"version":3,"sources":["../src/plugin/components/tooltip-handler/utils/style.ts"],"names":[],"mappings":"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","file":"style.js","sourcesContent":["import { isArray, isNil, isValid, isValidNumber, normalizePadding } from '@visactor/vutils';\nimport type { ITooltipSpec, ITooltipTextTheme, ITooltipTheme } from '../../../../component/tooltip';\nimport { calcLayoutNumber } from '../../../../util/space';\nimport type { ILayoutNumber } from '../../../../typings/layout';\nconst DEFAULT_SHAPE_SPACING = 8;\nconst DEFAULT_KEY_SPACING = 26;\nconst DEFAULT_VALUE_SPACING = 0;\n\nexport const getPixelPropertyStr = (num?: number | number[], defaultStr?: string) => {\n  if (isValid(num)) {\n    if (isArray(num)) {\n      return num.map(n => `${n}px`).join(' ');\n    }\n    return `${num}px`;\n  }\n  return defaultStr ?? 'initial';\n};\n\nexport const getTextStyle = (style: ITooltipTextTheme = {}, textStyle: Partial<CSSStyleDeclaration> = {}) => {\n  if (isValid(style.fontFamily)) {\n    textStyle.fontFamily = style.fontFamily;\n  }\n  const color = style.fill ?? style.fontColor;\n\n  if (isValid(color)) {\n    textStyle.color = color;\n  }\n  if (isValid(style.fontWeight)) {\n    textStyle.fontWeight = style.fontWeight as string;\n  }\n  if (isValid(style.textAlign)) {\n    textStyle.textAlign = style.textAlign as string;\n  }\n  if (isValid(style.fontSize)) {\n    textStyle.fontSize = getPixelPropertyStr(style.fontSize as number);\n  }\n\n  if (isValid(style.maxWidth)) {\n    textStyle.maxWidth = getPixelPropertyStr(style.maxWidth as number);\n  }\n\n  if (style.multiLine || (isValid(style.maxWidth) && style.multiLine !== false)) {\n    textStyle.whiteSpace = 'initial';\n    textStyle.wordBreak = style.wordBreak ?? 'break-word';\n  } else {\n    textStyle.wordBreak = 'normal';\n    textStyle.whiteSpace = 'nowrap';\n  }\n\n  return textStyle;\n};\n\nexport const getLineHeight = (style: ITooltipTextTheme = {}) => {\n  const { lineHeight } = style;\n\n  if (style.fontSize) {\n    return calcLayoutNumber(lineHeight as ILayoutNumber, style.fontSize as number);\n  }\n\n  return 0;\n};\n\nexport const getDomStyle = (spec: ITooltipSpec = {}) => {\n  const { style = {}, enterable, transitionDuration } = spec;\n  const { panel = {}, titleLabel, shape, keyLabel, valueLabel, spaceRow: commonSpaceRow, align } = style;\n  const { panelStyle, panelPadding } = getPanelStyle(panel);\n  const rowStyle: Partial<CSSStyleDeclaration> = {\n    marginTop: '0px',\n    marginBottom: '0px'\n  };\n\n  panelStyle.pointerEvents = enterable ? 'auto' : 'none';\n  if (transitionDuration) {\n    panelStyle.transitionDuration = transitionDuration ? `${transitionDuration}ms` : 'initial';\n    panelStyle.transitionProperty = transitionDuration ? 'transform' : 'initial';\n    panelStyle.transitionTimingFunction = transitionDuration ? 'ease-out' : 'initial';\n  }\n\n  if (isValidNumber(commonSpaceRow)) {\n    rowStyle.marginBottom = `${commonSpaceRow}px`;\n  }\n\n  const shapeStyle: Partial<CSSStyleDeclaration> = {\n    // TODO 默认值优化\n    width: getPixelPropertyStr(shape?.size ?? 8)\n  };\n  const titleStyle = getTextStyle(titleLabel);\n  const keyStyle = getTextStyle(keyLabel);\n  const valueStyle = getTextStyle(valueLabel);\n  const marginKey = align === 'right' ? 'marginLeft' : 'marginRight';\n\n  if (align === 'right') {\n    // rtl\n    panelStyle.direction = 'rtl';\n  }\n  if (isNil(titleStyle.textAlign)) {\n    titleStyle.textAlign = align === 'right' ? 'right' : 'left';\n  }\n  if (isNil(keyStyle.textAlign)) {\n    keyStyle.textAlign = align === 'right' ? 'right' : 'left';\n  }\n  if (isNil(valueStyle.textAlign)) {\n    valueStyle.textAlign = align === 'right' ? 'left' : 'right';\n  }\n  shapeStyle[marginKey] = getPixelPropertyStr(shape.spacing ?? DEFAULT_SHAPE_SPACING);\n  keyStyle[marginKey] = getPixelPropertyStr(keyLabel.spacing ?? DEFAULT_KEY_SPACING);\n  valueStyle[marginKey] = getPixelPropertyStr(valueLabel.spacing ?? DEFAULT_VALUE_SPACING);\n  const lineHeight = Math.max(getLineHeight(valueLabel), getLineHeight(keyLabel));\n\n  // 如果不设置lineHeight，会导致横向不对齐的问题\n  rowStyle.lineHeight = lineHeight > 0 ? `${lineHeight}px` : '20px';\n\n  return {\n    panelPadding,\n    row: rowStyle,\n    panel: panelStyle,\n    title: titleStyle,\n    shape: shapeStyle,\n    key: keyStyle,\n    value: valueStyle\n  };\n};\n\nexport const getPanelStyle = (\n  style: ITooltipTheme['panel']\n): { panelStyle: Partial<CSSStyleDeclaration>; panelPadding?: number[] } => {\n  const { backgroundColor, border, shadow, padding } = style;\n  const panelStyle: Partial<CSSStyleDeclaration> = {\n    borderWidth: `${border?.width ?? 0}px`\n  };\n  let panelPadding: number[] = null;\n\n  if (border?.color) {\n    panelStyle.borderColor = border.color as string;\n  }\n  if (backgroundColor) {\n    panelStyle.backgroundColor = backgroundColor as string;\n  }\n  panelStyle.boxShadow = shadow\n    ? `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`\n    : 'initial';\n  const { radius } = border ?? {};\n\n  if (isValid(radius)) {\n    panelStyle.borderRadius = isValidNumber(radius) ? `${radius}px` : `${radius}`;\n  }\n\n  if (padding) {\n    panelPadding = normalizePadding(padding);\n    panelStyle.padding = getPixelPropertyStr(panelPadding);\n  }\n\n  return { panelStyle, panelPadding };\n};\n\nexport function setStyleToDom(dom: HTMLElement, style: Partial<CSSStyleDeclaration>) {\n  if (!dom || !dom.style || !style) {\n    return;\n  }\n\n  Object.keys(style).forEach(key => {\n    (dom.style as any)[key] = (style as any)[key];\n  });\n}\n"]}