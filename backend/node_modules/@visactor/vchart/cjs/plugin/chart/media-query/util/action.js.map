{"version":3,"sources":["../src/plugin/chart/media-query/util/action.ts"],"names":[],"mappings":";;;AAAA,iEAAoE;AACpE,2CAA8D;AAE9D,qCAAyD;AAIlD,MAAM,uBAAuB,GAAG,CACrC,MAA4B,EAC5B,KAA2B,EAC3B,SAAc,EACd,aAA6B,EACJ,EAAE;IAC3B,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;IACzD,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAA,sCAA6B,EACpF,UAAU,EACV,MAAM,EACN,MAAM,EACN,KAAK,EACL,SAAS,EACT,aAAa,CACd,CAAC;IACF,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE;QAC1C,OAAO;YACL,SAAS;YACT,UAAU,EAAE,KAAK;SAClB,CAAC;KACH;IAED,MAAM,UAAU,GAAG,IAAA,4BAAS,EAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAC5C,MAAM,OAAO,GAAG,IAAA,iBAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACzE,KAAK,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,SAAS,EAAE;QAC1C,IAAI,OAAO,EAAE;YACX,OAAO;gBACL,SAAS,EAAE,IAAA,4BAAS,EAAC,UAAU,EAAE,OAAO,CAAC;gBACzC,UAAU,EAAE,IAAI;aACjB,CAAC;SACH;QACD,MAAM,SAAS,GAAG,IAAA,4BAAS,EAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/C,IAAA,8BAAW,EAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9C;IAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,EAAE;QACzC,MAAM,eAAe,mBACnB,IAAI,IACD,OAAO,CACX,CAAC;QACF,IAAI,IAAA,cAAO,EAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE;YAChC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3C;aAAM,IAAI,IAAA,YAAK,EAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE;YACrC,IAAI,SAAS,KAAK,WAAW,EAAE;gBAC7B,UAAU,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC;aACvC;iBAAM;gBACL,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;aACzC;SACF;aAAM;YACL,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,eAAe,CAAC,CAAC;SAC9D;KACF;IACD,OAAO;QACL,SAAS,EAAE,UAAU;QACrB,UAAU,EAAE,IAAI;KACjB,CAAC;AACJ,CAAC,CAAC;AAxDW,QAAA,uBAAuB,2BAwDlC","file":"action.js","sourcesContent":["import { setProperty, mergeSpec } from '@visactor/vutils-extension';\nimport { isArray, isFunction, isNil } from '../../../../util';\nimport type { IMediaQueryAction, IMediaQueryCondition, IMediaQueryActionResult } from '../interface';\nimport { executeMediaQueryActionFilter } from './filter';\nimport type { IChartSpecInfo } from '../../../../chart/interface';\n\n/** 执行媒体查询对应的动作 */\nexport const executeMediaQueryAction = <T extends Record<string, unknown>>(\n  action: IMediaQueryAction<T>,\n  query: IMediaQueryCondition,\n  chartSpec: any,\n  chartSpecInfo: IChartSpecInfo\n): IMediaQueryActionResult => {\n  const { spec, filter, filterType, forceAppend } = action;\n  const { isChart, modelType, specKey, type, modelInfo } = executeMediaQueryActionFilter<T>(\n    filterType,\n    filter,\n    action,\n    query,\n    chartSpec,\n    chartSpecInfo\n  );\n  if (modelInfo.length === 0 && !forceAppend) {\n    return {\n      chartSpec,\n      hasChanged: false\n    };\n  }\n  // 修改现有图表元素的 spec\n  const targetSpec = mergeSpec({}, chartSpec);\n  const newSpec = isFunction(spec) ? spec(modelInfo, action, query) : spec;\n  for (const { spec, specPath } of modelInfo) {\n    if (isChart) {\n      return {\n        chartSpec: mergeSpec(targetSpec, newSpec),\n        hasChanged: true\n      };\n    }\n    const modelSpec = mergeSpec({}, spec, newSpec);\n    setProperty(targetSpec, specPath, modelSpec);\n  }\n  // 如果没有匹配到图表元素，且 forceAppend 为 true，则添加新元素\n  if (modelInfo.length === 0 && forceAppend) {\n    const newSpecToAppend = {\n      type,\n      ...newSpec\n    };\n    if (isArray(targetSpec[specKey])) {\n      targetSpec[specKey].push(newSpecToAppend);\n    } else if (isNil(targetSpec[specKey])) {\n      if (modelType === 'component') {\n        targetSpec[specKey] = newSpecToAppend;\n      } else {\n        targetSpec[specKey] = [newSpecToAppend];\n      }\n    } else {\n      targetSpec[specKey] = [targetSpec[specKey], newSpecToAppend];\n    }\n  }\n  return {\n    chartSpec: targetSpec,\n    hasChanged: true\n  };\n};\n"]}