{"version":3,"sources":["../src/plugin/chart/formatter/formatter.ts"],"names":[],"mappings":"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","file":"formatter.js","sourcesContent":["import { isFunction, isArray, TimeUtil, NumberUtil, numberSpecifierReg } from '@visactor/vutils';\n\nimport { BasePlugin } from '../../base/base-plugin';\n\nimport type { IChartPlugin, IChartPluginService } from '../interface';\nimport { Factory } from '../../../core/factory';\nimport { registerChartPlugin } from '../register';\n\nconst bracketReg = /\\{([^}]+)\\}/;\nconst bracketGReg = /\\{([^}]+)\\}/g;\n\nconst semicolonReg = /:/;\n\nexport class FormatterPlugin extends BasePlugin implements IChartPlugin {\n  static readonly pluginType: 'chart' = 'chart';\n\n  static readonly specKey = 'formatter';\n\n  static readonly type: string = 'formatterPlugin';\n  readonly type: string = 'formatterPlugin';\n\n  private readonly _timeModeFormat = {\n    utc: TimeUtil.getInstance().timeUTCFormat,\n    local: TimeUtil.getInstance().timeFormat\n  };\n\n  protected _spec: {\n    timeMode: 'utc' | 'local';\n    customFormatter: (specifier: string, text: string | number | string[] | number[], datum: any) => string | string[];\n    numericFormatter: (specifier: string, text: string | number | string[] | number[]) => string;\n    timeFormatter: (specifier: string, text: string | number | string[] | number[]) => string;\n  };\n\n  protected _formatter = this._format;\n\n  private _timeFormatter = this._timeModeFormat.local;\n  private _numericFormatter = NumberUtil.getInstance().format;\n\n  // used for optimize performance，avoiding repeatedly parsing same format template string,\n  private _numericSpecifier = NumberUtil.getInstance().formatter;\n  private _numericFormatterCache = new Map<string, any>();\n  private _isNumericFormatterCache = new Map<string, boolean>();\n\n  constructor() {\n    super(FormatterPlugin.type);\n  }\n\n  onInit(service: IChartPluginService, chartSpec: any) {\n    const { globalInstance } = service;\n    if (!globalInstance) {\n      return;\n    }\n    this._spec = chartSpec?.[FormatterPlugin.specKey] ?? {};\n    const { timeMode, customFormatter, numericFormatter, timeFormatter } = this._spec;\n\n    if (isFunction(customFormatter)) {\n      this._formatter = customFormatter;\n    } else {\n      this._formatter = this._format.bind(this);\n      if (isFunction(timeFormatter)) {\n        this._timeFormatter = timeFormatter;\n      } else if (timeMode && this._timeModeFormat[timeMode]) {\n        this._timeFormatter = this._timeModeFormat[timeMode];\n      }\n\n      if (numericFormatter) {\n        this._numericFormatter = numericFormatter;\n        this._numericSpecifier = null;\n        this._numericFormatterCache = null;\n      }\n    }\n    Factory.registerFormatter(this._formatter);\n  }\n\n  protected _format(text: string | number | string[] | number[], datum: any, formatter: string | string[]) {\n    if (isArray(text)) {\n      return text.map((t, i) => {\n        const f = isArray(formatter) ? formatter[i] : formatter;\n        return f ? this._formatSingleLine(t, datum, f) : t;\n      });\n    }\n\n    if (isArray(formatter)) {\n      return formatter.map(f => this._formatSingleLine(text, datum, f));\n    }\n    return this._formatSingleLine(text, datum, formatter);\n  }\n\n  protected _formatSingleLine(text: string | number, datum: any, formatter: string) {\n    let isTemplate;\n    if (this._isNumericFormatterCache) {\n      if (this._isNumericFormatterCache.get(formatter)) {\n        isTemplate = this._isNumericFormatterCache.get(formatter);\n      } else {\n        isTemplate = bracketReg.test(formatter);\n        this._isNumericFormatterCache.set(formatter, isTemplate);\n      }\n    }\n    if (isTemplate) {\n      const result = formatter.replace(bracketGReg, (match, key) => {\n        const hasFormatter = semicolonReg.test(key);\n        if (!hasFormatter) {\n          const value = datum[key.trim()];\n          return typeof value !== 'undefined' ? value : match;\n        }\n        const parts = key.split(':');\n        const value = datum[parts.shift()];\n        const valueFormatter = parts.join(':');\n        return this._formatSingleText(value, valueFormatter);\n      });\n      return result;\n    }\n    return this._formatSingleText(text, formatter);\n  }\n\n  protected _formatSingleText(text: string | number, formatter: string): string | number {\n    const isNumeric = numberSpecifierReg.test(formatter);\n    if (isNumeric && this._numericFormatter) {\n      // 内置的 formatter 逻辑，可以进行缓存性能优化\n      let numericFormat;\n      if (this._numericFormatterCache && this._numericSpecifier) {\n        if (this._numericFormatterCache.get(formatter)) {\n          numericFormat = this._numericFormatterCache.get(formatter);\n        } else {\n          numericFormat = this._numericSpecifier(formatter) as any;\n          this._numericFormatterCache.set(formatter, numericFormat);\n        }\n        return numericFormat(Number(text));\n      }\n      return this._numericFormatter(formatter, Number(text));\n    } else if (formatter.includes('%') && this._timeFormatter) {\n      return this._timeFormatter(formatter, text);\n    }\n    return text;\n  }\n\n  release() {\n    super.release();\n    this._format = null;\n    this._timeFormatter = null;\n    this._numericFormatter = null;\n    this._numericSpecifier = null;\n    this._numericFormatterCache = null;\n    this._isNumericFormatterCache = null;\n  }\n}\n\nexport const registerFormatPlugin = () => {\n  registerChartPlugin(FormatterPlugin);\n};\n"]}