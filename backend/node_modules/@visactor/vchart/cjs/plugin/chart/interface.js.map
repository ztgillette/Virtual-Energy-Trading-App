{"version":3,"sources":["../src/plugin/chart/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IChartSpecInfo } from '../../chart/interface';\nimport type { VChartRenderActionSource, IVChart } from '../../core/interface';\nimport type { IBasePlugin, IBasePluginService, MaybePromise } from '../base/interface';\n\nexport interface IChartPlugin<T extends IChartPluginService = any> extends IBasePlugin<T> {\n  specKey?: string;\n  onInit?: (service: T, chartSpec: any) => MaybePromise<void>;\n  onBeforeResize?: (service: T, width: number, height: number) => MaybePromise<void>;\n  onAfterChartSpecTransform?: (\n    service: T,\n    chartSpec: any,\n    actionSource: VChartRenderActionSource\n  ) => MaybePromise<void>;\n  onAfterModelSpecTransform?: (\n    service: T,\n    chartSpec: any,\n    chartSpecInfo: IChartSpecInfo,\n    actionSource: VChartRenderActionSource\n  ) => MaybePromise<void>;\n  onBeforeInitChart?: (service: T, chartSpec: any, actionSource: VChartRenderActionSource) => MaybePromise<void>;\n}\n\nexport interface IChartPluginConstructor {\n  readonly pluginType: 'chart';\n  readonly specKey?: string;\n  readonly type: string;\n  new (): IChartPlugin;\n}\n\nexport interface IChartPluginService<T extends IChartPlugin = any> extends IBasePluginService<T> {\n  globalInstance: IVChart;\n  onInit?: (chartSpec: any) => MaybePromise<void>;\n  onBeforeResize?: (width: number, height: number) => MaybePromise<void>;\n  onAfterChartSpecTransform?: (chartSpec: any, actionSource: VChartRenderActionSource) => MaybePromise<void>;\n  onAfterModelSpecTransform?: (\n    chartSpec: any,\n    chartSpecInfo: IChartSpecInfo,\n    actionSource: VChartRenderActionSource\n  ) => MaybePromise<void>;\n  onBeforeInitChart?: (chartSpec: any, actionSource: VChartRenderActionSource) => MaybePromise<void>;\n}\n"]}