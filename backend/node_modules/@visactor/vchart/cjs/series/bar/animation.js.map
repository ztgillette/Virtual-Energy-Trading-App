{"version":3,"sources":["../src/series/bar/animation.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAgB7C,SAAS,aAAa,CAAC,SAA8B,EAAE,SAAS,GAAG,IAAI;IACrE,OAAO,CAAC,KAAY,EAAE,OAAiB,EAAE,MAAW,EAAE,EAAE;QACtD,MAAM,KAAK,GAAG,SAAS,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;QACvF,MAAM,IAAI,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,KAAK,CAAC,CAAC;QAC5B,IAAI,SAAS,CAAC,SAAS,KAAK,UAAU,EAAE;YACtC,OAAO;gBACL,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS;gBACrD,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU;aAC3C,CAAC;SACH;QACD,OAAO;YACL,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK;YACjD,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU;SAC3C,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AACM,MAAM,SAAS,GAAG,CAAC,MAA2B,EAAE,YAAqB,IAAI,EAAwB,EAAE;IACxG,OAAO;QACL,IAAI,EAAE,MAAM,CAAC,SAAS,iBAAyB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc;QAChF,OAAO,EAAE,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC;KAC1C,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,SAAS,aAKpB;AAEK,MAAM,UAAU,GAAG,CAAC,MAA2B,EAAE,YAAqB,IAAI,EAAwB,EAAE;IACzG,OAAO;QACL,IAAI,EAAE,MAAM,CAAC,SAAS,iBAAyB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe;QAClF,OAAO,EAAE,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC;KAC1C,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,UAAU,cAKrB;AAEF,MAAM,aAAa,GAAyB;IAC1C,IAAI,EAAE,QAAQ;CACf,CAAC;AAEF,MAAM,cAAc,GAAyB;IAC3C,IAAI,EAAE,cAAc;CACrB,CAAC;AAEF,SAAgB,kBAAkB,CAChC,MAA2B,EAC3B,MAAiC;IAEjC,IAAI,MAAM,KAAK,KAAK,EAAE;QACpB,OAAO,EAAE,CAAC;KACX;IACD,QAAQ,MAAM,EAAE;QACd,KAAK,QAAQ;YACX,OAAO,aAAa,CAAC;QACvB,KAAK,SAAS;YACZ,OAAO,cAAc,CAAC;QACxB;YACE,OAAO,IAAA,iBAAS,EAAC,MAAM,CAAC,CAAC;KAC5B;AACH,CAAC;AAfD,gDAeC;AAEM,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,iBAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC,MAA2B,EAAE,MAAuB,EAAE,EAAE;QACxF,OAAO;YACL,MAAM,EAAE,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC;YAC1C,KAAK,EAAE,IAAA,iBAAS,EAAC,MAAM,EAAE,KAAK,CAAC;YAC/B,IAAI,EAAE,IAAA,kBAAU,EAAC,MAAM,EAAE,KAAK,CAAC;YAC/B,SAAS,EAAE,IAAA,kBAAU,EAAC,MAAM,CAAC;SAC9B,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AATW,QAAA,oBAAoB,wBAS/B","file":"animation.js","sourcesContent":["import { Factory } from '../../core/factory';\nimport { Direction } from '../../typings/space';\n// eslint-disable-next-line no-duplicate-imports\nimport type { Datum } from '../../typings';\nimport type { BarAppearPreset, IBarAnimationParams } from './interface';\nimport type { IAnimationTypeConfig } from '../../animation/interface';\nimport type { IGraphic } from '@visactor/vrender-core';\n\n/**\n * grow生长option\n * 在appear时，所有柱子一起从同一个位置生长，需要growXXXOverall效果；\n * 在enter时，柱子应该从自身位置生长；\n * @param params\n * @param isOverall\n * @returns\n */\nfunction barGrowOption(barParams: IBarAnimationParams, isOverall = true) {\n  return (datum: Datum, element: IGraphic, params: any) => {\n    const field = barParams.direction === 'vertical' ? barParams.yField : barParams.xField;\n    const data = datum?.[field];\n    if (barParams.direction === 'vertical') {\n      return {\n        overall: isOverall ? barParams.growFrom() : isOverall,\n        orient: data > 0 ? 'negative' : 'positive'\n      };\n    }\n    return {\n      overall: isOverall ? barParams.growFrom() : false,\n      orient: data > 0 ? 'positive' : 'negative'\n    };\n  };\n}\nexport const barGrowIn = (params: IBarAnimationParams, isOverall: boolean = true): IAnimationTypeConfig => {\n  return {\n    type: params.direction === Direction.horizontal ? 'growWidthIn' : 'growHeightIn',\n    options: barGrowOption(params, isOverall)\n  };\n};\n\nexport const barGrowOut = (params: IBarAnimationParams, isOverall: boolean = true): IAnimationTypeConfig => {\n  return {\n    type: params.direction === Direction.horizontal ? 'growWidthOut' : 'growHeightOut',\n    options: barGrowOption(params, isOverall)\n  };\n};\n\nconst Appear_FadeIn: IAnimationTypeConfig = {\n  type: 'fadeIn'\n};\n\nconst Appear_ScaleIn: IAnimationTypeConfig = {\n  type: 'growCenterIn'\n};\n\nexport function barPresetAnimation(\n  params: IBarAnimationParams,\n  preset: BarAppearPreset | boolean\n): IAnimationTypeConfig {\n  if (preset === false) {\n    return {};\n  }\n  switch (preset) {\n    case 'fadeIn':\n      return Appear_FadeIn;\n    case 'scaleIn':\n      return Appear_ScaleIn;\n    default:\n      return barGrowIn(params);\n  }\n}\n\nexport const registerBarAnimation = () => {\n  Factory.registerAnimation('bar', (params: IBarAnimationParams, preset: BarAppearPreset) => {\n    return {\n      appear: barPresetAnimation(params, preset),\n      enter: barGrowIn(params, false),\n      exit: barGrowOut(params, false),\n      disappear: barGrowOut(params)\n    };\n  });\n};\n"]}