{"version":3,"sources":["../src/series/polar/progress-like/progress-like.ts"],"names":[],"mappings":"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","file":"progress-like.js","sourcesContent":["import { degreeToRadian, isNil, isValid, isValidNumber, binaryFuzzySearch } from '@visactor/vutils';\nimport { SEGMENT_FIELD_START, STACK_FIELD_END, STACK_FIELD_START } from '../../../constant/data';\nimport { POLAR_END_RADIAN, POLAR_START_RADIAN } from '../../../constant/polar';\nimport { AttributeLevel } from '../../../constant/attribute';\nimport type { IGroupMark, IMarkStyle } from '../../../mark/interface';\nimport type { ConvertToMarkStyleSpec, Datum, ICommonSpec } from '../../../typings';\nimport { valueInScaleRange } from '../../../util/scale';\nimport { PolarSeries } from '../polar';\nimport type { IContinuousTickData, IProgressLikeSeriesSpec } from './interface';\nimport type { IPolarAxis, IPolarAxisSpec } from '../../../component/axis';\nimport { createArc, createRect } from '@visactor/vrender-core';\nimport type { SeriesMarkMap } from '../../interface';\nimport { progressLikeSeriesMark } from './constant';\n\nexport abstract class ProgressLikeSeries<T extends IProgressLikeSeriesSpec> extends PolarSeries<T> {\n  static readonly mark: SeriesMarkMap = progressLikeSeriesMark;\n\n  protected _startAngle: number;\n  protected _endAngle: number;\n\n  protected _arcGroupMark: IGroupMark | null = null;\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    const chartSpec = this._option.globalInstance.getChart()?.getSpec() as any;\n    const startAngle = this._spec.startAngle ?? chartSpec?.startAngle;\n    this._startAngle = isValid(startAngle) ? degreeToRadian(startAngle) : POLAR_START_RADIAN;\n    const endAngle = this._spec.endAngle ?? chartSpec?.endAngle;\n    this._endAngle = isValid(endAngle) ? degreeToRadian(endAngle) : POLAR_END_RADIAN;\n\n    // 值信息给角度\n    this.setAngleField(this._spec.valueField || this._spec.angleField);\n    // 分类信息给半径\n    this.setRadiusField(this._spec.categoryField || this._spec.radiusField);\n\n    this._specAngleField = this._angleField.slice();\n    this._specRadiusField = this._radiusField.slice();\n  }\n\n  getStackGroupFields(): string[] {\n    return this._radiusField;\n  }\n\n  getStackValueField() {\n    return this._angleField?.[0];\n  }\n\n  getGroupFields() {\n    return this._angleField;\n  }\n\n  /** 重载 mark style 赋值前转换逻辑 */\n  protected _convertMarkStyle<T extends ICommonSpec = ICommonSpec>(\n    style: Partial<IMarkStyle<T> | ConvertToMarkStyleSpec<T>>\n  ): Partial<IMarkStyle<T> | ConvertToMarkStyleSpec<T>> {\n    const newStyle = super._convertMarkStyle(style) as unknown as any;\n\n    const fillKey = 'fill';\n    if (newStyle[fillKey]) {\n      const value = style[fillKey] as unknown as any;\n      // 为环形渐变色自动加 startAngle 和 endAngle\n      if (value?.gradient === 'conical' && !isValid(value?.startAngle) && !isValid(value?.endAngle)) {\n        newStyle[fillKey] = {\n          ...value,\n          startAngle: this._startAngle,\n          endAngle: this._endAngle\n        };\n      }\n    }\n\n    return newStyle;\n  }\n\n  protected _getAngleValueStart = (datum: Datum) => {\n    const axis = this._getAngleAxis();\n    const { tickMask } = this._spec;\n\n    if (tickMask?.forceAlign && this._isTickMaskVisible(axis)) {\n      const field = this.getStack() ? STACK_FIELD_START : SEGMENT_FIELD_START;\n      const originValue = datum[field];\n      const subTickData = this._getAngleAxisSubTickData(axis);\n      const step = subTickData[1].value - subTickData[0].value;\n      const offsetAngle = degreeToRadian(tickMask.offsetAngle);\n\n      let pos: number | undefined;\n      if (isValid(originValue)) {\n        // 找到第一个大于等于数据值的 tick\n        const index = binaryFuzzySearch(subTickData, tick => tick.value - originValue);\n        // 对齐\n        const targetIndex =\n          index >= subTickData.length || originValue > subTickData[index].value - step / 2\n            ? Math.min(index, subTickData.length - 1)\n            : index > 0\n            ? index - 1\n            : undefined;\n        if (targetIndex !== undefined) {\n          pos = this.angleAxisHelper.dataToPosition([\n            subTickData[targetIndex].value - step / 2 // 确保占满整个 tick mask\n          ]);\n        }\n      }\n      if (isNil(pos)) {\n        pos = this.angleAxisHelper.dataToPosition(\n          [subTickData[0].value - step / 2] // 确保空出整个 tick mask\n        );\n      }\n      return pos + offsetAngle;\n    }\n    return this._getAngleValueStartWithoutMask(datum);\n  };\n\n  protected _getAngleValueEnd = (datum: Datum) => {\n    const axis = this._getAngleAxis();\n    const { tickMask } = this._spec;\n\n    if (tickMask?.forceAlign && this._isTickMaskVisible(axis)) {\n      const field = this.getStack() ? STACK_FIELD_END : this._angleField[0];\n      const originValue = datum[field];\n      const subTickData = this._getAngleAxisSubTickData(axis);\n      const step = subTickData[1].value - subTickData[0].value;\n      const offsetAngle = degreeToRadian(tickMask.offsetAngle);\n\n      // 找到第一个大于等于数据值的 tick\n      const index = binaryFuzzySearch(subTickData, tick => tick.value - originValue);\n      // 对齐\n      const targetIndex =\n        index >= subTickData.length || originValue > subTickData[index].value - step / 2\n          ? Math.min(index, subTickData.length - 1)\n          : index > 0\n          ? index - 1\n          : undefined;\n      let pos: number;\n      if (targetIndex !== undefined) {\n        pos = this.angleAxisHelper.dataToPosition([\n          subTickData[targetIndex].value + step / 2 // 确保占满整个 tick mask\n        ]);\n      } else {\n        pos = this.angleAxisHelper.dataToPosition([\n          subTickData[0].value - step / 2 // 确保空出整个 tick mask\n        ]);\n      }\n      return pos + offsetAngle;\n    }\n    return this._getAngleValueEndWithoutMask(datum);\n  };\n\n  protected _getAngleValueStartWithoutMask(datum: Datum) {\n    if (this.getStack()) {\n      const value = valueInScaleRange(\n        this.angleAxisHelper.dataToPosition([datum[STACK_FIELD_START]]),\n        this.angleAxisHelper.getScale(0)\n      );\n      if (isValidNumber(value)) {\n        return value;\n      }\n    }\n    return this._startAngle;\n  }\n\n  protected _getAngleValueEndWithoutMask(datum: Datum) {\n    if (this.getStack()) {\n      const value = valueInScaleRange(\n        this.angleAxisHelper.dataToPosition([datum[STACK_FIELD_END]]),\n        this.angleAxisHelper.getScale(0)\n      );\n      if (isValidNumber(value)) {\n        return value;\n      }\n    }\n    const angle = this.angleAxisHelper.dataToPosition([datum[this._angleField[0]]]);\n    return this._spec.clamp ? valueInScaleRange(angle, this.angleAxisHelper.getScale(0)) : angle;\n  }\n\n  getDimensionField(): string[] {\n    return this._specRadiusField;\n  }\n\n  getMeasureField(): string[] {\n    return this._specAngleField;\n  }\n\n  initMark(): void {\n    this._initArcGroupMark();\n  }\n\n  initMarkStyle(): void {\n    this._initArcGroupMarkStyle();\n  }\n\n  protected _initArcGroupMark() {\n    // FIXME: disable group mark layout to prevent reevaluate after layout end\n    this._arcGroupMark = this._createMark(ProgressLikeSeries.mark.group, {\n      skipBeforeLayouted: false\n    }) as IGroupMark;\n    return this._arcGroupMark;\n  }\n\n  protected _initArcGroupMarkStyle() {\n    const groupMark = this._arcGroupMark;\n    groupMark.created();\n    this.setMarkStyle(\n      groupMark,\n      {\n        x: 0,\n        y: 0\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n    this._arcGroupMark.setMarkConfig({\n      interactive: false,\n      zIndex: this.layoutZIndex,\n      clip: true,\n      clipPath: () => {\n        const axis = this._getAngleAxis();\n        const { x, y } = this.angleAxisHelper.center();\n        const radius = this._computeLayoutRadius();\n        if (this._isTickMaskVisible(axis)) {\n          const { tickMask } = this._spec;\n          const { angle, offsetAngle, style = {} } = tickMask;\n          const subTickData = this._getAngleAxisSubTickData(axis);\n          const markStyle = style as any;\n          return subTickData.map(({ value }) => {\n            const pos = this.angleAxisHelper.dataToPosition([value]) + degreeToRadian(offsetAngle);\n            const angleUnit = degreeToRadian(angle) / 2;\n            return createArc({\n              ...markStyle,\n              x,\n              y,\n              startAngle: pos - angleUnit,\n              endAngle: pos + angleUnit,\n              innerRadius: radius * this._innerRadius,\n              outerRadius: radius * this._outerRadius,\n              fill: true\n            });\n          });\n        }\n        const { width, height } = this.getLayoutRect();\n        return [\n          createRect({\n            width,\n            height,\n            fill: true\n          })\n        ];\n      }\n    });\n  }\n\n  protected _getAngleAxis() {\n    if (!this.angleAxisHelper) {\n      return undefined;\n    }\n    const angleAxisId = this.angleAxisHelper.getAxisId();\n    const angleAxis = this._option\n      .getChart()\n      .getAllComponents()\n      .find(component => component.id === angleAxisId) as IPolarAxis;\n    return angleAxis;\n  }\n\n  protected _getAngleAxisTickData(angleAxis?: IPolarAxis): IContinuousTickData[] {\n    const tickData = angleAxis?.getTickData()?.getLatestData();\n    return tickData;\n  }\n\n  protected _isTickMaskVisible(angleAxis?: IPolarAxis) {\n    const tickData = this._getAngleAxisTickData(angleAxis);\n    const { tickMask } = this._spec;\n    return tickMask && tickMask.visible !== false && tickData?.length > 1;\n  }\n\n  protected _getAngleAxisSubTickData(angleAxis: IPolarAxis) {\n    const tickData = this._getAngleAxisTickData(angleAxis);\n    // TODO: 这块照搬了 vrender-components 的计算方法，需要抽出这块的公用逻辑\n    const subTickData: IContinuousTickData[] = [];\n    const { subTick = {}, tick = {} } = (angleAxis?.getSpec() ?? {}) as IPolarAxisSpec;\n    const { tickCount: subTickCount = 4 } = subTick;\n    const { alignWithLabel } = tick;\n    // 刻度线的数量大于 2 时，才绘制子刻度\n    if (tickData?.length >= 2) {\n      const tickSegment = tickData[1].value - tickData[0].value;\n      for (let i = 0; i < tickData.length - 1; i++) {\n        const pre = tickData[i];\n        const next = tickData[i + 1];\n        subTickData.push(pre);\n        for (let j = 0; j < subTickCount; j++) {\n          const percent = (j + 1) / (subTickCount + 1);\n          const value =\n            (1 - percent) * pre.value + percent * (next ? next.value : alignWithLabel ? 1 : pre.value + tickSegment);\n          subTickData.push({\n            value\n          });\n        }\n      }\n      subTickData.push(tickData[tickData.length - 1]);\n      return subTickData;\n    }\n    return tickData;\n  }\n}\n"]}