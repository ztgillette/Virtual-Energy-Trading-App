{"version":3,"sources":["../src/series/rose/rose.ts"],"names":[],"mappings":"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","file":"rose.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { Datum } from '../../typings';\nimport { valueInScaleRange } from '../../util/scale';\nimport { animationConfig, shouldMarkDoMorph, userAnimationConfig } from '../../animation/utils';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport { registerRoseAnimation } from './animation';\nimport type { IRoseAnimationParams, IRoseSeriesSpec, RoseAppearPreset } from './interface';\nimport { RoseLikeSeries } from '../polar/rose-like';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { registerArcMark } from '../../mark/arc';\nimport { roseSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport type { IArcMark, ILabelMark, IMark, ITextMark } from '../../mark/interface';\nimport { RoseSeriesSpecTransformer } from './rose-transformer';\nimport { registerPolarBandAxis, registerPolarLinearAxis } from '../../component/axis/polar';\nimport { rose } from '../../theme/builtin/common/series/rose';\n\nexport const DefaultBandWidth = 0.5;\n\nexport class RoseSeries<T extends IRoseSeriesSpec = IRoseSeriesSpec> extends RoseLikeSeries<T> {\n  static readonly type: string = SeriesTypeEnum.rose;\n  type = SeriesTypeEnum.rose;\n\n  static readonly mark: SeriesMarkMap = roseSeriesMark;\n  static readonly builtInTheme = { rose };\n  static readonly transformerConstructor = RoseSeriesSpecTransformer as any;\n  readonly transformerConstructor = RoseSeriesSpecTransformer;\n\n  private _roseMark: IArcMark | null = null;\n  protected _labelMark: ITextMark | null = null;\n\n  initMark(): void {\n    this.initRoseMark();\n  }\n\n  initMarkStyle(): void {\n    this.initRoseMarkStyle();\n  }\n\n  protected _buildMarkAttributeContext() {\n    super._buildMarkAttributeContext();\n    // center\n    this._markAttributeContext.getCenter = () => {\n      return {\n        x: () => this.angleAxisHelper.center().x,\n        y: () => this.angleAxisHelper.center().y\n      };\n    };\n    // angle scale\n    this._markAttributeContext.startAngleScale = (datum: Datum) => this.startAngleScale(datum);\n    this._markAttributeContext.endAngleScale = (datum: Datum) => this.endAngleScale(datum);\n  }\n\n  private initRoseMark() {\n    this._roseMark = this._createMark(\n      RoseSeries.mark.rose,\n      {\n        groupKey: this._seriesField,\n        isSeriesMark: true\n      },\n      {\n        morph: shouldMarkDoMorph(this._spec, RoseSeries.mark.rose.name),\n        morphElementKey: this.getDimensionField()[0]\n      }\n    ) as IArcMark;\n  }\n\n  private getRoseAngle() {\n    const angleBandWidth =\n      this.angleAxisHelper.getBandwidth?.(this._groups ? this._groups.fields.length - 1 : 0) ?? DefaultBandWidth;\n    return angleBandWidth;\n  }\n\n  private startAngleScale(datum: Datum) {\n    return (\n      this.angleAxisHelper.dataToPosition(this.getDatumPositionValues(datum, this.getGroupFields())) -\n      this.angleAxisHelper.getBandwidth(this.getGroupFields().length - 1) * 0.5\n    );\n  }\n\n  private endAngleScale(datum: Datum) {\n    return (\n      this.angleAxisHelper.dataToPosition(this.getDatumPositionValues(datum, this.getGroupFields())) +\n      this.getRoseAngle() -\n      this.angleAxisHelper.getBandwidth(this.getGroupFields().length - 1) * 0.5\n    );\n  }\n\n  private initRoseMarkStyle() {\n    const roseMark = this._roseMark;\n    if (roseMark) {\n      this.setMarkStyle(roseMark, {\n        x: () => this.angleAxisHelper.center().x,\n        y: () => this.angleAxisHelper.center().y,\n        startAngle: (datum: Datum) => this.startAngleScale(datum),\n        endAngle: (datum: Datum) => this.endAngleScale(datum),\n        fill: this.getColorAttribute(),\n        outerRadius: (datum: Datum) =>\n          valueInScaleRange(\n            this.radiusAxisHelper.dataToPosition([datum[this._radiusField[0]]]),\n            this.radiusAxisHelper.getScale(0)\n          ),\n        innerRadius: (datum: Datum) => {\n          if (!this.getStack()) {\n            return 0;\n          }\n          const stackStart = valueInScaleRange(\n            this.radiusAxisHelper.dataToPosition([datum[this._innerRadiusField[0]]]),\n            this.radiusAxisHelper.getScale(0)\n          );\n          return stackStart <= Number.MIN_VALUE\n            ? this._computeLayoutRadius() * (this._spec.innerRadius ?? 0)\n            : stackStart;\n        }\n      });\n    }\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._roseMark && this._tooltipHelper.activeTriggerSet.mark.add(this._roseMark);\n  }\n\n  initLabelMarkStyle(textMark: ILabelMark) {\n    if (!textMark) {\n      return;\n    }\n    this.setMarkStyle(textMark, {\n      text: (datum: Datum) => {\n        return datum[this.getDimensionField()[0]];\n      },\n      fill: this.getColorAttribute(),\n      z: 0\n    });\n  }\n\n  initAnimation() {\n    const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<RoseAppearPreset>)?.preset;\n\n    if (this._roseMark) {\n      const animationParams: IRoseAnimationParams = {\n        innerRadius: () => this._computeLayoutRadius() * (this._spec.innerRadius ?? 0)\n      };\n      this._roseMark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('rose')?.(animationParams, appearPreset),\n          userAnimationConfig(SeriesMarkNameEnum.rose, this._spec, this._markAttributeContext)\n        )\n      );\n    }\n  }\n\n  getDefaultShapeType() {\n    return 'circle';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._roseMark];\n  }\n}\n\nexport const registerRoseSeries = () => {\n  Factory.registerSeries(RoseSeries.type, RoseSeries);\n  registerArcMark();\n  registerRoseAnimation();\n  registerPolarBandAxis();\n  registerPolarLinearAxis();\n};\n"]}