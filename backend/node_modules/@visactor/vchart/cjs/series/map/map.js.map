{"version":3,"sources":["../src/series/map/map.ts"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["import { Matrix, isValid, isValidNumber } from '@visactor/vutils';\nimport { DataView } from '@visactor/vdataset';\nimport { geoSourceMap, registerMapSource, unregisterMapSource } from './geo-source';\nimport { lookup } from '../../data/transforms/lookup';\nimport type { Datum, StringOrNumber } from '../../typings';\nimport { GeoSeries } from '../geo/geo';\nimport { DEFAULT_MAP_LOOK_UP_KEY, map } from '../../data/transforms/map';\nimport { copyDataView } from '../../data/transforms/copy-data-view';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { MapSeriesTooltipHelper } from './tooltip-helper';\nimport { DEFAULT_DATA_SERIES_FIELD, DEFAULT_DATA_INDEX } from '../../constant/data';\nimport { AttributeLevel } from '../../constant/attribute';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { FeatureData, IMapSeriesSpec } from './interface';\nimport type { PanEventParam, ZoomEventParam } from '../../event/interface';\nimport { animationConfig, shouldMarkDoMorph, userAnimationConfig } from '../../animation/utils';\nimport { registerFadeInOutAnimation } from '../../animation/config';\nimport { registerPathMark } from '../../mark/path';\nimport { mapSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { registerGeoCoordinate } from '../../component/geo';\nimport type { ILabelMark, IMark, IPathMark } from '../../mark/interface';\nimport { TransformLevel } from '../../data/initialize';\nimport { MapSeriesSpecTransformer } from './map-transformer';\nimport { CompilableData } from '../../compile/data';\nimport { map as mapTheme } from '../../theme/builtin/common/series/map';\n\nexport class MapSeries<T extends IMapSeriesSpec = IMapSeriesSpec> extends GeoSeries<T> {\n  static readonly type: string = SeriesTypeEnum.map;\n  type = SeriesTypeEnum.map;\n\n  static readonly mark: SeriesMarkMap = mapSeriesMark;\n  static readonly builtInTheme = { map: mapTheme };\n  static readonly transformerConstructor = MapSeriesSpecTransformer as any;\n  readonly transformerConstructor = MapSeriesSpecTransformer;\n\n  map!: string;\n\n  protected _nameMap!: { [key: StringOrNumber]: StringOrNumber };\n  getNameMap() {\n    return this._nameMap;\n  }\n\n  private _areaCache: Map<string, { shape: string }> = new Map();\n  get areaPath() {\n    return this._areaCache;\n  }\n\n  private _pathMark: IPathMark;\n  private _labelMark: ILabelMark;\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this.map = this._spec.map;\n    this._nameMap = this._spec.nameMap;\n    this._nameField = this._spec.nameField;\n    this._valueField = this._spec.valueField;\n    this._spec.nameProperty && (this._nameProperty = this._spec.nameProperty);\n    this._spec.centroidProperty && (this._centroidProperty = this._spec.centroidProperty);\n\n    if (!this.map) {\n      this._option?.onError(`map type '${this.map}' is not specified !`);\n    }\n\n    if (!geoSourceMap.get(this.map)) {\n      this._option?.onError(`'${this.map}' data is not registered !`);\n    }\n  }\n\n  // data\n  initData(): void {\n    super.initData();\n\n    registerDataSetInstanceTransform(this._dataSet, 'copyDataView', copyDataView);\n    registerDataSetInstanceTransform(this._dataSet, 'map', map);\n    registerDataSetInstanceTransform(this._dataSet, 'lookup', lookup);\n\n    // 初始化地图数据\n    const features = geoSourceMap.get(this.map);\n    if (!features) {\n      this._option?.onError('no valid map data found!');\n    }\n    const mapData = new DataView(this._dataSet, { name: `map_${this.id}_data` });\n\n    mapData\n      .parse([features], {\n        type: 'dataview'\n      })\n      .transform({ type: 'copyDataView', options: { deep: true }, level: TransformLevel.copyDataView })\n      .transform({\n        type: 'map',\n        options: {\n          nameMap: this._nameMap,\n          nameProperty: this._nameProperty\n        }\n      })\n      .transform({\n        type: 'lookup',\n        options: {\n          from: () => this._data?.getLatestData(),\n          key: DEFAULT_MAP_LOOK_UP_KEY,\n          fields: this._nameField,\n          set: (feature: FeatureData, datum: Datum) => {\n            if (datum) {\n              Object.keys(datum).forEach(key => {\n                if (!(key in feature)) {\n                  (feature as any)[key] = datum[key];\n                }\n              });\n            }\n          }\n        }\n      });\n    this._data?.getDataView().target.addListener('change', mapData.reRunAllTransform);\n    this._mapViewData = new CompilableData(this._option, mapData);\n  }\n\n  compileData() {\n    super.compileData();\n    this._mapViewData?.compile();\n  }\n\n  // mark\n  initMark() {\n    this._pathMark = this._createMark(\n      MapSeries.mark.area,\n      {\n        groupKey: this.getDimensionField()[0],\n        isSeriesMark: true\n      },\n      {\n        morph: shouldMarkDoMorph(this._spec, MapSeries.mark.area.name),\n        morphElementKey: this.getDimensionField()[0]\n      }\n    ) as IPathMark;\n\n    this._pathMark.setData(this._mapViewData);\n  }\n\n  initMarkStyle() {\n    const pathMark = this._pathMark;\n    if (pathMark) {\n      this.setMarkStyle(\n        pathMark,\n        {\n          fill: (datum: any) => {\n            if (isValid(datum[this._seriesField ?? DEFAULT_DATA_SERIES_FIELD])) {\n              return (this._option.globalScale.getScale('color') ?? this._getDefaultColorScale()).scale(\n                datum[this._seriesField ?? DEFAULT_DATA_SERIES_FIELD]\n              );\n            }\n            return this._spec?.defaultFillColor;\n          },\n          path: this.getPath.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n\n      pathMark.setPostProcess('fill', result => {\n        if (!isValid(result)) {\n          return this._spec.defaultFillColor;\n        }\n        return result;\n      });\n\n      this.setMarkStyle(\n        pathMark,\n        {\n          smoothScale: true\n        },\n        'normal',\n        AttributeLevel.Built_In\n      );\n    }\n  }\n\n  initLabelMarkStyle(labelMark: ILabelMark) {\n    if (!labelMark) {\n      return;\n    }\n    this._labelMark = labelMark;\n    this.setMarkStyle(labelMark, {\n      text: (datum: Datum) => {\n        const text = this.getDatumName(datum);\n        return text;\n      },\n      x: (datum: Datum) => this.dataToPosition(datum)?.x,\n      y: (datum: Datum) => this.dataToPosition(datum)?.y\n    });\n  }\n\n  initAnimation() {\n    this._pathMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('fadeInOut')?.(),\n        userAnimationConfig(SeriesMarkNameEnum.area, this._spec, this._markAttributeContext)\n      )\n    );\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new MapSeriesTooltipHelper(this);\n    this._pathMark && this._tooltipHelper.activeTriggerSet.mark.add(this._pathMark);\n  }\n\n  protected getPath(datum: any) {\n    const area = this._areaCache.get(datum[DEFAULT_DATA_INDEX]);\n    if (area) {\n      return area.shape;\n    }\n    const shape = this._coordinateHelper?.shape(datum);\n    this._areaCache.set(datum[DEFAULT_DATA_INDEX], {\n      shape\n    });\n    return shape;\n  }\n\n  // life cycle\n  onEvaluateEnd() {\n    this._mapViewData.updateData();\n  }\n\n  getDimensionField(): string[] {\n    return [this.nameField];\n  }\n\n  getMeasureField(): string[] {\n    return [this.valueField];\n  }\n\n  release() {\n    super.release();\n    this._areaCache.clear();\n    this._nameMap = {};\n    this._mapViewData = null as any;\n  }\n\n  handleZoom(e: ZoomEventParam) {\n    const { scale, scaleCenter } = e;\n    if (scale === 1) {\n      return;\n    }\n\n    const pathGroup = this.getRootMark().getProduct();\n    if (pathGroup) {\n      if (!pathGroup.attribute.postMatrix) {\n        pathGroup.setAttributes({\n          postMatrix: new Matrix()\n        });\n      }\n      pathGroup.scale(scale, scale, scaleCenter);\n    }\n    const vgrammarLabel = this._labelMark?.getComponent();\n\n    if (vgrammarLabel) {\n      vgrammarLabel.renderInner();\n    }\n  }\n\n  handlePan(e: PanEventParam) {\n    const { delta } = e;\n    if (delta[0] === 0 && delta[1] === 0) {\n      return;\n    }\n    const pathGroup = this.getRootMark().getProduct();\n    if (pathGroup) {\n      if (!pathGroup.attribute.postMatrix) {\n        pathGroup.setAttributes({\n          postMatrix: new Matrix()\n        });\n      }\n      pathGroup.translate(delta[0], delta[1]);\n    }\n    const vgrammarLabel = this._labelMark?.getComponent();\n\n    if (vgrammarLabel) {\n      vgrammarLabel.renderInner();\n    }\n  }\n\n  getDatumCenter(datum: any): [number, number] {\n    if (this._centroidProperty && datum.properties?.[this._centroidProperty]) {\n      return datum.properties?.[this._centroidProperty];\n    }\n\n    if (isValidNumber(datum.centroidX * datum.centroidY)) {\n      return [datum.centroidX, datum.centroidY];\n    }\n\n    if (datum.properties?.center) {\n      return datum.properties.center;\n    }\n\n    if (datum.properties?.centroid) {\n      return datum.properties.centroid;\n    }\n\n    return [Number.NaN, Number.NaN];\n  }\n\n  getDatumName(datum: any): string {\n    if (datum[this.nameField]) {\n      return datum[this.nameField];\n    }\n    const name = datum.properties?.[this._nameProperty];\n    if (name) {\n      if (this._spec.nameMap) {\n        if (this._spec.nameMap[name]) {\n          return this._spec.nameMap[name];\n        }\n      }\n      // TODO:\n      // 1. showDefaultName 是一个考虑配置兼容的产物，不然会有 break-change\n      // 2. 后续大版本升级，这里无需判断条件，直接返回 name 是更合理的\n      if (this._spec.showDefaultName || !this._spec.nameMap) {\n        return name;\n      }\n    }\n    return '';\n  }\n\n  dataToPositionX(data: any): number {\n    this._option?.onError('Method not implemented.');\n    return 0;\n  }\n  dataToPositionY(data: any): number {\n    this._option?.onError('Method not implemented.');\n    return 0;\n  }\n\n  viewDataUpdate(d: DataView): void {\n    super.viewDataUpdate(d);\n    this._mapViewData?.getDataView()?.reRunAllTransform();\n    this._mapViewData?.updateData();\n  }\n\n  protected _getDataIdKey() {\n    return DEFAULT_DATA_INDEX;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._pathMark];\n  }\n}\n\nexport const registerMapSeries = () => {\n  // 注册语法元素\n  registerGeoCoordinate();\n  registerPathMark();\n  Factory.registerSeries(MapSeries.type, MapSeries);\n  Factory.registerImplement('registerMap', registerMapSource);\n  Factory.registerImplement('unregisterMap', unregisterMapSource);\n  registerFadeInOutAnimation();\n};\n"]}