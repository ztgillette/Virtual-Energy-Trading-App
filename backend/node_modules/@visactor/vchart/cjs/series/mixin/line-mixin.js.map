{"version":3,"sources":["../src/series/mixin/line-mixin.ts"],"names":[],"mappings":"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","file":"line-mixin.js","sourcesContent":["import { PREFIX } from '../../constant/base';\nimport type { ISeriesOption } from '../interface/common';\nimport { DataView } from '@visactor/vdataset';\nimport { ChartEvent } from '../../constant/event';\nimport type { ISeries } from '../interface/series';\nimport { AttributeLevel } from '../../constant/attribute';\n\nimport type {\n  ICompileMarkConfig,\n  IMark,\n  IMarkProgressiveConfig,\n  ILabelMark,\n  ILineMark,\n  ISymbolMark,\n  ITextMark\n} from '../../mark/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport type { DirectionType, IInvalidType, InterpolateType, Maybe, Datum, ILayoutRect } from '../../typings';\nimport { DEFAULT_LINEAR_INTERPOLATE, DEFAULT_SMOOTH_INTERPOLATE } from '../../typings/interpolate';\nimport { Direction } from '../../typings/space';\n// eslint-disable-next-line no-duplicate-imports\nimport { DEFAULT_CLOSE_STROKE_JOIN } from '../../typings/line-stroke';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ISeriesMarkInfo, ISeriesMarkInitOption, ISeriesTooltipHelper } from '../interface';\nimport { shouldMarkDoMorph } from '../../animation/utils';\nimport type { DimensionEventParams } from '../../event/events/dimension';\n// eslint-disable-next-line no-duplicate-imports\nimport { DimensionEventEnum } from '../../event/events/dimension';\nimport type { EventCallback, EventParams } from '../../event/interface';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { lineLikeSeriesMark } from './constant';\nimport type { IRegion } from '../../region/interface';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport type { ILineLikeSeriesTheme } from './interface';\nimport type { ICompilableData } from '../../compile/data';\n\nexport interface LineLikeSeriesMixin extends ISeries {\n  _spec: any;\n  _option: ISeriesOption;\n  _seriesField: string;\n  _theme: Maybe<ILineLikeSeriesTheme>;\n  _tooltipHelper: ISeriesTooltipHelper;\n  _invalidType: IInvalidType;\n  _region: IRegion;\n  _direction: DirectionType;\n  _data: ICompilableData;\n\n  _lineMark: ILineMark;\n  _symbolMark: ISymbolMark;\n  _symbolActiveMark: ISymbolMark;\n  _labelMark: ITextMark;\n  _fieldX?: string[];\n  _fieldY?: string[];\n  _fieldZ?: string[];\n\n  _createMark: (markInfo: ISeriesMarkInfo, option?: ISeriesMarkInitOption, config?: ICompileMarkConfig) => IMark;\n  _getInvalidDefined: (datum: Datum) => boolean;\n  _getInvalidConnectType: () => IInvalidType;\n\n  getLayoutRect: () => ILayoutRect;\n}\n\nexport class LineLikeSeriesMixin {\n  addSamplingCompile(): void {\n    if (this._spec.sampling) {\n      const { width, height } = this._region.getLayoutRect();\n      const fieldsY = this._fieldY;\n      const fieldsX = this._fieldX;\n\n      if (this._data) {\n        this._data.setTransform([\n          {\n            type: 'dataSampling',\n            size: this._direction === Direction.horizontal ? height : width,\n            factor: this._spec.samplingFactor,\n            yfield: this._direction === Direction.horizontal ? fieldsX[0] : fieldsY[0],\n            groupBy: this._seriesField,\n            mode: this._spec.sampling\n          }\n        ]);\n      }\n    }\n  }\n\n  addOverlapCompile(): void {\n    if (this._spec.markOverlap) {\n      const overlapTrans = [];\n      overlapTrans.push({\n        type: 'symbolOverlap',\n        direction: this._direction === Direction.horizontal && this.coordinate === 'cartesian' ? 2 : 1,\n        delta: this._spec.pointDis,\n        deltaMul: this._spec.pointDisMul,\n        groupBy: this._seriesField\n      });\n      this._symbolMark?.setTransform(overlapTrans);\n    }\n  }\n\n  reCompileSampling(): void {\n    if (this._spec.sampling) {\n      this.compile();\n    }\n  }\n\n  initLineMark(isSeriesMark?: boolean) {\n    this._lineMark = this._createMark(\n      lineLikeSeriesMark.line,\n      {\n        groupKey: this._seriesField,\n        isSeriesMark: isSeriesMark ?? true\n      },\n      {\n        morphElementKey: this.getDimensionField()[0]\n      }\n    ) as ILineMark;\n    return this._lineMark;\n  }\n\n  initLineMarkStyle(direction?: DirectionType, areaCurveType?: InterpolateType) {\n    const lineMark = this._lineMark;\n    if (lineMark) {\n      this.setMarkStyle(\n        lineMark,\n        {\n          stroke: this.getColorAttribute()\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n      if (this._invalidType !== 'zero') {\n        this.setMarkStyle(\n          lineMark,\n          {\n            defined: this._getInvalidDefined.bind(this),\n            connectedType: this._getInvalidConnectType()\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this.event.on(ChartEvent.viewDataStatisticsUpdate, { filter: param => param.model === this }, () => {\n        this.encodeDefined(lineMark, 'defined');\n      });\n      if (this.coordinate === 'polar') {\n        // 极坐标系下需要关闭\n        this.setMarkStyle(\n          lineMark,\n          {\n            lineJoin: DEFAULT_CLOSE_STROKE_JOIN,\n            curveType: DEFAULT_LINEAR_INTERPOLATE,\n            closePath: true\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      } else {\n        const userCurveType = areaCurveType ?? this.getSpec().line?.style?.curveType;\n        const curveType =\n          userCurveType === DEFAULT_SMOOTH_INTERPOLATE\n            ? direction === Direction.horizontal\n              ? 'monotoneY'\n              : 'monotoneX'\n            : userCurveType;\n\n        this.setMarkStyle(\n          lineMark,\n          {\n            curveType\n          },\n          'normal',\n          AttributeLevel.Built_In\n        );\n      }\n\n      this.setMarkStyle(\n        lineMark,\n        {\n          x: this.dataToPositionX.bind(this),\n          y: this.dataToPositionY.bind(this),\n          z: this._fieldZ ? this.dataToPositionZ.bind(this) : null\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n    return lineMark;\n  }\n\n  protected _getEventElement(params: DimensionEventParams, reverse: boolean = false): Datum[] {\n    // items 修改遍历方法从 mark\n    let data: Datum[] = [];\n    params.dimensionInfo.some(df => {\n      df.data.some(dd => {\n        if (dd.series === this) {\n          data = dd.datum;\n          return true;\n        }\n        return false;\n      });\n      return !data.length;\n    });\n    return data;\n  }\n\n  protected _dimensionTrigger(params: DimensionEventParams) {\n    const elements = this._getEventElement(params);\n\n    switch (params.action) {\n      case 'enter':\n        this._symbolActiveMark.getDataView().parse(elements);\n        this._symbolActiveMark.getData().updateData(false);\n        break;\n      case 'leave':\n        this._symbolActiveMark.getDataView().parse([]);\n        this._symbolActiveMark.getData().updateData(false);\n      case 'click':\n      case 'move':\n      default:\n        break;\n    }\n  }\n\n  initSymbolMark(isSeriesMark?: boolean) {\n    const pointSpec = this._spec.point || {};\n\n    if (pointSpec.visible !== false) {\n      this._symbolMark = this._createMark(\n        lineLikeSeriesMark.point,\n        {\n          groupKey: this._seriesField,\n          isSeriesMark: !!isSeriesMark\n        },\n        {\n          morph: shouldMarkDoMorph(this._spec, lineLikeSeriesMark.point.name),\n          morphElementKey: this.getDimensionField()[0]\n        }\n      ) as ISymbolMark;\n    }\n\n    if (this._spec.activePoint === true) {\n      const activeData = new DataView(this._option.dataSet, { name: `${PREFIX}_series_${this.id}_active_point` });\n      activeData.parse([]);\n      this._symbolActiveMark = this._createMark(\n        { name: `active_point_${this.id}`, type: MarkTypeEnum.symbol },\n        {\n          groupKey: this._seriesField,\n          isSeriesMark: false,\n          dataView: activeData,\n          parent: this._region.getInteractionMark()\n        },\n        {\n          morph: false\n        }\n      ) as ISymbolMark;\n      this._symbolActiveMark.setVisible(false);\n    }\n\n    return this._symbolMark;\n  }\n\n  initSymbolMarkStyle() {\n    const symbolMark = this._symbolMark;\n    if (!symbolMark) {\n      this._initSymbolActiveMarkAlone();\n      return symbolMark;\n    }\n    // 设置基础样式\n    this._initSymbolMark(symbolMark);\n\n    // setStyle to active point\n    if (this._symbolActiveMark && this._symbolMark.stateStyle.dimension_hover) {\n      // active point will show\n      this._symbolActiveMark.setVisible(true);\n      this.event.on(DimensionEventEnum.dimensionHover, this._dimensionTrigger.bind(this) as EventCallback<EventParams>);\n      // set style with referer\n      for (const state in this._symbolMark.stateStyle) {\n        this._symbolActiveMark.stateStyle[state] = {};\n        for (const key in this._symbolMark.stateStyle[state]) {\n          // symbolActiveMark 的 visible 具有额外逻辑，不要使用原始 symbol 的 visible\n          if (key === 'visible') {\n            continue;\n          }\n          this._symbolActiveMark.stateStyle[state][key] = {\n            style: null,\n            level: AttributeLevel.Series,\n            referer: symbolMark\n          };\n        }\n      }\n      // make sure activeMark in state\n      this._symbolActiveMark.state.changeStateInfo({\n        stateValue: STATE_VALUE_ENUM.STATE_DIMENSION_HOVER,\n        filter: () => true\n      });\n    }\n\n    return symbolMark;\n  }\n\n  private _initSymbolMark(symbolMark: ISymbolMark) {\n    if (!symbolMark) {\n      return;\n    }\n    this.setMarkStyle(\n      symbolMark,\n      {\n        fill: this.getColorAttribute()\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n\n    this.setMarkStyle(\n      symbolMark,\n      {\n        x: (datum: Datum) => {\n          // 对于symbol而言，如果undefined 的元素还进行scale机会，Null/undefined 会被当成0，导致交互误显示的问题\n          return this._invalidType !== 'zero' && !this._getInvalidDefined(datum)\n            ? Number.NaN\n            : this.dataToPositionX(datum);\n        },\n        y: (datum: Datum) => {\n          return this._invalidType !== 'zero' && !this._getInvalidDefined(datum)\n            ? Number.NaN\n            : this.dataToPositionY(datum);\n        },\n        z: this._fieldZ ? this.dataToPositionZ.bind(this) : null\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n  }\n\n  private _initSymbolActiveMarkAlone() {\n    const symbolMark = this._symbolActiveMark;\n    if (!symbolMark) {\n      return;\n    }\n    this._initSymbolMark(symbolMark);\n\n    // 这里应该不能讲trigger-mark改为activeMark，activeMark数据会变，并且目前不支持selected等操作改变它的数据\n    // this._trigger.registerMark(symbolMark);\n\n    // setStyle to active point\n    if (symbolMark && this._spec[lineLikeSeriesMark.point.name]?.state?.dimension_hover) {\n      // active point will show\n      symbolMark.setVisible(true);\n      this.event.on(DimensionEventEnum.dimensionHover, this._dimensionTrigger.bind(this) as EventCallback<EventParams>);\n      // set style with referer\n      this.initMarkStyleWithSpec(\n        symbolMark,\n        mergeSpec({}, this._spec[lineLikeSeriesMark.point.name], { visible: true })\n      );\n      // make sure activeMark in state\n      this._symbolActiveMark.state.changeStateInfo({\n        stateValue: STATE_VALUE_ENUM.STATE_DIMENSION_HOVER,\n        filter: () => true\n      });\n    }\n  }\n\n  initLabelMarkStyle(labelMark?: ILabelMark) {\n    if (!labelMark) {\n      return;\n    }\n    if (labelMark.getTarget()?.type !== 'symbol') {\n      labelMark.setRule('line-data');\n    }\n    this.setMarkStyle(labelMark, {\n      fill: this.getColorAttribute(),\n      text: (datum: Datum) => {\n        return datum[this.getStackValueField()];\n      },\n      z: this._fieldZ ? this.dataToPositionZ.bind(this) : null\n    });\n\n    if (this._invalidType !== 'zero') {\n      this.setMarkStyle(\n        labelMark,\n        {\n          visible: this._getInvalidDefined.bind(this)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n\n    this.event.on(ChartEvent.viewDataStatisticsUpdate, { filter: param => param.model === this }, () => {\n      this.encodeDefined(labelMark, 'visible');\n    });\n  }\n\n  initLineLabelMarkStyle(labelMark?: ILabelMark) {\n    if (!labelMark) {\n      return;\n    }\n\n    this.setMarkStyle(labelMark, {\n      fill: this.getColorAttribute(),\n      text: (datum: Datum) => {\n        return datum[this.getSeriesField()] ?? this.getSeriesKeys()[0];\n      },\n      z: this._fieldZ ? this.dataToPositionZ.bind(this) : null\n    });\n  }\n\n  encodeDefined(mark: IMark, attr: string) {\n    if (!mark) {\n      return;\n    }\n    const allValid = this._isFieldAllValid();\n    if (this._invalidType === 'zero' || allValid) {\n      if (mark.stateStyle.normal?.[attr]?.style === true) {\n        // no change\n        return;\n      }\n      this.setMarkStyle(mark, { [attr]: true }, 'normal', AttributeLevel.Series);\n    } else {\n      if (mark.stateStyle.normal?.[attr]?.style !== true) {\n        // no change\n        return;\n      }\n      this.setMarkStyle(mark, { [attr]: this._getInvalidDefined.bind(this) }, 'normal', AttributeLevel.Series);\n    }\n    // if has produce, reCompile encode to set attribute to product\n    mark.compileEncode();\n  }\n\n  protected _isFieldAllValid() {\n    const viewStatistics = this.getViewDataStatistics();\n    const field = this.getStackValueField();\n    if (viewStatistics && viewStatistics.latestData && field) {\n      return viewStatistics.latestData[field] && viewStatistics.latestData[field].allValid;\n    }\n    return false;\n  }\n}\n"]}