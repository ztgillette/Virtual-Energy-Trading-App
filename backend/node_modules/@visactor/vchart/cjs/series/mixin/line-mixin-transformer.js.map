{"version":3,"sources":["../src/series/mixin/line-mixin-transformer.ts"],"names":[],"mappings":";;;AACA,kCAAoD;AAGpD,MAAa,6BAAwD,SAAQ,gCAA+B;IAChG,mBAAmB,CAAC,IAAS;;QACrC,MAAM,cAAc,GAAG,CAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,MAAK,KAAK,IAAI,CAAA,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,KAAK,0CAAE,OAAO,MAAK,KAAK,CAAC;QAC7F,IAAI,CAAC,cAAc,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,SAA0B,CAAC;SACvD;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,UAA2B,CAAC;SACxD;QACD,IAAI,CAAC,iBAAiB,CACpB,IAAI,UAEJ,WAAkB,EAClB,wBAA+B,EAC/B,SAAS,EACT,IAAI,CACL,CAAC;IACJ,CAAC;CACF;AAjBD,sEAiBC","file":"line-mixin-transformer.js","sourcesContent":["import type { ISeriesSpec } from '../../typings';\nimport { BaseSeriesSpecTransformer } from '../base';\nimport { SeriesMarkNameEnum } from '../interface';\n\nexport class LineLikeSeriesSpecTransformer<T extends ISeriesSpec, K> extends BaseSeriesSpecTransformer<T, K> {\n  protected _transformLabelSpec(spec: any): void {\n    const isPointVisible = spec.point?.visible !== false && spec.point?.style?.visible !== false;\n    if (!isPointVisible) {\n      this._addMarkLabelSpec(spec, SeriesMarkNameEnum.line);\n    } else {\n      this._addMarkLabelSpec(spec, SeriesMarkNameEnum.point);\n    }\n    this._addMarkLabelSpec(\n      spec,\n      SeriesMarkNameEnum.line,\n      'lineLabel' as any,\n      'initLineLabelMarkStyle' as any,\n      undefined,\n      true\n    );\n  }\n}\n"]}