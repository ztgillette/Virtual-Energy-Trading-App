{"version":3,"sources":["../src/series/box-plot/box-plot.ts"],"names":[],"mappings":"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","file":"box-plot.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { AttributeLevel } from '../../constant/attribute';\nimport { DEFAULT_DATA_INDEX } from '../../constant/data';\nimport { PREFIX } from '../../constant/base';\nimport type { IModelEvaluateOption, IModelInitOption } from '../../model/interface';\nimport type { BoxPlotShaftShape, IOutlierMarkSpec, Datum } from '../../typings';\nimport { Direction } from '../../typings/space';\nimport { valueInScaleRange } from '../../util/scale';\nimport { CartesianSeries } from '../cartesian/cartesian';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { IBoxPlotSeriesSpec } from './interface';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { DataView } from '@visactor/vdataset';\nimport { foldOutlierData } from '../../data/transforms/box-plot';\nimport { BOX_PLOT_OUTLIER_VALUE_FIELD } from '../../constant/box-plot';\nimport { BoxPlotSeriesTooltipHelper } from './tooltip-helper';\nimport { addVChartProperty } from '../../data/transforms/add-property';\nimport { addDataKey, initKeyMap } from '../../data/transforms/data-key';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { registerScaleInOutAnimation } from '../../animation/config';\nimport type { IMarkAnimateSpec } from '../../animation/spec';\nimport { registerBoxPlotMark } from '../../mark/box-plot';\nimport { registerSymbolMark } from '../../mark/symbol';\nimport { boxPlotSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport type { IBoxPlotMark, IGlyphMark, IMark, ISymbolMark } from '../../mark/interface';\nimport { merge, isNumber } from '@visactor/vutils';\nimport { getGroupAnimationParams } from '../util/utils';\nimport { registerCartesianLinearAxis, registerCartesianBandAxis } from '../../component/axis/cartesian';\nimport type { ICompilableData } from '../../compile/data';\nimport { CompilableData } from '../../compile/data';\nimport { registeBoxPlotScaleAnimation } from './animation';\nimport { boxPlot } from '../../theme/builtin/common/series/box-plot';\n\nconst DEFAULT_STROKE_WIDTH = 2;\nconst DEFAULT_SHAFT_FILL_OPACITY = 0.5;\nconst DEFAULT_SHAFT_SHAPE = 'line';\nexport const DEFAULT_FILL_COLOR = '#FFF';\nexport const DEFAULT_STROKE_COLOR = '#000';\n\nconst DEFAULT_OUTLIER_SIZE = 10;\n\nexport class BoxPlotSeries<T extends IBoxPlotSeriesSpec = IBoxPlotSeriesSpec> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.boxPlot;\n  type = SeriesTypeEnum.boxPlot;\n\n  static readonly builtInTheme = { boxPlot };\n  static readonly mark: SeriesMarkMap = boxPlotSeriesMark;\n\n  protected _minField: string;\n  getMinField() {\n    return this._minField;\n  }\n  protected _maxField: string;\n  getMaxField() {\n    return this._maxField;\n  }\n  protected _q1Field: string;\n  getQ1Field() {\n    return this._q1Field;\n  }\n  protected _medianField: string;\n  getMedianField() {\n    return this._medianField;\n  }\n  protected _q3Field: string;\n  getQ3Field() {\n    return this._q3Field;\n  }\n  protected _outliersField: string;\n  getOutliersField() {\n    return this._outliersField;\n  }\n  protected _lineWidth: number;\n  protected _boxWidth: number;\n  protected _shaftShape: BoxPlotShaftShape;\n  getShaftShape() {\n    return this._shaftShape;\n  }\n  protected _shaftWidth: number;\n  protected _boxFillColor: string;\n  getBoxFillColor() {\n    return this._boxFillColor;\n  }\n  protected _strokeColor: string;\n  getStrokeColor() {\n    return this._strokeColor;\n  }\n  protected _shaftFillOpacity: number;\n  protected _outliersStyle: IOutlierMarkSpec;\n  getOutliersStyle() {\n    return this._outliersStyle;\n  }\n  protected _outlierDataView: ICompilableData;\n\n  private _autoBoxWidth: number;\n\n  /**\n   * @override\n   */\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    const boxPlotStyle: any = this._spec.boxPlot?.style ?? {};\n    this._minField = this._spec.minField;\n    this._maxField = this._spec.maxField;\n    this._q1Field = this._spec.q1Field;\n    this._medianField = this._spec.medianField;\n    this._q3Field = this._spec.q3Field;\n    this._outliersField = this._spec.outliersField;\n    this._lineWidth = boxPlotStyle.lineWidth ?? DEFAULT_STROKE_WIDTH;\n    this._boxWidth = boxPlotStyle.boxWidth;\n    this._shaftShape = boxPlotStyle.shaftShape ?? DEFAULT_SHAFT_SHAPE;\n    this._shaftWidth = boxPlotStyle.shaftWidth;\n    this._boxFillColor = boxPlotStyle.boxFill;\n    this._strokeColor = boxPlotStyle.stroke;\n\n    this._shaftFillOpacity =\n      this._shaftShape === 'bar' ? boxPlotStyle.shaftFillOpacity ?? DEFAULT_SHAFT_FILL_OPACITY : undefined;\n\n    this._outliersStyle = this._spec.outliersStyle;\n  }\n\n  private _boxPlotMark?: IBoxPlotMark;\n  private _outlierMark?: ISymbolMark;\n\n  initMark(): void {\n    this._boxPlotMark = this._createMark(BoxPlotSeries.mark.boxPlot, {\n      groupKey: this._seriesField,\n      isSeriesMark: true\n    }) as IBoxPlotMark;\n    if (this._outliersField) {\n      this._outlierMark = this._createMark(BoxPlotSeries.mark.outlier, {\n        key: DEFAULT_DATA_INDEX,\n        groupKey: this._seriesField,\n        dataView: this._outlierDataView.getDataView(),\n        dataProductId: this._outlierDataView.getProductId()\n      }) as ISymbolMark;\n    }\n  }\n\n  initMarkStyle(): void {\n    const boxPlotMark = this._boxPlotMark;\n    if (boxPlotMark) {\n      const commonBoxplotStyles = {\n        lineWidth: this._lineWidth,\n        fill: this._boxFillColor ?? (this._shaftShape === 'line' ? DEFAULT_FILL_COLOR : this.getColorAttribute()),\n        minMaxFillOpacity: this._shaftFillOpacity,\n        stroke: this._strokeColor ?? (this._shaftShape === 'line' ? this.getColorAttribute() : DEFAULT_STROKE_COLOR)\n      };\n\n      (boxPlotMark as IGlyphMark).setGlyphConfig({\n        direction: this._direction,\n        shaftShape: this._shaftShape\n      });\n\n      const boxPlotMarkStyles =\n        this._direction === Direction.horizontal\n          ? {\n              y: this.dataToPositionY.bind(this),\n              ...commonBoxplotStyles,\n              boxHeight: () => this._boxWidth ?? this._getMarkWidth(),\n              ruleHeight: () => this._shaftWidth ?? this._getMarkWidth(),\n              q1q3Height: () => this._boxWidth ?? this._getMarkWidth(),\n              minMaxHeight: () => this._shaftWidth ?? this._getMarkWidth()\n            }\n          : {\n              x: this.dataToPositionX.bind(this),\n              ...commonBoxplotStyles,\n              boxWidth: () => this._boxWidth ?? this._getMarkWidth(),\n              ruleWidth: () => this._shaftWidth ?? this._getMarkWidth(),\n              q1q3Width: () => this._boxWidth ?? this._getMarkWidth(),\n              minMaxWidth: () => this._shaftWidth ?? this._getMarkWidth()\n            };\n      this.setMarkStyle(boxPlotMark, boxPlotMarkStyles, STATE_VALUE_ENUM.STATE_NORMAL, AttributeLevel.Series);\n    }\n\n    const outlierMark = this._outlierMark;\n    if (outlierMark) {\n      this.setMarkStyle(\n        outlierMark,\n        {\n          fill: this._outliersStyle?.fill ?? this.getColorAttribute(),\n          size: isNumber(this._outliersStyle?.size) ? this._outliersStyle.size : DEFAULT_OUTLIER_SIZE,\n          symbolType: 'circle'\n        },\n        STATE_VALUE_ENUM.STATE_NORMAL,\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initBoxPlotMarkStyle(): void {\n    const boxPlotMark = this._boxPlotMark;\n    const axisHelper = this._direction === Direction.horizontal ? this._xAxisHelper : this._yAxisHelper;\n    if (boxPlotMark && axisHelper) {\n      const { dataToPosition } = axisHelper;\n      const scale = axisHelper?.getScale?.(0);\n      this.setMarkStyle(\n        boxPlotMark,\n        {\n          min: (datum: Datum) =>\n            valueInScaleRange(\n              dataToPosition(this.getDatumPositionValues(datum, this._minField), {\n                bandPosition: this._bandPosition\n              }),\n              scale\n            ),\n          q1: (datum: Datum) =>\n            valueInScaleRange(\n              dataToPosition(this.getDatumPositionValues(datum, this._q1Field), {\n                bandPosition: this._bandPosition\n              }),\n              scale\n            ),\n          median: (datum: Datum) =>\n            valueInScaleRange(\n              dataToPosition(this.getDatumPositionValues(datum, this._medianField), {\n                bandPosition: this._bandPosition\n              }),\n              scale\n            ),\n          q3: (datum: Datum) =>\n            valueInScaleRange(\n              dataToPosition(this.getDatumPositionValues(datum, this._q3Field), {\n                bandPosition: this._bandPosition\n              }),\n              scale\n            ),\n          max: (datum: Datum) =>\n            valueInScaleRange(\n              dataToPosition(this.getDatumPositionValues(datum, this._maxField), {\n                bandPosition: this._bandPosition\n              }),\n              scale\n            )\n        },\n        STATE_VALUE_ENUM.STATE_NORMAL,\n        AttributeLevel.Series\n      );\n    }\n    const outlierMark = this._outlierMark;\n    if (outlierMark && axisHelper) {\n      const { dataToPosition } = axisHelper;\n      const scale = axisHelper?.getScale?.(0);\n      const outlierMarkPositionChannel =\n        this._direction === Direction.horizontal\n          ? {\n              y: this.dataToPositionY.bind(this),\n              x: (datum: Datum) =>\n                valueInScaleRange(\n                  dataToPosition(this.getDatumPositionValues(datum, BOX_PLOT_OUTLIER_VALUE_FIELD), {\n                    bandPosition: this._bandPosition\n                  }),\n                  scale\n                )\n            }\n          : {\n              x: this.dataToPositionX.bind(this),\n              y: (datum: Datum) =>\n                valueInScaleRange(\n                  dataToPosition(this.getDatumPositionValues(datum, BOX_PLOT_OUTLIER_VALUE_FIELD), {\n                    bandPosition: this._bandPosition\n                  }),\n                  scale\n                )\n            };\n      this.setMarkStyle(outlierMark, outlierMarkPositionChannel, STATE_VALUE_ENUM.STATE_NORMAL, AttributeLevel.Series);\n    }\n  }\n\n  initData(): void {\n    super.initData();\n    if (!this._data) {\n      return;\n    }\n\n    registerDataSetInstanceTransform(this._dataSet, 'foldOutlierData', foldOutlierData);\n    registerDataSetInstanceTransform(this._dataSet, 'addVChartProperty', addVChartProperty);\n\n    const outlierDataView = new DataView(this._dataSet, { name: `${this.type}_outlier_${this.id}_data` });\n    outlierDataView.parse([this.getViewData()], {\n      type: 'dataview'\n    });\n    outlierDataView.name = `${PREFIX}_series_${this.id}_outlierData`;\n    outlierDataView.transform({\n      type: 'foldOutlierData',\n      options: {\n        dimensionField: this._direction === Direction.horizontal ? this._fieldY : this._fieldX,\n        outliersField: this._outliersField\n      }\n    });\n\n    outlierDataView.transform(\n      {\n        type: 'addVChartProperty',\n        options: {\n          beforeCall: initKeyMap.bind(this),\n          call: addDataKey\n        }\n      },\n      false\n    );\n\n    this._outlierDataView = new CompilableData(this._option, outlierDataView);\n  }\n\n  compileData() {\n    super.compileData();\n    this._outlierDataView?.compile();\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    //init在axis初始化之后才被执行，此时axisHelper不为空\n    this.initBoxPlotMarkStyle();\n  }\n\n  private _getMarkWidth() {\n    if (this._autoBoxWidth) {\n      return this._autoBoxWidth;\n    }\n    //获取自适应的图元宽度\n    const bandAxisHelper = this._direction === Direction.horizontal ? this._yAxisHelper : this._xAxisHelper;\n    const xField = this._direction === Direction.horizontal ? this._fieldY : this._fieldX;\n\n    const innerBandWidth = bandAxisHelper.getBandwidth(xField.length - 1);\n    const autoBoxWidth = innerBandWidth / xField.length;\n    this._autoBoxWidth = autoBoxWidth;\n\n    return this._autoBoxWidth;\n  }\n\n  onLayoutEnd() {\n    super.onLayoutEnd();\n    //每次布局结束，清除自适应宽度缓存\n    this._autoBoxWidth = null;\n  }\n\n  private _initAnimationSpec(config: any = {}) {\n    //将spec中的animation的type替换为箱型图的type\n    const newConfig = merge({}, config);\n    ['appear', 'enter', 'update', 'exit', 'disappear'].forEach(state => {\n      if (newConfig[state] && newConfig[state].type === 'scaleIn') {\n        newConfig[state].type = this._shaftShape === 'line' ? 'boxplotScaleIn' : 'barBoxplotScaleIn';\n      } else if (newConfig[state] && newConfig[state].type === 'scaleOut') {\n        newConfig[state].type = this._shaftShape === 'line' ? 'boxplotScaleOut' : 'barBoxplotScaleOut';\n      }\n    });\n    return newConfig;\n  }\n\n  initAnimation() {\n    const animationParams = getGroupAnimationParams(this);\n\n    if (this._boxPlotMark) {\n      const newDefaultConfig = this._initAnimationSpec(Factory.getAnimationInKey('scaleInOut')?.());\n      const newConfig = this._initAnimationSpec(\n        userAnimationConfig(SeriesMarkNameEnum.boxPlot, this._spec, this._markAttributeContext)\n      );\n      this._boxPlotMark.setAnimationConfig(animationConfig(newDefaultConfig, newConfig, animationParams));\n    }\n\n    if (this._outlierMark) {\n      const outlierMarkUserAnimation = {\n        appear: (this._spec.animationAppear as IMarkAnimateSpec<string>)?.symbol,\n        disappear: (this._spec.animationDisappear as IMarkAnimateSpec<string>)?.symbol,\n        enter: (this._spec.animationEnter as IMarkAnimateSpec<string>)?.symbol,\n        exit: (this._spec.animationExit as IMarkAnimateSpec<string>)?.symbol,\n        update: (this._spec.animationUpdate as IMarkAnimateSpec<string>)?.symbol\n      };\n      this._outlierMark.setAnimationConfig(\n        animationConfig(Factory.getAnimationInKey('scaleInOut')?.(), outlierMarkUserAnimation, animationParams)\n      );\n    }\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new BoxPlotSeriesTooltipHelper(this);\n    this._boxPlotMark && this._tooltipHelper.activeTriggerSet.mark.add(this._boxPlotMark);\n    this._outlierMark && this._tooltipHelper.activeTriggerSet.mark.add(this._outlierMark);\n  }\n\n  getStatisticFields() {\n    const fields = super.getStatisticFields();\n    const outliersField = fields.find(f => f.key === this._outliersField);\n    if (outliersField) {\n      outliersField.operations = ['array-min', 'array-max'];\n    }\n    return fields;\n  }\n\n  onEvaluateEnd(ctx: IModelEvaluateOption): void {\n    //初次编译时，会传入空数据；待所有计算完成后，需要重新执行updateData更新数据\n    super.onEvaluateEnd(ctx);\n    this._outlierDataView.updateData();\n  }\n\n  getDefaultShapeType(): string {\n    return 'square';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._boxPlotMark];\n  }\n}\n\nexport const registerBoxplotSeries = () => {\n  registerBoxPlotMark();\n  registerSymbolMark();\n  registerScaleInOutAnimation();\n  registerCartesianBandAxis();\n  registerCartesianLinearAxis();\n  registeBoxPlotScaleAnimation();\n  Factory.registerSeries(BoxPlotSeries.type, BoxPlotSeries);\n};\n"]}