{"version":3,"sources":["../src/series/geo/geo.ts"],"names":[],"mappings":"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","file":"geo.js","sourcesContent":["import type { IGeoCoordinateHelper } from '../../component/geo/interface';\nimport type { IPoint } from '../../typings';\nimport type { IGeoSeries } from '../interface';\nimport { SeriesTypeEnum } from '../interface/type';\nimport { BaseSeries } from '../base/base-series';\nimport { isNil } from '@visactor/vutils';\nimport type { DataView } from '@visactor/vdataset';\nimport { PREFIX } from '../../constant/base';\nimport type { IGeoSeriesSpec } from './interface';\nimport type { IMark } from '../../mark/interface';\nimport type { ICompilableData } from '../../compile/data';\n\nexport abstract class GeoSeries<T extends IGeoSeriesSpec = IGeoSeriesSpec> extends BaseSeries<T> implements IGeoSeries {\n  type: string = SeriesTypeEnum.geo;\n  readonly coordinate = 'geo';\n\n  protected _mapViewData: ICompilableData;\n  getMapViewData() {\n    return this._mapViewData?.getDataView();\n  }\n\n  protected _mapViewDataStatistics!: DataView;\n\n  _nameField!: string;\n  get nameField() {\n    return this._nameField;\n  }\n  set nameField(f: string) {\n    this._nameField = f;\n  }\n\n  _valueField!: string;\n  get valueField() {\n    return this._valueField;\n  }\n  set valueField(f: string) {\n    this._valueField = f;\n  }\n\n  protected _nameProperty: string = 'name';\n  getNameProperty() {\n    return this._nameProperty;\n  }\n\n  protected _centroidProperty?: string;\n  getCentroidProperty() {\n    return this._centroidProperty;\n  }\n\n  _coordinateHelper!: IGeoCoordinateHelper;\n  getCoordinateHelper() {\n    return this._coordinateHelper;\n  }\n  setCoordinateHelper(h: IGeoCoordinateHelper) {\n    this._coordinateHelper = h;\n  }\n\n  getStatisticFields() {\n    const fields: { key: string; operations: Array<'max' | 'min' | 'values'> }[] = [];\n    fields.push({ key: this._nameField, operations: ['values'] });\n    fields.push({ key: this._valueField, operations: ['max', 'min'] });\n    return fields;\n  }\n\n  getGroupFields(): string[] {\n    return null;\n  }\n\n  // position\n  dataToPosition(datum: any, checkInViewData?: boolean): IPoint | null {\n    let result: IPoint | null = null;\n\n    if (!datum) {\n      return result;\n    }\n    if (checkInViewData && !this.isDatumInViewData(datum)) {\n      return result;\n    }\n    const { dataToPosition, latitudeField, longitudeField } = this._coordinateHelper;\n\n    // 从地理数据映射中获取\n    result = this.nameToPosition(datum);\n\n    // 从用户传入的经纬度获取\n    if (result === null) {\n      const lonValue = longitudeField ? datum?.[longitudeField] : Number.NaN;\n      const latValue = latitudeField ? datum?.[latitudeField] : Number.NaN;\n      result = dataToPosition?.([lonValue, latValue]) ?? null;\n    }\n\n    return result;\n  }\n\n  protected nameToPosition(datum: any): IPoint | null {\n    const name = this.getDatumName(datum);\n    if (isNil(name)) {\n      return null;\n    }\n    return this.nameValueToPosition(name);\n  }\n\n  nameValueToPosition(name: string): IPoint | null {\n    const mapData = this.getMapViewData()?.latestData?.filter((data: any) => this.getDatumName(data) === name)[0];\n    if (isNil(mapData)) {\n      return null;\n    }\n\n    const { dataToPosition } = this._coordinateHelper;\n    const center = this.getDatumCenter(mapData);\n\n    const pos = dataToPosition?.(center);\n    if (isNil(pos) || isNaN(pos.x) || isNaN(pos.y)) {\n      return null;\n    }\n    return pos;\n  }\n\n  abstract getDatumCenter(datum: any): [number, number];\n  abstract getDatumName(datum: any): string;\n\n  dataToLatitude(latValue: number) {\n    if (!this._coordinateHelper) {\n      return Number.NaN;\n    }\n    const { dataToLatitude } = this._coordinateHelper;\n    return dataToLatitude(latValue);\n  }\n\n  dataToLongitude(lonValue: number) {\n    if (!this._coordinateHelper) {\n      return Number.NaN;\n    }\n    const { dataToLatitude } = this._coordinateHelper;\n    return dataToLatitude(lonValue);\n  }\n\n  valueToPosition(lonValue: number, latValue: number): IPoint {\n    return {\n      x: this.dataToLongitude(lonValue),\n      y: this.dataToLatitude(latValue)\n    };\n  }\n\n  positionToData(p: IPoint) {\n    // TODO\n  }\n  latitudeToData(lat: number) {\n    // TODO\n  }\n  longitudeToData(lon: number) {\n    // TODO\n  }\n\n  dataToPositionX(data: any): number {\n    this._option?.onError('Method not implemented.');\n    return 0;\n  }\n  dataToPositionY(data: any): number {\n    this._option?.onError('Method not implemented.');\n    return 0;\n  }\n  dataToPositionZ(data: any): number {\n    this._option?.onError('Method not implemented.');\n    return 0;\n  }\n\n  release() {\n    super.release();\n    this._mapViewData.release();\n    this._mapViewData = this._mapViewDataStatistics = null;\n  }\n\n  // TODO: geo 不支持 stack，这些方法没有意义\n  getStackGroupFields() {\n    return [this._nameField];\n  }\n\n  getStackValueField() {\n    // TODO: hack\n    return this._spec.valueField;\n  }\n\n  compileData() {\n    this._mapViewData?.compile();\n  }\n\n  protected initStatisticalData(): void {\n    super.initStatisticalData();\n    if (this._mapViewData) {\n      const viewDataName = `${PREFIX}_series_${this.id}_mapViewDataStatic`;\n      this._mapViewDataStatistics = this.createStatisticalData(viewDataName, this._mapViewData.getDataView());\n      this._mapViewData.getDataView().target.removeListener('change', this._mapViewDataStatistics.reRunAllTransform);\n    }\n  }\n\n  /** seriesField */\n  getSeriesKeys(): string[] {\n    if (this._seriesField) {\n      return (\n        this.getRawDataStatisticsByField(this._seriesField)?.values ??\n        this._mapViewDataStatistics?.latestData[this._seriesField]?.values ??\n        []\n      );\n    }\n    if (this.name) {\n      return [this.name];\n    }\n    if (this.userId) {\n      return [`${this.userId}`];\n    }\n    return [`${this.type}_${this.id}`];\n  }\n\n  fillData() {\n    super.fillData();\n    this._mapViewData.getDataView()?.reRunAllTransform();\n    this._mapViewDataStatistics?.reRunAllTransform();\n  }\n\n  getActiveMarks(): IMark[] {\n    return [];\n  }\n}\n"]}