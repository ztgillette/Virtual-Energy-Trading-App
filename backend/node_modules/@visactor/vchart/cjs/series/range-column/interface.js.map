{"version":3,"sources":["../src/series/range-column/interface.ts"],"names":[],"mappings":";;;AAeA,IAAkB,YAKjB;AALD,WAAkB,YAAY;IAC5B,iCAAiB,CAAA;IACjB,+BAAe,CAAA;IACf,2BAAW,CAAA;IACX,mCAAmB,CAAA;AACrB,CAAC,EALiB,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAK7B;AAED,IAAkB,kBAIjB;AAJD,WAAkB,kBAAkB;IAClC,uCAAiB,CAAA;IACjB,qCAAe,CAAA;IACf,iCAAW,CAAA;AACb,CAAC,EAJiB,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAInC","file":"interface.js","sourcesContent":["import type { IBarSeriesSpec } from '../bar/interface';\nimport type { ICartesianSeriesTheme } from '../cartesian/interface';\nimport type { IFormatMethod, IMarkSpec, IMarkTheme } from '../../typings/spec/common';\nimport type { IPositionedTextMarkSpec, IRectMarkSpec, ITextMarkSpec } from '../../typings/visual';\nimport type { IAnimationSpec } from '../../animation/spec';\nimport type { ILabelSpec } from '../../component/label/interface';\nimport type { SeriesMarkNameEnum } from '../interface/type';\nimport type { DirectionType } from '../../typings/space';\n\nexport interface IRangeColumnAnimationParams {\n  direction: DirectionType;\n}\n\nexport type RangeColumnAppearPreset = 'fadeIn' | 'grow';\n\nexport const enum PositionEnum {\n  middle = 'middle',\n  start = 'start',\n  end = 'end',\n  bothEnd = 'bothEnd'\n}\n\nexport const enum minMaxPositionEnum {\n  middle = 'middle',\n  start = 'start',\n  end = 'end'\n}\n\ntype RangeColumnMarks = 'rangeColumn';\n\nexport interface IRangeColumnSeriesSpec\n  extends Omit<IBarSeriesSpec, 'type' | 'label' | keyof IAnimationSpec<RangeColumnMarks, RangeColumnAppearPreset>>,\n    IAnimationSpec<RangeColumnMarks, RangeColumnAppearPreset> {\n  /** 系列类型 */\n  type: 'rangeColumn';\n\n  /**\n   * 数据字段配置\n   */\n  /* 区间最小值字段 */\n  minField: string;\n  /* 区间最大值字段 */\n  maxField: string;\n\n  /**\n   * 图元配置\n   */\n  [SeriesMarkNameEnum.bar]?: IMarkSpec<IRectMarkSpec>;\n\n  /**\n   * 标签配置\n   */\n  [SeriesMarkNameEnum.label]?: Partial<ILabelSpec> & {\n    /** 标签位置(支持两端显示 bothEnds) */\n    position?: PositionEnum;\n    [SeriesMarkNameEnum.minLabel]?: IMarkSpec<IPositionedTextMarkSpec> & {\n      /** 是否可见 */\n      visible?: boolean;\n      /** 标签位置 */\n      position?: keyof typeof minMaxPositionEnum;\n      /** 标签偏移量 */\n      offset?: number;\n      /**\n       * 文本格式化函数\n       * @param text 文本内容\n       * @param datum 文本对应的数据记录\n       * @returns 格式化后的文本\n       */\n      formatMethod?: IFormatMethod<[text: string | string[], datum?: any]>;\n    };\n    /** 最大值标签 */\n    [SeriesMarkNameEnum.maxLabel]?: IMarkSpec<IPositionedTextMarkSpec> & {\n      /** 是否可见 */\n      visible?: boolean;\n      /** 标签位置 */\n      position?: minMaxPositionEnum;\n      /** 标签偏移量 */\n      offset?: number;\n      /**\n       * 文本格式化函数\n       * @param text 文本内容\n       * @param datum 文本对应的数据记录\n       * @returns 格式化后的文本\n       */\n      formatMethod?: IFormatMethod<[text: string | string[], datum?: any]>;\n    };\n  };\n}\n\nexport interface IRangeColumnSeriesTheme extends ICartesianSeriesTheme {\n  [SeriesMarkNameEnum.bar]?: Partial<IMarkTheme<IRectMarkSpec>>;\n  [SeriesMarkNameEnum.label]?: Partial<ILabelSpec> & {\n    [SeriesMarkNameEnum.minLabel]?: Partial<IMarkTheme<ITextMarkSpec> & { position?: keyof typeof minMaxPositionEnum }>;\n    [SeriesMarkNameEnum.maxLabel]?: Partial<IMarkTheme<ITextMarkSpec> & { position?: keyof typeof minMaxPositionEnum }>;\n  };\n}\n"]}