{"version":3,"sources":["../src/series/range-column/animation.ts"],"names":[],"mappings":";;;AACA,gDAA6C;AAGtC,MAAM,iBAAiB,GAAG,CAAC,MAAmC,EAAwB,EAAE;IAC7F,OAAO;QACL,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE;YACP,SAAS,EAAE,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACzD;KACF,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,iBAAiB,qBAO5B;AAEF,MAAM,aAAa,GAAyB;IAC1C,IAAI,EAAE,QAAQ;CACf,CAAC;AAEK,MAAM,kBAAkB,GAAG,CAAC,MAAmC,EAAwB,EAAE;IAC9F,OAAO;QACL,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE;YACP,SAAS,EAAE,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACzD;KACF,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,kBAAkB,sBAO7B;AAEF,SAAgB,0BAA0B,CACxC,MAAmC,EACnC,MAA+B;IAE/B,QAAQ,MAAM,EAAE;QACd,KAAK,QAAQ;YACX,OAAO,aAAa,CAAC;QACvB,KAAK,MAAM,CAAC;QACZ;YACE,OAAO,IAAA,yBAAiB,EAAC,MAAM,CAAC,CAAC;KACpC;AACH,CAAC;AAXD,gEAWC;AAEM,MAAM,4BAA4B,GAAG,GAAG,EAAE;IAC/C,iBAAO,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,MAAmC,EAAE,MAA+B,EAAE,EAAE,CAAC,CAAC;QAClH,MAAM,EAAE,0BAA0B,CAAC,MAAM,EAAE,MAAM,CAAC;QAClD,KAAK,EAAE,IAAA,yBAAiB,EAAC,MAAM,CAAC;QAChC,IAAI,EAAE,IAAA,0BAAkB,EAAC,MAAM,CAAC;QAChC,SAAS,EAAE,IAAA,0BAAkB,EAAC,MAAM,CAAC;KACtC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AAPW,QAAA,4BAA4B,gCAOvC","file":"animation.js","sourcesContent":["import type { IAnimationTypeConfig } from '../../animation/interface';\nimport { Factory } from '../../core/factory';\nimport type { IRangeColumnAnimationParams, RangeColumnAppearPreset } from './interface';\n\nexport const rangeColumnGrowIn = (params: IRangeColumnAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: 'growCenterIn',\n    options: {\n      direction: params.direction === 'horizontal' ? 'x' : 'y'\n    }\n  };\n};\n\nconst Appear_FadeIn: IAnimationTypeConfig = {\n  type: 'fadeIn'\n};\n\nexport const rangeColumnGrowOut = (params: IRangeColumnAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: 'growCenterOut',\n    options: {\n      direction: params.direction === 'horizontal' ? 'x' : 'y'\n    }\n  };\n};\n\nexport function rangeColumnPresetAnimation(\n  params: IRangeColumnAnimationParams,\n  preset: RangeColumnAppearPreset\n): IAnimationTypeConfig {\n  switch (preset) {\n    case 'fadeIn':\n      return Appear_FadeIn;\n    case 'grow':\n    default:\n      return rangeColumnGrowIn(params);\n  }\n}\n\nexport const registerRangeColumnAnimation = () => {\n  Factory.registerAnimation('rangeColumn', (params: IRangeColumnAnimationParams, preset: RangeColumnAppearPreset) => ({\n    appear: rangeColumnPresetAnimation(params, preset),\n    enter: rangeColumnGrowIn(params),\n    exit: rangeColumnGrowOut(params),\n    disappear: rangeColumnGrowOut(params)\n  }));\n};\n"]}