{"version":3,"sources":["../src/series/gauge/gauge-pointer.ts"],"names":[],"mappings":";;;AAGA,6CAA0E;AAE1E,4CAAuE;AAGvE,iDAA6E;AAC7E,0DAA4D;AAE5D,0CAAmD;AACnD,0CAAmD;AACnD,yCAAoD;AACpD,gDAA6C;AAC7C,2CAA4D;AAC5D,2EAAgF;AAChF,sDAA4F;AAC5F,qEAAqE;AACrE,mFAA+E;AAE/E,MAAa,kBAEX,SAAQ,kCAAqB;IAF/B;;QAIE,SAAI,GAAG,qBAAc,CAAC,YAAY,CAAC;QAM1B,2BAAsB,GAAG,6DAAiC,CAAC;QAE5D,aAAQ,GAAqB,IAAI,CAAC;QAClC,iBAAY,GAAiC,IAAI,CAAC;QAClD,uBAAkB,GAAqB,IAAI,CAAC;IA4LtD,CAAC;IAxLC,eAAe;;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,CAAC,YAAY,GAAG,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,OAAO,0CAAE,IAAI,MAAK,MAAM,CAAC,CAAC,QAAmB,CAAC,OAAkB,CAAC;IAClG,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAc,CAAC;QAC/F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,iCAE7B,kBAAkB,CAAC,IAAI,CAAC,OAAO,KAClC,IAAI,EAAE,IAAI,CAAC,YAAY,KAEzB;YACE,YAAY,EAAE,IAAI;SACnB,CACW,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAc,CAAC;IAC7E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,UAAU;IAEV,CAAC;IAEO,oBAAoB;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACvC,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;gBAC7B,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE;;oBAClB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACzD,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,MAAA,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,0CAAG,CAAC,CAAC,mCAAI,CAAC,CAAC,CAAC;oBACrE,OAAO,CAAC,GAAG,EAAE,CAAC;gBAChB,CAAC;gBACD,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE;;oBAClB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACzD,MAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAA,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,0CAAG,CAAC,CAAC,mCAAI,CAAC,CAAC,CAAC;oBAC3E,OAAO,CAAC,GAAG,EAAE,CAAC;gBAChB,CAAC;gBACD,MAAM,EAAE,CAAC,KAAY,EAAE,EAAE;oBACvB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBAC5D,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChB,CAAC;gBACD,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBAC9B,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,YAAY,WAAsB,EAAE;gBAC3C,IAAI,CAAC,YAAY,CAAC,WAAwB,EAAE;oBAC1C,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACxC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACzC,KAAK,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC;iBACpE,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,WAAwB,EAAE;oBAC1C,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACvC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACzC,KAAK,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC;iBACpE,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,kDAAyB,CAAC,IAAI,CAAC,CAAC;QAE1D,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACxF,CAAC;IAES,iBAAiB,CAAC,KAAY,EAAE,QAAuC;;QAC/E,IAAI,MAAA,QAAQ,CAAC,UAAU,mCAAI,IAAI,EAAE;YAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;YACxC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAAE;YACvD,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAES,gBAAgB;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChE,CAAC;IAES,iBAAiB,CAAC,KAAY;;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,IAAA,gBAAO,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,IAAA,gBAAO,EAAC,WAAW,CAAC,EAAE;YAC1D,OAAO,CACL,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1D,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,mCAAI,CAAC,CAAC;gBAChC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,mCAAI,EAAE,CAAC,CAClC,CAAC;SACH;QACD,OAAO,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC1D,CAAC;IAES,gBAAgB,CAAC,KAAY;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC9C,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,IAAA,mBAAU,EAAS,MAAM,CAAC,CAAC;QACvC,MAAM,GAAG,GAAG,IAAA,mBAAU,EAAS,MAAM,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,IAAA,cAAK,EAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;IAES,8BAA8B,CAAC,KAAY;;QACnD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACvC,MAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,MAAA,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,0CAAG,CAAC,CAAC,mCAAI,CAAC,CAAC,CAAC;QACpE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAA,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,0CAAG,CAAC,CAAC,mCAAI,CAAC,CAAC,CAAC;QAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACzD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC7B,OAAO;YACL,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,CAAC,EAAE;SACP,CAAC;IACJ,CAAC;IAEO,0BAA0B;QAChC,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACnD,IAAI,iBAAiB,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE;gBACnC,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC;gBACvE,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAAC;gBACvE,MAAM,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,EAAE;gBACnE,MAAM,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,EAAE;gBACpE,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBAC9B,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,gBAAgB;QACtB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC/B,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;gBACzB,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC7D,CAAC,EAAE,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC7D,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,EAAE;gBACzD,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,EAAE;gBAC1D,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBAC9B,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;SACJ;IACH,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,aAAa;;QACX,MAAM,YAAY,GAAG,MAAC,MAAA,IAAI,CAAC,KAAK,0CAAE,eAA0C,0CAAE,MAAM,CAAC;QAErF,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAClC,IAAA,uBAAe,EACb,MAAA,iBAAO,CAAC,iBAAiB,CAAC,cAAc,CAAC,0CACvC;YACE,UAAU,EAAE,IAAI,CAAC,WAAW;SAC7B,EACD,YAAY,CACb,EACD,IAAA,2BAAmB,aAA6B,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CACxF,CACF,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,OAAO,EAAE,CAAC;IACZ,CAAC;;AAzMH,gDA0MC;AAvMiB,uBAAI,GAAW,qBAAc,CAAC,YAAY,CAAC;AAG3C,uBAAI,GAAkB,iCAAsB,CAAC;AAE7C,+BAAY,GAAG,EAAE,YAAY,EAAZ,4BAAY,EAAE,CAAC;AAChC,yCAAsB,GAAG,6DAAwC,CAAC;AAmM7E,MAAM,0BAA0B,GAAG,GAAG,EAAE;IAC7C,iBAAO,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;IACpE,IAAA,uBAAgB,GAAE,CAAC;IACnB,IAAA,uBAAgB,GAAE,CAAC;IACnB,IAAA,yCAA6B,GAAE,CAAC;IAChC,IAAA,6BAAqB,GAAE,CAAC;IACxB,IAAA,+BAAuB,GAAE,CAAC;AAC5B,CAAC,CAAC;AAPW,QAAA,0BAA0B,8BAOrC","file":"gauge-pointer.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { IMark, IPathMark, IRectMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport { clamp, isValid, maxInArray, minInArray } from '@visactor/vutils';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { IGaugePointerSeriesSpec, PinMarkSpec, PointerMarkSpec } from './interface';\nimport type { Datum } from '../../typings';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { ProgressLikeSeries } from '../polar/progress-like';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { registerPathMark } from '../../mark/path';\nimport { registerRectMark } from '../../mark/rect';\nimport { gaugePointerSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { registerGaugePointerAnimation } from './animation';\nimport { GaugePointerSeriesSpecTransformer } from './gauge-pointer-transformer';\nimport { registerPolarBandAxis, registerPolarLinearAxis } from '../../component/axis/polar';\nimport { GaugePointerTooltipHelper } from './pointer-tooltip-helper';\nimport { gaugePointer } from '../../theme/builtin/common/series/gauge-pointer';\n\nexport class GaugePointerSeries<\n  T extends IGaugePointerSeriesSpec = IGaugePointerSeriesSpec\n> extends ProgressLikeSeries<T> {\n  static readonly type: string = SeriesTypeEnum.gaugePointer;\n  type = SeriesTypeEnum.gaugePointer;\n\n  static readonly mark: SeriesMarkMap = gaugePointerSeriesMark;\n\n  static readonly builtInTheme = { gaugePointer };\n  static readonly transformerConstructor = GaugePointerSeriesSpecTransformer as any;\n  readonly transformerConstructor = GaugePointerSeriesSpecTransformer;\n\n  private _pinMark: IPathMark | null = null;\n  private _pointerMark: IPathMark | IRectMark | null = null;\n  private _pinBackgroundMark: IPathMark | null = null;\n\n  protected _pointerType: MarkTypeEnum;\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    // 半径信息\n    this.setRadiusField(this._spec.radiusField);\n\n    this._pointerType = this._spec.pointer?.type === 'rect' ? MarkTypeEnum.rect : MarkTypeEnum.path;\n  }\n\n  initMark(): void {\n    this._pinBackgroundMark = this._createMark(GaugePointerSeries.mark.pinBackground) as IPathMark;\n    this._pointerMark = this._createMark(\n      {\n        ...GaugePointerSeries.mark.pointer,\n        type: this._pointerType\n      },\n      {\n        isSeriesMark: true\n      }\n    ) as IPathMark;\n    this._pinMark = this._createMark(GaugePointerSeries.mark.pin) as IPathMark;\n  }\n\n  initMarkStyle(): void {\n    this.initPinBackgroundMarkStyle();\n    this.initPointerMarkStyle();\n    this.initPinMarkStyle();\n  }\n\n  initGroups() {\n    // do nothing\n  }\n\n  private initPointerMarkStyle() {\n    const pointerMark = this._pointerMark;\n    const pointerSpec = this._spec.pointer;\n    if (pointerMark) {\n      this.setMarkStyle(pointerMark, {\n        x: (datum: Datum) => {\n          const { x } = this._getPointerAnchor(datum, pointerSpec);\n          const dx = this._getPointerWidth() * (pointerSpec?.center?.[0] ?? 0);\n          return x - dx;\n        },\n        y: (datum: Datum) => {\n          const { y } = this._getPointerAnchor(datum, pointerSpec);\n          const dy = this._getPointerHeight(datum) * (pointerSpec?.center?.[1] ?? 0);\n          return y - dy;\n        },\n        anchor: (datum: Datum) => {\n          const { x, y } = this._getPointerAnchor(datum, pointerSpec);\n          return [x, y];\n        },\n        fill: this.getColorAttribute(),\n        zIndex: 200\n      });\n      if (this._pointerType === MarkTypeEnum.path) {\n        this.setMarkStyle(pointerMark as IPathMark, {\n          scaleX: this._getPointerWidth.bind(this),\n          scaleY: this._getPointerHeight.bind(this),\n          angle: (datum: Datum) => this._getPointerAngle(datum) + Math.PI / 2\n        });\n      } else {\n        this.setMarkStyle(pointerMark as IRectMark, {\n          width: this._getPointerWidth.bind(this),\n          height: this._getPointerHeight.bind(this),\n          angle: (datum: Datum) => this._getPointerAngle(datum) - Math.PI / 2\n        });\n      }\n    }\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new GaugePointerTooltipHelper(this);\n\n    this._pointerMark && this._tooltipHelper.activeTriggerSet.mark.add(this._pointerMark);\n  }\n\n  protected _getPointerAnchor(datum: Datum, markSpec: PinMarkSpec | PointerMarkSpec) {\n    if (markSpec.isOnCenter ?? true) {\n      return this.angleAxisHelper.center();\n    }\n    return this.radiusAxisHelper.coordToPoint({\n      radius: this._innerRadius * this._computeLayoutRadius(),\n      angle: this.angleAxisHelper.dataToPosition([datum[this._angleField[0]]])\n    });\n  }\n\n  protected _getPointerWidth() {\n    return this._spec.pointer.width * this._computeLayoutRadius();\n  }\n\n  protected _getPointerHeight(datum: Datum) {\n    const pointerSpec = this._spec.pointer;\n    const radiusField = this._radiusField[0];\n    if (isValid(this.radiusAxisHelper) && isValid(radiusField)) {\n      return (\n        this.radiusAxisHelper.dataToPosition([datum[radiusField]]) -\n        (pointerSpec?.innerPadding ?? 0) -\n        (pointerSpec?.outerPadding ?? 10)\n      );\n    }\n    return pointerSpec.height * this._computeLayoutRadius();\n  }\n\n  protected _getPointerAngle(datum: Datum) {\n    const scale = this.angleAxisHelper.getScale();\n    const domain = scale.domain();\n    const max = maxInArray<number>(domain);\n    const min = minInArray<number>(domain);\n    const angle = clamp(datum[this._angleField[0]], min, max);\n    return this.angleAxisHelper.dataToPosition([angle]);\n  }\n\n  protected _getRotatedPointerCenterOffset(datum: Datum) {\n    const pointerSpec = this._spec.pointer;\n    const x = this._getPointerWidth() * (pointerSpec?.center?.[0] ?? 0);\n    const y = -this._getPointerHeight(datum) * (pointerSpec?.center?.[1] ?? 0);\n    const angle = this._getPointerAngle(datum) - Math.PI / 2;\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n    const x1 = x * cos + y * sin;\n    const y1 = y * cos - x * sin;\n    return {\n      x: x1,\n      y: -y1\n    };\n  }\n\n  private initPinBackgroundMarkStyle() {\n    const pinBackgroundMark = this._pinBackgroundMark;\n    const pinBackgroundSpec = this._spec.pinBackground;\n    if (pinBackgroundMark) {\n      this.setMarkStyle(pinBackgroundMark, {\n        x: (datum: Datum) => this._getPointerAnchor(datum, pinBackgroundSpec).x,\n        y: (datum: Datum) => this._getPointerAnchor(datum, pinBackgroundSpec).y,\n        scaleX: () => pinBackgroundSpec.width * this._computeLayoutRadius(),\n        scaleY: () => pinBackgroundSpec.height * this._computeLayoutRadius(),\n        fill: this.getColorAttribute(),\n        zIndex: 100\n      });\n    }\n  }\n\n  private initPinMarkStyle() {\n    const pinMark = this._pinMark;\n    const pinSpec = this._spec.pin;\n    if (pinMark) {\n      this.setMarkStyle(pinMark, {\n        x: (datum: Datum) => this._getPointerAnchor(datum, pinSpec).x,\n        y: (datum: Datum) => this._getPointerAnchor(datum, pinSpec).y,\n        scaleX: () => pinSpec.width * this._computeLayoutRadius(),\n        scaleY: () => pinSpec.height * this._computeLayoutRadius(),\n        fill: this.getColorAttribute(),\n        zIndex: 300\n      });\n    }\n  }\n\n  getInteractionTriggers() {\n    return this._parseInteractionConfig(this._pointerMark ? [this._pointerMark] : []);\n  }\n\n  initAnimation() {\n    const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<any>)?.preset;\n\n    this._pointerMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('gaugePointer')?.(\n          {\n            startAngle: this._startAngle\n          },\n          appearPreset\n        ),\n        userAnimationConfig(SeriesMarkNameEnum.pointer, this._spec, this._markAttributeContext)\n      )\n    );\n  }\n\n  getDefaultShapeType() {\n    return 'circle';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [];\n  }\n}\n\nexport const registerGaugePointerSeries = () => {\n  Factory.registerSeries(GaugePointerSeries.type, GaugePointerSeries);\n  registerPathMark();\n  registerRectMark();\n  registerGaugePointerAnimation();\n  registerPolarBandAxis();\n  registerPolarLinearAxis();\n};\n"]}