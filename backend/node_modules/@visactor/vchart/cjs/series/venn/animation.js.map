{"version":3,"sources":["../src/series/venn/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourcesContent":["import { ACustomAnimate } from '@visactor/vrender-animate';\nimport type { IVennCircle, IVennOverlapArc, VennCircleName } from '@visactor/vlayouts';\nimport { getArcsFromCircles, getCirclesFromArcs, getPathFromArcs } from '@visactor/vlayouts';\n\nimport type { VennAppearPreset } from './interface';\nimport type { IAnimationTypeConfig } from '../../animation/interface';\n// import { ACustomAnimate } from '@visactor/vrender-animate';\nimport { Factory } from '../../core/factory';\n\nexport const vennCirclePresetAnimation = (preset: VennAppearPreset): IAnimationTypeConfig => {\n  switch (preset) {\n    case 'fadeIn': {\n      return {\n        type: 'fadeIn'\n      };\n    }\n    case 'growIn': {\n      return {\n        type: 'growRadiusIn'\n      };\n    }\n    case 'scaleIn': {\n      return {\n        type: 'scaleIn'\n      };\n    }\n    default: {\n      return {\n        type: 'fadeIn'\n      };\n    }\n  }\n};\n\nexport const vennOverlapPresetAnimation = (preset: VennAppearPreset): IAnimationTypeConfig => {\n  switch (preset) {\n    case 'fadeIn': {\n      return {\n        type: 'fadeIn'\n      };\n    }\n    case 'scaleIn': {\n      return {\n        type: 'scaleIn'\n      };\n    }\n    default: {\n      return {\n        type: 'fadeIn'\n      };\n    }\n  }\n};\n\nexport class VennOverlapAnimation extends ACustomAnimate<{ path: string; arcs: IVennOverlapArc[] }> {\n  protected fromCircles: Record<VennCircleName, IVennCircle>;\n  protected toCircles: Record<VennCircleName, IVennCircle>;\n\n  onBind(): void {\n    this.fromCircles = {};\n    getCirclesFromArcs((this.target.attribute as any).arcs)?.forEach((c: IVennCircle) => {\n      this.fromCircles[c.setId] = c;\n    });\n    this.toCircles = {};\n    getCirclesFromArcs(this.target.getFinalAttribute().arcs)?.forEach((c: IVennCircle) => {\n      this.toCircles[c.setId] = c;\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    const circles: IVennCircle[] = [];\n    Object.keys(this.fromCircles).forEach(key => {\n      const fromC = this.fromCircles[key];\n      const toC = this.toCircles[key];\n      if (fromC && toC) {\n        circles.push({\n          radius: fromC.radius + (toC.radius - fromC.radius) * ratio,\n          x: fromC.x + (toC.x - fromC.x) * ratio,\n          y: fromC.y + (toC.y - fromC.y) * ratio,\n          setId: key\n        } as IVennCircle);\n      }\n    });\n    const arcs = getArcsFromCircles(circles);\n\n    this.target.setAttributes({\n      arcs,\n      path: getPathFromArcs(arcs)\n    } as any);\n  }\n}\n\nexport const registerVennAnimation = () => {\n  Factory.registerAnimation('vennCircle', (params: unknown, preset: VennAppearPreset) => {\n    return {\n      appear: vennCirclePresetAnimation(preset),\n      enter: { type: 'growRadiusIn' },\n      exit: { type: 'growRadiusOut' },\n      disappear: { type: 'growRadiusOut' }\n    };\n  });\n  Factory.registerAnimation('vennOverlap', (params: unknown, preset: VennAppearPreset) => {\n    return {\n      appear: vennOverlapPresetAnimation(preset),\n      update: { custom: VennOverlapAnimation },\n      enter: { type: 'fadeIn' },\n      exit: { type: 'fadeOut' },\n      disappear: { type: 'fadeOut' }\n    };\n  });\n};\n"]}