{"version":3,"sources":["../src/series/base/tooltip-helper.ts"],"names":[],"mappings":"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","file":"tooltip-helper.js","sourcesContent":["import type { ISeriesTooltipSpec, ITooltipSpec, TooltipHandlerParams } from '../../component/tooltip/interface';\nimport type {\n  Datum,\n  ITooltipActual,\n  ITooltipLineActual,\n  ITooltipLinePattern,\n  ITooltipPattern,\n  MaybeArray,\n  ShapeType,\n  TooltipActiveType,\n  TooltipContentProperty,\n  TooltipData,\n  TooltipPatternCallback,\n  TooltipPatternProperty\n} from '../../typings';\nimport { array, isFunction, isValid } from '@visactor/vutils';\nimport type { ISeries, ISeriesTooltipHelper } from '../interface';\nimport type { IMark } from '../../mark/interface/common';\nimport { getTimeString, isActiveTypeVisible, parseContent } from '../../component/tooltip/utils/common';\nimport { getFirstDatumFromTooltipData, getTooltipContentValue } from '../../component/tooltip/utils/get-value';\nimport { isNil } from '../../util';\n\ninterface ISeriesCacheInfo {\n  seriesFields: string[];\n  dimensionFields: string[];\n  measureFields: string[];\n  type: string;\n}\n\nexport class BaseSeriesTooltipHelper implements ISeriesTooltipHelper {\n  series: ISeries;\n\n  spec: ISeriesTooltipSpec | undefined;\n  activeType: TooltipActiveType[];\n\n  activeTriggerSet = {\n    mark: new Set<IMark>(),\n    group: new Set<IMark>()\n  };\n  ignoreTriggerSet = {\n    mark: new Set<IMark>()\n  };\n  protected _seriesCacheInfo: ISeriesCacheInfo;\n\n  constructor(series: ISeries) {\n    this.series = series;\n    this.updateTooltipSpec();\n  }\n\n  updateTooltipSpec() {\n    const seriesTooltipSpec = this.series.getSpec()?.tooltip;\n\n    this.spec = seriesTooltipSpec;\n    this._seriesCacheInfo = this._getSeriesCacheInfo();\n  }\n\n  protected _getSeriesCacheInfo = (): ISeriesCacheInfo => {\n    const { series } = this;\n    const _seriesField = series.getSeriesField();\n    const seriesFields = isValid(_seriesField) ? array(_seriesField) : series.getSeriesKeys() ?? [];\n    return {\n      seriesFields,\n      dimensionFields: series.getDimensionField() ?? [],\n      measureFields: series.getMeasureField() ?? [],\n      type: series.type\n    };\n  };\n\n  protected _getDimensionData = (datum: any) => {\n    const { dimensionFields } = this._seriesCacheInfo;\n    return dimensionFields[0] && datum?.[dimensionFields[0]];\n  };\n\n  protected _getMeasureData = (datum: any) => {\n    const { measureFields } = this._seriesCacheInfo;\n    return measureFields[0] && datum?.[measureFields[0]];\n  };\n\n  protected _getSeriesFieldData = (datum: any) => {\n    const { dimensionFields, seriesFields } = this._seriesCacheInfo;\n\n    if (isValid(seriesFields[0]) && datum?.[seriesFields[0]]) {\n      return datum?.[seriesFields[0]];\n    }\n\n    const subDimensionField = dimensionFields[dimensionFields.length - 1];\n    if (dimensionFields.length > 1 && (seriesFields.length === 0 || this.series.getSeriesKeys().length <= 1)) {\n      return datum?.[subDimensionField];\n    }\n\n    return datum?.[subDimensionField];\n  };\n\n  protected _getSeriesStyle = (datum: any, styleKey: string | string[], defaultValue?: any) => {\n    for (const key of array(styleKey)) {\n      const value = this.series.getSeriesStyle(datum)?.(key);\n      if (isValid(value)) {\n        return value;\n      }\n    }\n    return defaultValue;\n  };\n\n  markTooltipKeyCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getSeriesFieldData(datum);\n  };\n\n  markTooltipValueCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getMeasureData(datum);\n  };\n\n  shapeTypeCallback = (datum: Datum, params?: TooltipHandlerParams): ShapeType | undefined => {\n    return (\n      this._getSeriesStyle(datum, 'shape', null) ??\n      this._getSeriesStyle(datum, 'symbolType', this.series.getDefaultShapeType())\n    );\n  };\n\n  shapeColorCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getSeriesStyle(datum, ['fill', 'stroke']);\n  };\n\n  shapeStrokeCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getSeriesStyle(datum, ['stroke', 'fill']);\n  };\n\n  dimensionTooltipTitleCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getDimensionData(datum);\n  };\n\n  groupTooltipTitleCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getSeriesFieldData(datum);\n  };\n\n  groupTooltipKeyCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    const { seriesFields } = this._seriesCacheInfo;\n    let dimensionFields = this._seriesCacheInfo.dimensionFields;\n    if (seriesFields[0]) {\n      dimensionFields = dimensionFields.filter(field => field !== seriesFields[0]);\n    }\n    return dimensionFields.map(field => datum?.[field]).join('-');\n  };\n\n  getHasShape = (isContent: boolean) => {\n    return !!isContent;\n  };\n\n  protected getShapeAttrs(activeType: TooltipActiveType, isContent: boolean, chartTooltipSpec?: ITooltipSpec) {\n    const key = isContent ? 'content' : 'title';\n    const shapeAttrs: ITooltipPattern = {\n      ...chartTooltipSpec?.style?.shape,\n      ...chartTooltipSpec?.[activeType],\n      ...(chartTooltipSpec as any)?.[activeType]?.[key],\n      ...this.spec?.[activeType],\n      ...(this.spec as any)?.[activeType]?.[key]\n    };\n\n    const res = {\n      shapeType: shapeAttrs.shapeType ?? this.shapeTypeCallback,\n      shapeFill: shapeAttrs.shapeFill ?? shapeAttrs.shapeColor ?? this.shapeColorCallback,\n      shapeStroke: shapeAttrs.shapeStroke ?? this.shapeStrokeCallback,\n      shapeHollow: shapeAttrs.shapeHollow ?? false,\n      shapeLineWidth: shapeAttrs.shapeLineWidth,\n      shapeSize: shapeAttrs.shapeSize ?? (shapeAttrs as any).size,\n      hasShape: shapeAttrs.hasShape ?? this.getHasShape(isContent)\n    };\n\n    return res;\n  }\n\n  protected enableByType(activeType: TooltipActiveType) {\n    return true;\n  }\n\n  protected getDefaultContentList(\n    activeType: TooltipActiveType\n  ): MaybeArray<TooltipPatternProperty<MaybeArray<ITooltipLinePattern>>> {\n    return [this.getDefaultContentPattern(activeType)];\n  }\n\n  protected getContentList(\n    activeType: TooltipActiveType,\n    spec: ITooltipPattern,\n    shapeAttrs: Record<string, TooltipContentProperty<any>>,\n    data?: TooltipData,\n    datum?: Datum[],\n    params?: TooltipHandlerParams\n  ): ITooltipLineActual[] {\n    return parseContent(\n      spec?.content ?? this.getDefaultContentList(activeType),\n      this.getDefaultContentPattern(activeType),\n      shapeAttrs,\n      data,\n      datum,\n      params\n    );\n  }\n\n  protected getTitleResult(\n    activeType: TooltipActiveType,\n    titleSpec: TooltipPatternProperty<ITooltipLinePattern>,\n    shapeAttrs: Record<string, TooltipContentProperty<any>>,\n    data?: TooltipData,\n    params?: TooltipHandlerParams\n  ) {\n    let titlePattern = isFunction(titleSpec)\n      ? ((titleSpec as TooltipPatternCallback<ITooltipLinePattern>)(data, params) as ITooltipLinePattern)\n      : (titleSpec as ITooltipLinePattern);\n\n    if (!titlePattern) {\n      titlePattern = this.getDefaultTitlePattern(activeType);\n    } else if (isNil(titlePattern.value)) {\n      titlePattern = {\n        ...this.getDefaultTitlePattern(activeType),\n        ...titlePattern\n      };\n    }\n\n    if (titlePattern && titlePattern.visible !== false) {\n      const datum = getFirstDatumFromTooltipData(data);\n      const res = {\n        visible: getTooltipContentValue(titlePattern.visible, datum, params),\n        value: getTimeString(\n          getTooltipContentValue(titlePattern.value, datum, params, titlePattern.valueFormatter),\n          titlePattern.valueTimeFormat,\n          titlePattern.valueTimeFormatMode\n        ),\n        valueStyle: getTooltipContentValue(titlePattern.valueStyle, datum, params),\n        hasShape: titlePattern.hasShape\n      } as ITooltipActual['title'];\n      Object.keys(shapeAttrs).forEach(key => {\n        (res as any)[key] = getTooltipContentValue(shapeAttrs[key], datum, params);\n      });\n\n      return res;\n    }\n\n    return {\n      hasShape: false,\n      visible: false\n    } as ITooltipActual['title'];\n  }\n\n  getTooltipData(\n    activeType: TooltipActiveType,\n    chartTooltipSpec?: ITooltipSpec,\n    data?: TooltipData,\n    datum?: Datum[],\n    params?: TooltipHandlerParams\n  ): ITooltipActual | null {\n    if (\n      !this.enableByType(activeType) ||\n      !isActiveTypeVisible(activeType, this.spec) ||\n      (activeType === 'dimension' && (!datum || !datum.length))\n    ) {\n      return null;\n    }\n    const patternSpec = this.spec?.[activeType] ?? chartTooltipSpec?.[activeType];\n    const contentShapeAttrs = this.getShapeAttrs(activeType, true, chartTooltipSpec);\n    const titleShapeAttrs = this.getShapeAttrs(activeType, false, chartTooltipSpec);\n    let content: ITooltipLineActual[];\n\n    if (activeType === 'dimension') {\n      content = [];\n      const userContents = this.getContentList(activeType, patternSpec, contentShapeAttrs, data, datum, params);\n\n      userContents.forEach(entry => {\n        content.push(entry);\n      });\n    } else {\n      content = this.getContentList(activeType, patternSpec, contentShapeAttrs, data, datum, params);\n    }\n\n    return {\n      visible: true,\n      activeType,\n      data,\n      title: this.getTitleResult(activeType, patternSpec?.title, titleShapeAttrs, data, params),\n      content\n    };\n  }\n\n  protected getDefaultTitlePattern(activeType: TooltipActiveType): ITooltipLinePattern {\n    return {\n      key: undefined,\n      value: activeType === 'group' ? this.groupTooltipTitleCallback : this.dimensionTooltipTitleCallback\n    };\n  }\n\n  protected getDefaultContentPattern(activeType: TooltipActiveType): ITooltipLinePattern {\n    return {\n      seriesId: this.series.id,\n      key: activeType === 'group' ? this.groupTooltipKeyCallback : this.markTooltipKeyCallback,\n      value: this.markTooltipValueCallback\n    };\n  }\n}\n"]}