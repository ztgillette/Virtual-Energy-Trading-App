{"version":3,"sources":["../src/series/pie/pie.ts"],"names":[],"mappings":"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","file":"pie.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { degreeToRadian, isValid } from '@visactor/vutils';\nimport { DataView } from '@visactor/vdataset';\nimport {\n  ARC_START_ANGLE,\n  ARC_END_ANGLE,\n  ARC_RATIO,\n  ARC_MIDDLE_ANGLE,\n  ARC_RADIAN,\n  ARC_QUADRANT,\n  ARC_K,\n  POLAR_START_RADIAN,\n  POLAR_END_RADIAN\n} from '../../constant/polar';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { DEFAULT_DATA_KEY, DEFAULT_DATA_INDEX } from '../../constant/data';\nimport { PREFIX } from '../../constant/base';\nimport type { IPoint, Datum, StateValueType, IArcMarkSpec, ILayoutNumber } from '../../typings';\nimport { normalizeStartEndAngle } from '../../util/math';\nimport { isSpecValueWithScale } from '../../util/scale';\nimport { field } from '../../util/object';\nimport { PolarSeries } from '../polar/polar';\nimport type { IArcMark, IMark, IMarkStyle, IPathMark, ITextMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport type { IArcSeries, SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { IPieOpt } from '../../data/transforms/pie';\n// eslint-disable-next-line no-duplicate-imports\nimport { pie } from '../../data/transforms/pie';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { registerEmptyCircleAnimation, registerPieAnimation } from './animation/animation';\nimport { animationConfig, shouldMarkDoMorph, userAnimationConfig } from '../../animation/utils';\nimport type { IAnimationTypeConfig, TypeAnimationConfig } from '../../animation/interface';\nimport { AnimationStateEnum } from '../../animation/interface';\nimport type {\n  IBasePieSeriesSpec,\n  IPieAnimationParams,\n  IPieSeriesSpec,\n  IPieSeriesTheme,\n  PieAppearPreset\n} from './interface';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { centerOffsetConfig } from './animation/centerOffset';\nimport { registerArcMark } from '../../mark/arc';\nimport { pieSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { isNil, polarToCartesian } from '@visactor/vutils';\nimport { PieSeriesSpecTransformer } from './pie-transformer';\nimport { DEFAULT_LABEL_VISIBLE } from '../../constant/label';\nimport { ChartEvent } from '../../constant/event';\nimport { computeLayoutRadius } from '../../component/axis/polar/util/common';\nimport { calcLayoutNumber } from '../../util/space';\nimport type { ICompilableData } from '../../compile/data';\nimport { CompilableData } from '../../compile/data';\nimport { pie as pieTheme } from '../../theme/builtin/common/series/pie';\n\nexport class BasePieSeries<T extends IBasePieSeriesSpec> extends PolarSeries<T> implements IArcSeries {\n  static readonly transformerConstructor = PieSeriesSpecTransformer as any;\n  readonly transformerConstructor = PieSeriesSpecTransformer;\n\n  protected _pieMarkName: string = SeriesMarkNameEnum.pie;\n  protected _pieMarkType: string = MarkTypeEnum.arc;\n\n  static readonly mark: SeriesMarkMap = pieSeriesMark;\n  static readonly builtInTheme: Record<string, IPieSeriesTheme> = { pie: pieTheme };\n\n  protected _viewDataLabel!: ICompilableData;\n\n  // 饼图渲染不依赖于极坐标系轴，因此由 series 自己存储相关配置信息\n  getCenter = (): IPoint => {\n    const layoutRect = this._region.getLayoutRect();\n\n    return {\n      x: calcLayoutNumber(this._spec?.centerX as ILayoutNumber, layoutRect.width, layoutRect, layoutRect.width / 2),\n      y: calcLayoutNumber(this._spec?.centerY as ILayoutNumber, layoutRect.height, layoutRect, layoutRect.height / 2)\n    };\n  };\n  protected _centerOffset!: number;\n\n  protected _cornerRadius!: number;\n\n  protected _startAngle: number = POLAR_START_RADIAN;\n  protected _endAngle: number = POLAR_END_RADIAN;\n  protected _padAngle!: number;\n\n  protected _pieMark: IArcMark | null = null;\n  protected _labelMark: ITextMark | null = null;\n  protected _labelLineMark: IPathMark | null = null;\n\n  protected _showEmptyCircle: boolean;\n  protected _emptyArcMark: IArcMark | null = null;\n\n  protected _showAllZero: boolean;\n  protected _supportNegative: boolean;\n\n  protected _buildMarkAttributeContext() {\n    super._buildMarkAttributeContext();\n    // center\n    this._markAttributeContext.getCenter = () => ({\n      x: () => this.getCenter().x,\n      y: () => this.getCenter().y\n    });\n\n    // angle scale\n    this._markAttributeContext.startAngleScale = (datum: Datum) => this.startAngleScale(datum);\n    this._markAttributeContext.endAngleScale = (datum: Datum) => this.endAngleScale(datum);\n  }\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this._centerOffset = this._spec.centerOffset ?? 0;\n    this._cornerRadius = this._spec.cornerRadius ?? 0;\n\n    const normalized = normalizeStartEndAngle(\n      isValid(this._spec.startAngle) ? degreeToRadian(this._spec.startAngle) : this._startAngle,\n      isValid(this._spec.endAngle) ? degreeToRadian(this._spec.endAngle) : this._endAngle\n    );\n    this._startAngle = normalized.startAngle;\n    this._endAngle = normalized.endAngle;\n    this._padAngle = isValid(this._spec.padAngle) ? degreeToRadian(this._spec.padAngle) : 0;\n\n    // 值信息给角度，angleField 是为了兼容小组件用法，因为 spec 改造前已经开放了\n    this.setAngleField(this._spec.valueField || this._spec.angleField);\n    if (this._spec.categoryField) {\n      this.setSeriesField(this._spec.categoryField);\n    }\n    this._radiusField = [];\n\n    this._specAngleField = this._angleField.slice();\n    this._specRadiusField = [];\n\n    this._showEmptyCircle = this._spec.emptyPlaceholder?.showEmptyCircle ?? false;\n\n    this._showAllZero = this._spec.showAllZero ?? false;\n    this._supportNegative = this._spec.supportNegative ?? false;\n  }\n\n  initData() {\n    super.initData();\n\n    const viewData = this.getViewData();\n    if (!viewData) {\n      return;\n    }\n\n    registerDataSetInstanceTransform(this._dataSet, 'pie', pie);\n\n    viewData.transform(\n      {\n        type: 'pie',\n        options: {\n          angleField: () => this._angleField[0],\n          startAngle: () => this._startAngle,\n          endAngle: () => this._endAngle,\n          minAngle: () => (isValid(this._spec.minAngle) ? degreeToRadian(this._spec.minAngle) : 0),\n          asStartAngle: ARC_START_ANGLE,\n          asEndAngle: ARC_END_ANGLE,\n          asRatio: ARC_RATIO,\n          asMiddleAngle: ARC_MIDDLE_ANGLE,\n          asRadian: ARC_RADIAN,\n          asQuadrant: ARC_QUADRANT,\n          asK: ARC_K,\n          showAllZero: this._showAllZero,\n          supportNegative: this._supportNegative,\n          showEmptyCircle: this._showEmptyCircle\n        } as IPieOpt\n      },\n      false\n    );\n\n    const viewDataLabel = new DataView(this._dataSet, { name: `${PREFIX}_series_${this.id}_viewDataLabel` });\n    viewDataLabel.parse([this.getViewData()], {\n      type: 'dataview'\n    });\n\n    this._viewDataLabel = new CompilableData(this._option, viewDataLabel);\n  }\n\n  compileData() {\n    super.compileData();\n    this._viewDataLabel?.compile();\n  }\n\n  initMark(): void {\n    this._pieMark = this._createMark(\n      {\n        ...BasePieSeries.mark.pie,\n        name: this._pieMarkName,\n        type: this._pieMarkType\n      },\n      {\n        key: DEFAULT_DATA_KEY,\n        groupKey: this._seriesField,\n        isSeriesMark: true\n      },\n      {\n        morph: shouldMarkDoMorph(this._spec, this._pieMarkName),\n        morphElementKey: this._seriesField\n      }\n    ) as IArcMark;\n\n    if (this._showEmptyCircle) {\n      this._emptyArcMark = this._createMark(\n        {\n          name: 'emptyCircle',\n          type: 'arc'\n        },\n        {\n          dataView: false\n        }\n      ) as IArcMark;\n\n      this._data.addRelatedMark(this._emptyArcMark);\n    }\n  }\n\n  private startAngleScale(datum: Datum) {\n    return field(ARC_START_ANGLE)(datum);\n  }\n\n  private endAngleScale(datum: Datum) {\n    return field(ARC_END_ANGLE)(datum);\n  }\n\n  protected _computeLayoutRadius() {\n    return computeLayoutRadius(\n      () => this._spec.layoutRadius,\n      this.getLayoutRect,\n      this.getCenter,\n      () => ({ startAngle: this._startAngle, endAngle: this._endAngle })\n    );\n  }\n\n  initMarkStyle(): void {\n    const initialStyle: Partial<IMarkStyle<IArcMarkSpec>> = {\n      x: () => this.getCenter().x,\n      y: () => this.getCenter().y,\n      fill: this.getColorAttribute(),\n      outerRadius: isSpecValueWithScale(this._outerRadius)\n        ? this._outerRadius\n        : () => this._computeLayoutRadius() * this._outerRadius,\n      innerRadius: isSpecValueWithScale(this._innerRadius)\n        ? this._innerRadius\n        : () => this._computeLayoutRadius() * this._innerRadius,\n      cornerRadius: () => this._computeLayoutRadius() * this._cornerRadius,\n      startAngle: datum => this.startAngleScale(datum),\n      endAngle: datum => this.endAngleScale(datum),\n      padAngle: this._padAngle,\n      centerOffset: this._centerOffset\n    };\n\n    const pieMark = this._pieMark;\n    if (pieMark) {\n      this.setMarkStyle(pieMark, initialStyle, 'normal', AttributeLevel.Series);\n    }\n\n    /**\n     * !important\n     * !TODO: isDataEmpty执行了2次, 需要结构上优化, 保存isEmpty的状态, 尝试将2次执行优化为1次\n     */\n    const emptyPieMark = this._emptyArcMark;\n    if (emptyPieMark) {\n      this.setMarkStyle(\n        emptyPieMark,\n        {\n          ...initialStyle,\n          visible: () => {\n            const data = this.getViewData().latestData;\n            return !data || !data.length;\n          }\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  getInteractionTriggers() {\n    return this._parseInteractionConfig(this._pieMark ? [this._pieMark] : []);\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._pieMark && this._tooltipHelper.activeTriggerSet.mark.add(this._pieMark);\n  }\n\n  initMarkStyleWithSpec(mark?: IMark, spec?: any): void {\n    super.initMarkStyleWithSpec(mark, spec);\n    if (mark.name === this._pieMarkName) {\n      // radius 配置需要额外处理比例值\n      const pieSpec = this.getSpec()[mark.name as 'pie'];\n      if (pieSpec) {\n        for (const state in pieSpec.state || {}) {\n          this.setMarkStyle(mark, this.generateRadiusStyle(pieSpec.state[state]), state, AttributeLevel.User_Mark);\n        }\n      }\n    }\n    if (mark.name === 'emptyCircle') {\n      // 使用emptyCircle的radius比例值进行覆盖\n      this.setMarkStyle(mark, this.generateRadiusStyle(spec.style), 'normal', AttributeLevel.User_Mark);\n    }\n  }\n\n  initLabelMarkStyle(textMark: ITextMark) {\n    if (!textMark) {\n      return;\n    }\n    this.setMarkStyle(textMark, {\n      visible: field(DEFAULT_LABEL_VISIBLE).bind(this),\n      text: (datum: Datum) => {\n        return datum[this.getDimensionField()[0]];\n      },\n      fill: this.getColorAttribute(),\n      z: this.dataToPositionZ.bind(this)\n    });\n  }\n\n  afterInitMark(): void {\n    super.afterInitMark();\n  }\n\n  initEvent(): void {\n    super.initEvent();\n    this._viewDataLabel.getDataView()?.target.addListener('change', this.viewDataLabelUpdate.bind(this));\n  }\n\n  // 饼图不支持分组\n  initGroups() {\n    return;\n  }\n\n  /**\n   * @override\n   * @param ctx\n   */\n  onLayoutEnd(): void {\n    this._viewDataLabel.getDataView().reRunAllTransform();\n    this.onMarkPositionUpdate();\n    super.onLayoutEnd();\n  }\n\n  getDimensionField(): string[] {\n    return this._seriesField ? [this._seriesField] : [];\n  }\n  getMeasureField(): string[] {\n    return this._specAngleField;\n  }\n\n  private viewDataLabelUpdate() {\n    this.event.emit(ChartEvent.viewDataLabelUpdate, { model: this });\n    this._viewDataLabel.updateData();\n  }\n\n  protected generateRadiusStyle(spec: any) {\n    if (!spec) {\n      return;\n    }\n    const style: any = {};\n    spec.outerRadius && (style.outerRadius = () => this._computeLayoutRadius() * spec.outerRadius);\n    spec.innerRadius && (style.innerRadius = () => this._computeLayoutRadius() * spec.innerRadius);\n    spec.cornerRadius && (style.cornerRadius = () => this._computeLayoutRadius() * spec.cornerRadius);\n    return style;\n  }\n\n  computeCenter(datum: Datum): IPoint {\n    return {\n      x: this._pieMark.getAttribute('x', datum, 'normal') as number,\n      y: this._pieMark.getAttribute('y', datum, 'normal') as number\n    };\n  }\n\n  getRadius(state: StateValueType = 'normal'): number {\n    const styleRadius =\n      state === 'normal'\n        ? (this.getSpec() as any)[this._pieMark?.name || 'pie']?.style?.outerRadius\n        : (this.getSpec() as any)[this._pieMark?.name || 'pie']?.state?.[state]?.outerRadius;\n    return styleRadius ?? this._outerRadius;\n  }\n\n  getInnerRadius(state: StateValueType = 'normal'): number {\n    const styleRadius =\n      state === 'normal'\n        ? (this.getSpec() as any)[this._pieMark?.name || 'pie']?.style?.innerRadius\n        : (this.getSpec() as any)[this._pieMark?.name || 'pie']?.state?.[state]?.innerRadius;\n    return styleRadius ?? this._innerRadius;\n  }\n\n  computeRadius(r: number, k?: number): number {\n    return this._computeLayoutRadius() * r * (isNil(k) ? 1 : k) + this._centerOffset;\n  }\n\n  computeDatumRadius(datum: Datum, state?: string): number {\n    return this._computeLayoutRadius() * this.getRadius(state) + this._centerOffset;\n  }\n\n  _compareSpec(spec: T, prevSpec: T, ignoreCheckKeys?: { [key: string]: true }) {\n    ignoreCheckKeys = ignoreCheckKeys ?? { data: true };\n    const defaultIgnoreKeys: string[] = [\n      'centerX',\n      'centerY',\n      'centerOffset',\n      'radius',\n      'innerRadius',\n      'cornerRadius',\n      'startAngle',\n      'endAngle',\n      'padAngle'\n    ];\n    defaultIgnoreKeys.forEach(key => {\n      ignoreCheckKeys[key] = true;\n    });\n\n    const result = super._compareSpec(spec, prevSpec, ignoreCheckKeys);\n    spec = spec ?? ({} as T);\n    if (defaultIgnoreKeys.some(key => (spec as any)[key] !== (prevSpec as any)[key])) {\n      result.reRender = true;\n      result.change = true;\n    }\n    return result;\n  }\n\n  computeDatumInnerRadius(datum: Datum, state?: string): number {\n    return this._computeLayoutRadius() * this.getInnerRadius(state) + this._centerOffset;\n  }\n\n  dataToPosition(datum: Datum, checkInViewData?: boolean): IPoint | null {\n    const angle = datum[ARC_MIDDLE_ANGLE];\n    if (isNil(angle)) {\n      return null;\n    }\n    if (checkInViewData && !this.isDatumInViewData(datum)) {\n      return null;\n    }\n    const radius = this.computeDatumRadius(datum);\n    const center = this.computeCenter(datum);\n\n    return polarToCartesian(center, radius, angle);\n  }\n\n  dataToCentralPosition = (datum: Datum): IPoint | null => {\n    // 和 PieSeries.dataToPosition 实现不同，这里考虑了美观性，返回的位置是曲边梯形的中心\n    const angle = datum[ARC_MIDDLE_ANGLE];\n    if (isNil(angle)) {\n      return null;\n    }\n    const radius = this.computeDatumRadius(datum);\n    const innerRadius = this.computeDatumInnerRadius(datum);\n    const center = this.computeCenter(datum);\n\n    return polarToCartesian(center, (radius + innerRadius) / 2, angle);\n  };\n\n  initAnimation() {\n    const animationParams: IPieAnimationParams = {\n      growFrom: (datum, graphic, state) => {\n        if (state === AnimationStateEnum.appear) {\n          return this._startAngle;\n        }\n        if (state === AnimationStateEnum.disappear) {\n          return this._endAngle;\n        }\n        const outState = [AnimationStateEnum.disappear, AnimationStateEnum.exit];\n        const markElements = this._pieMark.getGraphics();\n        const data = datum;\n        const dataIndex = data?.[DEFAULT_DATA_INDEX];\n        // 当前 mark 在上个状态是否处于第一个\n        if (markElements.find(e => e.context.data[0]?.[DEFAULT_DATA_INDEX] < dataIndex) === undefined) {\n          return this._startAngle;\n        }\n        // 当前 mark 在上个状态是否处于最后一个\n        if (markElements.find(e => e.context.data[0]?.[DEFAULT_DATA_INDEX] > dataIndex) === undefined) {\n          return this._endAngle;\n        }\n        // 扇形不在边缘时，获取扇形生长点：获取相邻状态下相邻扇形的边缘\n        const prevMarkElement = [...markElements]\n          .reverse()\n          .find(e => e.context.data[0]?.[DEFAULT_DATA_INDEX] < dataIndex);\n        if (outState.includes(state)) {\n          return prevMarkElement?.getFinalAttribute()?.endAngle;\n        }\n        return (prevMarkElement?.attribute as any)?.endAngle;\n      }\n    };\n    const appearPreset = (this._spec.animationAppear as IStateAnimateSpec<PieAppearPreset>)?.preset;\n    if (this._pieMark) {\n      const pieAnimationConfig = animationConfig(\n        Factory.getAnimationInKey('pie')?.(animationParams, appearPreset),\n        userAnimationConfig(SeriesMarkNameEnum.pie, this._spec, this._markAttributeContext)\n      );\n      if (pieAnimationConfig.normal && (pieAnimationConfig.normal as TypeAnimationConfig).type) {\n        pieAnimationConfig.normal = centerOffsetConfig(\n          this._pieMark,\n          pieAnimationConfig.normal as IAnimationTypeConfig\n        );\n      }\n      this._pieMark.setAnimationConfig(pieAnimationConfig);\n    }\n    if (this._emptyArcMark) {\n      const pieAnimationConfig = animationConfig(\n        Factory.getAnimationInKey('emptyCircle')?.(animationParams, appearPreset ?? 'fadeIn')\n      );\n      this._emptyArcMark.setAnimationConfig(pieAnimationConfig);\n    }\n  }\n\n  getDefaultShapeType() {\n    return 'circle';\n  }\n\n  getGroupFields(): string[] {\n    // do nothing\n    return [];\n  }\n\n  getStackGroupFields(): string[] {\n    // do nothing\n    return [];\n  }\n\n  getStackValueField(): string {\n    // do nothing\n    return '';\n  }\n\n  // make sure this function fast\n  protected _noAnimationDataKey(datum: Datum, index: number) {\n    return index;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._pieMark];\n  }\n}\n\nexport class PieSeries<T extends IPieSeriesSpec = IPieSeriesSpec> extends BasePieSeries<T> implements IArcSeries {\n  static readonly type: string = SeriesTypeEnum.pie;\n  type = SeriesTypeEnum.pie;\n}\n\nexport const registerPieSeries = () => {\n  registerArcMark();\n  registerPieAnimation();\n  registerEmptyCircleAnimation();\n  Factory.registerSeries(PieSeries.type, PieSeries);\n};\n"]}