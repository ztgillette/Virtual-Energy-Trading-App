{"version":3,"sources":["../src/series/pie/animation/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourcesContent":["import type { IAnimationTypeConfig } from '../../../animation/interface';\nimport { AnimationStateEnum } from '../../../animation/interface';\nimport type { Datum } from '../../../typings';\nimport { Factory } from '../../../core/factory';\nimport type { IPieAnimationParams, PieAppearPreset } from '../interface';\nimport type { IMarkGraphic } from '../../../core';\n\n/**\n * grow生长option\n * 在appear时，所有柱子一起从同一个位置生长，需要growXXXOverall效果；\n * 在enter时，柱子应该从自身位置生长；\n * @param params\n * @param isOverall\n * @returns\n */\nexport function pieGrowOption(pieParams: IPieAnimationParams, isOverall: boolean, state: AnimationStateEnum) {\n  return (datum: Datum, graphic: IMarkGraphic, params: AnimationStateEnum) => {\n    if (isOverall) {\n      if (pieParams.growField === 'radius') {\n        return {\n          overall: 0\n        };\n      }\n      return {\n        overall: pieParams.growFrom(datum, graphic, state)\n      };\n    }\n    return {\n      overall: false\n    };\n  };\n}\n\nexport const Appear_Grow = (params: IPieAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: params.growField === 'radius' ? 'growRadiusIn' : 'growAngleIn',\n    options: pieGrowOption(params, true, AnimationStateEnum.appear)\n  };\n};\n\nexport const Appear_FadeIn = {\n  type: 'fadeIn'\n};\n\nexport const pieEnter = (params: IPieAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: params.growField === 'radius' ? 'growRadiusIn' : 'growAngleIn',\n    easing: 'linear',\n    options: pieGrowOption(params, true, AnimationStateEnum.enter)\n  };\n};\n\nexport const pieExit = (params: IPieAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: params.growField === 'radius' ? 'growRadiusOut' : 'growAngleOut',\n    easing: 'linear',\n    options: pieGrowOption(params, true, AnimationStateEnum.exit)\n  };\n};\n\nexport const pieDisappear = (params: IPieAnimationParams): IAnimationTypeConfig => {\n  return {\n    type: params.growField === 'radius' ? 'growRadiusOut' : 'growAngleOut',\n    options: pieGrowOption(params, true, AnimationStateEnum.exit)\n  };\n};\n\nexport function piePresetAnimation(params: IPieAnimationParams, preset: PieAppearPreset | boolean) {\n  if (preset === false) {\n    return {};\n  }\n  switch (preset) {\n    case 'fadeIn':\n      return Appear_FadeIn;\n    case 'growRadius':\n      return Appear_Grow({\n        ...params,\n        growField: 'radius'\n      });\n    default:\n      return Appear_Grow({\n        ...params,\n        growField: 'angle'\n      });\n  }\n}\n\nexport const registerPieAnimation = () => {\n  Factory.registerAnimation('pie', (params: IPieAnimationParams, preset: PieAppearPreset) => {\n    return {\n      appear: piePresetAnimation(params, preset),\n      enter: pieEnter(params),\n      exit: pieExit(params),\n      disappear: pieDisappear(params)\n    };\n  });\n};\n\nexport const registerEmptyCircleAnimation = () => {\n  Factory.registerAnimation('emptyCircle', (params: IPieAnimationParams, preset: PieAppearPreset) => {\n    return {\n      appear: piePresetAnimation(params, preset)\n    };\n  });\n};\n"]}