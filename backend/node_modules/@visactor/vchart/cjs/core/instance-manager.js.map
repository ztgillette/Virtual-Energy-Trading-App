{"version":3,"sources":["../src/core/instance-manager.ts"],"names":[],"mappings":";;;AAAA,6CAAyC;AAKzC,MAAa,eAAe;IAI1B,MAAM,CAAC,gBAAgB,CAAC,QAAiB;QACvC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,kBAAkB,CAAC,QAAiB;QACzC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAMD,MAAM,CAAC,WAAW,CAAC,EAAU;QAC3B,OAAO,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAMD,MAAM,CAAC,aAAa,CAAC,EAAU;QAC7B,OAAO,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,OAAO,CACZ,UAA8E,EAC9E,YAAgC,EAAE,EAClC,OAAa;QAEb,MAAM,aAAa,GAAG,IAAA,cAAK,EAAC,SAAS,CAAC,CAAC;QACvC,OAAO,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAiB,EAAE,EAAU,EAAE,GAAyB,EAAE,EAAE;YACpG,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBAC9B,OAAO;aACR;YACD,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAChC,CAAC,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;;AAxCH,0CAyCC;AAvCiB,yBAAS,GAAyB,IAAI,GAAG,EAAE,CAAC","file":"instance-manager.js","sourcesContent":["import { array } from '@visactor/vutils';\nimport type { MaybeArray } from '../typings';\nimport type { IVChart } from './interface';\n\n/** vchart 全局实例管理类，为了防止与 ThemeManager 循环依赖，单独从 VChart 类抽出 */\nexport class InstanceManager {\n  /** 全局实例 map */\n  static readonly instances: Map<number, IVChart> = new Map();\n  /** 注册实例 */\n  static registerInstance(instance: IVChart) {\n    InstanceManager.instances.set(instance.id, instance);\n  }\n  /** 注销实例 */\n  static unregisterInstance(instance: IVChart) {\n    InstanceManager.instances.delete(instance.id);\n  }\n  /**\n   * 根据 vChart 实例的 id 获取 vChart 实例\n   * @param id VChart 实例的 id，通过 vChart.id 获取\n   * @returns\n   */\n  static getInstance(id: number): IVChart | undefined {\n    return InstanceManager.instances.get(id);\n  }\n  /**\n   * 根据图表 id 判断实例是否存在\n   * @param id VChart 实例的 id，通过 vChart.id 获取\n   * @returns\n   */\n  static instanceExist(id: number): boolean {\n    return InstanceManager.instances.has(id);\n  }\n\n  static forEach(\n    callbackfn: (instance: IVChart, id: number, map: Map<number, IVChart>) => void,\n    excludeId: MaybeArray<number> = [],\n    thisArg?: any\n  ) {\n    const excludeIdList = array(excludeId);\n    return InstanceManager.instances.forEach((instance: IVChart, id: number, map: Map<number, IVChart>) => {\n      if (excludeIdList.includes(id)) {\n        return;\n      }\n      callbackfn(instance, id, map);\n    }, thisArg);\n  }\n}\n"]}