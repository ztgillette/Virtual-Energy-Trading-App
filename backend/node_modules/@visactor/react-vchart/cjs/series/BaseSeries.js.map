{"version":3,"sources":["../src/series/BaseSeries.tsx"],"names":[],"mappings":"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","file":"BaseSeries.js","sourcesContent":["import React from 'react';\nimport { isNil, pickWithout } from '@visactor/vutils';\nimport RootChartContext from '../context/chart';\nimport {\n  REACT_TO_VCHART_EVENTS,\n  EventsProps,\n  findEventProps,\n  COMMON_EVENTK_KEYS,\n  VCHART_TO_REACT_EVENTS\n} from '../eventsUtils';\nimport { VChart } from '@visactor/vchart';\nexport interface BaseSeriesProps extends EventsProps {\n  id?: string | number;\n}\n\nexport const createSeries = <T extends BaseSeriesProps>(\n  componentName: string,\n  markNames: string[],\n  type?: string,\n  registers?: (() => void)[]\n) => {\n  if (registers && registers.length) {\n    VChart.useRegisters(registers);\n  }\n\n  const ignoreKeys = ['updateId', 'componentId'];\n  const notSpecKeys = COMMON_EVENTK_KEYS.concat(ignoreKeys);\n\n  const addMarkId = (spec: any, seriesId: string | number) => {\n    markNames.forEach(markName => {\n      const defaultMarkId = `${seriesId}-${markName}`;\n\n      if (isNil(spec[markName])) {\n        spec[markName] = { id: defaultMarkId };\n      } else if (isNil(spec[markName].id)) {\n        spec[markName].id = defaultMarkId;\n      }\n    });\n  };\n\n  const Comp: React.FC<T & { updateId?: number; componentId?: string }> = props => {\n    const context = React.useContext(RootChartContext);\n\n    const id = props.id ?? props.componentId;\n    const bindedEvents = React.useRef<Record<string, (e: any) => void>>({});\n\n    const handleEvent = (e: any) => {\n      const markIds = markNames.map(markName => `${id}-${markName}`);\n      if (e?.mark && markIds.includes(e.mark.getUserId())) {\n        props[VCHART_TO_REACT_EVENTS[e.event.type]](e);\n      }\n    };\n\n    const addMarkEvent = (events: EventsProps) => {\n      if (!events || !context.chart) {\n        return;\n      }\n\n      if (bindedEvents.current) {\n        Object.keys(bindedEvents.current).forEach(eventKey => {\n          context.chart.off(REACT_TO_VCHART_EVENTS[eventKey], bindedEvents.current[eventKey]);\n          bindedEvents.current[eventKey] = null;\n        });\n      }\n\n      events &&\n        Object.keys(events).forEach(eventKey => {\n          if (!bindedEvents.current?.[eventKey]) {\n            context.chart.on(REACT_TO_VCHART_EVENTS[eventKey], handleEvent);\n\n            if (!bindedEvents.current) {\n              bindedEvents.current = {};\n            }\n            bindedEvents.current[eventKey] = handleEvent;\n          }\n        });\n    };\n\n    const removeMarkEvent = () => {\n      addMarkEvent({});\n    };\n\n    addMarkEvent(findEventProps(props));\n\n    React.useEffect(() => {\n      return () => {\n        removeMarkEvent();\n        bindedEvents.current = {};\n      };\n    }, []);\n\n    return null;\n  };\n\n  Comp.displayName = componentName;\n  (Comp as any).parseSpec = (compProps: T & { updateId?: number; componentId?: string }) => {\n    const newSeriesSpec = pickWithout<T>(compProps, notSpecKeys);\n\n    addMarkId(newSeriesSpec, compProps.id ?? compProps.componentId);\n\n    if (!isNil(type)) {\n      (newSeriesSpec as any).type = type;\n    }\n\n    return {\n      spec: newSeriesSpec,\n      specName: 'series'\n    };\n  };\n  return Comp;\n};\n"]}