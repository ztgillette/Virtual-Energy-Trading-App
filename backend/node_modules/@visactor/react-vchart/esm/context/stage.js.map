{"version":3,"sources":["../src/context/stage.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,MAAM,YAAY,GAAG,KAAK,CAAC,aAAa,CAAS,IAAI,CAAC,CAAC;AACvD,YAAY,CAAC,WAAW,GAAG,cAAc,CAAC;AAE1C,MAAM,UAAU,SAAS,CAAI,SAAqD;IAChF,MAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAA8B,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACvE,OAAO,CACL,oBAAC,YAAY,CAAC,QAAQ,QACnB,GAAG,CAAC,EAAE;YAEL,MAAM,KAA0B,KAA2B,EAArD,EAAE,KAAK,OAA8C,EAAzC,SAAS,cAArB,SAAuB,CAA8B,CAAC;YAC5D,OAAO,oBAAC,SAAS,oBAAM,SAAe,IAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACnE,CAAC,CACqB,CACzB,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,IAAI,CAAC;IAC1D,OAAO,GAAG,CAAC;AACb,CAAC;AAED,eAAe,YAAY,CAAC","file":"stage.js","sourcesContent":["import React from 'react';\nimport type { IStage } from '@visactor/vrender-core';\n\nconst StageContext = React.createContext<IStage>(null);\nStageContext.displayName = 'StageContext';\n\nexport function withStage<T>(Component: React.ComponentType<T & { stage: IStage }>) {\n  const Com = React.forwardRef<any, T & { stage?: IStage }>((props, ref) => {\n    return (\n      <StageContext.Consumer>\n        {ctx => {\n          // Omit 'stage' from props to avoid prop type conflicts\n          const { stage, ...restProps } = props as { stage?: IStage };\n          return <Component {...(restProps as T)} stage={ctx} ref={ref} />;\n        }}\n      </StageContext.Consumer>\n    );\n  });\n  Com.displayName = Component.displayName || Component.name;\n  return Com;\n}\n\nexport default StageContext;\n"]}