{"version":3,"sources":["../src/scrollbar/scrollbar.ts"],"names":[],"mappings":"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","file":"scrollbar.js","sourcesContent":["/**\n * @description 滚动条组件\n */\nimport type { IRectGraphicAttribute, FederatedPointerEvent, IGroup, IRect } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { vglobal } from '@visactor/vrender-core';\nimport { merge, normalizePadding, clamp, clampRange, debounce, throttle, isValid } from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\n\nimport type { ScrollBarAttributes } from './type';\nimport type { ComponentOptions } from '../interface';\nimport { loadScrollbarComponent } from './register';\nimport { SCROLLBAR_START_EVENT, SCROLLBAR_EVENT, SCROLLBAR_END_EVENT } from '../constant';\nimport { getEndTriggersOfDrag } from '../util/event';\n\ntype ComponentBounds = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  width: number;\n  height: number;\n};\n\nconst delayMap = {\n  debounce: debounce,\n  throttle: throttle\n};\n\nloadScrollbarComponent();\n\nexport class ScrollBar extends AbstractComponent<Required<ScrollBarAttributes>> {\n  name = 'scrollbar';\n\n  static defaultAttributes = {\n    direction: 'horizontal',\n    round: true,\n    sliderSize: 20,\n    sliderStyle: {\n      fill: 'rgba(0, 0, 0, .5)'\n    },\n    railStyle: {\n      fill: 'rgba(0, 0, 0, .0)'\n    },\n    padding: 2,\n    scrollRange: [0, 1],\n    delayType: 'throttle',\n    delayTime: 0,\n    realTime: true\n  };\n\n  private _container!: IGroup;\n  // 滚动条滑块\n  private _slider!: IRect;\n  // 滚动条滑轨\n  private _rail!: IRect;\n  // 滑块可渲染的区域包围盒\n  private _sliderRenderBounds!: ComponentBounds | null;\n  // 滑块滑动的范围\n  private _sliderLimitRange!: [number, number] | null;\n  // 保留滑块上一次的位置\n  private _prePos!: number;\n  // TODO: 临时方案\n  private _viewPosition!: { x: number; y: number };\n  private _sliderSize!: number;\n\n  constructor(attributes: ScrollBarAttributes, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, ScrollBar.defaultAttributes, attributes));\n  }\n\n  setScrollRange(range: [number, number], render = true) {\n    const {\n      direction = 'horizontal',\n      limitRange = [0, 1],\n      range: preRange,\n      realTime = true\n    } = this.attribute as ScrollBarAttributes;\n\n    const currScrollRange = clampRange(range, limitRange[0], limitRange[1]);\n    if (render) {\n      // 更新图形\n      const sliderPos = this._getSliderPos(currScrollRange);\n      if (this._slider) {\n        const sliderSize = sliderPos[1] - sliderPos[0];\n        this._sliderSize = sliderSize;\n\n        if (direction === 'horizontal') {\n          this._slider.setAttributes(\n            {\n              x: sliderPos[0],\n              width: sliderSize\n            },\n            true\n          );\n        } else {\n          this._slider.setAttributes(\n            {\n              y: sliderPos[0],\n              height: sliderSize\n            },\n            true\n          );\n        }\n\n        if (this.stage && !this.stage.autoRender) {\n          this.stage.renderNextFrame();\n        }\n      }\n    }\n    (this.attribute as ScrollBarAttributes).range = currScrollRange;\n    // 发射 change 事件\n    if (realTime) {\n      this._dispatchEvent(SCROLLBAR_EVENT, {\n        pre: preRange,\n        value: currScrollRange\n      });\n    }\n  }\n\n  getScrollRange(): [number, number] {\n    return (this.attribute as ScrollBarAttributes).range;\n  }\n\n  // public setLocation(point: PointLocationCfg) {\n  //   this.translateTo(point.x, point.y);\n  // }\n\n  // 绑定事件\n  protected bindEvents(): void {\n    if (this.attribute.disableTriggerEvent) {\n      return;\n    }\n    const { delayType = 'throttle', delayTime = 0 } = this.attribute as ScrollBarAttributes;\n    // TODO: wheel 事件支持\n    if (this._rail) {\n      this._rail.addEventListener(\n        'pointerdown',\n        delayMap[delayType](this._onRailPointerDown, delayTime) as EventListener\n      );\n    }\n    if (this._slider) {\n      this._slider.addEventListener('pointerdown', this._onSliderPointerDown as EventListener);\n    }\n\n    (vglobal.env === 'browser' ? vglobal : this.stage).addEventListener('touchmove', this._handleTouchMove, {\n      passive: false\n    });\n  }\n\n  private _handleTouchMove = (e: TouchEvent) => {\n    if (isValid(this._prePos)) {\n      // 正在滚动中的时候\n      /**\n       * https://developer.mozilla.org/zh-CN/docs/Web/CSS/overscroll-behavior\n       * 由于浏览器的overscroll-behavior属性，需要在move的时候阻止浏览器默认行为，否则会因为浏览器检测到scroll行为，阻止pointer事件，\n       * 抛出pointercancel事件，导致拖拽行为中断。\n       */\n      e.preventDefault();\n    }\n  };\n\n  protected render() {\n    this._reset();\n    const {\n      direction = 'horizontal',\n      width,\n      height,\n      range,\n      limitRange = [0, 1],\n      // sliderSize = 20,\n      // scrollValue = 0,\n      // scrollRange = [0, 1],\n      railStyle,\n      sliderStyle,\n      padding = 2\n    } = this.attribute as ScrollBarAttributes;\n\n    const group = this.createOrUpdateChild('scrollbar-container', {}, 'group') as IGroup;\n    // 绘制轨道\n\n    const rail = group.createOrUpdateChild(\n      'scrollbar-rail',\n      {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        ...railStyle\n      },\n      'rect'\n    ) as IRect;\n    this._rail = rail;\n\n    // 滑块\n    const sliderRenderBounds = this.getSliderRenderBounds();\n    const sliderPos = this._getSliderPos(clampRange(range, limitRange[0], limitRange[1]));\n    const sliderSize = sliderPos[1] - sliderPos[0];\n    this._sliderSize = sliderSize;\n    // const sliderRangePos = this._getScrollRange();\n\n    let sliderAttribute: IRectGraphicAttribute;\n    if (direction === 'horizontal') {\n      sliderAttribute = {\n        x: sliderPos[0],\n        y: sliderRenderBounds.y1,\n        width: sliderSize,\n        height: sliderRenderBounds.height\n      };\n    } else {\n      sliderAttribute = {\n        x: sliderRenderBounds.x1,\n        y: sliderPos[0],\n        width: sliderRenderBounds.width,\n        height: sliderSize\n      };\n    }\n\n    const slider = group.createOrUpdateChild(\n      'slider',\n      {\n        ...sliderAttribute,\n        cornerRadius: this._getDefaultSliderCornerRadius(),\n        ...sliderStyle,\n        boundsPadding: normalizePadding(padding),\n        pickMode: 'imprecise'\n      },\n      'rect'\n    ) as IRect;\n    this._slider = slider;\n    this._container = group;\n\n    const containerAABBBounds = this._container.AABBBounds;\n    this._viewPosition = {\n      x: containerAABBBounds.x1,\n      y: containerAABBBounds.y1\n    };\n  }\n\n  // 获取滑块渲染的包围盒区域\n  getSliderRenderBounds() {\n    if (this._sliderRenderBounds) {\n      return this._sliderRenderBounds;\n    }\n    const { width, height, padding = 2 } = this.attribute as ScrollBarAttributes;\n    const [top, right, bottom, left] = normalizePadding(padding);\n    const renderBounds = {\n      x1: left,\n      y1: top,\n      x2: width - right,\n      y2: height - bottom,\n      width: Math.max(0, width - (left + right)),\n      height: Math.max(0, height - (top + bottom))\n    };\n    this._sliderRenderBounds = renderBounds;\n    return renderBounds;\n  }\n\n  // 获取默认的滑块圆角\n  private _getDefaultSliderCornerRadius() {\n    const { direction, round } = this.attribute as ScrollBarAttributes;\n\n    if (round) {\n      const { width, height } = this.getSliderRenderBounds();\n      return direction === 'horizontal' ? height : width;\n    }\n\n    return 0;\n  }\n\n  // 计算滑块在轨道的位置\n  private _getSliderPos(range: [number, number]) {\n    const { direction } = this.attribute as ScrollBarAttributes;\n    const { width, height, x1, y1 } = this.getSliderRenderBounds();\n\n    if (direction === 'horizontal') {\n      return [width * range[0] + x1, width * range[1] + x1];\n    }\n    return [height * range[0] + y1, height * range[1] + y1];\n  }\n\n  private _getScrollRange() {\n    if (this._sliderLimitRange) {\n      return this._sliderLimitRange;\n    }\n    const { limitRange = [0, 1], direction } = this.attribute as ScrollBarAttributes;\n    const [min, max] = clampRange(limitRange, 0, 1);\n    const { width, height, x1, y1 } = this.getSliderRenderBounds();\n    const sliderSize = this._sliderSize;\n\n    return direction === 'horizontal'\n      ? clampRange([x1 + min * width, x1 + max * width], x1, width - sliderSize)\n      : clampRange([y1 + min * height, y1 + max * height], y1, height - sliderSize);\n  }\n\n  private _onRailPointerDown = (e: FederatedPointerEvent) => {\n    // 将事件坐标转换为实际的滑块位置\n    // TODO: 这里有问题，应该拿  viewX viewY，同时 graphic 要提供接口获取它的 相对 view 的坐标\n    const { viewX, viewY } = e;\n    const { direction, width, height, range } = this.attribute as ScrollBarAttributes;\n    const sliderSize = this._sliderSize;\n    const [min, max] = this._getScrollRange();\n    let currentScrollValue;\n    if (direction === 'vertical') {\n      const relativeY = viewY - this._viewPosition.y;\n      const currentYPos = clamp(relativeY - sliderSize / 2, min, max);\n      currentScrollValue = relativeY / height;\n      this._slider.setAttribute('y', currentYPos, true);\n    } else {\n      const relativeX = viewX - this._viewPosition.x;\n      const currentXPos = clamp(relativeX - sliderSize / 2, min, max);\n      currentScrollValue = relativeX / width;\n      this._slider.setAttribute('x', currentXPos, true);\n    }\n\n    this.setScrollRange(\n      [currentScrollValue - (range[1] - range[0]) / 2, currentScrollValue + (range[1] - range[0]) / 2],\n      false\n    );\n\n    if (this.stage && !this.stage.autoRender) {\n      this.stage.renderNextFrame();\n    }\n  };\n\n  private _onSliderPointerDown = (e: FederatedPointerEvent) => {\n    this._clearDragEvents();\n    const { stopSliderDownPropagation = true } = this.attribute as ScrollBarAttributes;\n    if (stopSliderDownPropagation) {\n      e.stopPropagation();\n    }\n    const { direction } = this.attribute as ScrollBarAttributes;\n    const { x, y } = this.stage.eventPointTransform(e);\n    this._prePos = direction === 'horizontal' ? x : y;\n    this._dispatchEvent(SCROLLBAR_START_EVENT, {\n      pos: this._prePos,\n      event: e\n    });\n\n    const triggers = getEndTriggersOfDrag();\n    const obj = vglobal.env === 'browser' ? vglobal : this.stage;\n\n    /**\n     * move的时候，需要通过 capture: true，能够在捕获截断被拦截，\n     * move的时候，需要显示的设置passive: false，因为在移动端需要禁用浏览器默认行为\n     */\n    obj.addEventListener('pointermove', this._onSliderPointerMoveWithDelay, { capture: true });\n    triggers.forEach((trigger: string) => {\n      obj.addEventListener(trigger, this._onSliderPointerUp);\n    });\n  };\n\n  private _computeScrollValue = (e: any) => {\n    const { direction } = this.attribute as ScrollBarAttributes;\n    const { x, y } = this.stage.eventPointTransform(e);\n\n    let currentScrollValue;\n    let currentPos;\n    let delta = 0;\n\n    const { width, height } = this.getSliderRenderBounds();\n    if (direction === 'vertical') {\n      currentPos = y;\n      delta = currentPos - this._prePos;\n      currentScrollValue = delta / height;\n    } else {\n      currentPos = x;\n      delta = currentPos - this._prePos;\n      currentScrollValue = delta / width;\n    }\n    return [currentPos, currentScrollValue];\n  };\n\n  private _onSliderPointerMove = (e: any) => {\n    const { stopSliderMovePropagation = true } = this.attribute as ScrollBarAttributes;\n    if (stopSliderMovePropagation) {\n      e.stopPropagation();\n    }\n    const preScrollRange = this.getScrollRange();\n    const [currentPos, currentScrollValue] = this._computeScrollValue(e);\n    this.setScrollRange([preScrollRange[0] + currentScrollValue, preScrollRange[1] + currentScrollValue], true);\n    this._prePos = currentPos;\n  };\n\n  private _onSliderPointerMoveWithDelay =\n    this.attribute.delayTime === 0\n      ? this._onSliderPointerMove\n      : delayMap[this.attribute.delayType](this._onSliderPointerMove, this.attribute.delayTime);\n\n  private _clearDragEvents() {\n    const triggers = getEndTriggersOfDrag();\n    const obj = vglobal.env === 'browser' ? vglobal : this.stage;\n\n    obj.removeEventListener('pointermove', this._onSliderPointerMoveWithDelay, { capture: true });\n    triggers.forEach((trigger: string) => {\n      obj.removeEventListener(trigger, this._onSliderPointerUp);\n    });\n  }\n\n  private _onSliderPointerUp = (e: any) => {\n    const { range: preRange, limitRange = [0, 1] } = this.attribute as ScrollBarAttributes;\n    // 发射 change 事件\n    const preScrollRange = this.getScrollRange();\n    const [currentPos, currentScrollValue] = this._computeScrollValue(e);\n    const range: [number, number] = [preScrollRange[0] + currentScrollValue, preScrollRange[1] + currentScrollValue];\n    this._prePos = null;\n\n    this._dispatchEvent(SCROLLBAR_END_EVENT, {\n      pre: preRange,\n      value: clampRange(range, limitRange[0], limitRange[1])\n    });\n\n    this._clearDragEvents();\n  };\n\n  private _reset() {\n    this._sliderRenderBounds = null;\n    this._sliderLimitRange = null;\n  }\n\n  release(all?: boolean): void {\n    /**\n     * 浏览器上的事件必须解绑，防止内存泄漏，场景树上的事件会自动解绑\n     */\n    super.release(all);\n    (vglobal.env === 'browser' ? vglobal : this.stage).addEventListener('touchmove', this._handleTouchMove, {\n      passive: false\n    });\n    this._clearDragEvents();\n  }\n}\n"]}