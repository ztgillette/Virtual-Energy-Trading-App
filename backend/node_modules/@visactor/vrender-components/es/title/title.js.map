{"version":3,"sources":["../src/title/title.ts"],"names":[],"mappings":"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","file":"title.js","sourcesContent":["/**\n * @description 标题组件\n */\nimport type { IGroup, IText, IRichText, IRichTextCharacter } from '@visactor/vrender-core';\nimport { merge, isValid, normalizePadding, isArray } from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\nimport type { TitleAttrs } from './type';\nimport type { ComponentOptions } from '../interface';\nimport { DEFAULT_HTML_TEXT_SPEC } from '../constant';\nimport { loadTitleComponent } from './register';\nimport { Text } from '@visactor/vrender-core';\n\nloadTitleComponent();\nexport class Title extends AbstractComponent<Required<TitleAttrs>> {\n  name = 'title';\n\n  private _mainTitle?: IText | IRichText;\n  private _subTitle?: IText | IRichText;\n\n  static defaultAttributes: Partial<TitleAttrs> = {\n    textStyle: {\n      ellipsis: '...',\n      fill: '#333',\n      fontSize: 20,\n      fontWeight: 'bold',\n      textAlign: 'left',\n      textBaseline: 'top'\n    },\n    subtextStyle: {\n      ellipsis: '...',\n      fill: '#6F6F6F',\n      fontSize: 16,\n      fontWeight: 'normal',\n      textAlign: 'left',\n      textBaseline: 'top'\n    }\n  };\n\n  constructor(attributes: TitleAttrs, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, Title.defaultAttributes, attributes));\n  }\n\n  protected render() {\n    const {\n      textType,\n      text,\n      subtextType,\n      textStyle = {},\n      subtext,\n      subtextStyle = {},\n      width,\n      height,\n      minWidth,\n      maxWidth,\n      minHeight,\n      maxHeight,\n      align,\n      verticalAlign,\n      padding = 0\n    } = this.attribute as TitleAttrs;\n\n    const parsedPadding = normalizePadding(padding);\n\n    const group = this.createOrUpdateChild(\n      'title-container',\n      { x: parsedPadding[3], y: parsedPadding[0], zIndex: 1 },\n      'group'\n    ) as IGroup;\n\n    const fixedMainTitleHeight = textStyle.height ?? height;\n    if (this.attribute.visible !== false && textStyle.visible !== false) {\n      const {\n        width: mainTitleWidth,\n        maxHeight: mainTitleMaxHeight,\n        maxWidth: mainTitleMaxWidth,\n        x = 0,\n        y = 0,\n        ellipsis = true,\n        wordBreak = 'break-word',\n        maxWidth,\n        lineClamp\n      } = textStyle;\n      if (textType === 'rich' || isValid(textStyle.character)) {\n        const attr = {\n          x,\n          y,\n          width: mainTitleWidth ?? width ?? 0,\n          height: fixedMainTitleHeight ?? 0,\n          ellipsis: ellipsis ?? true,\n          wordBreak: wordBreak ?? 'break-word',\n          maxHeight: mainTitleMaxHeight ?? maxHeight,\n          maxWidth: mainTitleMaxWidth ?? maxWidth,\n          // 兼容旧版富文本配置，如果未设置textType === 'rich'，text内容为string 易报错\n          textConfig: textStyle.character ?? (text as IRichTextCharacter[]),\n          ...textStyle\n        };\n        this._mainTitle = group.createOrUpdateChild('mainTitle', attr, 'richtext') as IRichText;\n      } else if (textType === 'html') {\n        const attr = {\n          html: {\n            dom: text as string,\n            ...DEFAULT_HTML_TEXT_SPEC,\n            ...textStyle\n          },\n          x,\n          y,\n          width: mainTitleWidth ?? width ?? 0,\n          height: fixedMainTitleHeight ?? 0,\n          ellipsis,\n          wordBreak,\n          maxHeight: mainTitleMaxHeight ?? maxHeight,\n          maxWidth: mainTitleMaxWidth ?? maxWidth,\n          textConfig: [] as any[],\n          ...textStyle\n        };\n        this._mainTitle = group.createOrUpdateChild('mainTitle', attr, 'richtext') as IRichText;\n      } else if (isValid(text)) {\n        this._mainTitle = group.createOrUpdateChild(\n          'mainTitle',\n          {\n            text: isArray(text) ? (text as any) : [text as string],\n            whiteSpace: 'normal',\n            ...textStyle,\n            maxLineWidth: textStyle.maxLineWidth ?? mainTitleWidth ?? width,\n            heightLimit: textStyle.height ?? maxHeight,\n            lineClamp,\n            ellipsis,\n            x,\n            y\n          },\n          'text'\n        ) as IText;\n      }\n    }\n\n    const mainTextBoundsHeight = this._mainTitle ? this._mainTitle.AABBBounds.height() : 0;\n    const mainTextBoundsWidth = this._mainTitle ? this._mainTitle.AABBBounds.width() : 0;\n\n    // 目前 height 限制等于 0 时，相当于 Infinity，无限制\n\n    if (this.attribute.visible !== false && subtextStyle.visible !== false) {\n      const {\n        width: subTitleWidth,\n        height: subTitleHeight,\n        maxWidth: subTitleMaxWidth,\n        maxHeight: subTitleMaxHeight,\n        x = 0,\n        y = 0,\n        ellipsis = true,\n        wordBreak = 'break-word',\n        lineClamp\n      } = subtextStyle;\n      const maxSubTextHeight = Math.max(Number.MIN_VALUE, maxHeight - mainTextBoundsHeight);\n\n      if (subtextType === 'rich' || isValid(subtextStyle.character)) {\n        const attr: any = {\n          x,\n          y,\n          width: subTitleWidth ?? width ?? 0,\n          height: subTitleHeight ?? height ?? 0,\n          ellipsis,\n          wordBreak,\n          maxHeight: subTitleMaxHeight ?? maxSubTextHeight,\n          maxWidth: subTitleMaxWidth ?? maxWidth,\n          // 兼容旧版富文本配置，如果未设置textType === 'rich'，text内容为string 易报错\n          textConfig: subtextStyle.character ?? (subtext as IRichTextCharacter[]),\n          ...subtextStyle\n        };\n        this._subTitle = group.createOrUpdateChild('subTitle', attr, 'richtext') as IRichText;\n      } else if (subtextType === 'html') {\n        const attr: any = {\n          html: {\n            dom: subtext as string,\n            ...DEFAULT_HTML_TEXT_SPEC,\n            ...subtextStyle\n          },\n          x,\n          y,\n          width: subTitleWidth ?? width ?? 0,\n          height: subTitleHeight ?? height ?? 0,\n          ellipsis,\n          wordBreak,\n          maxHeight: subTitleMaxHeight ?? maxSubTextHeight,\n          maxWidth: subTitleMaxWidth ?? maxWidth,\n          textConfig: [] as any[],\n          ...subtextStyle\n        };\n        this._subTitle = group.createOrUpdateChild('subTitle', attr, 'richtext') as IRichText;\n      } else if (isValid(subtext)) {\n        this._subTitle = group.createOrUpdateChild(\n          'subTitle',\n          {\n            text: isArray(subtext) ? (subtext as any) : [subtext as string],\n            whiteSpace: 'normal',\n            ...subtextStyle,\n            maxLineWidth: subtextStyle.maxLineWidth ?? width,\n            heightLimit: subtextStyle.heightLimit ?? maxSubTextHeight,\n            lineClamp,\n            ellipsis,\n            x: 0,\n            y: mainTextBoundsHeight\n          },\n          'text'\n        ) as IText;\n      }\n    }\n\n    const subTextBoundsHeight = this._subTitle ? this._subTitle.AABBBounds.height() : 0;\n    const subTextBoundsWidth = this._subTitle ? this._subTitle.AABBBounds.width() : 0;\n\n    // 设置宽高\n    let totalWidth = Math.max(mainTextBoundsWidth, subTextBoundsWidth);\n    let totalHeight = mainTextBoundsHeight + (subtextStyle.height ?? subTextBoundsHeight);\n\n    if (isValid(width)) {\n      totalWidth = width;\n    }\n\n    if (isValid(height)) {\n      totalHeight = height;\n    }\n\n    if (isValid(minWidth) && totalWidth < minWidth) {\n      totalWidth = minWidth;\n    }\n    if (isValid(maxWidth)) {\n      if (totalWidth > maxWidth) {\n        totalWidth = maxWidth;\n      }\n    }\n\n    if (isValid(minHeight) && totalHeight < minHeight) {\n      totalHeight = minHeight;\n    }\n\n    if (isValid(maxHeight)) {\n      if (totalHeight > maxHeight) {\n        totalHeight = maxHeight;\n      }\n    }\n\n    group.attribute.width = totalWidth;\n    group.attribute.height = totalHeight;\n    group.attribute.boundsPadding = parsedPadding;\n\n    // 设置对齐\n    if (this._mainTitle) {\n      if (isValid(align) || isValid(textStyle.align)) {\n        const mainTitleAlign = textStyle.align ? textStyle.align : align;\n        const mainTitleWidth = textStyle.width ?? totalWidth;\n        if (mainTitleAlign === 'center') {\n          this._mainTitle.setAttribute('x', mainTitleWidth / 2);\n          this._mainTitle.setAttribute('textAlign', 'center');\n        } else if (mainTitleAlign === 'right') {\n          this._mainTitle.setAttribute('x', mainTitleWidth);\n          this._mainTitle.setAttribute('textAlign', 'right');\n        } else {\n          this._mainTitle.setAttribute('x', 0);\n          this._mainTitle.setAttribute('textAlign', 'left');\n        }\n      }\n\n      const mainTitleVerticalAlign = textStyle.verticalAlign ? textStyle.verticalAlign : verticalAlign;\n      const mainTitleHeight =\n        fixedMainTitleHeight ?? (this._mainTitle.AABBBounds.empty() ? 0 : this._mainTitle.AABBBounds.height());\n\n      if (mainTitleVerticalAlign === 'middle') {\n        this._mainTitle.setAttribute('y', mainTitleHeight / 2);\n        this._mainTitle.setAttribute('textBaseline', 'middle');\n      } else if (mainTitleVerticalAlign === 'bottom') {\n        this._mainTitle.setAttribute('y', mainTitleHeight);\n        this._mainTitle.setAttribute('textBaseline', 'bottom');\n      } else {\n        // 如果没有显示的设置verticalAlign，默认top\n        this._mainTitle.setAttribute('y', 0);\n        this._mainTitle.setAttribute('textBaseline', 'top');\n      }\n    }\n\n    if (this._subTitle) {\n      if (isValid(align) || isValid(subtextStyle.align)) {\n        const subTitleAlign = subtextStyle.align ? subtextStyle.align : align;\n        // 当subText没有设置显示的宽度，但是mainText设置了显示的宽度的时候，为mainText为主，因为默认subText要和mainText对齐\n        const subTitleWidth = subtextStyle.width ?? textStyle.width ?? totalWidth;\n        if (subTitleAlign === 'center') {\n          this._subTitle.setAttribute('x', subTitleWidth / 2);\n          this._subTitle.setAttribute('textAlign', 'center');\n        } else if (subTitleAlign === 'right') {\n          this._subTitle.setAttribute('x', subTitleWidth);\n          this._subTitle.setAttribute('textAlign', 'right');\n        } else {\n          this._subTitle.setAttribute('x', 0);\n          this._subTitle.setAttribute('textAlign', 'left');\n        }\n      }\n\n      const subTitleVerticalAlign = subtextStyle.verticalAlign ? subtextStyle.verticalAlign : verticalAlign;\n\n      const subTitleYStart = this._mainTitle\n        ? isValid(fixedMainTitleHeight)\n          ? // 如果是用户指定的高度，根据bounds的height 和指定高度求最大值\n            this._mainTitle.AABBBounds.y1 +\n            Math.max(this._mainTitle.AABBBounds.empty() ? 0 : this._mainTitle.AABBBounds.height(), fixedMainTitleHeight)\n          : this._mainTitle.AABBBounds.y2\n        : 0;\n      const subTitleHeight =\n        subtextStyle.height ?? height ?? (this._subTitle.AABBBounds.empty() ? 0 : this._subTitle.AABBBounds.height());\n      if (subTitleVerticalAlign === 'middle') {\n        this._subTitle.setAttribute('y', subTitleYStart + subTitleHeight / 2);\n        this._subTitle.setAttribute('textBaseline', 'middle');\n      } else if (subTitleVerticalAlign === 'bottom') {\n        this._subTitle.setAttribute('y', subTitleYStart + subTitleHeight);\n        this._subTitle.setAttribute('textBaseline', 'bottom');\n      } else {\n        this._subTitle.setAttribute('y', subTitleYStart);\n        this._subTitle.setAttribute('textBaseline', 'top');\n      }\n    }\n  }\n}\n"]}