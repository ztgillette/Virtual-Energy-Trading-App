{"version":3,"sources":["../src/crosshair/circle.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAGvC,OAAO,EAAE,4BAA4B,EAAE,MAAM,YAAY,CAAC;AAE1D,4BAA4B,EAAE,CAAC;AAC/B,MAAM,OAAO,eAAgB,SAAQ,aAAmC;IAStE,YAAY,UAAgC,EAAE,OAA0B;QACtE,KAAK,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,eAAe,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,CAAC;IACtG,CAAC;IAES,eAAe,CAAC,SAAiB;QACzC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,SAAiC,CAAC;QAE7E,MAAM,MAAM,GAAG,SAAS,CAAC,mBAAmB,CAC1C,kBAAkB,8DAEb,MAAM,KACT,WAAW,EAAE,MAAM,KAEf,IAAI,CAAC,SAAiB,GACvB,SAAS,GAEd,KAAK,CACN,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,KAAuB;QACjC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,SAAiC,CAAC;QAC1D,MAAM,MAAM,GAAG,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;;AAlCM,iCAAiB,GAAG;IACzB,SAAS,EAAE;QACT,MAAM,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QACxC,SAAS,EAAE,CAAC;QACZ,QAAQ,EAAE,CAAC,CAAC,CAAC;KACd;CACF,CAAC","file":"circle.js","sourcesContent":["/**\n * @description circle 类型 crosshair，用于极坐标系下\n */\nimport type { IGroup } from '@visactor/vrender-core';\nimport { merge, PointService } from '@visactor/vutils';\nimport type { PointLocationCfg } from '../core/type';\nimport { CrosshairBase } from './base';\nimport type { CircleCrosshairAttrs } from './type';\nimport type { ComponentOptions } from '../interface';\nimport { loadCircleCrosshairComponent } from './register';\n\nloadCircleCrosshairComponent();\nexport class CircleCrosshair extends CrosshairBase<CircleCrosshairAttrs> {\n  static defaultAttributes = {\n    lineStyle: {\n      stroke: ['#b2bacf', false, false, false],\n      lineWidth: 1,\n      lineDash: [2]\n    }\n  };\n\n  constructor(attributes: CircleCrosshairAttrs, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, CircleCrosshair.defaultAttributes, attributes));\n  }\n\n  protected renderCrosshair(container: IGroup) {\n    const { center, radius, lineStyle } = this.attribute as CircleCrosshairAttrs;\n\n    const circle = container.createOrUpdateChild(\n      'crosshair-circle',\n      {\n        ...center,\n        outerRadius: radius,\n        // TODO: group的cornerRadius支持数组，arc的不支持数组，此处会有类型转换问题\n        ...(this.attribute as any),\n        ...lineStyle\n      },\n      'arc'\n    );\n    return circle;\n  }\n\n  setLocation(point: PointLocationCfg) {\n    const { center } = this.attribute as CircleCrosshairAttrs;\n    const radius = PointService.distancePP(point, center);\n\n    this.setAttribute('radius', radius);\n  }\n}\n"]}