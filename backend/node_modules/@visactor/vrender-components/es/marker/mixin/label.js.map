{"version":3,"sources":["../src/marker/mixin/label.ts"],"names":[],"mappings":"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","file":"label.js","sourcesContent":["import { array, last, merge } from '@visactor/vutils';\nimport type { IGroup, INode } from '@visactor/vrender-core';\nimport { DEFAULT_STATES } from '../../constant';\nimport type { TagAttributes } from '../../tag';\nimport { Tag } from '../../tag';\n\nexport interface MarkLabelMixin<T extends { label?: any; state?: any }> {\n  attribute: T;\n  setLabelPos: (labelNode: IGroup, labelAttrs: any) => any;\n}\n\nexport class MarkLabelMixin<T> {\n  _label!: Tag | Tag[];\n  getLabel() {\n    return this._label;\n  }\n  _addMarkLabels(container: IGroup, labelName: string, defaultLabelAttrs: TagAttributes) {\n    const { label, state } = this.attribute as T;\n    const labelStates = array(state?.label);\n    const labelBackgroundStates = array(state?.labelBackground);\n    // add label\n    const labelShapes = array(label).map((labelAttrs, index) => {\n      const finalLabelAttrs = merge({}, defaultLabelAttrs, labelAttrs as TagAttributes);\n      const markLabel = new Tag({\n        ...finalLabelAttrs,\n        state: {\n          panel: merge({}, DEFAULT_STATES, labelBackgroundStates[index] ?? last(labelBackgroundStates)),\n          text: merge({}, DEFAULT_STATES, labelStates[index] ?? last(labelStates))\n        }\n      });\n      markLabel.name = labelName;\n      container.add(markLabel as unknown as INode);\n      this.setLabelPos(markLabel, finalLabelAttrs);\n\n      return markLabel;\n    });\n    this._label = array(labelShapes).length === 1 ? labelShapes[0] : labelShapes;\n  }\n\n  _updateMarkLabels(defaultLabelAttrs: TagAttributes) {\n    const { label, state } = this.attribute as T;\n\n    const labelShapes = array(this._label);\n    const labelStates = array(state?.label);\n    const labelBackgroundStates = array(state?.labelBackground);\n    if (labelShapes.length) {\n      const labels = array(label);\n      labelShapes.forEach((labelItem: Tag, index: number) => {\n        const finalLabelAttrs = merge({}, defaultLabelAttrs, labels[index] as TagAttributes);\n        labelItem.setAttributes({\n          dx: 0,\n          dy: 0, // 需要进行复位\n          ...finalLabelAttrs,\n          state: {\n            panel: merge({}, DEFAULT_STATES, labelBackgroundStates[index] ?? last(labelBackgroundStates)),\n            text: merge({}, DEFAULT_STATES, labelStates[index] ?? last(labelStates))\n          }\n        });\n        this.setLabelPos(labelItem, finalLabelAttrs);\n      });\n    }\n  }\n}\n"]}