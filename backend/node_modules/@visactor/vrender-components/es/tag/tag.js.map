{"version":3,"sources":["../src/tag/tag.ts"],"names":[],"mappings":"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","file":"tag.js","sourcesContent":["/**\n * @description 标签组件\n */\nimport {\n  type IGroup,\n  type IRect,\n  type ISymbol,\n  type IText,\n  type ITextAttribute,\n  type ITextGraphicAttribute,\n  type IRichTextGraphicAttribute,\n  type IRichText,\n  type IGraphicAttribute,\n  CustomPath2D\n} from '@visactor/vrender-core';\nimport {\n  array,\n  isBoolean,\n  isEmpty,\n  isNil,\n  isNumber,\n  isObject,\n  isValid,\n  merge,\n  normalizePadding\n} from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\nimport { isRichText, measureTextSize, richTextAttributeTransform } from '../util';\nimport type { BackgroundAttributes, ComponentOptions } from '../interface';\nimport type { TagAttributes, TagShapeAttributes } from './type';\nimport { loadTagComponent } from './register';\nimport type { TextContent } from '../core/type';\n\nloadTagComponent();\nexport class Tag extends AbstractComponent<Required<TagAttributes>> {\n  name = 'tag';\n\n  private _bgRect!: IRect;\n  private _textShape!: IText | IRichText;\n  private _symbol!: ISymbol;\n  private _tagStates: string[] = [];\n  private _rectStates: string[] = [];\n  private _symbolStates: string[] = [];\n  private _textStates: string[] = [];\n\n  getBgRect() {\n    return this._bgRect;\n  }\n\n  getTextShape() {\n    return this._textShape;\n  }\n\n  static defaultAttributes: Partial<TagAttributes> = {\n    visible: true,\n    textStyle: {\n      fontSize: 12,\n      fill: '#000',\n      textAlign: 'left',\n      textBaseline: 'top'\n    },\n    space: 4,\n    padding: 4,\n    // @ts-ignore\n    shape: {\n      fill: '#000'\n    }\n  };\n\n  constructor(attributes: TagAttributes, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, Tag.defaultAttributes, attributes));\n  }\n\n  protected render() {\n    this.cacheStates();\n    const {\n      text = '',\n      textStyle = {} as ITextGraphicAttribute | IRichTextGraphicAttribute,\n      shape = {} as TagShapeAttributes,\n      panel = {} as BackgroundAttributes,\n      space = 4,\n      minWidth,\n      maxWidth,\n      padding = 4,\n      visible,\n      state,\n      type,\n      textAlwaysCenter,\n      containerTextAlign\n    } = this.attribute as TagAttributes;\n    const parsedPadding = normalizePadding(padding);\n\n    const group = this.createOrUpdateChild('tag-content', { x: 0, y: 0, zIndex: 1 }, 'group') as IGroup;\n\n    let symbol;\n    let tagX = -parsedPadding[3];\n    let tagY = -parsedPadding[0];\n    let tagWidth = parsedPadding[1] + parsedPadding[3];\n    let tagHeight = parsedPadding[0] + parsedPadding[2];\n    let textX = 0;\n    let symbolPlaceWidth = 0;\n    const { visible: shapeVisible, ...shapeStyle } = shape;\n    if (isBoolean(shapeVisible)) {\n      const size = shapeStyle?.size || 10;\n      const maxSize = (isNumber(size) ? size : Math.max(size[0], size[1])) as number;\n\n      symbol = group.createOrUpdateChild(\n        'tag-shape',\n        {\n          symbolType: 'circle',\n          size,\n          strokeBoundsBuffer: 0,\n          ...shapeStyle,\n          visible: shapeVisible,\n          x: maxSize / 2,\n          y: maxSize / 2\n        },\n        'symbol'\n      ) as ISymbol;\n      if (!isEmpty(state?.shape)) {\n        symbol.states = state.shape;\n      }\n\n      if (shapeVisible) {\n        symbolPlaceWidth = maxSize + space;\n      }\n    }\n\n    tagWidth += symbolPlaceWidth;\n    textX += symbolPlaceWidth;\n\n    let textShape: IRichText | IText;\n    let textWidth;\n    let textHeight;\n\n    const isRich = isRichText({ text } as TextContent) || type === 'rich';\n    if (isRich) {\n      const richTextAttrs = {\n        ...richTextAttributeTransform({ type, text, ...textStyle } as any),\n        ...(textStyle as IRichTextGraphicAttribute),\n        visible: isValid(text) && visible !== false,\n        x: textX,\n        y: 0\n      };\n      if (isNil(richTextAttrs.lineHeight)) {\n        richTextAttrs.lineHeight = (textStyle as ITextGraphicAttribute).fontSize;\n      }\n      textShape = group.createOrUpdateChild('tag-text', richTextAttrs, 'richtext') as IRichText;\n      textWidth = textShape.AABBBounds.width();\n      textHeight = textShape.AABBBounds.height();\n    } else {\n      const textAttrs = {\n        text: isObject(text) && 'type' in text && text.type === 'text' ? text.text : text,\n        visible: isValid(text) && visible !== false,\n        lineHeight: (textStyle as ITextGraphicAttribute)?.fontSize,\n        ...(textStyle as ITextGraphicAttribute),\n        x: textX,\n        y: 0\n      };\n      if (isNil(textAttrs.lineHeight)) {\n        textAttrs.lineHeight = (textStyle as ITextGraphicAttribute).fontSize;\n      }\n      textShape = group.createOrUpdateChild('tag-text', textAttrs as ITextGraphicAttribute, 'text') as IText;\n\n      // 因为文本可能发生旋转，所以需要使用 measureTextSize 方法\n      const textBounds = measureTextSize(textAttrs.text as string, textStyle, this.stage?.getTheme()?.text);\n      textWidth = textBounds.width;\n      textHeight = textBounds.height;\n    }\n\n    tagWidth += textWidth;\n    const size = shape.size ?? 10;\n    const maxSize = (isNumber(size) ? size : Math.max(size[0], size[1])) as number;\n    tagHeight += Math.max(textHeight, shape.visible ? maxSize : 0);\n\n    const { textAlign, textBaseline } = textStyle as ITextAttribute;\n\n    if (isValid(minWidth) || isValid(maxWidth)) {\n      if (isValid(minWidth) && tagWidth < minWidth) {\n        tagWidth = minWidth;\n      }\n      if (isValid(maxWidth) && tagWidth > maxWidth) {\n        tagWidth = maxWidth;\n        textShape.setAttribute('maxLineWidth', maxWidth - parsedPadding[1] - parsedPadding[2]);\n      }\n    }\n\n    tagX = 0;\n    tagY = 0;\n    let flag = 0;\n    if (textAlign === 'left' || textAlign === 'start') {\n      flag = 1;\n    } else if (textAlign === 'right' || textAlign === 'end') {\n      flag = -1;\n    } else if (textAlign === 'center') {\n      flag = 0;\n    }\n    if (!flag) {\n      tagX -= tagWidth / 2;\n      if (symbol) {\n        symbol.setAttribute('x', (symbol.attribute.x || 0) - textWidth / 2);\n      }\n\n      group.setAttribute('x', -symbolPlaceWidth / 2);\n    } else if (flag < 0) {\n      tagX -= tagWidth;\n      if (symbol) {\n        symbol.setAttribute('x', (symbol.attribute.x || 0) - textWidth);\n      }\n\n      group.setAttribute('x', -parsedPadding[1] - symbolPlaceWidth);\n    } else if (flag > 0) {\n      group.setAttribute('x', parsedPadding[3]);\n    }\n\n    const shouldCenter = containerTextAlign ? containerTextAlign === 'center' : textAlwaysCenter;\n    const shouldRight = containerTextAlign === 'right' || containerTextAlign === 'end';\n    const shouldLeft = containerTextAlign === 'left' || containerTextAlign === 'start';\n\n    const updateTextAttrs = (textX: number, textAlign: 'center' | 'left' | 'right') => {\n      if (textShape.type === 'richtext') {\n        textShape.setAttributes({\n          x: textX,\n          textAlign,\n          textConfig: array((textShape.attribute as IRichTextGraphicAttribute).textConfig).map(t => {\n            return {\n              ...t,\n              textAlign\n            };\n          })\n        });\n      } else {\n        textShape.setAttributes({\n          x: textX,\n          textAlign\n        });\n      }\n    };\n\n    if (shouldCenter && flag) {\n      // 文本容器内居中\n      // 剔除padding后的内宽度\n      const containerWidth = tagWidth - parsedPadding[1] - parsedPadding[3];\n      const tsWidth = textWidth + symbolPlaceWidth;\n      const textX =\n        flag === 1\n          ? (containerWidth - tsWidth) / 2 + symbolPlaceWidth + textWidth / 2\n          : parsedPadding[0] + symbolPlaceWidth - (tagWidth / 2 + tsWidth / 2 - symbolPlaceWidth) + textWidth / 2;\n\n      updateTextAttrs(textX, 'center');\n      if (symbol) {\n        const symbolX = textX - textWidth / 2 - symbolPlaceWidth + maxSize / 2;\n        symbol.setAttributes({\n          x: symbolX\n        });\n      }\n    }\n\n    if (shouldLeft && flag !== 1) {\n      // 文本容器内朝左展示\n      const containerWidth = tagWidth - parsedPadding[1] - parsedPadding[3];\n      const offset =\n        flag === 0\n          ? -containerWidth / 2 + symbolPlaceWidth / 2\n          : -tagWidth + parsedPadding[3] + parsedPadding[1] + symbolPlaceWidth;\n      const textX = offset + symbolPlaceWidth;\n\n      updateTextAttrs(textX, 'left');\n\n      if (symbol) {\n        const symbolX = offset + maxSize / 2;\n        symbol.setAttributes({\n          x: symbolX\n        });\n      }\n    }\n\n    if (shouldRight && flag !== -1) {\n      // 文本容器内朝右展示\n      const containerWidth = tagWidth - parsedPadding[1] - parsedPadding[3];\n      const textX = flag === 0 ? containerWidth / 2 + symbolPlaceWidth / 2 : containerWidth;\n      updateTextAttrs(textX, 'right');\n\n      if (symbol) {\n        const symbolX = textX - textWidth - symbolPlaceWidth + maxSize / 2;\n        symbol.setAttributes({\n          x: symbolX\n        });\n      }\n    }\n\n    if (textBaseline === 'middle') {\n      tagY -= tagHeight / 2;\n      if (symbol) {\n        symbol.setAttribute('y', 0);\n      }\n    } else if (textBaseline === 'bottom') {\n      tagY -= tagHeight;\n      if (symbol) {\n        symbol.setAttribute('y', -textHeight / 2);\n      }\n\n      group.setAttribute('y', -parsedPadding[2]);\n    } else if (textBaseline === 'top') {\n      group.setAttribute('y', parsedPadding[0]);\n      if (symbol) {\n        symbol.setAttribute('y', textHeight / 2);\n      }\n    }\n\n    if (!isEmpty(state?.text)) {\n      textShape.states = state.text;\n    }\n    // 绘制背景层\n    const { visible: bgVisible, ...backgroundStyle } = panel;\n    if (visible && isBoolean(bgVisible)) {\n      const bgRect = this.createOrUpdateChild(\n        'tag-panel',\n        {\n          ...backgroundStyle,\n          visible: bgVisible && !!text,\n          width: tagWidth,\n          height: tagHeight,\n          x: tagX,\n          y: tagY\n        },\n        'rect'\n      ) as IRect;\n      if (!isEmpty(state?.panel)) {\n        bgRect.states = state.panel;\n      }\n      if (backgroundStyle.customShape) {\n        const customShape = backgroundStyle.customShape;\n        bgRect.pathProxy = (attrs: Partial<IGraphicAttribute>) => {\n          return customShape(this, attrs, new CustomPath2D());\n        };\n      }\n      this._bgRect = bgRect;\n    }\n    this._textShape = textShape;\n    this._symbol = symbol;\n\n    this.resetStates();\n  }\n\n  initAttributes(params: TagAttributes, options?: ComponentOptions) {\n    params = options?.skipDefault ? params : merge({}, Tag.defaultAttributes, params);\n    super.initAttributes(params);\n    this.render();\n  }\n\n  addState(stateName: string, keepCurrentStates?: boolean, hasAnimation?: boolean): void {\n    super.addState(stateName, keepCurrentStates, hasAnimation);\n    if (this._textShape) {\n      this._textShape.addState(stateName, keepCurrentStates, hasAnimation);\n    }\n    if (this._bgRect) {\n      this._bgRect.addState(stateName, keepCurrentStates, hasAnimation);\n    }\n    if (this._symbol) {\n      this._symbol.addState(stateName, keepCurrentStates, hasAnimation);\n    }\n  }\n\n  removeState(stateName: string, hasAnimation?: boolean): void {\n    super.removeState(stateName, hasAnimation);\n    if (this._textShape) {\n      this._textShape.removeState(stateName, hasAnimation);\n    }\n    if (this._bgRect) {\n      this._bgRect.removeState(stateName, hasAnimation);\n    }\n    if (this._symbol) {\n      this._symbol.removeState(stateName, hasAnimation);\n    }\n  }\n\n  cacheStates() {\n    this._tagStates = this.currentStates?.slice() ?? [];\n    this._rectStates = this._bgRect?.currentStates?.slice() ?? [];\n    this._symbolStates = this._symbol?.currentStates?.slice() ?? [];\n    this._textStates = this._textShape?.currentStates?.slice() ?? [];\n    this.clearStates();\n    this._bgRect?.clearStates();\n    this._symbol?.clearStates();\n    this._textShape?.clearStates();\n  }\n  resetStates() {\n    this._tagStates.length && this.useStates(this._tagStates);\n    this._rectStates.length && this._bgRect?.useStates(this._rectStates);\n    this._symbolStates.length && this._symbol?.useStates(this._symbolStates);\n    this._textStates.length && this._textShape?.useStates(this._textStates);\n  }\n}\n"]}