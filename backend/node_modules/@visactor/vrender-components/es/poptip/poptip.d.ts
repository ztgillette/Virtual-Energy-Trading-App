import { type IGroup, type IText } from '@visactor/vrender-core';
import { type IAABBBoundsLike } from '@visactor/vutils';
import { AbstractComponent } from '../core/base';
import type { ComponentOptions } from '../interface';
import type { PopTipAttributes } from './type';
export declare class PopTip extends AbstractComponent<Required<PopTipAttributes>> {
    name: string;
    static defaultAttributes: Partial<PopTipAttributes>;
    titleShape?: IText;
    contentShape?: IText;
    group?: IGroup;
    constructor(attributes: PopTipAttributes, options?: ComponentOptions);
    protected render(): void;
    positionList: string[];
    calculateAnchorPoint(position: string, positionBounds?: IAABBBoundsLike): {
        x: number;
        y: number;
    };
    getAngleAndOffset(position: string, width: number, height: number, size: [number, number], symbolType: 'arrow2Left' | string): {
        angle: number;
        offset: [number, number];
    };
}
