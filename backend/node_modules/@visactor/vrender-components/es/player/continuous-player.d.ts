import { BasePlayer } from './base-player';
import type { ContinuousPlayerAttributes } from './type';
import { PlayerEventEnum } from './type';
export declare class ContinuousPlayer extends BasePlayer<ContinuousPlayerAttributes> {
    attribute: ContinuousPlayerAttributes;
    private _activeIndex;
    protected _alternate: boolean;
    protected _interval: number;
    protected _totalDuration: number;
    private _isPlaying;
    private _startTime;
    private _elapsed;
    private _rafId;
    constructor(attributes: ContinuousPlayerAttributes);
    _initAttributes: () => void;
    _initDataIndex: () => void;
    private _initEvents;
    private _getSliderValue;
    private _updateSlider;
    private _dispatchChange;
    dispatchCustomEvent(eventType: PlayerEventEnum): void;
    play: () => Promise<void>;
    private _play;
    private _playEnd;
    pause: () => void;
    backward: () => void;
    forward: () => void;
    render(): void;
}
