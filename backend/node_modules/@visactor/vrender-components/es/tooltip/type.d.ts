import type { IGraphicAttribute, IGroupGraphicAttribute, IRectGraphicAttribute, ITextAttribute, IRichTextCharacter } from '@visactor/vrender-core';
import type { IBounds, IPadding } from '@visactor/vutils';
export interface IContainerSize {
    width?: number;
    height?: number;
}
export type TooltipAttributes = IGroupGraphicAttribute & TooltipComponentAttrs;
export type TooltipComponentAttrs = TooltipPositionAttrs & {
    panel?: TooltipPanelAttrs;
    title?: TooltipRowAttrs;
    content?: TooltipRowAttrs[];
    titleStyle?: TooltipRowStyleAttrs;
    contentStyle?: TooltipRowStyleAttrs;
    autoMeasure?: boolean;
    autoCalculatePosition?: boolean;
    padding?: number | number[] | IPadding;
    minWidth?: number;
    maxWidth?: number;
    enterable?: boolean;
    transitionDuration?: number;
    hasContentShape?: boolean;
    keyWidth?: number;
    valueWidth?: number;
    align?: 'left' | 'right';
};
export type TooltipTextAttrs = Omit<Partial<ITextAttribute & IGraphicAttribute & IContainerSize>, 'text'> & {
    text?: string | number | string[] | number[] | TooltipRichTextAttrs;
    multiLine?: boolean;
    wordBreak?: string;
};
export type TooltipRichTextAttrs = {
    type?: string;
    text?: IRichTextCharacter[] | string;
};
export type TooltipSymbolAttrs = Partial<IGraphicAttribute> & {
    path?: string;
    size?: number;
    symbolType?: string;
    [key: string]: any;
};
export type TooltipPanelAttrs = Partial<IRectGraphicAttribute> & {
    shadow?: boolean;
    shadowSpread?: number;
};
export type TooltipRowAttrs = IContainerSize & {
    visible?: boolean;
    key?: TooltipTextAttrs;
    value?: TooltipTextAttrs;
    shape?: TooltipSymbolAttrs;
    spaceRow?: number;
};
export type TooltipRowStyleAttrs = {
    key?: Omit<TooltipTextAttrs, 'text'> & TooltipColumnStyleAttrs;
    value?: Omit<TooltipTextAttrs, 'text'> & TooltipColumnStyleAttrs;
    shape?: TooltipSymbolAttrs & TooltipColumnStyleAttrs;
    spaceRow?: number;
};
export type TooltipColumnStyleAttrs = {
    spacing?: number;
};
export type TooltipPositionAttrs = {
    pointerX?: number;
    pointerY?: number;
    offsetX?: number;
    offsetY?: number;
    positionX?: 'left' | 'right' | 'center';
    positionY?: 'top' | 'bottom' | 'middle';
    parentBounds?: IBounds;
};
