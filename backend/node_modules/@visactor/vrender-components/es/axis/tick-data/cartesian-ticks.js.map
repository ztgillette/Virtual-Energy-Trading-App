{"version":3,"sources":["../src/axis/tick-data/cartesian-ticks.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAExD,OAAO,EAAE,uBAAuB,EAAE,MAAM,QAAQ,CAAC;AAGjD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAiB,EAAE,EAAgB,EAAe,EAAE;IACjF,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,eAAe,CAAC,KAAwB,EAAE,EAAE,CAAC,CAAC;KACtD;SAAM,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACjC,IAAI,EAAE,CAAC,cAAc,KAAK,WAAW,EAAE;YACrC,OAAO,mBAAmB,CAAC,KAAkB,EAAE,EAA2B,CAAC,CAAC;SAC7E;KACF;IACD,OAAO,uBAAuB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AACjD,CAAC,CAAC","file":"cartesian-ticks.js","sourcesContent":["import type { BandScale, ContinuousScale, IBaseScale } from '@visactor/vscale';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous, isDiscrete } from '@visactor/vscale';\nimport { continuousTicks } from './continuous';\nimport { linearDiscreteTicks } from './discrete/linear';\nimport type { ICartesianTickDataOpt, ITickData, ITickDataOpt } from '../type';\nimport { convertDomainToTickData } from './util';\n\n// 总入口\nexport const cartesianTicks = (scale: IBaseScale, op: ITickDataOpt): ITickData[] => {\n  if (isContinuous(scale.type)) {\n    return continuousTicks(scale as ContinuousScale, op);\n  } else if (isDiscrete(scale.type)) {\n    if (op.coordinateType === 'cartesian') {\n      return linearDiscreteTicks(scale as BandScale, op as ICartesianTickDataOpt);\n    }\n  }\n  return convertDomainToTickData(scale.domain());\n};\n"]}