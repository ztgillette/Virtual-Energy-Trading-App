{"version":3,"sources":["../src/label/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import type { IArea, ILine } from '@visactor/vrender-core';\nimport type { IPoint, Quadrant } from './type';\nimport type { IBoundsLike, IPointLike } from '@visactor/vutils';\nimport { radianToDegree, isValidNumber, isRectIntersect, normalizeAngle, polarToCartesian } from '@visactor/vutils';\n\nexport function isQuadrantLeft(quadrant: Quadrant): boolean {\n  return quadrant === 3 || quadrant === 4;\n}\n\nexport function isQuadrantRight(quadrant: Quadrant): boolean {\n  return quadrant === 1 || quadrant === 2;\n}\n\n/**\n * 计算直线与圆交点\n * 直线方程：ax + by + c = 0\n * 圆方程：(x - x0)^2 + (y - y0)^2 = r^2\n */\nexport function lineCirclePoints(a: number, b: number, c: number, x0: number, y0: number, r: number): IPoint[] {\n  if ((a === 0 && b === 0) || r <= 0) {\n    return [];\n  }\n  if (a === 0) {\n    const y1 = -c / b;\n    const fy = (y1 - y0) ** 2;\n    const fd = r ** 2 - fy;\n    if (fd < 0) {\n      return [];\n    } else if (fd === 0) {\n      return [{ x: x0, y: y1 }];\n    }\n    const x1 = Math.sqrt(fd) + x0;\n    const x2 = -Math.sqrt(fd) + x0;\n    return [\n      { x: x1, y: y1 },\n      { x: x2, y: y1 }\n    ];\n  } else if (b === 0) {\n    const x1 = -c / a;\n    const fx = (x1 - x0) ** 2;\n    const fd = r ** 2 - fx;\n    if (fd < 0) {\n      return [];\n    } else if (fd === 0) {\n      return [{ x: x1, y: y0 }];\n    }\n    const y1 = Math.sqrt(fd) + y0;\n    const y2 = -Math.sqrt(fd) + y0;\n    return [\n      { x: x1, y: y1 },\n      { x: x1, y: y2 }\n    ];\n  }\n  const fa = (b / a) ** 2 + 1;\n  const fb = 2 * ((c / a + x0) * (b / a) - y0);\n  const fc = (c / a + x0) ** 2 + y0 ** 2 - r ** 2;\n  const fd = fb ** 2 - 4 * fa * fc;\n  if (fd < 0) {\n    return [];\n  }\n  const y1 = (-fb + Math.sqrt(fd)) / (2 * fa);\n  const y2 = (-fb - Math.sqrt(fd)) / (2 * fa);\n  const x1 = -(b * y1 + c) / a;\n  const x2 = -(b * y2 + c) / a;\n  if (fd === 0) {\n    return [{ x: x1, y: y1 }];\n  }\n  return [\n    { x: x1, y: y1 },\n    { x: x2, y: y2 }\n  ];\n}\n\n/**\n * 根据圆弧两点连接线长度计算弧度\n * @param radius 圆弧半径\n * @param length 连接线长度\n */\nexport function connectLineRadian(radius: number, length: number) {\n  if (length > radius * 2) {\n    return NaN;\n  }\n  return Math.asin(length / 2 / radius) * 2;\n}\n\nexport function checkBoundsOverlap(boundsA: IBoundsLike, boundsB: IBoundsLike): boolean {\n  const { x1: ax1, y1: ay1, x2: ax2, y2: ay2 } = boundsA;\n  const { x1: bx1, y1: by1, x2: bx2, y2: by2 } = boundsB;\n  return !(\n    (ax1 <= bx1 && ax2 <= bx1) ||\n    (ax1 >= bx2 && ax2 >= bx2) ||\n    (ay1 <= by1 && ay2 <= by1) ||\n    (ay1 >= by2 && ay2 >= by2)\n  );\n}\n\nexport const degrees = (angle?: number) => {\n  if (!isValidNumber(angle)) {\n    return null;\n  }\n  return radianToDegree(angle);\n};\n\nexport const labelingPoint = (textBounds: IBoundsLike, graphicBounds: IBoundsLike, position = 'top', offset = 0) => {\n  if (!textBounds) {\n    return;\n  }\n\n  const { x1, y1, x2, y2 } = textBounds;\n  const width = Math.abs(x2 - x1);\n  const height = Math.abs(y2 - y1);\n\n  const anchorX = (graphicBounds.x1 + graphicBounds.x2) / 2;\n  const anchorY = (graphicBounds.y1 + graphicBounds.y2) / 2;\n\n  let sx = 0;\n  let sy = 0;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (graphicBounds) {\n    offsetX = Math.abs(graphicBounds.x1 - graphicBounds.x2) / 2;\n    offsetY = Math.abs(graphicBounds.y1 - graphicBounds.y2) / 2;\n  }\n\n  const angle = {\n    'top-right': -235,\n    'top-left': 235,\n    'bottom-right': 45,\n    'bottom-left': -45\n  };\n\n  switch (position) {\n    case 'top':\n      sy = -1;\n      break;\n    case 'bottom':\n      sy = 1;\n      break;\n    case 'left':\n      sx = -1;\n      break;\n    case 'right':\n      sx = 1;\n      break;\n    case 'bottom-left':\n    case 'bottom-right':\n    case 'top-left':\n    case 'top-right':\n      sx = Math.sin(angle[position] * (Math.PI / 180));\n      sy = Math.cos(angle[position] * (Math.PI / 180));\n      break;\n    case 'center':\n      sx = 0;\n      sy = 0;\n      break;\n  }\n\n  const x = anchorX + sx * (offset + offsetX) + Math.sign(sx) * (width / 2);\n  const y = anchorY + sy * (offset + offsetY) + Math.sign(sy) * (height / 2);\n\n  return { x, y };\n};\n\nexport const getPointsOfLineArea = (graphic: ILine | IArea): IPointLike[] => {\n  if (!graphic || !graphic.attribute) {\n    return [];\n  }\n\n  const { points, segments } = graphic.attribute;\n\n  if (segments && segments.length) {\n    const res: IPointLike[] = [];\n\n    segments.forEach(seg => {\n      const segPoints = seg.points;\n\n      segPoints.forEach(point => {\n        res.push(point);\n      });\n    });\n\n    return res;\n  }\n\n  return points;\n};\n\nexport function labelingLineOrArea(\n  textBounds: IBoundsLike,\n  graphicBounds: IBoundsLike,\n  position: string = 'end',\n  offset = 0\n) {\n  if (!textBounds || !graphicBounds) {\n    return { x: Infinity, y: Infinity };\n  }\n\n  const { x1, x2 } = textBounds;\n  const width = Math.abs(x2 - x1);\n\n  const anchorX = graphicBounds.x1;\n  const anchorY = graphicBounds.y1;\n\n  let x = anchorX;\n  const y = anchorY;\n\n  if (position === 'end') {\n    x = anchorX + width / 2 + offset;\n  } else if (position === 'start') {\n    x = anchorX - width / 2 - offset;\n  }\n\n  return { x, y };\n}\n\nexport function connectLineBetweenBounds(boundA: IBoundsLike, boundB: IBoundsLike) {\n  if (!boundA || !boundB) {\n    return;\n  }\n\n  if (isRectIntersect(boundA, boundB, true)) {\n    return;\n  }\n  // Top left coordinates\n  const x1 = Math.min(boundA.x1, boundA.x2);\n  const y1 = Math.min(boundA.y1, boundA.y2);\n  const x2 = Math.min(boundB.x1, boundB.x2);\n  const y2 = Math.min(boundB.y1, boundB.y2);\n\n  // Half widths and half heights\n  const w1 = Math.abs(boundA.x2 - x1) / 2;\n  const h1 = Math.abs(boundA.y2 - y1) / 2;\n  const w2 = Math.abs(boundB.x2 - x2) / 2;\n  const h2 = Math.abs(boundB.y2 - y2) / 2;\n\n  // Center coordinates\n  const cx1 = x1 + w1;\n  const cy1 = y1 + h1;\n  const cx2 = x2 + w2;\n  const cy2 = y2 + h2;\n\n  // Distance between centers\n  const dx = cx2 - cx1;\n  const dy = cy2 - cy1;\n\n  const p1 = getIntersection(dx, dy, cx1, cy1, w1, h1);\n  const p2 = getIntersection(-dx, -dy, cx2, cy2, w2, h2);\n\n  return [p1, p2];\n}\n\nfunction getIntersection(dx: number, dy: number, cx: number, cy: number, w: number, h: number) {\n  if (Math.abs(dy / dx) < h / w) {\n    // Hit vertical edge of box1\n    return { x: cx + (dx > 0 ? w : -w), y: cy + (dy * w) / Math.abs(dx) };\n  }\n  // Hit horizontal edge of box1\n  return { x: cx + (dx * h) / Math.abs(dy), y: cy + (dy > 0 ? h : -h) };\n}\n\nexport function getAlignOffset(align: 'left' | 'right' | 'center') {\n  if (align === 'left') {\n    return 0;\n  } else if (align === 'right') {\n    return 1;\n  }\n\n  return 0.5;\n}\n"]}