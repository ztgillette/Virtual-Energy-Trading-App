{"version":3,"sources":["../src/util/limit-shape.ts"],"names":[],"mappings":"AAGA,MAAM,UAAU,qBAAqB,CAAC,KAAe,EAAE,MAAmB;IACxE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;IAClF,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC;IAE5C,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,UAAU,EAAE;QAEnB,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC;KACtB;IACD,IAAI,EAAE,GAAG,UAAU,EAAE;QAEnB,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC;KACtB;IAED,IAAI,EAAE,GAAG,UAAU,EAAE;QAEnB,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC;KACtB;IAED,IAAI,EAAE,GAAG,UAAU,EAAE;QAEnB,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC;KACtB;IACD,OAAO;QACL,EAAE;QACF,EAAE;KACH,CAAC;AACJ,CAAC;AACD,MAAM,UAAU,kBAAkB,CAAC,KAAe,EAAE,MAAmB;IACrE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACxD,MAAM,EAAE,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC;IAC/D,IAAI,EAAE,EAAE;QACN,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC;KACzC;IACD,IAAI,EAAE,EAAE;QACN,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC;KACzC;AACH,CAAC","file":"limit-shape.js","sourcesContent":["import type { IGraphic } from '@visactor/vrender-core';\nimport type { IBoundsLike } from '@visactor/vutils';\n\nexport function computeOffsetForlimit(shape: IGraphic, bounds: IBoundsLike) {\n  const { x1: regionMinX, y1: regionMinY, x2: regionMaxX, y2: regionMaxY } = bounds;\n  const { x1, y1, x2, y2 } = shape.AABBBounds;\n\n  let dx = 0;\n  let dy = 0;\n  if (x1 < regionMinX) {\n    // 超出左侧\n    dx = regionMinX - x1;\n  }\n  if (y1 < regionMinY) {\n    // 超出顶部\n    dy = regionMinY - y1;\n  }\n\n  if (x2 > regionMaxX) {\n    // 超出右侧\n    dx = regionMaxX - x2;\n  }\n\n  if (y2 > regionMaxY) {\n    // 整体超出顶部\n    dy = regionMaxY - y2;\n  }\n  return {\n    dx,\n    dy\n  };\n}\nexport function limitShapeInBounds(shape: IGraphic, bounds: IBoundsLike) {\n  const { dx, dy } = computeOffsetForlimit(shape, bounds);\n  const { dx: originDx = 0, dy: originDy = 0 } = shape.attribute;\n  if (dx) {\n    shape.setAttribute('dx', dx + originDx);\n  }\n  if (dy) {\n    shape.setAttribute('dy', dy + originDy);\n  }\n}\n"]}