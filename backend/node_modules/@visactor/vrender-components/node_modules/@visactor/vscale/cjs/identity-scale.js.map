{"version":3,"sources":["../src/identity-scale.ts"],"names":[],"mappings":";;;AAAA,iCAAmC;AAGtB,QAAA,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAE3C,MAAa,aAAa;IAA1B;QACW,SAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC;IA4ErC,CAAC;IApEC,SAAS,CAAC,CAA2B;;QACnC,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAA,IAAI,CAAC,UAAU,mCAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC;IACd,CAAC;IAES,kBAAkB,CAAC,KAAa;QACxC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAGD,KAAK;QACH,OAAO,IAAI,aAAa,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpG,CAAC;IAED,KAAK,CAAC,CAAM;QACV,MAAM,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QACnB,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,OAAO,OAAO,CAAC;SAChB;QAED,IAAI,IAAI,CAAC,QAAQ,KAAK,gBAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC3E,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QAED,OAAO,CAAC,CAAC;IACX,CAAC;IAED,MAAM,CAAC,CAAM;QACX,OAAO,CAAC,CAAC;IACX,CAAC;IAID,MAAM,CAAC,CAAS;QACd,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;SACxD;QACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,OAAO,IAAI,CAAC;IACd,CAAC;IAID,KAAK,CAAC,CAAS;QACb,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;SACxD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAID,OAAO,CAAC,CAAO;QACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA7ED,sCA6EC","file":"identity-scale.js","sourcesContent":["import { ScaleEnum } from './type';\nimport type { IBaseScale } from './interface';\n\nexport const implicit = Symbol('implicit');\n\nexport class IdentityScale implements IBaseScale {\n  readonly type = ScaleEnum.Identity;\n  protected _domain: Array<any>;\n  protected _unknown: any;\n\n  /** specified: support scale to return specific value on special input value */\n  protected _specified: Record<string, unknown>;\n  specified(): Record<string, unknown>;\n  specified(_: Record<string, unknown>): this;\n  specified(_?: Record<string, unknown>): this | Record<string, unknown> {\n    if (!_) {\n      return Object.assign({}, this._specified);\n    }\n    this._specified = Object.assign(this._specified ?? {}, _);\n    return this;\n  }\n\n  protected _getSpecifiedValue(input: string): undefined | any {\n    if (!this._specified) {\n      return undefined;\n    }\n    return this._specified[input];\n  }\n\n  // TODO checkPoint\n  clone(): IBaseScale {\n    return new IdentityScale().unknown(this._unknown).domain(this._domain).specified(this._specified);\n  }\n\n  scale(d: any): any {\n    const key = `${d}`;\n    const special = this._getSpecifiedValue(key);\n    if (special !== undefined) {\n      return special;\n    }\n\n    if (this._unknown !== implicit && this._domain && !this._domain.includes(d)) {\n      return this._unknown;\n    }\n\n    return d;\n  }\n\n  invert(d: any): any {\n    return d;\n  }\n\n  domain(): any[];\n  domain(_: any[]): this;\n  domain(_?: any[]): this | any {\n    if (!_) {\n      return this._domain ? this._domain.slice() : undefined;\n    }\n    this._domain = _;\n\n    return this;\n  }\n\n  range(): any[];\n  range(_: any[]): this;\n  range(_?: any[]): this | any {\n    if (!_) {\n      return this._domain ? this._domain.slice() : undefined;\n    }\n\n    return this;\n  }\n\n  unknown(): any[];\n  unknown(_: any): this;\n  unknown(_?: any): this | any {\n    if (!arguments.length) {\n      return this._unknown;\n    }\n    this._unknown = _;\n    return this;\n  }\n}\n"]}