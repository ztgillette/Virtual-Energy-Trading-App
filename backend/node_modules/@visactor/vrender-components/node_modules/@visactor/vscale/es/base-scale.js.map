{"version":3,"sources":["../src/base-scale.ts"],"names":[],"mappings":"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","file":"base-scale.js","sourcesContent":["import { clamp, isNil, isValid } from '@visactor/vutils';\nimport type { IRangeFactor, ScaleFishEyeOptions } from './interface';\nimport { calculateWholeRangeFromRangeFactor } from './utils/utils';\n\nexport abstract class BaseScale implements IRangeFactor {\n  protected _wholeRange: any[];\n  protected _rangeFactorStart?: number = null;\n  protected _rangeFactorEnd?: number = null;\n  protected _unknown: any;\n  protected _fishEyeOptions?: ScaleFishEyeOptions;\n  protected _fishEyeTransform?: (output: number) => number;\n\n  abstract range(): any[];\n  abstract domain(): any[];\n  abstract invert(d: any): any;\n\n  protected _calculateWholeRange(range: any[]) {\n    if (this._wholeRange) {\n      return this._wholeRange;\n    }\n\n    if (isValid(this._rangeFactorStart) && isValid(this._rangeFactorEnd) && range.length === 2) {\n      this._wholeRange = calculateWholeRangeFromRangeFactor(range, [this._rangeFactorStart, this._rangeFactorEnd]);\n      return this._wholeRange;\n    }\n    return range;\n  }\n\n  abstract calculateVisibleDomain(range: any[]): any[];\n\n  rangeFactor(): [number, number];\n  rangeFactor(_: [number, number], slience?: boolean, clear?: boolean): this;\n  rangeFactor(_?: [number, number], slience?: boolean, clear?: boolean): this | any[] {\n    if (!_) {\n      if (clear) {\n        this._wholeRange = null;\n        this._rangeFactorStart = null;\n        this._rangeFactorEnd = null;\n        return this;\n      }\n\n      if (isValid(this._rangeFactorStart) && isValid(this._rangeFactorEnd)) {\n        return [this._rangeFactorStart, this._rangeFactorEnd];\n      }\n      return null;\n    }\n    if (_.length === 2 && _.every(r => r >= 0 && r <= 1)) {\n      this._wholeRange = null;\n      if (_[0] === 0 && _[1] === 1) {\n        this._rangeFactorStart = null;\n        this._rangeFactorEnd = null;\n      } else {\n        this._rangeFactorStart = _[0];\n        this._rangeFactorEnd = _[1];\n      }\n    }\n\n    return this;\n  }\n\n  rangeFactorStart(): number;\n  rangeFactorStart(_: number, slience?: boolean): this;\n  rangeFactorStart(_?: number, slience?: boolean): this | any {\n    if (isNil(_)) {\n      return this._rangeFactorStart;\n    }\n    if (_ >= 0 && _ <= 1) {\n      this._wholeRange = null;\n      if (_ === 0 && (isNil(this._rangeFactorEnd) || this._rangeFactorEnd === 1)) {\n        this._rangeFactorStart = null;\n        this._rangeFactorEnd = null;\n      } else {\n        this._rangeFactorStart = _;\n        this._rangeFactorEnd = this._rangeFactorEnd ?? 1;\n      }\n    }\n\n    return this;\n  }\n\n  rangeFactorEnd(): number;\n  rangeFactorEnd(_: number, slience?: boolean): this;\n  rangeFactorEnd(_?: number, slience?: boolean): this | any {\n    if (isNil(_)) {\n      return this._rangeFactorEnd;\n    }\n    if (_ >= 0 && _ <= 1) {\n      this._wholeRange = null;\n      if (_ === 0 && (isNil(this._rangeFactorStart) || this._rangeFactorStart === 0)) {\n        this._rangeFactorStart = null;\n        this._rangeFactorEnd = null;\n      } else {\n        this._rangeFactorEnd = _;\n        this._rangeFactorStart = this._rangeFactorStart ?? 0;\n      }\n    }\n\n    return this;\n  }\n\n  protected generateFishEyeTransform() {\n    if (!this._fishEyeOptions) {\n      this._fishEyeTransform = null;\n\n      return;\n    }\n    const { distortion = 2, radiusRatio = 0.1, radius } = this._fishEyeOptions;\n    const range = this.range();\n    const first = range[0];\n    const last = range[range.length - 1];\n    const min = Math.min(first, last);\n    const max = Math.max(first, last);\n    const focus = clamp(this._fishEyeOptions.focus ?? 0, min, max);\n    const rangeRadius = isNil(radius) ? (max - min) * radiusRatio : radius;\n    let k0 = Math.exp(distortion);\n    k0 = (k0 / (k0 - 1)) * rangeRadius;\n    const k1 = distortion / rangeRadius;\n\n    this._fishEyeTransform = (output: number) => {\n      const delta = Math.abs(output - focus);\n\n      if (delta >= rangeRadius) {\n        return output;\n      }\n\n      if (delta <= 1e-6) {\n        return focus;\n      }\n      const k = ((k0 * (1 - Math.exp(-delta * k1))) / delta) * 0.75 + 0.25;\n\n      return focus + (output - focus) * k;\n    };\n  }\n\n  unknown(): any[];\n  unknown(_: any): this;\n  unknown(_?: any): this | any {\n    if (!arguments.length) {\n      return this._unknown;\n    }\n    this._unknown = _;\n    return this;\n  }\n\n  /** 内部变量对外抛出方法 */\n  get(key: string, defaultValue?: any) {\n    return (this as any)?.[key] ?? defaultValue;\n  }\n}\n"]}