{"version":3,"sources":["../src/band-scale.ts"],"names":[],"mappings":"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","file":"band-scale.js","sourcesContent":["import { toNumber, isGreater, isLess, isNumber, isValid, isNil } from '@visactor/vutils';\nimport { OrdinalScale, implicit } from './ordinal-scale';\nimport {\n  bandSpace,\n  calculateBandwidthFromWholeRangeSize,\n  calculateWholeRangeFromRangeFactor,\n  scaleWholeRangeSize\n} from './utils/utils';\nimport { ScaleEnum } from './type';\nimport { stepTicks, ticks } from './utils/tick-sample-int';\nimport type { DiscreteScaleType, IBandLikeScale, ScaleFishEyeOptions, TickData } from './interface';\n\n// band scale 各参数参考图示 https://raw.githubusercontent.com/d3/d3-scale/master/img/band.png\nexport class BandScale extends OrdinalScale implements IBandLikeScale {\n  readonly type: DiscreteScaleType = ScaleEnum.Band;\n  protected _step?: number;\n  protected _bandwidth?: number;\n  /** 是否固定了 bandwidth */\n  protected _isFixed?: boolean;\n  /** 用户配置的 bandwidth */\n  protected _userBandwidth?: number | 'auto';\n  protected _maxBandwidth?: number;\n  protected _minBandwidth?: number;\n  protected _round: boolean;\n  protected _paddingInner: number;\n  protected _paddingOuter: number;\n  protected _align: number;\n  protected _range: Array<number>;\n  protected _bandRangeState?: { reverse: boolean; start: number; count: number };\n\n  constructor(slience?: boolean) {\n    super();\n    this._range = [0, 1];\n    this._step = undefined;\n    this._bandwidth = undefined;\n    this._isFixed = false;\n    this._round = false;\n    this._paddingInner = 0;\n    this._paddingOuter = 0;\n    this._align = 0.5;\n    this._unknown = undefined;\n    delete this.unknown;\n\n    this.rescale(slience);\n  }\n\n  rescale(slience?: boolean, changeProperty?: keyof IBandLikeScale): this {\n    if (slience) {\n      return this;\n    }\n    this._wholeRange = null;\n    const wholeRange = this._calculateWholeRange(this._range, changeProperty);\n    const n = super.domain().length;\n    const reverse = wholeRange[1] < wholeRange[0];\n    let start = wholeRange[Number(reverse) - 0];\n    const stop = wholeRange[1 - Number(reverse)];\n    const space = bandSpace(n, this._paddingInner, this._paddingOuter);\n\n    this._step = (stop - start) / Math.max(1, space || 1);\n    if (this._round) {\n      this._step = Math.floor(this._step);\n    }\n    start += (stop - start - this._step * (n - this._paddingInner)) * this._align;\n    if (!this.isBandwidthFixed()) {\n      this._bandwidth = this._step * (1 - this._paddingInner);\n    }\n    if (this._round) {\n      start = Math.round(start);\n      if (!this.isBandwidthFixed()) {\n        this._bandwidth = Math.round(this._bandwidth);\n      }\n    }\n\n    this._bandRangeState = {\n      reverse,\n      start: reverse ? start + this._step * (n - 1) : start,\n      count: n\n    };\n\n    this.generateFishEyeTransform();\n\n    return this;\n  }\n\n  scale(d: any): any {\n    if (!this._bandRangeState) {\n      return undefined;\n    }\n    const key = `${d}`;\n    const special = this._getSpecifiedValue(key);\n    if (special !== undefined) {\n      return special;\n    }\n    let i = this._index.get(key);\n    if (!i) {\n      if (this._unknown !== implicit) {\n        return this._unknown;\n      }\n      // TODO checkPoint\n      i = this._domain.push(d);\n      this._index.set(key, i);\n    }\n    const { count, start, reverse } = this._bandRangeState;\n    const stepIndex = (i - 1) % count;\n\n    const output = start + (reverse ? -1 : 1) * stepIndex * this._step;\n\n    return this._fishEyeTransform ? this._fishEyeTransform(output) : output;\n  }\n\n  /**\n   * 根据可见 range 计算 scale 的整体 range\n   * @param range 可见 range\n   * @returns\n   */\n  protected _calculateWholeRange(range: any[], changeProperty?: keyof IBandLikeScale) {\n    if (this._wholeRange) {\n      return this._wholeRange;\n    }\n\n    if ((this._minBandwidth || this._maxBandwidth) && !this._isBandwidthFixedByUser()) {\n      let wholeSize: number;\n      if (isValid(this._rangeFactorStart) && isValid(this._rangeFactorEnd) && range.length === 2) {\n        const wholeRange = calculateWholeRangeFromRangeFactor(range, [this._rangeFactorStart, this._rangeFactorEnd]);\n        wholeSize = Math.abs(wholeRange[1] - wholeRange[0]);\n      } else {\n        wholeSize = Math.abs(range[1] - range[0]);\n      }\n      const autoBandwidth = calculateBandwidthFromWholeRangeSize(\n        super.domain().length,\n        wholeSize,\n        this._paddingInner,\n        this._paddingOuter,\n        this._round\n      );\n      if (autoBandwidth < this._minBandwidth) {\n        this._bandwidth = this._minBandwidth;\n        this._isFixed = true;\n      } else if (autoBandwidth > this._maxBandwidth) {\n        this._bandwidth = this._maxBandwidth;\n        this._isFixed = true;\n      } else {\n        this._bandwidth = autoBandwidth;\n        this._isFixed = false;\n      }\n    }\n\n    if (this.isBandwidthFixed()) {\n      const wholeLength =\n        scaleWholeRangeSize(super.domain().length, this._bandwidth, this._paddingInner, this._paddingOuter) *\n        Math.sign(range[1] - range[0]);\n      const rangeFactorSize = Math.min((range[1] - range[0]) / wholeLength, 1);\n      if (isValid(this._rangeFactorStart) && isValid(this._rangeFactorEnd)) {\n        const canAlignStart = this._rangeFactorStart + rangeFactorSize <= 1;\n        const canAlignEnd = this._rangeFactorEnd - rangeFactorSize >= 0;\n\n        if (changeProperty === 'rangeFactorStart' && canAlignStart) {\n          this._rangeFactorEnd = this._rangeFactorStart + rangeFactorSize;\n        } else if (changeProperty === 'rangeFactorEnd' && canAlignEnd) {\n          this._rangeFactorStart = this._rangeFactorEnd - rangeFactorSize;\n        } else {\n          // 判断 scale 方向来决定边界检测顺序\n          if (range[0] <= range[1]) {\n            if (canAlignStart) {\n              this._rangeFactorEnd = this._rangeFactorStart + rangeFactorSize;\n            } else if (canAlignEnd) {\n              this._rangeFactorStart = this._rangeFactorEnd - rangeFactorSize;\n            } else {\n              this._rangeFactorStart = 0;\n              this._rangeFactorEnd = rangeFactorSize;\n            }\n          } else {\n            if (canAlignEnd) {\n              this._rangeFactorStart = this._rangeFactorEnd - rangeFactorSize;\n            } else if (canAlignStart) {\n              this._rangeFactorEnd = this._rangeFactorStart + rangeFactorSize;\n            } else {\n              this._rangeFactorStart = 1 - rangeFactorSize;\n              this._rangeFactorEnd = 1;\n            }\n          }\n        }\n\n        if (wholeLength > 0) {\n          const r0 = range[0] - wholeLength * this._rangeFactorStart;\n          const r1 = r0 + wholeLength;\n          this._wholeRange = [r0, r1];\n        } else {\n          const r1 = range[1] + wholeLength * (1 - this._rangeFactorEnd);\n          const r0 = r1 - wholeLength;\n          this._wholeRange = [r0, r1];\n        }\n      } else {\n        this._rangeFactorStart = 0;\n        this._rangeFactorEnd = rangeFactorSize;\n        this._wholeRange = [range[0], range[0] + wholeLength];\n      }\n\n      return this._wholeRange;\n    }\n\n    return super._calculateWholeRange(range);\n  }\n\n  calculateWholeRangeSize() {\n    const wholeRange = this._calculateWholeRange(this._range);\n    return Math.abs(wholeRange[1] - wholeRange[0]);\n  }\n\n  calculateVisibleDomain(range: any[]) {\n    const domain = this._domain;\n\n    if (isValid(this._rangeFactorStart) && isValid(this._rangeFactorEnd) && domain.length) {\n      const d0 = this._getInvertIndex(range[0]);\n      const d1 = this._getInvertIndex(range[1]);\n\n      return domain.slice(Math.min(d0, d1), Math.max(d0, d1) + 1);\n    }\n\n    return domain;\n  }\n\n  domain(): any[];\n  domain(_: any[], slience?: boolean): this;\n  domain(_?: any[], slience?: boolean): this | any[] {\n    if (_) {\n      super.domain(_);\n\n      return this.rescale(slience);\n    }\n    return super.domain();\n  }\n\n  range(): any[];\n  range(_: any[], slience?: boolean): this;\n  range(_?: any[], slience?: boolean): this | any[] {\n    if (_) {\n      this._range = [toNumber(_[0]), toNumber(_[1])];\n      return this.rescale(slience);\n    }\n    return this._range;\n  }\n\n  rangeRound(_: any[], slience?: boolean): this {\n    this._range = [toNumber(_[0]), toNumber(_[1])];\n    this._round = true;\n    return this.rescale(slience);\n  }\n\n  ticks(count: number = 10) {\n    const d = this.calculateVisibleDomain(this._range);\n\n    if (count === -1) {\n      // return domain as ticks when count is -1\n      return d;\n    }\n\n    const tickIndexList = ticks(0, d.length - 1, count, false);\n    return tickIndexList.map(i => d[i]);\n  }\n\n  tickData(count: number = 10): TickData[] {\n    const ticks = this.ticks(count);\n    return ticks.map((tick, index) => {\n      const scaledValue = this.scale(tick);\n      return {\n        index,\n        tick,\n        value: (scaledValue - this._range[0] + this._bandwidth / 2) / (this._range[1] - this._range[0])\n      };\n    });\n  }\n\n  /**\n   * 生成tick数组，这个tick数组的长度就是count的长度\n   * @param count\n   */\n  forceTicks(count: number = 10): any[] {\n    const d = this.calculateVisibleDomain(this._range);\n    const tickIndexList = ticks(0, d.length - 1, count, true);\n    return tickIndexList\n      .filter(i => i < d.length) // 截断不存在的index\n      .map(i => d[i]);\n  }\n\n  /**\n   * 基于给定step的ticks数组生成\n   * @param step\n   */\n  stepTicks(step: number): any[] {\n    const d = this.calculateVisibleDomain(this._range);\n    const tickIndexList = stepTicks(0, d.length - 1, step);\n    return tickIndexList.map(i => d[i]);\n  }\n\n  protected _getInvertIndex(d: any): any {\n    // 找到index\n    let i = 0;\n    const halfStep = this.step() / 2;\n    const halfBandwidth = this.bandwidth() / 2;\n    const len = this._domain.length;\n    const range = this.range();\n    const start = range[0];\n    const stop = range[range.length - 1];\n    const reverse = start > stop;\n\n    for (i = 0; i < len; i++) {\n      const r = this.scale(this._domain[i]) + halfBandwidth;\n\n      if (i === 0 && ((!reverse && !isGreater(d, r + halfStep)) || (reverse && !isLess(d, r - halfStep)))) {\n        break;\n      }\n\n      if (i === len - 1) {\n        break;\n      }\n\n      if (!isLess(d, r - halfStep) && !isGreater(d, r + halfStep)) {\n        break;\n      }\n    }\n\n    if (i >= 0 && i <= len - 1) {\n      return i;\n    }\n\n    return len - 1;\n  }\n\n  invert(d: any): any {\n    return this._domain[this._getInvertIndex(d)];\n  }\n\n  padding(p: number | number[], slience?: boolean): this;\n  padding(): number;\n  padding(p?: number | [number, number], slience?: boolean): this | number {\n    if (p !== undefined) {\n      this._paddingOuter = Math.max(0, Math.min(Array.isArray(p) ? Math.min.apply(null, p) : p));\n      this._paddingInner = this._paddingOuter;\n      return this.rescale(slience);\n    }\n    return this._paddingInner;\n  }\n\n  paddingInner(p: number, slience?: boolean): this;\n  paddingInner(): number;\n  paddingInner(_?: number, slience?: boolean) {\n    if (_ !== undefined) {\n      this._paddingInner = Math.max(0, Math.min(1, _));\n      return this.rescale(slience);\n    }\n    return this._paddingInner;\n  }\n\n  paddingOuter(p: number, slience?: boolean): this;\n  paddingOuter(): number;\n  paddingOuter(_?: number, slience?: boolean) {\n    if (_ !== undefined) {\n      this._paddingOuter = Math.max(0, Math.min(1, _));\n      return this.rescale(slience);\n    }\n    return this._paddingOuter;\n  }\n\n  step(): number {\n    return this._step;\n  }\n\n  round(_: boolean, slience?: boolean): this;\n  round(): boolean;\n  round(_?: boolean, slience?: boolean): this | boolean {\n    if (_ !== undefined) {\n      this._round = _;\n      return this.rescale(slience);\n    }\n    return this._round;\n  }\n\n  align(_: number, slience?: boolean): this;\n  align(): number;\n  align(_?: number, slience?: boolean): this | number {\n    if (_ !== undefined) {\n      this._align = Math.max(0, Math.min(1, _));\n      return this.rescale(slience);\n    }\n    return this._align;\n  }\n\n  rangeFactor(): [number, number];\n  rangeFactor(_: [number, number], slience?: boolean): this;\n  rangeFactor(_?: [number, number], slience?: boolean): this | any[] {\n    if (!_) {\n      return super.rangeFactor();\n    }\n    super.rangeFactor(_);\n    return this.rescale(slience);\n  }\n\n  rangeFactorStart(): number;\n  rangeFactorStart(_: number, slience?: boolean): this;\n  rangeFactorStart(_?: number, slience?: boolean): this | any {\n    if (isNil(_)) {\n      return super.rangeFactorStart();\n    }\n    super.rangeFactorStart(_);\n    return this.rescale(slience, 'rangeFactorStart');\n  }\n\n  rangeFactorEnd(): number;\n  rangeFactorEnd(_: number, slience?: boolean): this;\n  rangeFactorEnd(_?: number, slience?: boolean): this | any {\n    if (isNil(_)) {\n      return super.rangeFactorEnd();\n    }\n    super.rangeFactorEnd(_);\n    return this.rescale(slience, 'rangeFactorEnd');\n  }\n\n  bandwidth(): number;\n  bandwidth(_: number | 'auto', slience?: boolean): this;\n  bandwidth(_?: number | 'auto', slience?: boolean): this | number {\n    if (!_) {\n      return this._bandwidth;\n    }\n    if (_ === 'auto') {\n      this._bandwidth = undefined;\n      this._isFixed = false;\n    } else {\n      this._bandwidth = _;\n      this._isFixed = true;\n    }\n    this._userBandwidth = _;\n    return this.rescale(slience);\n  }\n\n  maxBandwidth(): number;\n  maxBandwidth(_: number | 'auto', slience?: boolean): this;\n  maxBandwidth(_?: number | 'auto', slience?: boolean): this | number {\n    if (!_) {\n      return this._maxBandwidth;\n    }\n    if (_ === 'auto') {\n      this._maxBandwidth = undefined;\n    } else {\n      this._maxBandwidth = _;\n    }\n    return this.rescale(slience);\n  }\n\n  minBandwidth(): number;\n  minBandwidth(_: number | 'auto', slience?: boolean): this;\n  minBandwidth(_?: number | 'auto', slience?: boolean): this | number {\n    if (!_) {\n      return this._minBandwidth;\n    }\n    if (_ === 'auto') {\n      this._minBandwidth = undefined;\n    } else {\n      this._minBandwidth = _;\n    }\n    return this.rescale(slience);\n  }\n\n  fishEye(): ScaleFishEyeOptions;\n  fishEye(options: ScaleFishEyeOptions, slience?: boolean, clear?: boolean): this;\n  fishEye(options?: ScaleFishEyeOptions, slience?: boolean, clear?: boolean): this | ScaleFishEyeOptions {\n    if (options || clear) {\n      this._fishEyeOptions = options;\n      this._fishEyeTransform = null;\n\n      return this.rescale(slience);\n    }\n\n    return this._fishEyeOptions;\n  }\n\n  isBandwidthFixed() {\n    return this._isFixed && !!this._bandwidth;\n  }\n\n  protected _isBandwidthFixedByUser() {\n    return this._isFixed && this._userBandwidth && isNumber(this._userBandwidth);\n  }\n\n  clone(): IBandLikeScale {\n    const bandScale = new BandScale(true)\n      .domain(this._domain, true)\n      .range(this._range, true)\n      .round(this._round, true)\n      .paddingInner(this._paddingInner, true)\n      .paddingOuter(this._paddingOuter, true)\n      .align(this._align, true)\n      .bandwidth(this._userBandwidth ?? 'auto', true)\n      .maxBandwidth(this._maxBandwidth ?? 'auto', true)\n      .minBandwidth(this._maxBandwidth ?? 'auto');\n    return bandScale;\n  }\n}\n"]}