{"version":3,"sources":["../src/data-structure/point.ts"],"names":[],"mappings":"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","file":"point.js","sourcesContent":["import isNumber from '../common/isNumber';\nimport { pow, sqrt } from '../math';\n\nexport interface IPoint {\n  x: number;\n  y: number;\n  x1?: number;\n  y1?: number;\n  defined?: boolean; // defined表示这个点是否存在\n  context?: any; // context stores addition information for point\n\n  clone: () => IPoint;\n  copyFrom: (p: IPointLike) => IPoint;\n  set: (x: number, y: number) => IPoint;\n  add: (point: IPointLike | number) => IPoint;\n  sub: (point: IPointLike | number) => IPoint;\n  multi: (point: IPointLike | number) => IPoint;\n  div: (point: IPointLike | number) => IPoint;\n}\n\nexport type IPointLike = Pick<IPoint, 'x' | 'y' | 'x1' | 'y1' | 'defined' | 'context'>;\n\nexport class Point implements IPoint {\n  /**\n   * 面积图的下点\n   */\n  x: number = 0;\n  y: number = 0;\n  x1?: number;\n  y1?: number;\n  defined?: boolean;\n  context?: any;\n\n  constructor(x: number = 0, y: number = 0, x1?: number, y1?: number) {\n    this.x = x;\n    this.y = y;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  copyFrom(p: IPointLike): this {\n    this.x = p.x;\n    this.y = p.y;\n    this.x1 = p.x1;\n    this.y1 = p.y1;\n    this.defined = p.defined;\n    this.context = p.context;\n    return this;\n  }\n\n  set(x: number, y: number): this {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  add(point: IPointLike | number): IPoint {\n    if (isNumber(point)) {\n      this.x += point as number;\n      this.y += point as number;\n      return;\n    }\n    this.x += (<IPointLike>point).x;\n    this.y += (<IPointLike>point).y;\n    return this;\n  }\n  sub(point: IPointLike | number): IPoint {\n    if (isNumber(point)) {\n      this.x -= point as number;\n      this.y -= point as number;\n      return;\n    }\n    this.x -= (<IPointLike>point).x;\n    this.y -= (<IPointLike>point).y;\n    return this;\n  }\n  multi(point: IPointLike | number): IPoint {\n    throw new Error('暂不支持');\n  }\n  div(point: IPointLike | number): IPoint {\n    throw new Error('暂不支持');\n  }\n}\n\nexport class PointService {\n  /* distance */\n  static distancePP(p1: IPointLike, p2: IPointLike): number {\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2));\n  }\n  static distanceNN(x: number, y: number, x1: number, y1: number) {\n    return sqrt(pow(x - x1, 2) + pow(y - y1, 2));\n  }\n  static distancePN(point: IPointLike, x: number, y: number) {\n    return sqrt(pow(x - point.x, 2) + pow(y - point.y, 2));\n  }\n\n  /* point at */\n  static pointAtPP(p1: IPointLike, p2: IPointLike, t: number): IPoint {\n    return new Point((p2.x - p1.x) * t + p1.x, (p2.y - p1.y) * t + p1.y);\n  }\n}\n\nexport interface IPolarPoint {\n  r: number;\n  theta: number;\n  r1?: number;\n  theta1?: number;\n  defined?: boolean;\n  context?: any;\n\n  clone: () => IPolarPoint;\n  copyFrom: (p: IPolarPoint) => IPolarPoint;\n  set: (x: number, y: number) => IPolarPoint;\n  // TODO: support if needed\n  // add: (point: IPolarPoint | number) => IPolarPoint;\n  // sub: (point: IPolarPoint | number) => IPolarPoint;\n  // multi: (point: IPolarPoint | number) => IPolarPoint;\n  // div: (point: IPolarPoint | number) => IPolarPoint;\n}\n\nexport declare type IPolarPointLike = Pick<IPolarPoint, 'r' | 'theta' | 'r1' | 'theta1' | 'defined' | 'context'>;\n\nexport class PolarPoint implements IPolarPoint {\n  r: number = 0;\n  theta: number = 0;\n  r1?: number;\n  theta1?: number;\n  defined?: boolean;\n  context?: any;\n\n  constructor(r: number = 0, theta: number = 0, r1?: number, theta1?: number) {\n    this.r = r;\n    this.theta = theta;\n    this.r1 = r1;\n    this.theta1 = theta1;\n  }\n\n  clone(): PolarPoint {\n    return new PolarPoint(this.r, this.theta);\n  }\n\n  copyFrom(p: IPolarPointLike): this {\n    this.r = p.r;\n    this.theta = p.theta;\n    this.r1 = p.r1;\n    this.theta1 = p.theta1;\n    this.defined = p.defined;\n    this.context = p.context;\n    return this;\n  }\n\n  set(r: number, theta: number): this {\n    this.r = r;\n    this.theta = theta;\n    return this;\n  }\n}\n"]}