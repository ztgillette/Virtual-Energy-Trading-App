{"version":3,"sources":["../src/common/number.ts"],"names":[],"mappings":";;;AAIA,MAAM,yBAAyB,GAAG,KAAK,CAAC;AACxC,MAAM,yBAAyB,GAAG,KAAK,CAAC;AASxC,SAAgB,aAAa,CAC3B,CAAS,EACT,CAAS,EACT,SAAiB,yBAAyB,EAC1C,SAAiB,yBAAyB;IAE1C,MAAM,GAAG,GAAG,MAAM,CAAC;IACnB,MAAM,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/C,CAAC;AATD,sCASC;AASD,SAAgB,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,MAAe,EAAE,MAAe;IAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACvD,CAAC;AAFD,8BAEC;AASD,SAAgB,MAAM,CAAC,CAAS,EAAE,CAAS,EAAE,MAAe,EAAE,MAAe;IAC3E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACvD,CAAC;AAFD,wBAEC","file":"number.js","sourcesContent":["/**\n * @description 处理数值相关的方法\n */\n\nconst DEFAULT_ABSOLUTE_TOLERATE = 1e-10;\nconst DEFAULT_RELATIVE_TOLERATE = 1e-10;\n\n/**\n * 判断两数是否接近相等，函数参数参照 python isClose 方法\n * @param {number} a\n * @param {number} b\n * @param refTol 指定的相对容差比例，将乘以两数的最大值作为相对容差\n * @param absTol 指定的绝对容差\n */\nexport function isNumberClose(\n  a: number,\n  b: number,\n  relTol: number = DEFAULT_RELATIVE_TOLERATE,\n  absTol: number = DEFAULT_ABSOLUTE_TOLERATE\n) {\n  const abs = absTol;\n  const rel = relTol * Math.max(a, b);\n  return Math.abs(a - b) <= Math.max(abs, rel);\n}\n\n/**\n * 判断 a 是否大于 b，并排除容差范围\n * @param a\n * @param b\n * @param relTol 指定的相对容差比例，将乘以两数的最大值作为相对容差\n * @param absTol 指定的绝对容差\n */\nexport function isGreater(a: number, b: number, relTol?: number, absTol?: number) {\n  return a > b && !isNumberClose(a, b, relTol, absTol);\n}\n\n/**\n * 判断 a 是否小于 b，并排除容差范围\n * @param a\n * @param b\n * @param relTol 指定的相对容差比例，将乘以两数的最大值作为相对容差\n * @param absTol 指定的绝对容差\n */\nexport function isLess(a: number, b: number, relTol?: number, absTol?: number) {\n  return a < b && !isNumberClose(a, b, relTol, absTol);\n}\n"]}