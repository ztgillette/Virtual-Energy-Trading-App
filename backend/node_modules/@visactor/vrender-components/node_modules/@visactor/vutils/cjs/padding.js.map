{"version":3,"sources":["../src/padding.ts"],"names":[],"mappings":";;;;;;AAAA,2EAAmD;AACnD,+DAAuC;AACvC,iEAAyC;AAczC,SAAgB,gBAAgB,CAAC,OAAqC;IACpE,IAAI,IAAA,uBAAa,EAAC,OAAO,CAAC,EAAE;QAC1B,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;KAC7C;IAED,IAAI,IAAA,iBAAO,EAAC,OAAO,CAAC,EAAE;QACpB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAE9B,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,MAAM,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAChC,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;SACjE;QAED,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,OAAO,CAAC;YACvC,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;SACrD;QAED,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC;YAC1C,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SAC9C;QAED,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,OAAO,OAAO,CAAC;SAChB;KACF;IAED,IAAI,IAAA,kBAAQ,EAAC,OAAO,CAAC,EAAE;QACrB,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,OAAmB,CAAC;QACzE,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;KACnC;IAED,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AAlCD,4CAkCC","file":"padding.js","sourcesContent":["import isValidNumber from './common/isValidNumber';\nimport isArray from './common/isArray';\nimport isObject from './common/isObject';\n\nexport type IPadding = {\n  top?: number;\n  bottom?: number;\n  left?: number;\n  right?: number;\n};\n\n/**\n * 将 padding 转换为通用的格式（[上，右，下，左]）\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function normalizePadding(padding: number | number[] | IPadding) {\n  if (isValidNumber(padding)) {\n    return [padding, padding, padding, padding];\n  }\n\n  if (isArray(padding)) {\n    const length = padding.length;\n\n    if (length === 1) {\n      const paddingValue = padding[0];\n      return [paddingValue, paddingValue, paddingValue, paddingValue];\n    }\n\n    if (length === 2) {\n      const [vertical, horizontal] = padding;\n      return [vertical, horizontal, vertical, horizontal];\n    }\n\n    if (length === 3) {\n      const [top, horizontal, bottom] = padding;\n      return [top, horizontal, bottom, horizontal];\n    }\n\n    if (length === 4) {\n      return padding;\n    }\n  }\n\n  if (isObject(padding)) {\n    const { top = 0, right = 0, bottom = 0, left = 0 } = padding as IPadding;\n    return [top, right, bottom, left];\n  }\n\n  return [0, 0, 0, 0];\n}\n"]}