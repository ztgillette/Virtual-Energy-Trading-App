{"version":3,"sources":["../src/core/base.ts"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["/**\n * @description 组件基类\n */\nimport type { FederatedPointerEvent, IGroupGraphicAttribute, ISetAttributeContext } from '@visactor/vrender-core';\nimport { Group, CustomEvent } from '@visactor/vrender-core';\nimport type { Dict } from '@visactor/vutils';\nimport { merge, isFunction, isPlainObject, isNil } from '@visactor/vutils';\nimport type { ComponentOptions } from '../interface';\n\nconst GROUP_ATTRIBUTES = [\n  'x',\n  'y',\n  'dx',\n  'dy',\n  'scaleX',\n  'scaleY',\n  'angle',\n  'anchor',\n  'postMatrix',\n  'visible',\n  'clip',\n  'pickable',\n  'childrenPickable',\n  'zIndex',\n  'cursor'\n];\n\nexport abstract class AbstractComponent<T extends IGroupGraphicAttribute = IGroupGraphicAttribute> extends Group {\n  declare attribute: Partial<T>;\n\n  protected mode?: '2d' | '3d';\n\n  protected skipDefault?: boolean;\n\n  protected _skipRenderAttributes: string[] = GROUP_ATTRIBUTES;\n\n  constructor(attributes: T, options?: ComponentOptions) {\n    super(attributes);\n\n    if (options?.mode) {\n      this.mode = options.mode;\n\n      this.setMode(options.mode);\n    }\n\n    if (options?.skipDefault) {\n      this.skipDefault = true;\n    }\n    // 组件需要精准 bounds，所以将这个 strokeBoundsBuffer 设置为 0，否则会影响包围盒的获取\n    this.setTheme({\n      common: {\n        strokeBoundsBuffer: 0\n      }\n    });\n    this.attribute = attributes;\n    // 这里调用渲染和事件绑定逻辑\n    this.onSetStage(() => {\n      this.render();\n      this.bindEvents();\n    });\n  }\n\n  /**\n   * @override\n   * 更新单个属性值\n   * @param key\n   * @param value\n   * @param forceUpdateTag\n   */\n  setAttribute(key: string, value: any, forceUpdateTag?: boolean | undefined, context?: ISetAttributeContext): void {\n    const params =\n      this.onBeforeAttributeUpdate && this.onBeforeAttributeUpdate({ [key]: value }, this.attribute, key, context);\n    if (params) {\n      return this._setAttributes(params as Partial<T>, forceUpdateTag);\n    }\n\n    // overwrite when previous or next attribute is function\n    if (\n      isPlainObject(this.attribute[key]) &&\n      isPlainObject(value) &&\n      !isFunction(this.attribute[key]) &&\n      !isFunction(value)\n    ) {\n      merge(this.attribute[key], value);\n    } else {\n      this.attribute[key] = value;\n    }\n\n    // HACK: 待优化\n    if (!this._skipRenderAttributes.includes(key as string)) {\n      this.render();\n    }\n\n    this.valid = this.isValid();\n    if (!this.updateShapeAndBoundsTagSetted() && (forceUpdateTag || this.needUpdateTag(key as string))) {\n      this.addUpdateShapeAndBoundsTag();\n    } else {\n      this.addUpdateBoundTag();\n    }\n    this.addUpdatePositionTag();\n    this.onAttributeUpdate();\n  }\n\n  setAttributes(params: Partial<T>, forceUpdateTag?: boolean | undefined, context?: ISetAttributeContext): void {\n    params =\n      (this.onBeforeAttributeUpdate &&\n        (this.onBeforeAttributeUpdate(params, this.attribute, null, context) as Partial<T>)) ||\n      params;\n    return this._setAttributes(params, forceUpdateTag);\n  }\n\n  // @ts-ignore\n  _setAttributes(params: Partial<T>, forceUpdateTag?: boolean | undefined): void {\n    const keys = Object.keys(params) as (keyof T)[];\n    this._mergeAttributes(params, keys);\n\n    // HACK: 待优化\n    if (!keys.every(key => this._skipRenderAttributes.includes(key as string))) {\n      this.render();\n    }\n\n    this.valid = this.isValid();\n    // 没有设置shape&bounds的tag\n    if (!this.updateShapeAndBoundsTagSetted() && (forceUpdateTag || this.needUpdateTags(keys as string[]))) {\n      this.addUpdateShapeAndBoundsTag();\n    } else {\n      this.addUpdateBoundTag();\n    }\n    this.addUpdatePositionTag();\n    this.onAttributeUpdate();\n  }\n\n  protected _mergeAttributes(params: Partial<T>, keys?: (keyof T)[]) {\n    if (isNil(keys)) {\n      keys = Object.keys(params) as (keyof T)[];\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i] as keyof Partial<T>;\n      // overwrite when previous or next attribute is function\n      if (isPlainObject(this.attribute[key]) && !isFunction(this.attribute[key]) && !isFunction(params[key])) {\n        merge(this.attribute[key], params[key]);\n      } else {\n        this.attribute[key] = params[key];\n      }\n    }\n  }\n\n  protected bindEvents() {\n    // please override\n  }\n\n  protected abstract render(): void;\n\n  // 图形元素 id\n  protected _getNodeId(id: string) {\n    return `${this.id ?? this._uid}-${this.name}-${id}`;\n  }\n\n  // 用于 emit 组件自己的事件\n  protected _dispatchEvent(eventName: string, details?: Dict<any>) {\n    // 封装事件\n    const changeEvent = new CustomEvent(eventName, details);\n    // FIXME: 需要在 vrender 的事件系统支持\n    // @ts-ignore\n    changeEvent.manager = this.stage?.eventSystem.manager;\n\n    this.dispatchEvent(changeEvent);\n  }\n\n  /** 事件系统坐标转换为stage坐标 */\n  protected eventPosToStagePos(e: FederatedPointerEvent) {\n    const result = { x: 0, y: 0 };\n    // 1. 外部坐标 -> 内部坐标\n    const stagePoints = this.stage?.eventPointTransform(e as any) ?? { x: 0, y: 0 }; // updateSpec过程中交互的话, stage可能为空\n    // 2. 内部坐标 -> 组件坐标 (比如: 给layer设置 scale / x / y)\n    this.globalTransMatrix.transformPoint(stagePoints, result);\n    return result;\n  }\n}\n"]}