{"version":3,"sources":["../src/crosshair/rect.ts"],"names":[],"mappings":";;;AAIA,6CAAyC;AAGzC,iCAAuC;AAGvC,yCAAwD;AAExD,IAAA,qCAA0B,GAAE,CAAC;AAC7B,MAAa,aAAc,SAAQ,oBAAiC;IAalE,YAAY,UAA8B,EAAE,OAA0B;QACpE,KAAK,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAA,cAAK,EAAC,EAAE,EAAE,aAAa,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,CAAC;IACpG,CAAC;IAES,eAAe,CAAC,SAAiB;QACzC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,SAA+B,CAAC;QAEvE,MAAM,IAAI,GAAG,SAAS,CAAC,mBAAmB,CACxC,gBAAgB,kBAEd,CAAC,EAAE,KAAK,CAAC,CAAC,EACV,CAAC,EAAE,KAAK,CAAC,CAAC,EACV,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EACtB,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IACpB,SAAS,GAEd,MAAM,CACP,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW,CAAC,MAAyB;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC;YACjB,KAAK;YACL,GAAG;SACJ,CAAC,CAAC;IACL,CAAC;;AAxCH,sCAyCC;AAxCQ,+BAAiB,GAAG;IACzB,SAAS,EAAE;QACT,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,GAAG;KACb;CACF,CAAC","file":"rect.js","sourcesContent":["/**\n * @description 矩形类型 crosshair\n */\nimport type { IGroup } from '@visactor/vrender-core';\nimport { merge } from '@visactor/vutils';\nimport type { RegionLocationCfg } from '../core/type';\nimport type { Tag } from '../tag';\nimport { CrosshairBase } from './base';\nimport type { RectCrosshairAttrs } from './type';\nimport type { ComponentOptions } from '../interface';\nimport { loadRectCrosshairComponent } from './register';\n\nloadRectCrosshairComponent();\nexport class RectCrosshair extends CrosshairBase<RectCrosshairAttrs> {\n  static defaultAttributes = {\n    rectStyle: {\n      fill: '#b2bacf',\n      opacity: 0.2\n    }\n  };\n\n  protected topLabelShape?: Tag;\n  protected bottomLabelShape?: Tag;\n  protected leftLabelShape?: Tag;\n  protected rightLabelShape?: Tag;\n\n  constructor(attributes: RectCrosshairAttrs, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, RectCrosshair.defaultAttributes, attributes));\n  }\n\n  protected renderCrosshair(container: IGroup) {\n    const { start, end, rectStyle } = this.attribute as RectCrosshairAttrs;\n\n    const rect = container.createOrUpdateChild(\n      'crosshair-rect',\n      {\n        x: start.x,\n        y: start.y,\n        width: end.x - start.x,\n        height: end.y - start.y,\n        ...rectStyle\n      },\n      'rect'\n    );\n    return rect;\n  }\n\n  setLocation(region: RegionLocationCfg) {\n    const { start, end } = region;\n    this.setAttributes({\n      start,\n      end\n    });\n  }\n}\n"]}