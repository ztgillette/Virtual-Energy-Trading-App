import type { TextAlignType, TextBaselineType } from '@visactor/vrender-core';
import { IMarkAreaLabelPosition, IMarkLineLabelPosition, IMarkCommonArcLabelPosition } from './type';
export declare const FUZZY_EQUAL_DELTA = 0.001;
export declare const DEFAULT_MARK_LINE_THEME: {
    interactive: boolean;
    startSymbol: {
        visible: boolean;
        symbolType: string;
        size: number;
        fill: string;
        lineWidth: number;
    };
    endSymbol: {
        visible: boolean;
        symbolType: string;
        size: number;
        fill: string;
        lineWidth: number;
    };
    label: {
        position: IMarkLineLabelPosition;
        refX: number;
        refY: number;
        refAngle: number;
        textStyle: {
            fill: string;
            stroke: string;
            lineWidth: number;
            fontSize: number;
            fontWeight: string;
            fontStyle: string;
        };
        padding: number[];
        panel: {
            visible: boolean;
            cornerRadius: number;
            fill: string;
            fillOpacity: number;
        };
    };
    lineStyle: {
        stroke: string;
        lineWidth: number;
        lineDash: number[];
    };
};
export declare const DEFAULT_CARTESIAN_MARK_LINE_TEXT_STYLE_MAP: {
    [K: string]: {
        [T: string]: {
            textAlign: TextAlignType;
            textBaseline: TextBaselineType;
        };
    };
};
export declare const DEFAULT_MARK_ARC_LINE_THEME: {
    interactive: boolean;
    startSymbol: {
        visible: boolean;
        symbolType: string;
        size: number;
        fill: string;
        lineWidth: number;
    };
    endSymbol: {
        visible: boolean;
        symbolType: string;
        size: number;
        fill: string;
        lineWidth: number;
    };
    label: {
        autoRotate: boolean;
        position: IMarkCommonArcLabelPosition;
        refX: number;
        refY: number;
        refAngle: number;
        textStyle: {
            fill: string;
            stroke: string;
            lineWidth: number;
            fontSize: number;
            fontWeight: string;
            fontStyle: string;
        };
        padding: number[];
        panel: {
            visible: boolean;
            cornerRadius: number;
            fill: string;
            fillOpacity: number;
        };
    };
    lineStyle: {
        stroke: string;
        lineWidth: number;
        lineDash: number[];
    };
};
export declare const DEFAULT_MARK_AREA_THEME: {
    interactive: boolean;
    label: {
        position: IMarkAreaLabelPosition;
        textStyle: {
            fill: string;
            stroke: string;
            lineWidth: number;
            fontSize: number;
            fontWeight: string;
            fontStyle: string;
        };
        padding: number[];
        panel: {
            visible: boolean;
            cornerRadius: number;
            fill: string;
            fillOpacity: number;
        };
    };
    areaStyle: {
        fill: string;
        visible: boolean;
    };
};
export declare const DEFAULT_MARK_ARC_AREA_THEME: {
    interactive: boolean;
    label: {
        autoRotate: boolean;
        position: IMarkCommonArcLabelPosition;
        textStyle: {
            fill: string;
            stroke: string;
            lineWidth: number;
            fontSize: number;
            fontWeight: string;
            fontStyle: string;
        };
        padding: number[];
        panel: {
            visible: boolean;
            cornerRadius: number;
            fill: string;
            fillOpacity: number;
        };
    };
    areaStyle: {
        fill: string;
        visible: boolean;
    };
};
export declare const DEFAULT_POLAR_MARKER_TEXT_STYLE_MAP: {
    [K: string]: {
        textAlign: TextAlignType;
        textBaseline: TextBaselineType;
    };
};
export declare const DEFAULT_CARTESIAN_MARK_AREA_TEXT_STYLE_MAP: {
    [K: string]: {
        textAlign: TextAlignType;
        textBaseline: TextBaselineType;
    };
};
export declare const DEFAULT_MARK_POINT_THEME: {
    interactive: boolean;
    targetSymbol: {
        visible: boolean;
        offset: number;
        style: {
            symbolType: string;
            size: number;
            fill: boolean;
            stroke: string;
        };
    };
    itemLine: {
        visible: boolean;
        decorativeLine: {
            visible: boolean;
            length: number;
        };
        startSymbol: {
            visible: boolean;
            clip: boolean;
            symbolType: string;
            size: number;
            style: {
                fill: boolean;
                stroke: string;
            };
        };
        endSymbol: {
            visible: boolean;
            clip: boolean;
            symbolType: string;
            size: number;
            style: {
                fill: boolean;
                stroke: string;
            };
        };
        lineStyle: {
            stroke: string;
            lineWidth: number;
        };
    };
    itemContent: {
        type: string;
        position: string;
        refX: number;
    };
};
export declare const DEFAULT_MARK_POINT_TEXT_STYLE_MAP: {
    [K: string]: {
        [T: string]: {
            textAlign: TextAlignType;
            textBaseline: TextBaselineType;
        };
    };
};
