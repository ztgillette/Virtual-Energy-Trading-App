{"version":3,"sources":["../src/marker/area.ts"],"names":[],"mappings":"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","file":"area.js","sourcesContent":["import type { IGroup, IPolygon } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { graphicCreator } from '@visactor/vrender-core';\nimport { isValidNumber, merge, mixin } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport type { Tag, TagAttributes } from '../tag';\nimport { Marker } from './base';\nimport { DEFAULT_CARTESIAN_MARK_AREA_TEXT_STYLE_MAP, DEFAULT_MARK_AREA_THEME } from './config';\nimport type {\n  CommonMarkAreaAnimationType,\n  IMarkAreaLabelPosition,\n  MarkAreaAttrs,\n  MarkerAnimationState,\n  MarkerAreaLabelAttrs\n} from './type';\nimport { limitShapeInBounds } from '../util/limit-shape';\nimport type { ComponentOptions } from '../interface';\nimport { loadMarkAreaComponent } from './register';\nimport type { Point } from '../core/type';\nimport { DEFAULT_STATES } from '../constant';\nimport { DefaultExitMarkerAnimation, DefaultUpdateMarkAreaAnimation, markAreaAnimate } from './animate/animate';\nimport { MarkLabelMixin } from './mixin/label';\n\nloadMarkAreaComponent();\n\nexport function registerMarkAreaAnimate() {\n  MarkArea._animate = markAreaAnimate;\n}\n\nexport interface MarkArea\n  extends Pick<MarkLabelMixin<MarkAreaAttrs>, '_addMarkLabels' | '_updateMarkLabels' | 'getLabel' | '_label'>,\n    Marker<MarkAreaAttrs, CommonMarkAreaAnimationType> {}\n\nexport class MarkArea extends Marker<MarkAreaAttrs, CommonMarkAreaAnimationType> {\n  name = 'markArea';\n  static defaultAttributes = DEFAULT_MARK_AREA_THEME;\n\n  /** animate */\n  defaultUpdateAnimation = DefaultUpdateMarkAreaAnimation;\n  defaultExitAnimation = DefaultExitMarkerAnimation;\n  protected markerAnimate(state: MarkerAnimationState) {\n    if (MarkArea._animate && this._animationConfig) {\n      MarkArea._animate(this._area, this._label, this._animationConfig, state);\n    }\n  }\n\n  private _area!: IPolygon;\n  getArea() {\n    return this._area;\n  }\n\n  constructor(attributes: MarkAreaAttrs, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, MarkArea.defaultAttributes, attributes));\n  }\n\n  protected getPointAttrByPosition(position: IMarkAreaLabelPosition) {\n    const { x1, x2, y1, y2 } = this._area.AABBBounds;\n    const result = {\n      x: (x1 + x2) / 2,\n      y: (y1 + y2) / 2\n    };\n\n    if (position.includes('left') || position.includes('Left')) {\n      result.x = x1;\n    }\n    if (position.includes('right') || position.includes('Right')) {\n      result.x = x2;\n    }\n    if (position.includes('top') || position.includes('Top')) {\n      result.y = y1;\n    }\n    if (position.includes('bottom') || position.includes('Bottom')) {\n      result.y = y2;\n    }\n\n    return result;\n  }\n\n  protected setLabelPos(labelNode: Tag, labelAttrs: MarkerAreaLabelAttrs) {\n    if (this._area) {\n      const labelPosition = labelAttrs.position ?? 'middle';\n      const labelPoint = this.getPointAttrByPosition(labelPosition as IMarkAreaLabelPosition);\n      labelNode.setAttributes({\n        ...labelPoint,\n        textStyle: {\n          ...DEFAULT_CARTESIAN_MARK_AREA_TEXT_STYLE_MAP[labelPosition],\n          ...labelAttrs.textStyle\n        }\n      });\n\n      if (this.attribute.limitRect && labelAttrs.confine) {\n        const { x, y, width, height } = this.attribute.limitRect;\n        limitShapeInBounds(labelNode, {\n          x1: x,\n          y1: y,\n          x2: x + width,\n          y2: y + height\n        });\n      }\n    }\n  }\n\n  protected initMarker(container: IGroup) {\n    const { points, areaStyle, state } = this.attribute as MarkAreaAttrs;\n    const area = graphicCreator.polygon({\n      points: points,\n      ...areaStyle\n    });\n    area.states = merge({}, DEFAULT_STATES, state?.area);\n    area.name = 'mark-area-polygon';\n    this._area = area;\n    container.add(area);\n\n    // add label\n    this._addMarkLabels(container, 'mark-area-label', MarkArea.defaultAttributes.label as TagAttributes);\n  }\n\n  protected updateMarker() {\n    const { points, areaStyle, state } = this.attribute as MarkAreaAttrs;\n    if (this._area) {\n      this._area.setAttributes({\n        points: points,\n        ...areaStyle\n      });\n      this._area.states = merge({}, DEFAULT_STATES, state?.area);\n    }\n\n    // update label\n    this._updateMarkLabels(MarkArea.defaultAttributes.label as TagAttributes);\n  }\n\n  protected isValidPoints() {\n    const { points } = this.attribute as MarkAreaAttrs;\n    if (!points || points.length < 3) {\n      return false;\n    }\n    let validFlag = true;\n    points.forEach((point: Point) => {\n      if (!isValidNumber((point as Point).x) || !isValidNumber((point as Point).y)) {\n        validFlag = false;\n        return;\n      }\n    });\n    return validFlag;\n  }\n}\n\nmixin(MarkArea, MarkLabelMixin);\n"]}