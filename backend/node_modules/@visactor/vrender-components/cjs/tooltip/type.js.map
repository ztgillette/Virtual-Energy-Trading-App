{"version":3,"sources":["../src/tooltip/type.ts"],"names":[],"mappings":"","file":"type.js","sourcesContent":["import type {\n  IGraphicAttribute,\n  IGroupGraphicAttribute,\n  IRectGraphicAttribute,\n  ITextAttribute,\n  IRichTextCharacter\n} from '@visactor/vrender-core';\nimport type { IBounds, IPadding } from '@visactor/vutils';\n\nexport interface IContainerSize {\n  width?: number;\n  height?: number;\n}\n\nexport type TooltipAttributes = IGroupGraphicAttribute & TooltipComponentAttrs;\n\nexport type TooltipComponentAttrs = TooltipPositionAttrs & {\n  /** tooltip 背景 */\n  panel?: TooltipPanelAttrs;\n\n  /** tooltip 标题 */\n  title?: TooltipRowAttrs;\n  /** tooltip 内容 */\n  content?: TooltipRowAttrs[];\n\n  /** 标题样式 */\n  titleStyle?: TooltipRowStyleAttrs;\n  /** 内容样式 */\n  contentStyle?: TooltipRowStyleAttrs;\n\n  /** 是否自动计算 tooltip 大小 */\n  autoMeasure?: boolean;\n\n  /** 是否自动计算 tooltip 位置 */\n  autoCalculatePosition?: boolean;\n\n  /** 整体边距 */\n  padding?: number | number[] | IPadding;\n\n  /** 最小宽度 */\n  minWidth?: number;\n  /** 最大宽度 */\n  maxWidth?: number;\n\n  /** 是否可交互 */\n  enterable?: boolean;\n\n  /** 缓动 duration */\n  transitionDuration?: number;\n\n  // 以下为组件自动计算的属性\n  /** 内容项是否有 shape */\n  hasContentShape?: boolean;\n  /** 内容项 key 的最大宽度，用于布局，因为 key 需要按照列对齐 */\n  keyWidth?: number;\n  /** 内容项 value 的最大宽度，用于布局，因为 value 需要按照列对齐 */\n  valueWidth?: number;\n  /**\n   * @since 0.19.10\n   *\n   * shape、key、value的对齐方式，可选项如下：\n   * 'left': 从左到右对齐\n   * 'right': 从右到左对齐\n   */\n  align?: 'left' | 'right';\n};\n\n/** tooltip 文本样式 */\nexport type TooltipTextAttrs = Omit<Partial<ITextAttribute & IGraphicAttribute & IContainerSize>, 'text'> & {\n  /**\n   * 文本内容\n   * - 支持富文本配置\n   */\n  text?: string | number | string[] | number[] | TooltipRichTextAttrs;\n  /** 文本是否支持多行显示 */\n  multiLine?: boolean;\n  /** 文本换行模式 */\n  wordBreak?: string;\n};\n\nexport type TooltipRichTextAttrs = {\n  /**\n   * 文本类型（默认类型为text）\n   * text, rich, html\n   */\n  type?: string;\n  text?: IRichTextCharacter[] | string;\n};\n\n/** tooltip symbol 样式 */\nexport type TooltipSymbolAttrs = Partial<IGraphicAttribute> & {\n  /** 图形 path */\n  path?: string;\n  size?: number;\n  symbolType?: string;\n  /** 其他图形样式，暂时这么处理 */\n  [key: string]: any;\n};\n\n/** tooltip 背景样式 */\nexport type TooltipPanelAttrs = Partial<IRectGraphicAttribute> & {\n  shadow?: boolean;\n  shadowSpread?: number;\n};\n\n/** tooltip 内容行配置 */\nexport type TooltipRowAttrs = IContainerSize & {\n  visible?: boolean;\n  /** key 对应图形样式（title 没有这个属性） */\n  key?: TooltipTextAttrs;\n  /** value 对应图形样式 */\n  value?: TooltipTextAttrs;\n  /** shape 对应图形样式 */\n  shape?: TooltipSymbolAttrs;\n  /** 行间距 */\n  spaceRow?: number;\n};\n\n/** tooltip 内容行样式 */\nexport type TooltipRowStyleAttrs = {\n  /** key 对应图形样式（title 没有这个属性） */\n  key?: Omit<TooltipTextAttrs, 'text'> & TooltipColumnStyleAttrs;\n  /** value 对应图形样式 */\n  value?: Omit<TooltipTextAttrs, 'text'> & TooltipColumnStyleAttrs;\n  /** shape 对应图形样式 */\n  shape?: TooltipSymbolAttrs & TooltipColumnStyleAttrs;\n  /** 行间距 */\n  spaceRow?: number;\n};\n\nexport type TooltipColumnStyleAttrs = {\n  /** 右边距 */\n  spacing?: number;\n};\n\nexport type TooltipPositionAttrs = {\n  /** 光标位置 x */\n  pointerX?: number;\n  /** 光标位置 y */\n  pointerY?: number;\n\n  /** tooltip 偏移 x */\n  offsetX?: number;\n  /** tooltip 偏移 y */\n  offsetY?: number;\n\n  /** tooltip 相对 pointer 位置（x 轴） */\n  positionX?: 'left' | 'right' | 'center';\n  /** tooltip 相对 pointer 位置（y 轴） */\n  positionY?: 'top' | 'bottom' | 'middle';\n\n  /** 父级 bounds */\n  parentBounds?: IBounds;\n};\n"]}