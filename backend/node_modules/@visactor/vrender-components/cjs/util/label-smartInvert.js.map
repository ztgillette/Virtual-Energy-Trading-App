{"version":3,"sources":["../src/util/label-smartInvert.ts"],"names":[],"mappings":"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","file":"label-smartInvert.js","sourcesContent":["import type { IColor } from '@visactor/vrender-core';\nimport { Color, hexToRgb } from '@visactor/vutils';\n\nconst defaultAlternativeColors: string[] = ['#ffffff', '#000000'];\n\n/**\n * 标签智能反色\n * @param foregroundColorOrigin\n * @param backgroundColorOrogin\n * @returns\n */\nexport function labelSmartInvert(\n  foregroundColorOrigin: IColor | undefined,\n  backgroundColorOrogin: IColor | undefined,\n  textType?: string | undefined,\n  contrastRatiosThreshold?: number,\n  alternativeColors?: string | string[],\n  mode?: string\n): IColor | undefined {\n  if (typeof foregroundColorOrigin !== 'string' || typeof backgroundColorOrogin !== 'string') {\n    return foregroundColorOrigin;\n  }\n  const foregroundColor = new Color(foregroundColorOrigin as string).toHex();\n  const backgroundColor = new Color(backgroundColorOrogin as string).toHex();\n  if (!contrastAccessibilityChecker(foregroundColor, backgroundColor, textType, contrastRatiosThreshold, mode)) {\n    return improveContrastReverse(\n      foregroundColor,\n      backgroundColor,\n      textType,\n      contrastRatiosThreshold,\n      alternativeColors,\n      mode\n    );\n  }\n  return foregroundColor;\n}\n\n/**\n * 提升对比度\n * 对于对比度不足阈值的情况，推荐备选颜色色板中的颜色提升对比\n * @param foregroundColor\n * @param backgroundColor\n * @returns\n */\nfunction improveContrastReverse(\n  foregroundColor: IColor | undefined,\n  backgroundColor: IColor | undefined,\n  textType?: IColor | undefined,\n  contrastRatiosThreshold?: number,\n  alternativeColors?: string | string[],\n  mode?: string\n) {\n  const alternativeColorPalletes: string[] = [];\n  if (alternativeColors) {\n    if (alternativeColors instanceof Array) {\n      alternativeColorPalletes.push(...alternativeColors);\n    } else {\n      alternativeColorPalletes.push(alternativeColors);\n    }\n  }\n  alternativeColorPalletes.push(...defaultAlternativeColors);\n  for (const alternativeColor of alternativeColorPalletes) {\n    if (foregroundColor === alternativeColor) {\n      continue;\n    }\n    if (contrastAccessibilityChecker(alternativeColor, backgroundColor, textType, contrastRatiosThreshold, mode)) {\n      return alternativeColor;\n    }\n  }\n  return undefined;\n}\n\n/**\n * 颜色对比度可行性检查 https://webaim.org/articles/contrast/\n * - WCAG 2.0 AA 级要求普通文本的对比度至少为 4.5:1，大文本的对比度至少为 3:1。（目前按照此标准）\n * - WCAG 2.1 要求图形和用户界面组件（例如表单输入边框）的对比度至少为 3:1。\n * - WCAG AAA 级要求普通文本的对比度至少为 7:1，大文本的对比度至少为 4.5:1。\n * @param foregroundColor\n * @param backgroundColor\n * @returns\n */\nexport function contrastAccessibilityChecker(\n  foregroundColor: IColor | undefined,\n  backgroundColor: IColor | undefined,\n  textType?: IColor | undefined,\n  contrastRatiosThreshold?: number,\n  mode?: string\n): boolean {\n  if (mode === 'lightness') {\n    const backgroundColorLightness = Color.getColorBrightness(new Color(backgroundColor as string));\n    const foregroundColorLightness = Color.getColorBrightness(new Color(foregroundColor as string));\n    if (foregroundColorLightness < 0.5) {\n      // 文字颜色为'#ffffff'\n      if (backgroundColorLightness >= 0.5) {\n        return true;\n      }\n      return false;\n    }\n    // 文字颜色为‘#000000'\n    if (backgroundColorLightness < 0.5) {\n      return true;\n    }\n    return false;\n  }\n  //Contrast ratios can range from 1 to 21\n  if (contrastRatiosThreshold) {\n    if (contrastRatios(foregroundColor, backgroundColor) > contrastRatiosThreshold) {\n      return true;\n    }\n    return false;\n  } else if (textType === 'largeText') {\n    if (contrastRatios(foregroundColor, backgroundColor) > 3) {\n      return true;\n    }\n    return false;\n  }\n  if (contrastRatios(foregroundColor, backgroundColor) > 4.5) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * 计算颜色对比度 https://webaim.org/articles/contrast/\n * Contrast ratios can range from 1 to 21 (commonly written 1:1 to 21:1).\n * (L1 + 0.05) / (L2 + 0.05), whereby:\n * L1 is the relative luminance of the lighter of the colors, and\n * L2 is the relative luminance of the darker of the colors.\n * @param foregroundColor\n * @param backgroundColor\n * @returns\n */\nfunction contrastRatios(foregroundColor: IColor | undefined, backgroundColor: IColor | undefined): number {\n  const foregroundColorLuminance = getColorLuminance(foregroundColor as string);\n  const backgroundColorLuminance = getColorLuminance(backgroundColor as string);\n  const L1 = foregroundColorLuminance > backgroundColorLuminance ? foregroundColorLuminance : backgroundColorLuminance;\n  const L2 = foregroundColorLuminance > backgroundColorLuminance ? backgroundColorLuminance : foregroundColorLuminance;\n  const contrastRatios = (L1 + 0.05) / (L2 + 0.05);\n  return contrastRatios;\n}\n\n/**\n *  计算相对亮度 https://webaim.org/articles/contrast/\n * the relative brightness of any point in a colorspace, normalized to 0 for darkest black and 1 for lightest white\n * Note 1: For the sRGB colorspace, the relative luminance of a color is defined as\n * L = 0.2126 * R + 0.7152 * G + 0.0722 * B where R, G and B are defined as:\n * if RsRGB <= 0.03928 then R = RsRGB/12.92 else R = ((RsRGB+0.055)/1.055) ^ 2.4\n * if GsRGB <= 0.03928 then G = GsRGB/12.92 else G = ((GsRGB+0.055)/1.055) ^ 2.4\n * if BsRGB <= 0.03928 then B = BsRGB/12.92 else B = ((BsRGB+0.055)/1.055) ^ 2.4\n * and RsRGB, GsRGB, and BsRGB are defined as:\n * RsRGB = R8bit/255\n * GsRGB = G8bit/255\n * BsRGB = B8bit/255\n * @param color\n * @returns\n */\nfunction getColorLuminance(color: string): number {\n  const rgb8bit = hexToRgb(color);\n  const RsRGB = rgb8bit[0] / 255;\n  const GsRGB = rgb8bit[1] / 255;\n  const BsRGB = rgb8bit[2] / 255;\n  let R;\n  let G;\n  let B;\n  if (RsRGB <= 0.03928) {\n    R = RsRGB / 12.92;\n  } else {\n    R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n  }\n  if (GsRGB <= 0.03928) {\n    G = GsRGB / 12.92;\n  } else {\n    G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n  }\n  if (BsRGB <= 0.03928) {\n    B = BsRGB / 12.92;\n  } else {\n    B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n  }\n  const L = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  return L;\n}\n\nexport function smartInvertStrategy(\n  fillStrategy: string,\n  baseColor: IColor,\n  invertColor: IColor,\n  similarColor: IColor\n) {\n  let result;\n  switch (fillStrategy) {\n    case 'base':\n      result = baseColor;\n      break;\n    case 'invertBase':\n      result = invertColor;\n      break;\n    case 'similarBase':\n      result = similarColor;\n    default:\n      break;\n  }\n  return result;\n}\n"]}