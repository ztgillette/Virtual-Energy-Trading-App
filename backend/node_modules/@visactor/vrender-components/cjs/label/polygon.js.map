{"version":3,"sources":["../src/label/polygon.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,6CAAyC;AAEzC,iCAAmC;AAGnC,MAAa,YAAa,SAAQ,gBAA4B;IAW5D,YAAY,UAA6B,EAAE,OAA0B;QACnE,MAAM,EAAE,IAAI,KAAwB,UAAU,EAA7B,cAAc,UAAK,UAAU,EAAxC,QAA2B,CAAa,CAAC;QAC/C,KAAK,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAC,CAAC,CAAC,UAAU,CAAC,CAAC,iBAAG,IAAI,IAAK,IAAA,cAAK,EAAC,EAAE,EAAE,YAAY,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAE,CAAC,CAAC;QAZpH,SAAI,GAAG,eAAe,CAAC;IAavB,CAAC;IAES,QAAQ,CAChB,UAAuB,EACvB,aAA0B,EAC1B,WAA0C,QAAQ,EAClD,MAAM,GAAG,CAAC;QAEV,IAAI,CAAC,UAAU,IAAI,CAAC,aAAa,EAAE;YACjC,OAAO;SACR;QAED,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC;QAEtC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAExB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAClB,CAAC;;AAhCH,oCAiCC;AA9BQ,8BAAiB,GAA+B;IACrD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;KACb;IACD,QAAQ,EAAE,QAAQ;IAClB,MAAM,EAAE,CAAC;CACV,CAAC","file":"polygon.js","sourcesContent":["import type { IBoundsLike } from '@visactor/vutils';\nimport { merge } from '@visactor/vutils';\nimport type { PolygonLabelAttrs } from './type';\nimport { LabelBase } from './base';\nimport type { ComponentOptions } from '../interface';\n\nexport class PolygonLabel extends LabelBase<PolygonLabelAttrs> {\n  name = 'polygon-label';\n\n  static defaultAttributes: Partial<PolygonLabelAttrs> = {\n    textStyle: {\n      fill: '#000'\n    },\n    position: 'center',\n    offset: 6\n  };\n\n  constructor(attributes: PolygonLabelAttrs, options?: ComponentOptions) {\n    const { data, ...restAttributes } = attributes;\n    super(options?.skipDefault ? attributes : { data, ...merge({}, PolygonLabel.defaultAttributes, restAttributes) });\n  }\n\n  protected labeling(\n    textBounds: IBoundsLike,\n    graphicBounds: IBoundsLike,\n    position: PolygonLabelAttrs['position'] = 'center',\n    offset = 0\n  ) {\n    if (!textBounds || !graphicBounds) {\n      return;\n    }\n\n    const { x1, x2, y2, y1 } = textBounds;\n\n    const x = (x1 + x2) / 2;\n    const y = (y1 + y2) / 2;\n\n    return { x, y };\n  }\n}\n"]}