{"version":3,"sources":["../src/label/arc.ts"],"names":[],"mappings":"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","file":"arc.js","sourcesContent":["import type { IAABBBounds, IBoundsLike } from '@visactor/vutils';\nimport {\n  merge,\n  isValidNumber,\n  isNil,\n  isLess,\n  isGreater,\n  isNumberClose as isClose,\n  polarToCartesian,\n  computeQuadrant\n} from '@visactor/vutils';\nimport { LabelBase } from './base';\nimport type { ArcLabelAttrs, IPoint, Quadrant, BaseLabelAttrs, LabelItem, IArcLabelLineSpec } from './type';\nimport type { IArc, IRichTextAttribute, ITextAttribute } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { type IRichText, type IText, type IArcGraphicAttribute, type IGraphic } from '@visactor/vrender-core';\nimport {\n  isQuadrantRight,\n  isQuadrantLeft,\n  lineCirclePoints,\n  connectLineRadian,\n  checkBoundsOverlap,\n  getAlignOffset\n} from './util';\nimport type { ComponentOptions } from '../interface';\nimport { registerLabelComponent } from './data-label-register';\nimport { isFunction } from '@visactor/vutils';\n\nexport class ArcInfo {\n  key!: string;\n  refDatum!: any;\n  refArc!: IArc;\n  /**\n   * 绘图区圆弧中点\n   */\n  center!: IPoint;\n  /**\n   * label起始区圆弧中点\n   */\n  outerCenter!: IPoint;\n  labelSize!: { width: number; height: number };\n  labelPosition!: IPoint;\n  labelLimit: number;\n  labelVisible: boolean;\n  lastLabelY!: number;\n  labelYRange!: [number, number];\n  labelText!: string | string[];\n  pointA: IPoint;\n  pointB: IPoint;\n  pointC: IPoint;\n  labelLine: IArcLabelLineSpec;\n  /**\n   * 象限\n   */\n  quadrant: Quadrant;\n  radian: number;\n  middleAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  /** 扇形圆心点坐标 */\n  circleCenter: IPoint;\n  k: number;\n  angle: number;\n\n  constructor(\n    refDatum: any,\n    center: IPoint,\n    outerCenter: IPoint,\n    quadrant: Quadrant,\n    radian: number,\n    middleAngle: number,\n    innerRadius: number,\n    outerRadius: number,\n    circleCenter: IPoint\n  ) {\n    this.refDatum = refDatum;\n    this.center = center;\n    this.outerCenter = outerCenter;\n    this.quadrant = quadrant;\n    this.radian = radian;\n    this.middleAngle = middleAngle;\n    this.innerRadius = innerRadius;\n    this.outerRadius = outerRadius;\n    this.circleCenter = circleCenter;\n    this.labelVisible = true;\n  }\n\n  getLabelBounds(): IBoundsLike {\n    if (!this.labelPosition || !this.labelSize) {\n      return { x1: 0, x2: 0, y1: 0, y2: 0 };\n    }\n    return {\n      x1: this.labelPosition.x - this.labelSize.width / 2,\n      y1: this.labelPosition.y - this.labelSize.height / 2,\n      x2: this.labelPosition.x + this.labelSize.width / 2,\n      y2: this.labelPosition.y + this.labelSize.height / 2\n    };\n  }\n}\n\ntype PriorityArc = {\n  arc: ArcInfo;\n  /**\n   * 在初始 arc 数组中的索引\n   */\n  originIndex: number;\n  priorityIndex: number;\n};\n\nexport class ArcLabel extends LabelBase<ArcLabelAttrs> {\n  name = 'arc-label';\n\n  static defaultAttributes: Partial<ArcLabelAttrs> = {\n    coverEnable: false,\n    spaceWidth: 5,\n    layoutArcGap: 6,\n    textStyle: {\n      visible: true,\n      fontSize: 14,\n      fontWeight: 'normal',\n      fillOpacity: 1,\n      // arc boundsPadding 宽度设大会家加剧旋转时，AABBbounds.width 大于无旋转角度的情况，导致 arc 内部标签被缩略的问题\n      boundsPadding: [-1, 0, -1, 0],\n      ellipsis: true\n    },\n    position: 'outside',\n    line: {\n      visible: true,\n      line1MinLength: 20,\n      line2MinLength: 10\n    },\n    layout: {\n      align: 'arc',\n      strategy: 'priority',\n      tangentConstraint: true\n    }\n  };\n\n  private _ellipsisWidth: number = 0;\n\n  private _arcLeft: Map<any, ArcInfo> = new Map();\n  private _arcRight: Map<any, ArcInfo> = new Map();\n  private _line2MinLength: number = 0;\n  private _alignOffset: number = 0;\n\n  constructor(attributes: ArcLabelAttrs, options?: ComponentOptions) {\n    const { data, ...restAttributes } = attributes;\n    super(options?.skipDefault ? attributes : { data, ...merge({}, ArcLabel.defaultAttributes, restAttributes) });\n  }\n\n  protected _overlapping(labels: (IText | IRichText)[]) {\n    if (['inside', 'inside-center'].includes(this.attribute.position as string)) {\n      return super._overlapping(labels);\n    }\n    return labels;\n  }\n\n  protected labeling(\n    textBounds: IBoundsLike,\n    graphicBounds: IBoundsLike,\n    position = 'outside',\n    offset = 0\n  ): { x: number; y: number } | undefined {\n    if (!textBounds || !graphicBounds) {\n      return;\n    }\n    return { x: 0, y: 0 };\n  }\n\n  protected _layout(texts: (IText | IRichText)[]) {\n    if (!texts || !texts.length) {\n      return;\n    }\n\n    const labels = super._layout(texts);\n    const textBoundsArray = labels.map(label => {\n      return this.getGraphicBounds(label as any);\n    });\n    const ellipsisLabelAttribute = {\n      ...this.attribute.textStyle,\n      text: '…'\n    };\n    let ellipsisWidth = Infinity;\n    if (ellipsisLabelAttribute.ellipsis !== false) {\n      const ellipsisText = this._createLabelText(ellipsisLabelAttribute);\n      const ellipsisTextBounds = this.getGraphicBounds(ellipsisText);\n      ellipsisWidth = ellipsisTextBounds.x2 - ellipsisTextBounds.x1;\n    }\n    const data = labels.map(label => label.attribute as LabelItem);\n    const currentMarks = Array.from(this._idToGraphic.values());\n    this._line2MinLength = isFunction(this.attribute.line.line2MinLength)\n      ? (\n          this.attribute.line.line2MinLength as (\n            texts: IGraphic[],\n            arcs: IArc[],\n            attrs: Partial<ArcLabelAttrs>\n          ) => number\n        )(texts, currentMarks as IArc[], this.attribute)\n      : (this.attribute.line.line2MinLength as number);\n    this._alignOffset =\n      (isFunction(this.attribute.layout.alignOffset)\n        ? (\n            this.attribute.layout.alignOffset as (\n              texts: IGraphic[],\n              arcs: IArc[],\n              attrs: Partial<ArcLabelAttrs>\n            ) => number\n          )(texts, currentMarks as IArc[], this.attribute)\n        : (this.attribute.layout.alignOffset as number)) ?? 0;\n\n    const arcs: ArcInfo[] = this.layoutArcLabels(\n      this.attribute.position,\n      this.attribute,\n      currentMarks,\n      data,\n      textBoundsArray,\n      ellipsisWidth\n    );\n    for (let i = 0; i < data.length; i++) {\n      const textData = data[i];\n      const basedArc = arcs.find(arc => arc.refDatum?.id === textData.id);\n      if (basedArc) {\n        const labelAttribute = {\n          visible: basedArc.labelVisible,\n          x: basedArc.labelPosition.x,\n          y: basedArc.labelPosition.y,\n          angle: basedArc.angle,\n          points:\n            basedArc.pointA && basedArc.pointB && basedArc.pointC\n              ? [basedArc.pointA, basedArc.pointB, basedArc.pointC]\n              : undefined,\n          line: basedArc.labelLine\n        };\n\n        if (labels[i].type === 'richtext') {\n          (labelAttribute as unknown as IRichTextAttribute).width =\n            basedArc.labelLimit ?? (labels[i].attribute as IRichTextAttribute).width;\n        } else {\n          (labelAttribute as unknown as ITextAttribute).maxLineWidth =\n            basedArc.labelLimit ?? (labels[i].attribute as ITextAttribute).maxLineWidth;\n        }\n\n        if (basedArc.refArc && basedArc.refArc.type === 'arc3d') {\n          (labelAttribute as any).anchor3d = [\n            basedArc.circleCenter.x - labelAttribute.x,\n            basedArc.circleCenter.y - labelAttribute.y\n          ];\n          (labelAttribute as any).beta = basedArc.refArc.attribute.beta;\n        }\n\n        labels[i].setAttributes(labelAttribute);\n      }\n    }\n    return labels;\n  }\n\n  protected layoutArcLabels(\n    position: BaseLabelAttrs['position'],\n    attribute: any,\n    currentMarks?: IGraphic[],\n    data?: LabelItem[],\n    textBoundsArray?: any,\n    ellipsisWidth?: number\n  ) {\n    // setArcs : 根据 arc 设置 datum 中对应的标签数据\n    this._arcLeft.clear();\n    this._arcRight.clear();\n    this._ellipsisWidth = ellipsisWidth;\n\n    let maxRadius = 0;\n    currentMarks.forEach(currentMarks => {\n      if ((currentMarks.attribute as IArcGraphicAttribute).outerRadius > maxRadius) {\n        maxRadius = (currentMarks.attribute as IArcGraphicAttribute).outerRadius;\n      }\n    });\n\n    data.forEach((d, index) => {\n      const currentMark = this._idToGraphic.get(d.id);\n      const graphicAttribute = currentMark.getAttributes(true) as IArcGraphicAttribute;\n      const center = { x: graphicAttribute?.x ?? 0, y: graphicAttribute?.y ?? 0 };\n      if (!isNil(data[index]) && !isNil(textBoundsArray[index])) {\n        const item = data[index] ? data[index] : null;\n        const textBounds = textBoundsArray[index] ? textBoundsArray[index] : { x1: 0, x2: 0, y1: 0, y2: 0 };\n\n        const arcMiddleAngle = (graphicAttribute.startAngle + graphicAttribute.endAngle) / 2;\n        const intervalAngle = graphicAttribute.endAngle - graphicAttribute.startAngle;\n        const arcQuadrant = computeQuadrant(graphicAttribute.endAngle - intervalAngle / 2);\n\n        const arcMiddle = polarToCartesian(center, graphicAttribute.outerRadius, arcMiddleAngle);\n        const outerArcMiddle = polarToCartesian(center, maxRadius + attribute.line.line1MinLength, arcMiddleAngle);\n        const arc = new ArcInfo(\n          item,\n          arcMiddle,\n          outerArcMiddle,\n          arcQuadrant,\n          intervalAngle,\n          arcMiddleAngle,\n          graphicAttribute.innerRadius,\n          graphicAttribute.outerRadius,\n          center\n        );\n        arc.refArc = currentMark as IArc;\n        arc.pointA = polarToCartesian(\n          center as IPoint,\n          this.computeDatumRadius(center.x * 2, center.y * 2, graphicAttribute.outerRadius),\n          arc.middleAngle\n        );\n\n        arc.labelSize = {\n          width: textBounds.x2 - textBounds.x1,\n          height: textBounds.y2 - textBounds.y1\n        };\n\n        if (isQuadrantRight(arc.quadrant)) {\n          this._arcRight.set(arc.refDatum, arc);\n        } else if (isQuadrantLeft(arc.quadrant)) {\n          this._arcLeft.set(arc.refDatum, arc);\n        }\n      }\n    });\n\n    // layoutLabels : 执行内部/外部标签的布局计算\n    const leftArcs = Array.from(this._arcLeft.values());\n    const rightArcs = Array.from(this._arcRight.values());\n    const arcs: ArcInfo[] = [];\n    switch (position) {\n      case 'inside':\n      case 'inside-inner':\n      case 'inside-outer':\n      case 'inside-center':\n        arcs.push(...this._layoutInsideLabels(rightArcs, attribute, currentMarks));\n        arcs.push(...this._layoutInsideLabels(leftArcs, attribute, currentMarks));\n        break;\n      case 'outside':\n      default:\n        arcs.push(...this._layoutOutsideLabels(rightArcs, attribute, currentMarks));\n        arcs.push(...this._layoutOutsideLabels(leftArcs, attribute, currentMarks));\n        break;\n    }\n    return arcs;\n  }\n\n  /**\n   * 布局内部标签\n   */\n  private _layoutInsideLabels(arcs: ArcInfo[], attribute: ArcLabelAttrs, currentMarks: any[]) {\n    const labelConfig = attribute;\n    const spaceWidth = labelConfig.spaceWidth as number;\n    const position = labelConfig.position ?? 'inside';\n    const offsetRadius = labelConfig.offsetRadius ?? -spaceWidth;\n\n    arcs.forEach((arc: ArcInfo) => {\n      const { labelSize, radian } = arc;\n      const innerRadius = arc.innerRadius;\n      const outerRadius = arc.outerRadius;\n      const minRadian = connectLineRadian(outerRadius, labelSize.height);\n      let limit;\n      if (radian < minRadian) {\n        limit = 0;\n      } else {\n        let minRadius;\n        if (radian >= Math.PI) {\n          minRadius = innerRadius;\n        } else {\n          minRadius = Math.max(innerRadius, labelSize.height / 2 / Math.tan(radian / 2));\n        }\n        limit = outerRadius - minRadius - spaceWidth;\n      }\n      // TODO: 对于不旋转的内部标签设置 limit 为 outerRadius\n      if (labelConfig.rotate !== true) {\n        limit = outerRadius - spaceWidth;\n      }\n      const text = this._getFormatLabelText(arc.refDatum, limit);\n      arc.labelText = text;\n      const labelWidth = Math.min(limit, arc.labelSize.width);\n      const align = this._computeAlign(arc, attribute);\n      let alignOffset = 0;\n      if (position === 'inside') {\n        alignOffset = align === 'left' ? labelWidth : align === 'right' ? 0 : labelWidth / 2;\n      }\n      let labelRadius;\n      if (position === 'inside-inner') {\n        labelRadius = innerRadius - offsetRadius + alignOffset;\n      } else if (position === 'inside-center') {\n        labelRadius = innerRadius + (outerRadius - innerRadius) / 2;\n      } else {\n        labelRadius = outerRadius + offsetRadius - alignOffset;\n      }\n      arc.labelPosition = polarToCartesian(arc.circleCenter, labelRadius, arc.middleAngle);\n      arc.labelLimit = labelWidth;\n      if (!isGreater(labelWidth, 0)) {\n        arc.labelVisible = false;\n      }\n\n      if (labelConfig.rotate !== false) {\n        arc.angle = attribute.textStyle?.angle ?? arc.middleAngle;\n        let offsetAngle = labelConfig.offsetAngle ?? 0;\n        if (['inside-inner', 'inside-outer'].includes(position as string)) {\n          offsetAngle += Math.PI / 2;\n        }\n        arc.angle += offsetAngle;\n      }\n    });\n    return arcs;\n  }\n\n  /**\n   * 布局外部标签\n   */\n  private _layoutOutsideLabels(arcs: ArcInfo[], attribute: ArcLabelAttrs, currentMarks: any[]) {\n    const center = { x: currentMarks[0].attribute.x ?? 0, y: currentMarks[0].attribute.y ?? 0 };\n    const height = center.y * 2;\n    const labelLayout = attribute.layout;\n    const spaceWidth = attribute.spaceWidth as number;\n\n    arcs.forEach(arc => {\n      const direction = isQuadrantLeft(arc.quadrant) ? -1 : 1;\n      arc.labelPosition = {\n        x: arc.outerCenter.x + direction * (arc.labelSize.width / 2 + this._line2MinLength + spaceWidth),\n        y: arc.outerCenter.y\n      };\n    });\n    arcs.sort((a, b) => {\n      return a.labelPosition.y - b.labelPosition.y;\n    });\n\n    if (attribute.coverEnable !== false || labelLayout.strategy === 'none') {\n      for (const arc of arcs) {\n        const { labelPosition, labelSize } = arc;\n        arc.labelLimit = labelSize.width;\n        arc.pointB = isQuadrantLeft(arc.quadrant)\n          ? {\n              x: labelPosition.x + labelSize.width / 2 + this._line2MinLength + spaceWidth,\n              y: labelPosition.y\n            }\n          : {\n              x: labelPosition.x - labelSize.width / 2 - this._line2MinLength - spaceWidth,\n              y: labelPosition.y\n            };\n        this._computeX(arc, attribute, currentMarks);\n      }\n      if (attribute.coverEnable === false && labelLayout.strategy === 'none') {\n        this._coverLabels(arcs);\n      }\n    } else {\n      // 由于可能存在多行标签，这里仅仅估计一个最大标签数量用于避免冗余计算\n      const maxLabels = height / ((attribute.textStyle?.fontSize as number) || 16);\n      // 布局圆弧半径\n      this._adjustY(arcs, maxLabels, attribute, currentMarks);\n\n      const { minY, maxY } = arcs.reduce(\n        (yInfo, arc) => {\n          const { y1, y2 } = arc.getLabelBounds();\n          yInfo.minY = Math.max(0, Math.min(y1, yInfo.minY));\n          yInfo.maxY = Math.min(height, Math.max(y2, yInfo.maxY));\n          return yInfo;\n        },\n        { minY: Infinity, maxY: -Infinity }\n      );\n      const halfY = Math.max(Math.abs(height / 2 - minY), Math.abs(maxY - height / 2));\n      // pointB 与 label 的 y 值相同，但是 label 的 x 值依赖于 pointB 的 x 值\n      const r = this._computeLayoutRadius(halfY, attribute, currentMarks);\n      for (const arc of arcs) {\n        this._computePointB(arc, r, attribute, currentMarks);\n        this._computeX(arc, attribute, currentMarks);\n      }\n    }\n    const width = center.x * 2;\n    arcs.forEach(arc => {\n      if (\n        arc.labelVisible &&\n        (isLess(arc.pointB.x, this._line2MinLength + spaceWidth) ||\n          isGreater(arc.pointB.x, width - this._line2MinLength - spaceWidth))\n      ) {\n        arc.labelVisible = false;\n      }\n      arc.angle = attribute.textStyle?.angle ?? 0;\n      if (attribute.offsetAngle) {\n        arc.angle += attribute.offsetAngle;\n      }\n\n      arc.labelLine = {\n        ...attribute.line,\n        visible: arc.labelVisible\n      };\n    });\n\n    return arcs;\n  }\n\n  /**\n   * 计算 pointC 以及 label limit 与 position\n   */\n  private _computeX(arc: ArcInfo, attribute: any, currentMarks: any[]) {\n    const center = arc.circleCenter;\n    const plotLayout = {\n      x1: 0,\n      x2: this.attribute.width,\n      y1: 0,\n      y2: this.attribute.height\n    };\n\n    let maxRadius = 0;\n    currentMarks.forEach((currentMark: IGraphic) => {\n      if ((currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius > maxRadius) {\n        maxRadius = (currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius;\n      }\n    });\n\n    const radiusRatio = this.computeLayoutOuterRadius(maxRadius, attribute.width, attribute.height);\n\n    const line1MinLength = attribute.line.line1MinLength as number;\n    const labelLayoutAlign = attribute.layout?.align;\n    const spaceWidth = attribute.spaceWidth as number;\n\n    const { labelPosition, quadrant, pointB } = arc;\n    if (!isValidNumber(pointB.x * pointB.y)) {\n      arc.pointC = { x: NaN, y: NaN };\n      labelPosition.x = NaN;\n      arc.labelLimit = 0;\n    }\n    const radius = this.computeRadius(radiusRatio, attribute.width, attribute.height);\n    const flag = isQuadrantLeft(quadrant) ? -1 : 1;\n    let cx: number = 0;\n    let limit =\n      (flag > 0 ? plotLayout.x2 - pointB.x : pointB.x - plotLayout.x1) +\n      this._alignOffset -\n      this._line2MinLength -\n      spaceWidth;\n\n    if (labelLayoutAlign === 'labelLine') {\n      cx = (radius + line1MinLength + this._line2MinLength) * flag + (center as IPoint).x;\n      limit = (flag > 0 ? plotLayout.x2 - cx : cx - plotLayout.x1) - spaceWidth;\n    }\n\n    const text = this._getFormatLabelText(arc.refDatum, limit);\n    arc.labelText = text;\n    let labelWidth = Math.min(limit, arc.labelSize.width);\n    switch (labelLayoutAlign) {\n      case 'labelLine':\n        break;\n      case 'edge':\n        cx = flag > 0 ? plotLayout.x2 - labelWidth - spaceWidth : plotLayout.x1 + labelWidth + spaceWidth;\n        break;\n      case 'arc':\n      default:\n        cx = pointB.x + flag * this._line2MinLength;\n        break;\n    }\n    labelWidth = Math.max(this._ellipsisWidth, labelWidth);\n    const needAdjustLimit = labelWidth < arc.labelSize.width - 1;\n\n    if (needAdjustLimit) {\n      arc.labelLimit = labelWidth;\n    } else {\n      arc.labelLimit = null;\n    }\n\n    arc.pointC = { x: cx, y: labelPosition.y };\n\n    const align = this._computeAlign(arc, attribute);\n    const targetCenterOffset = getAlignOffset(align) * (needAdjustLimit ? labelWidth : arc.labelSize.width);\n\n    if (labelLayoutAlign === 'edge') {\n      // edge 模式下的多行文本对齐方向与其他模式相反\n      // 贴近画布边缘的布局结果可能会由于 cx 的小数 pixel 导致被部分裁剪，因此额外做计算\n      labelPosition.x =\n        (flag > 0 ? plotLayout.x2 : plotLayout.x1) - flag * targetCenterOffset + flag * this._alignOffset;\n\n      arc.pointC.x += flag * this._alignOffset;\n    } else {\n      labelPosition.x = cx + flag * (this._alignOffset + spaceWidth + targetCenterOffset);\n    }\n  }\n\n  private _computeAlign(arc: ArcInfo, attribute: any) {\n    const labelConfig = attribute;\n    // 暂时兼容两种配置方式\n    const textAlign = labelConfig.textStyle?.textAlign ?? labelConfig.textStyle?.align;\n    const layoutAlign = labelConfig.layout?.textAlign ?? labelConfig.layout?.align;\n    if (labelConfig.position !== 'inside') {\n      if (isNil(textAlign) || textAlign === 'auto') {\n        // edge 模式下沿着画布对齐，与 labelLine & edge 模式相反\n        if (layoutAlign === 'edge') {\n          return isQuadrantLeft(arc.quadrant) ? 'left' : 'right';\n        }\n        return isQuadrantLeft(arc.quadrant) ? 'right' : 'left';\n      }\n      return textAlign;\n    }\n    return isNil(textAlign) || textAlign === 'auto' ? 'center' : textAlign;\n  }\n\n  private _getFormatLabelText(value: any, limit?: number) {\n    return value?.text ?? '';\n  }\n\n  /**\n   * 调整标签位置的 Y 值\n   */\n  private _adjustY(arcs: ArcInfo[], maxLabels: number, attribute: any, currentMarks: any[]) {\n    const center = { x: currentMarks[0].attribute.x ?? 0, y: currentMarks[0].attribute.y ?? 0 };\n    const plotRect = { width: center.x * 2, height: center.y * 2 };\n    const labelLayout = attribute.layout;\n    if (labelLayout.strategy === 'vertical') {\n      // vertical 策略类似 echarts 方案，没有切线限制策略，没有优先级，执行整体调整没有标签数量限制\n      let lastY = 0;\n      let delta;\n      const len = arcs.length;\n      if (len <= 0) {\n        return;\n      }\n      // 偏移 y 值以避免遮挡\n      for (let i = 0; i < len; i++) {\n        const { y1 } = arcs[i].getLabelBounds();\n        delta = y1 - lastY;\n        if (isLess(delta, 0)) {\n          const index = this._shiftY(arcs, i, len - 1, -delta);\n          this._shiftY(arcs, index, 0, delta / 2);\n        }\n        const { y2 } = arcs[i].getLabelBounds();\n        lastY = y2;\n      }\n      // 将超出上界的标签下移\n      const { y1: firstY1 } = arcs[0].getLabelBounds();\n      delta = firstY1 - 0;\n      if (isLess(delta, 0)) {\n        this._shiftY(arcs, 0, len - 1, -delta);\n      }\n      for (let i = arcs.length - 1; i >= 0; i--) {\n        if (arcs[i].getLabelBounds().y2 > plotRect.height) {\n          arcs[i].labelVisible = false;\n        } else {\n          break;\n        }\n      }\n    } else if (labelLayout.strategy !== 'none') {\n      const priorityArcs: PriorityArc[] = arcs.map((arc, i) => {\n        return {\n          arc,\n          originIndex: i,\n          priorityIndex: 0\n        };\n      });\n      priorityArcs.sort((a, b) => {\n        return b.arc.radian - a.arc.radian;\n      });\n      priorityArcs.forEach((priorityArc, i) => {\n        priorityArc.priorityIndex = i;\n        // 首先隐藏所有标签\n        priorityArc.arc.labelVisible = false;\n      });\n\n      let topLabelIndex = Infinity;\n      let bottomLabelIndex = -Infinity;\n      // 按照优先级依次布局标签\n      for (let i = 0; i < maxLabels && i < arcs.length; i++) {\n        this._storeY(arcs);\n        const arc = priorityArcs[i].arc;\n        this._computeYRange(arc, attribute, currentMarks);\n        arc.labelVisible = true;\n        const curY = arc.labelPosition.y;\n        // 寻找标签在布局前垂直方向上的上下邻居，也就是饼图上的邻居关系\n        const { lastIndex, nextIndex } = this._findNeighborIndex(arcs, priorityArcs[i]);\n        const lastArc = arcs[lastIndex];\n        const nextArc = arcs[nextIndex];\n        if (lastIndex === -1 && nextIndex !== -1) {\n          const nextY = nextArc.labelPosition.y;\n          if (curY > nextY) {\n            arc.labelPosition.y = nextY - nextArc.labelSize.height / 2 - arc.labelSize.height / 2;\n          } else {\n            this._twoWayShift(arcs, arc, nextArc, nextIndex);\n          }\n        } else if (lastIndex !== -1 && nextIndex === -1) {\n          const lastY = lastArc.labelPosition.y;\n          if (curY < lastY) {\n            arc.labelPosition.y = lastY + lastArc.labelSize.height / 2 + arc.labelSize.height / 2;\n          } else {\n            this._twoWayShift(arcs, lastArc, arc, priorityArcs[i].originIndex);\n          }\n        } else if (lastIndex !== -1 && nextIndex !== -1) {\n          const lastY = lastArc.labelPosition.y;\n          const nextY = nextArc.labelPosition.y;\n          if (curY > nextY) {\n            arc.labelPosition.y = nextY - nextArc.labelSize.height / 2 - arc.labelSize.height / 2;\n            this._twoWayShift(arcs, lastArc, arc, priorityArcs[i].originIndex);\n          } else if (curY < lastY) {\n            arc.labelPosition.y = lastY + lastArc.labelSize.height / 2 + arc.labelSize.height / 2;\n            this._twoWayShift(arcs, arc, nextArc, nextIndex);\n          } else {\n            this._twoWayShift(arcs, lastArc, arc, priorityArcs[i].originIndex);\n            this._twoWayShift(arcs, arc, nextArc, nextIndex);\n          }\n        }\n\n        const nextTopIndex = Math.min(topLabelIndex, priorityArcs[i].originIndex);\n        const nextBottomIndex = Math.max(bottomLabelIndex, priorityArcs[i].originIndex);\n        let delta;\n        // 将超出下界的标签上移\n        delta = arcs[nextBottomIndex].getLabelBounds().y2 - plotRect.height;\n        if (isGreater(delta, 0)) {\n          this._shiftY(arcs, nextBottomIndex, 0, -delta);\n        }\n        // 将超出上界的标签下移\n        delta = arcs[nextTopIndex].getLabelBounds().y1 - 0;\n        if (isLess(delta, 0)) {\n          this._shiftY(arcs, nextTopIndex, arcs.length - 1, -delta);\n        }\n        delta = arcs[nextBottomIndex].getLabelBounds().y2 - plotRect.height;\n        // 当整体上下移一次之后仍然无法容纳所有标签，则当前标签应当舍去\n        if (isGreater(delta, 0)) {\n          arc.labelVisible = false;\n          this._restoreY(arcs);\n          break;\n        } else if (labelLayout.tangentConstraint && !this._checkYRange(arcs)) {\n          // 当标签由于 Y 方向调节范围过大而舍弃时不应当终止布局过程\n          arc.labelVisible = false;\n          this._restoreY(arcs);\n        } else {\n          topLabelIndex = nextTopIndex;\n          bottomLabelIndex = nextBottomIndex;\n        }\n      }\n    }\n  }\n\n  /**\n   * 向某一方向调整局部标签的 Y 值\n   */\n  private _shiftY(arcs: ArcInfo[], start: number, end: number, delta: number) {\n    const direction = start < end ? 1 : -1;\n    let index = start;\n    while (index !== -1) {\n      arcs[index].labelPosition.y += delta;\n      const nextIndex = this._findNextVisibleIndex(arcs, index, end, direction);\n      if (nextIndex >= 0 && nextIndex < arcs.length) {\n        const { y1: curY1, y2: curY2 } = arcs[index].getLabelBounds();\n        const { y1: nextY1, y2: nextY2 } = arcs[nextIndex].getLabelBounds();\n        if ((direction > 0 && curY2 < nextY1) || (direction < 0 && curY1 > nextY2)) {\n          return index;\n        }\n      }\n      index = nextIndex;\n    }\n    return end;\n  }\n\n  /**\n   * 寻找下一个显示标签索引\n   */\n  private _findNextVisibleIndex(arcs: ArcInfo[], start: number, end: number, direction: number) {\n    const diff = (end - start) * direction;\n    for (let i = 1; i <= diff; i++) {\n      const index = start + i * direction;\n      if (arcs[index].labelVisible) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * 计算 pointB，其 y 值在 adjustY 中确定，也即是 label 的 y 值\n   */\n  private _computePointB(arc: ArcInfo, r: number, attribute: any, currentMarks: any[]) {\n    const labelConfig = attribute;\n\n    let maxRadius = 0;\n    currentMarks.forEach((currentMark: IGraphic) => {\n      if ((currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius > maxRadius) {\n        maxRadius = (currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius;\n      }\n    });\n\n    const radiusRatio = this.computeLayoutOuterRadius(maxRadius, attribute.width, attribute.height);\n    const line1MinLength = labelConfig.line.line1MinLength as number;\n    const labelLayout = labelConfig.layout;\n\n    if (labelLayout.strategy === 'none') {\n      // 不执行躲避策略或者不显示引导线时紧挨着圆弧布局\n      arc.pointB = {\n        x: arc.outerCenter.x,\n        y: arc.outerCenter.y\n      };\n    } else {\n      const center = arc.circleCenter;\n      const radius = this.computeRadius(radiusRatio, attribute.width, attribute.height);\n      const { labelPosition, quadrant } = arc;\n      const outerR = Math.max(radius + line1MinLength, arc.outerRadius);\n      const rd = r - outerR;\n      // x 为 pointB.x 与圆心的差值\n      const x = Math.sqrt(r ** 2 - Math.abs((center as IPoint).y - labelPosition.y) ** 2) - rd;\n      if (isValidNumber(x)) {\n        arc.pointB = {\n          x: (center as IPoint).x + x * (isQuadrantLeft(quadrant) ? -1 : 1),\n          y: labelPosition.y\n        };\n      } else {\n        arc.pointB = { x: NaN, y: NaN };\n      }\n    }\n  }\n\n  /**\n   * 存储当前所有显示标签的 Y 值\n   */\n  private _storeY(arcs: ArcInfo[]) {\n    for (const arc of arcs) {\n      if (arc.labelVisible) {\n        arc.lastLabelY = arc.labelPosition.y;\n      }\n    }\n  }\n\n  /**\n   * 计算圆弧切线所限制的标签 Y 值范围\n   */\n  private _computeYRange(arc: ArcInfo, attribute: any, currentMarks: any[]) {\n    const center = arc.circleCenter;\n    const plotRect = { width: center.x * 2, height: center.y * 2 };\n\n    let maxRadius = 0;\n    currentMarks.forEach((currentMark: IGraphic) => {\n      if ((currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius > maxRadius) {\n        maxRadius = (currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius;\n      }\n    });\n\n    const radiusRatio = this.computeLayoutOuterRadius(maxRadius, attribute.width, attribute.height);\n    const line1MinLength = attribute.line.line1MinLength as number;\n\n    const { width, height } = plotRect;\n\n    const radius = this.computeRadius(radiusRatio, attribute.width, attribute.height);\n    // 出现 y 方向挤压过度必然是由于画布上下某一端被占满，此时半径是确定的\n    const r = this._computeLayoutRadius(height / 2, attribute, currentMarks);\n    // 所有坐标转化到以圆心为原点的坐标系计算\n    // 在饼图上左右计算对称，可以全都转化到右侧计算\n    const cx = Math.abs(arc.center.x - width / 2);\n    const cy = arc.center.y - height / 2;\n    let a;\n    let b;\n    let c;\n    if (isClose(width / 2, cx)) {\n      a = 0;\n      b = 1;\n      c = -cy;\n    } else if (isClose(height / 2, cy)) {\n      a = 1;\n      b = 0;\n      c = -cx;\n    } else {\n      // 斜截式转为一般式\n      const k = -1 / (cy / cx);\n      a = k;\n      b = -1;\n      c = cy - k * cx;\n    }\n    const points = lineCirclePoints(a, b, c, line1MinLength + radius - r, 0, r);\n    // 由于饼图上切点在布局圆内部，交点必然有两个\n    if (points.length < 2) {\n      return;\n    }\n    let min;\n    let max;\n    if (points[0].x > points[1].x) {\n      points.reverse();\n    }\n    if (points[0].x < 0) {\n      if (isClose(points[0].y, points[1].y)) {\n        if (\n          (isGreater(arc.middleAngle, -Math.PI) && isLess(arc.middleAngle, 0)) ||\n          (isGreater(arc.middleAngle, Math.PI) && isLess(arc.middleAngle, Math.PI * 2))\n        ) {\n          min = 0;\n          max = points[1].y + height / 2;\n        } else {\n          min = points[1].y + height / 2;\n          max = height;\n        }\n      } else if (points[0].y < points[1].y) {\n        min = 0;\n        max = points[1].y + height / 2;\n      } else {\n        min = points[1].y + height / 2;\n        max = plotRect.height;\n      }\n    } else {\n      min = Math.min(points[0].y, points[1].y) + height / 2;\n      max = Math.max(points[0].y, points[1].y) + height / 2;\n    }\n    arc.labelYRange = [min, max];\n  }\n\n  /**\n   * 计算标签布局圆弧半径，即 pointB 所落在的圆弧\n   */\n  private _computeLayoutRadius(halfYLength: number, attribute: any, currentMarks: any[]) {\n    const labelConfig = attribute;\n    const layoutArcGap = labelConfig.layoutArcGap as number;\n    const line1MinLength = labelConfig.line.line1MinLength as number;\n\n    let maxRadius = 0;\n    currentMarks.forEach((currentMark: IGraphic) => {\n      if ((currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius > maxRadius) {\n        maxRadius = (currentMark.getAttributes(true) as IArcGraphicAttribute).outerRadius;\n      }\n    });\n\n    const radiusRatio = this.computeLayoutOuterRadius(maxRadius, attribute.width, attribute.height);\n    const radius = this.computeRadius(radiusRatio, attribute.width, attribute.height);\n    const outerR = radius + line1MinLength;\n\n    const a = outerR - layoutArcGap;\n\n    return Math.max((a ** 2 + halfYLength ** 2) / (2 * a), outerR);\n  }\n\n  /**\n   * 依据初始的标签排序，寻找某一标签上下最近的显示标签索引\n   */\n  private _findNeighborIndex(arcs: ArcInfo[], priorityArc: PriorityArc) {\n    const index = priorityArc.originIndex;\n    let lastIndex = -1;\n    let nextIndex = -1;\n    for (let i = index - 1; i >= 0; i--) {\n      if (arcs[i].labelVisible) {\n        lastIndex = i;\n        break;\n      }\n    }\n    for (let i = index + 1; i < arcs.length; i++) {\n      if (arcs[i].labelVisible) {\n        nextIndex = i;\n        break;\n      }\n    }\n    return {\n      lastIndex,\n      nextIndex\n    };\n  }\n\n  /**\n   * 执行给定标签 Y 值的 shiftDown 以及 shiftUp\n   */\n  private _twoWayShift(arcs: ArcInfo[], lastArc: ArcInfo, nextArc: ArcInfo, nextIndex: number) {\n    const delta = nextArc.getLabelBounds().y1 - lastArc.getLabelBounds().y2;\n    if (isLess(delta, 0)) {\n      const i = this._shiftY(arcs, nextIndex, arcs.length - 1, -delta);\n      this._shiftY(arcs, i, 0, delta / 2);\n    }\n  }\n\n  /**\n   * 恢复所有显示标签在之前存储的 Y 值\n   */\n  private _restoreY(arcs: ArcInfo[]) {\n    for (const arc of arcs) {\n      if (arc.labelVisible) {\n        arc.labelPosition.y = arc.lastLabelY;\n      }\n    }\n  }\n\n  /**\n   * 检查每个显示的标签的 Y 值是否在切线限制范围内\n   */\n  private _checkYRange(arcs: ArcInfo[]) {\n    for (const arc of arcs) {\n      const { labelYRange, labelPosition } = arc;\n      if (\n        arc.labelVisible &&\n        labelYRange &&\n        (isLess(labelPosition.y, labelYRange[0]) || isGreater(labelPosition.y, labelYRange[1]))\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * 自上至下计算被遮盖的标签\n   */\n  private _coverLabels(arcs: ArcInfo[]) {\n    if (arcs.length <= 1) {\n      return;\n    }\n    let lastBounds = arcs[0].getLabelBounds();\n    for (let i = 1; i < arcs.length; i++) {\n      const bounds = arcs[i].getLabelBounds();\n      if (!checkBoundsOverlap(lastBounds, bounds)) {\n        lastBounds = bounds;\n      } else {\n        arcs[i].labelVisible = false;\n      }\n    }\n  }\n\n  protected _getLabelLinePoints(text: IText | IRichText, baseMark?: IGraphic) {\n    return (text.attribute as ArcLabelAttrs).points;\n  }\n\n  protected _createLabelLine(text: IText, baseMark?: IGraphic) {\n    const { line = {}, visible } = text.attribute as ArcLabelAttrs;\n    const lineGraphic = super._createLabelLine(text, baseMark);\n    if (lineGraphic) {\n      lineGraphic.setAttributes({\n        visible: (line.visible && visible) ?? text.attribute?.visible ?? true,\n        lineWidth: line.style?.lineWidth ?? 1\n      });\n      if (line.smooth) {\n        lineGraphic.setAttributes({\n          curveType: 'basis'\n        });\n      }\n\n      if (baseMark.type === 'arc3d' && baseMark) {\n        const { beta, x, y } = baseMark.getAttributes(true);\n        lineGraphic.setAttributes({\n          beta,\n          anchor3d: [x, y]\n        });\n      }\n    }\n\n    return lineGraphic;\n  }\n\n  protected computeRadius(r: number, width?: number, height?: number, k?: number): number {\n    return this.computeLayoutRadius(width ? width : 0, height ? height : 0) * r * (isNil(k) ? 1 : k);\n  }\n\n  protected computeLayoutRadius(width: number, height: number) {\n    return Math.min(width / 2, height / 2);\n  }\n\n  protected _canPlaceInside(textBound: IBoundsLike, shapeBound: IAABBBounds) {\n    return this.attribute.position === 'inside' || this.attribute.position === 'inside-center';\n  }\n\n  private computeLayoutOuterRadius(r: number, width: number, height: number) {\n    return r / (Math.min(width, height) / 2);\n  }\n\n  private computeDatumRadius(width?: number, height?: number, outerRadius?: any): number {\n    const outerRadiusRatio = this.computeLayoutOuterRadius(outerRadius, width, height); //this.getRadius(state)\n    return this.computeLayoutRadius(width ? width : 0, height ? height : 0) * outerRadiusRatio;\n  }\n}\n\nexport const registerArcDataLabel = () => {\n  registerLabelComponent('arc', ArcLabel);\n};\n"]}