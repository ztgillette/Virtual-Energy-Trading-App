{"version":3,"sources":["../src/slider/type.ts"],"names":[],"mappings":"","file":"type.js","sourcesContent":["import type {\n  ISymbolGraphicAttribute,\n  IRectGraphicAttribute,\n  ITextGraphicAttribute,\n  IGroupGraphicAttribute\n} from '@visactor/vrender-core';\n\ntype Text = string | number;\n\nexport type TextAttribute = {\n  /** 是否展示 */\n  visible?: boolean;\n  /** 文本内容 */\n  text?: Text;\n  /**\n   * 文本同滑块的间距，默认为 6\n   */\n  space?: number;\n  /**\n   * 文本样式\n   */\n  style?: Omit<Partial<ITextGraphicAttribute>, 'text'>;\n};\n\nexport type HandlerTextAttribute = {\n  /** 是否展示 */\n  visible?: boolean;\n  /**\n   * 数据展示的小数精度，默认为0，无小数点。\n   */\n  precision?: number;\n  /** 文本内容格式化函数 */\n  formatter?: (text: Text) => Text;\n  /**\n   * 文本同滑块的间距，默认为 6\n   */\n  space?: number;\n  /**\n   * 文本样式\n   */\n  style?: Omit<Partial<ITextGraphicAttribute>, 'text'>;\n};\n\nexport type TooltipConfig = {\n  /**\n   * 是否展示图标\n   */\n  shape?: boolean;\n  /**\n   * 图标的样式配置\n   */\n  shapeStyle?: Partial<ISymbolGraphicAttribute>;\n\n  text?: {\n    /**\n     * 数据展示的小数精度，默认为0，无小数点。\n     */\n    precision?: number;\n    /**\n     * 文本同滑块的间距，默认为 6\n     */\n    space?: number;\n    /**\n     * 格式化函数\n     */\n    formatter?: (value: Text) => Text;\n    /**\n     * 文本样式\n     */\n    style?: Omit<Partial<ITextGraphicAttribute>, 'text'>;\n  };\n  /**\n   * 是否始终展示\n   */\n  alwaysShow?: boolean;\n};\n\nexport type RangeType =\n  | boolean\n  | {\n      /**\n       * 范围刻度是否可被拖拽，默认值为 false\n       */\n      draggableTrack?: boolean;\n    };\n\nexport type SliderAttributes = {\n  /**\n   * 是否开启反向展示\n   * @default false\n   */\n  inverse?: boolean;\n  /**\n   * 是否允许拖动，默认为 true\n   */\n  slidable?: boolean;\n  /**\n   * TODO: 这个类型有问题\n   * 布局方式。\n   * - 'horizontal' 水平布局\n   * - 'vertical' 垂直布局\n   */\n  layout?: 'horizontal' | 'vertical' | string;\n  /**\n   * 指定组件中手柄和文字的摆放位置，可选值为：\n   * 'left' 手柄和label在滑块左侧，layout 为 vertical 时有效。\n   * 'right' 手柄和label在滑块右侧，layout 为 vertical 时有效。\n   * 'top' 手柄和label在滑块上侧，layout 为 horizontal 时有效。\n   * 'bottom' 手柄和label在滑块下侧，layout 为 horizontal 时有效。\n   */\n  align?: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * 双滑块模式，默认为 false，单滑块模式\n   */\n  range?: RangeType;\n  /**\n   * 最小值\n   */\n  min: number;\n  /**\n   * 最大值\n   */\n  max: number;\n  /**\n   * 设置当前取值。当 range 为 false 时，使用 number，否则用 [number, number]\n   */\n  value?: number | [number, number];\n  /**\n   * TODO:\n   * 步长，取值必须大于 0，并且可被 (max - min) 整除。\n   * 用于离散连续场景\n   */\n  step?: number;\n\n  /**\n   * 滑块的宽度\n   */\n  railWidth: number;\n  /**\n   * 滑块的高度\n   */\n  railHeight: number;\n\n  /**\n   * 是否绘制 handler，默认为 true\n   */\n  showHandler?: boolean;\n\n  /**\n   * handler 操作按钮的大小\n   */\n  handlerSize?: number;\n\n  /**\n   * 滑块手柄的样式配置\n   */\n  handlerStyle?: Partial<ISymbolGraphicAttribute>;\n  /**\n   * 背景轨道样式配置\n   */\n  railStyle?: Omit<Partial<IRectGraphicAttribute>, 'width' | 'height'>;\n  /**\n   * 选中区域样式配置\n   */\n  trackStyle?: Omit<Partial<IRectGraphicAttribute>, 'width' | 'height'>;\n\n  /**\n   * 滑块首部文本配置\n   */\n  startText?: TextAttribute;\n  /**\n   * 滑块尾部文本配置\n   */\n  endText?: TextAttribute;\n\n  /**\n   * 滑块对应的文本配置项\n   */\n  handlerText?: HandlerTextAttribute;\n\n  /**\n   * tooltip，默认不显示\n   * 需要通过交互触发展示：\n   * 1. 鼠标移动到组件上\n   * 2. 通过API手动触发显示\n   *\n   * 是否显示 hander 上的 tooltip\n   */\n  showTooltip?: boolean;\n  /**\n   * handler tooltip 配置\n   */\n  tooltip?: TooltipConfig;\n  /**\n   * 关闭交互效果\n   * @default false\n   */\n  disableTriggerEvent?: boolean;\n} & IGroupGraphicAttribute;\n"]}