{"version":3,"sources":["../src/axis/tick-data/polar-ticks.ts"],"names":[],"mappings":";;;AAEA,6CAA4D;AAC5D,6CAA+C;AAE/C,iCAAiD;AACjD,wDAAqE;AAI9D,MAAM,UAAU,GAAG,CAAC,KAAiB,EAAE,EAAgB,EAAe,EAAE;IAC7E,IAAI,IAAA,qBAAY,EAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAA,4BAAe,EAAC,KAAwB,EAAE,EAAE,CAAC,CAAC;KACtD;SAAM,IAAI,IAAA,mBAAU,EAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACjC,IAAI,EAAE,CAAC,cAAc,KAAK,OAAO,EAAE;YACjC,IAAI,EAAE,CAAC,cAAc,KAAK,OAAO,EAAE;gBACjC,OAAO,IAAA,yCAA2B,EAAC,KAAkB,EAAE,EAAuB,CAAC,CAAC;aACjF;SACF;KACF;IACD,OAAO,IAAA,8BAAuB,EAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AACjD,CAAC,CAAC;AAXW,QAAA,UAAU,cAWrB","file":"polar-ticks.js","sourcesContent":["import type { BandScale, ContinuousScale, IBaseScale } from '@visactor/vscale';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous, isDiscrete } from '@visactor/vscale';\nimport { continuousTicks } from './continuous';\nimport type { IPolarTickDataOpt, ITickData, ITickDataOpt } from '../type';\nimport { convertDomainToTickData } from './util';\nimport { polarAngleAxisDiscreteTicks } from './discrete/polar-angle';\n\n// 总入口\n// 总入口\nexport const polarTicks = (scale: IBaseScale, op: ITickDataOpt): ITickData[] => {\n  if (isContinuous(scale.type)) {\n    return continuousTicks(scale as ContinuousScale, op);\n  } else if (isDiscrete(scale.type)) {\n    if (op.coordinateType === 'polar') {\n      if (op.axisOrientType === 'angle') {\n        return polarAngleAxisDiscreteTicks(scale as BandScale, op as IPolarTickDataOpt);\n      }\n    }\n  }\n  return convertDomainToTickData(scale.domain());\n};\n"]}