{"version":3,"sources":["../src/axis/base.ts"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["/**\n * TODO:\n * 1. trunk 坐标轴截断\n * @description 坐标轴组件基类\n */\nimport type {\n  IGroup,\n  INode,\n  ITextGraphicAttribute,\n  TextAlignType,\n  TextBaselineType,\n  FederatedPointerEvent,\n  IGraphic,\n  IText\n} from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { graphicCreator, diff } from '@visactor/vrender-core';\nimport type { Dict, IBounds } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { abs, cloneDeep, get, isArray, isEmpty, isEqual, isFunction, merge, pi } from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\nimport type { Point } from '../core/type';\nimport type { TagAttributes } from '../tag';\nimport { createTextGraphicByType, traverseGroup } from '../util';\nimport { DEFAULT_STATES } from '../constant';\nimport { AXIS_ELEMENT_NAME } from './constant';\nimport { DEFAULT_AXIS_THEME } from './config';\nimport type {\n  LabelAttributes,\n  AxisBaseAttributes,\n  AxisItem,\n  TickAttributes,\n  TransformedAxisItem,\n  SubTickAttributes,\n  TickLineItem,\n  callbackFunc\n} from './type';\nimport { Tag } from '../tag/tag';\nimport { getElMap, getVerticalCoord } from './util';\nimport { dispatchClickState, dispatchHoverState, dispatchUnHoverState } from '../util/interaction';\nimport { AnimateComponent } from '../animation/animate-component';\nimport { DefaultAxisAnimation } from './animate/config';\nimport type { IBaseScale } from '@visactor/vscale';\n\nexport abstract class AxisBase<T extends AxisBaseAttributes> extends AnimateComponent<Required<T>> {\n  name = 'axis';\n\n  lastScale: IBaseScale;\n\n  // TODO: 组件整体统一起来\n  protected _innerView: IGroup;\n  getInnerView() {\n    return this._innerView;\n  }\n\n  protected _prevInnerView: { [key: string]: IGraphic }; // 缓存旧场景树，用于自定义动画\n  /**\n   * 获取更新前的旧场景树\n   * @returns 返回更新前的旧场景树\n   */\n  getPrevInnerView() {\n    return this._prevInnerView;\n  }\n\n  // 经过处理后的坐标轴点数据\n  protected data: TransformedAxisItem[] = [];\n  protected tickLineItems: TickLineItem[] = [];\n  protected subTickLineItems: TickLineItem[] = [];\n  protected axisLabelLayerSize: Dict<{\n    width: number;\n    height: number;\n    textAlign: string;\n    textBaseline: string;\n    labelPos: number;\n  }> = {};\n  protected axisLabelsContainer: IGroup | null = null;\n  protected axisContainer: IGroup;\n\n  private _lastHover: IGraphic;\n  private _lastSelect: IGraphic;\n\n  // 用于动画diff\n  protected _newElementAttrMap: Dict<any>;\n\n  protected abstract renderLine(container: IGroup): void;\n  abstract isInValidValue(value: number): boolean;\n  abstract getTickCoord(value: number): Point;\n  abstract getVerticalVector(offset: number, inside: boolean, point: Point): [number, number];\n  abstract getRelativeVector(point?: Point): [number, number];\n  protected abstract getTitleAttribute(): TagAttributes;\n  protected abstract beforeLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void;\n  protected abstract handleLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void;\n  protected abstract afterLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void;\n  protected abstract getLabelAlign(\n    vector: [number, number],\n    inside?: boolean,\n    angle?: number\n  ): { textAlign: TextAlignType; textBaseline: TextBaselineType };\n\n  /**\n   * 坐标轴的一个特殊的方法，用于不更新场景树来获取更新属性后的包围盒\n   * TODO：后面看情况再抽象为通用的方法\n   */\n  getBoundsWithoutRender(attributes: Partial<T>) {\n    const currentAttribute = cloneDeep(this.attribute);\n    // scale 不能拷贝，它是一个实例，重新设置上去\n    currentAttribute.scale = (this.attribute as any).scale;\n    this.attribute = attributes;\n\n    const offscreenGroup = graphicCreator.group({\n      x: this.attribute.x,\n      y: this.attribute.y\n    });\n    this.add(offscreenGroup);\n\n    this._renderInner(offscreenGroup);\n\n    this.removeChild(offscreenGroup);\n    this.attribute = currentAttribute;\n    return offscreenGroup.AABBBounds;\n  }\n\n  protected render(): void {\n    this._prepare();\n    this._prevInnerView = this._innerView && getElMap(this._innerView);\n    this.removeAllChild(true);\n    this._innerView = graphicCreator.group({ x: 0, y: 0, pickable: false });\n    this.add(this._innerView);\n    this._renderInner(this._innerView);\n\n    this._bindEvent();\n    // 尝试执行动画\n    this.runAnimation();\n  }\n\n  protected _prepare() {\n    this._prepareAnimate(DefaultAxisAnimation);\n  }\n\n  private _bindEvent() {\n    if (this.attribute.disableTriggerEvent) {\n      return;\n    }\n    const { hover, select } = this.attribute;\n\n    if (hover) {\n      this._innerView.addEventListener('pointermove', this._onHover as EventListenerOrEventListenerObject);\n      this._innerView.addEventListener('pointerout', this._onUnHover as EventListenerOrEventListenerObject);\n    }\n\n    if (select) {\n      this._innerView.addEventListener('pointerdown', this._onClick as EventListenerOrEventListenerObject);\n    }\n  }\n\n  private _onHover = (e: FederatedPointerEvent) => {\n    this._lastHover = dispatchHoverState(e, this.axisContainer, this._lastHover);\n  };\n\n  private _onUnHover = (e: FederatedPointerEvent) => {\n    this._lastHover = dispatchUnHoverState(e, this.axisContainer, this._lastHover);\n  };\n\n  private _onClick = (e: FederatedPointerEvent) => {\n    this._lastSelect = dispatchClickState(e, this.axisContainer, this._lastSelect);\n  };\n\n  protected _renderInner(container: IGroup) {\n    const { title, label, tick, line, items } = this.attribute;\n\n    const axisContainer = graphicCreator.group({ x: 0, y: 0, zIndex: 1, pickable: false });\n    axisContainer.name = AXIS_ELEMENT_NAME.axisContainer;\n    axisContainer.id = this._getNodeId('container');\n    axisContainer.setMode(this.mode);\n    this.axisContainer = axisContainer;\n    container.add(axisContainer);\n\n    // 渲染轴线\n    if (line && line.visible) {\n      this.renderLine(axisContainer);\n    }\n\n    if (items && items.length) {\n      this.data = this._transformItems(items[0]);\n\n      // 渲染刻度线，包含子刻度线\n      if (tick && tick.visible) {\n        this.renderTicks(axisContainer);\n      }\n      // 渲染标签\n      if (label && label.visible) {\n        const labelGroup = graphicCreator.group({ x: 0, y: 0, pickable: false });\n        labelGroup.name = AXIS_ELEMENT_NAME.labelContainer;\n        labelGroup.id = this._getNodeId('label-container');\n        this.axisLabelsContainer = labelGroup;\n        axisContainer.add(labelGroup);\n        items.forEach((axisItems: AxisItem[], layer: number) => {\n          const layerLabelGroup = this.renderLabels(labelGroup, axisItems, layer);\n\n          const labels = layerLabelGroup.getChildren() as IText[];\n          this.beforeLabelsOverlap(labels, axisItems, layerLabelGroup, layer, items.length);\n          // handle overlap\n          this.handleLabelsOverlap(labels, axisItems, layerLabelGroup, layer, items.length);\n          this.afterLabelsOverlap(labels, axisItems, layerLabelGroup, layer, items.length);\n\n          let maxTextWidth = 0;\n          let maxTextHeight = 0;\n          let textAlign = 'center';\n          let textBaseline = 'middle';\n          let labelPos: number = 0;\n          labels.forEach((label: IText, index) => {\n            const labelStyle = label.attribute;\n\n            const angle = labelStyle.angle ?? 0;\n            const textBounds = label.AABBBounds;\n            let textWidth = textBounds.width();\n            let textHeight = textBounds.height();\n            if (angle) {\n              textWidth = Math.abs(textWidth * Math.cos(angle));\n              textHeight = Math.abs(textHeight * Math.sin(angle));\n            }\n            maxTextWidth = Math.max(maxTextWidth, textWidth);\n            maxTextHeight = Math.max(maxTextHeight, textHeight);\n\n            textAlign = labelStyle.textAlign as string;\n            textBaseline = labelStyle.textBaseline as string;\n            if (index === 0) {\n              labelPos = labelStyle.x;\n            }\n          });\n          this.axisLabelLayerSize[layer] = {\n            width: maxTextWidth,\n            height: maxTextHeight,\n\n            labelPos,\n            textAlign,\n            textBaseline\n          };\n        });\n      }\n    }\n\n    // 渲染标题\n    if (title && title.visible) {\n      this.renderTitle(axisContainer);\n    }\n  }\n  protected renderTicks(container: IGroup) {\n    const tickLineItems = this.getTickLineItems();\n\n    const tickLineGroup = graphicCreator.group({ x: 0, y: 0, pickable: false });\n    tickLineGroup.name = AXIS_ELEMENT_NAME.tickContainer;\n    tickLineGroup.id = this._getNodeId('tick-container');\n    container.add(tickLineGroup);\n\n    tickLineItems.forEach((item: TickLineItem, index) => {\n      const line = graphicCreator.line({\n        ...this._getTickLineAttribute('tick', item, index, tickLineItems)\n      });\n      line.name = AXIS_ELEMENT_NAME.tick;\n      line.id = this._getNodeId(item.id);\n\n      if (isEmpty(this.attribute.tick?.state)) {\n        line.states = DEFAULT_STATES;\n      } else {\n        const data = this.data[index];\n        const tickLineState = merge({}, DEFAULT_STATES, this.attribute.tick.state);\n        Object.keys(tickLineState).forEach(key => {\n          if (isFunction(tickLineState[key])) {\n            tickLineState[key] = tickLineState[key](data.rawValue, index, data, this.data);\n          }\n        });\n        line.states = tickLineState;\n      }\n\n      tickLineGroup.add(line);\n    });\n    this.tickLineItems = tickLineItems;\n\n    // subTick 处理\n    const { subTick } = this.attribute;\n    if (subTick && subTick.visible) {\n      const subTickLineItems: TickLineItem[] = this.getSubTickLineItems();\n      if (subTickLineItems.length) {\n        subTickLineItems.forEach((item: TickLineItem, index) => {\n          const line = graphicCreator.line({\n            ...this._getTickLineAttribute('subTick', item, index, tickLineItems)\n          });\n          line.name = AXIS_ELEMENT_NAME.subTick;\n          line.id = this._getNodeId(`${index}`);\n\n          if (isEmpty(subTick.state)) {\n            line.states = DEFAULT_STATES;\n          } else {\n            const subTickLineState = merge({}, DEFAULT_STATES, subTick.state);\n            Object.keys(subTickLineState).forEach(key => {\n              if (isFunction(subTickLineState[key])) {\n                subTickLineState[key] = subTickLineState[key](item.value, index, item, tickLineItems);\n              }\n            });\n            line.states = subTickLineState;\n          }\n\n          tickLineGroup.add(line);\n        });\n      }\n\n      this.subTickLineItems = subTickLineItems;\n    }\n  }\n\n  protected renderLabels(container: IGroup, items: AxisItem[], layer: number) {\n    const { dataFilter } = this.attribute.label;\n    if (dataFilter && isFunction(dataFilter)) {\n      items = dataFilter(items, layer) as TransformedAxisItem[];\n    }\n    const data = this._transformItems(items);\n\n    const labelGroup = graphicCreator.group({ x: 0, y: 0, pickable: false });\n    labelGroup.name = `${AXIS_ELEMENT_NAME.labelContainer}-layer-${layer}`;\n    labelGroup.id = this._getNodeId(`label-container-layer-${layer}`);\n    container.add(labelGroup);\n\n    data.forEach((item: TransformedAxisItem, index: number) => {\n      const labelStyle: any = this._getLabelAttribute(item, index, data, layer);\n      const text = createTextGraphicByType(labelStyle);\n\n      text.name = AXIS_ELEMENT_NAME.label;\n      text.id = this._getNodeId(`layer${layer}-label-${item.id}`);\n      if (isEmpty(this.attribute.label?.state)) {\n        text.states = DEFAULT_STATES;\n      } else {\n        const labelState = merge({}, DEFAULT_STATES, this.attribute.label.state);\n        Object.keys(labelState).forEach(key => {\n          if (isFunction(labelState[key])) {\n            labelState[key] = labelState[key](item, index, data, layer);\n          }\n        });\n        text.states = labelState;\n      }\n      text.data = { ...item, index, layer };\n      labelGroup.add(text);\n    });\n\n    return labelGroup;\n  }\n\n  protected renderTitle(container: IGroup) {\n    const titleAttributes = this.getTitleAttribute();\n    const axisTitle = new Tag({\n      ...titleAttributes\n    });\n    axisTitle.name = AXIS_ELEMENT_NAME.title;\n    axisTitle.id = this._getNodeId('title');\n    container.add(axisTitle as unknown as INode);\n  }\n\n  protected getVerticalCoord(point: Point, offset: number, inside: boolean): Point {\n    return getVerticalCoord(point, this.getVerticalVector(offset, inside, point));\n  }\n\n  protected getTickLineItems() {\n    const { tick } = this.attribute;\n    const data = this.data;\n    // tick 处理\n    const tickLineItems: TickLineItem[] = [];\n    const { alignWithLabel, inside = false, length, dataFilter } = tick as TickAttributes;\n    let tickSegment = 1;\n    const count = data.length;\n    if (count >= 2) {\n      tickSegment = data[1].value - data[0].value;\n    }\n\n    (dataFilter && isFunction(dataFilter) ? dataFilter(data) : data).forEach((item: TransformedAxisItem) => {\n      let point = item.point;\n      let tickValue = item.value;\n      if (!alignWithLabel) {\n        const value = item.value - tickSegment / 2;\n        if (this.isInValidValue(value)) {\n          return;\n        }\n        point = this.getTickCoord(value);\n        tickValue = value;\n      }\n      const endPoint = this.getVerticalCoord(point, length as number, inside);\n\n      if (this.mode === '3d') {\n        const vec = this.getVerticalVector(length as number, inside, point);\n        let alpha = 0;\n        let beta = 0;\n        if (abs(vec[0]) > abs(vec[1])) {\n          alpha = (pi / 2) * (endPoint.x > point.x ? 1 : -1);\n        } else {\n          beta = (pi / 2) * (endPoint.y > point.y ? -1 : 1);\n        }\n        tickLineItems.push({\n          start: point,\n          end: endPoint,\n          value: tickValue,\n          id: `tick-${item.id}`,\n          anchor: [point.x, point.y],\n          alpha,\n          beta\n        });\n      } else {\n        tickLineItems.push({\n          start: point,\n          end: endPoint,\n          value: tickValue,\n          id: `tick-${item.id}`\n        });\n      }\n    });\n\n    return tickLineItems;\n  }\n\n  protected getSubTickLineItems() {\n    const { subTick } = this.attribute as AxisBaseAttributes;\n    const subTickLineItems: TickLineItem[] = [];\n    const { count: subCount = 4, inside = false, length = 2 } = subTick as SubTickAttributes;\n    const tickLineItems = this.tickLineItems;\n    const tickLineCount = tickLineItems.length;\n\n    if (tickLineCount >= 2) {\n      for (let i = 0; i < tickLineCount - 1; i++) {\n        const pre = tickLineItems[i];\n        const next = tickLineItems[i + 1];\n        for (let j = 0; j < subCount; j++) {\n          const percent = (j + 1) / (subCount + 1);\n          const value = (1 - percent) * pre.value + percent * next.value;\n          const point = this.getTickCoord(value);\n          const endPoint = this.getVerticalCoord(point, length, inside);\n          subTickLineItems.push({\n            start: point,\n            end: endPoint,\n            value,\n            id: `sub-tick-${value}`\n          });\n        }\n      }\n    }\n\n    return subTickLineItems;\n  }\n\n  private _getTickLineAttribute(type: string, tickItem: TickLineItem, index: number, tickItems: TickLineItem[]) {\n    let style = get(this.attribute, `${type}.style`);\n    const data = this.data[index];\n    style = isFunction(style)\n      ? merge(\n          {},\n          get(DEFAULT_AXIS_THEME, `${type}.style`),\n          type === 'tick'\n            ? style(data.rawValue, index, data, this.data)\n            : style(tickItem.value, index, tickItem, tickItems)\n        )\n      : style;\n\n    const { start, end, anchor, alpha, beta } = tickItem;\n    return {\n      points: [start, end],\n      anchor,\n      alpha,\n      beta,\n      ...style\n    };\n  }\n\n  private _getLabelAttribute(\n    tickDatum: TransformedAxisItem,\n    index: number,\n    tickData: TransformedAxisItem[],\n    layer: number\n  ) {\n    const { space = 4, inside = false, formatMethod, type = 'text', text } = this.attribute.label as LabelAttributes;\n    let offset = space;\n    let tickLength = 0;\n    if (this.attribute.tick?.visible && this.attribute.tick.inside === inside) {\n      tickLength = this.attribute.tick.length || 4;\n    }\n    if (this.attribute.subTick?.visible && this.attribute.subTick.inside === inside) {\n      tickLength = Math.max(tickLength, this.attribute.subTick.length || 2);\n    }\n    offset += tickLength;\n\n    // 先测试 line\n    const axisVector = this.getRelativeVector(tickDatum.point);\n    if (layer > 0) {\n      if (axisVector[1] === 0) {\n        offset += (this.axisLabelLayerSize[layer - 1].height + get(this.attribute, 'label.space', 4)) * layer;\n      } else {\n        offset += (this.axisLabelLayerSize[layer - 1].width + get(this.attribute, 'label.space', 4)) * layer;\n      }\n    }\n\n    const point = this.getVerticalCoord(tickDatum.point, offset, inside);\n    const vector = this.getVerticalVector(offset || 1, inside, point);\n    const textContent = formatMethod\n      ? formatMethod(`${tickDatum.label}`, tickDatum, index, tickData, layer)\n      : tickDatum.label;\n    let { style: textStyle } = this.attribute.label as LabelAttributes;\n    textStyle = isFunction(textStyle)\n      ? merge(\n          {},\n          DEFAULT_AXIS_THEME.label.style,\n          (textStyle as callbackFunc<Partial<ITextGraphicAttribute> | undefined>)(tickDatum, index, tickData, layer)\n        )\n      : textStyle;\n\n    const labelAlign = this.getLabelAlign(vector, inside, (textStyle as ITextGraphicAttribute).angle);\n    textStyle = merge(labelAlign, textStyle) as Partial<ITextGraphicAttribute>;\n    // 兼容原先 style.text 回调的方式\n    if (isFunction(textStyle.text)) {\n      // @ts-ignore\n      textStyle.text = textStyle.text({\n        label: tickDatum.label,\n        value: tickDatum.rawValue,\n        index: tickDatum.index,\n        layer\n      });\n    }\n    return {\n      ...this.getLabelPosition(point, vector, textContent, textStyle),\n      text: text ?? textContent,\n      _originText: tickDatum.label,\n      lineHeight: textStyle?.fontSize,\n      type,\n      ...textStyle\n    };\n  }\n\n  protected getLabelPosition(\n    point: Point,\n    vector: [number, number],\n    text: string | number,\n    style: Partial<ITextGraphicAttribute>\n  ) {\n    return point;\n  }\n\n  private _transformItems(items: AxisItem[]) {\n    const data: TransformedAxisItem[] = [];\n    items.forEach((item: AxisItem) => {\n      data.push({\n        ...item,\n        point: this.getTickCoord(item.value),\n        id: item.id ?? item.label\n      });\n    });\n    return data;\n  }\n\n  protected runAnimation() {\n    const lastScale = this.lastScale;\n    if ((this.attribute as any).scale) {\n      const scale = (this.attribute as any).scale;\n      this.lastScale = scale.clone();\n      this.lastScale.range([0, 1]);\n    }\n\n    if (this.attribute.animation && (this as any).applyAnimationState) {\n      // @ts-ignore\n      const currentInnerView = this.getInnerView();\n      // @ts-ignore\n      const prevInnerView = this.getPrevInnerView();\n      if (!prevInnerView) {\n        return;\n      }\n\n      const animationConfig = this._animationConfig;\n\n      this._newElementAttrMap = {};\n\n      // 遍历新的场景树，将新节点属性更新为旧节点\n      // TODO: 目前只处理更新场景\n      traverseGroup(currentInnerView, (el: IGraphic) => {\n        if ((el as IGraphic).type !== 'group' && el.id) {\n          const oldEl = prevInnerView[el.id];\n          // 删除旧图元的动画\n          el.setFinalAttributes(el.attribute);\n          if (oldEl) {\n            oldEl.release();\n            // oldEl.stopAnimationState('enter');\n            // oldEl.stopAnimationState('update');\n            const oldAttrs = (oldEl as IGraphic).attribute;\n            const finalAttrs = el.getFinalAttribute();\n            const diffAttrs: Record<string, any> = diff(oldAttrs, finalAttrs);\n\n            let hasDiff = Object.keys(diffAttrs).length > 0;\n            // TODO 如果入场会有fadeIn，则需要处理opacity（后续还需要考虑其他动画情况）\n            if ('opacity' in oldAttrs && finalAttrs.opacity !== oldAttrs.opacity) {\n              diffAttrs.opacity = finalAttrs.opacity ?? 1;\n              hasDiff = true;\n            }\n\n            if (animationConfig.update && hasDiff) {\n              this._newElementAttrMap[el.id] = {\n                state: 'update',\n                node: el,\n                attrs: el.attribute\n              };\n              const oldAttrs = (oldEl as IGraphic).attribute;\n\n              (el as IGraphic).setAttributes(oldAttrs);\n\n              el.applyAnimationState(\n                ['update'],\n                [\n                  {\n                    name: 'update',\n                    animation: {\n                      selfOnly: true,\n                      ...animationConfig.update,\n                      type: 'axisUpdate',\n                      customParameters: {\n                        config: animationConfig.update,\n                        diffAttrs,\n                        lastScale\n                      }\n                    }\n                  }\n                ]\n              );\n            }\n          } else if (animationConfig.enter) {\n            this._newElementAttrMap[el.id] = {\n              state: 'enter',\n              node: el,\n              attrs: el.attribute\n            };\n\n            el.applyAnimationState(\n              ['enter'],\n              [\n                {\n                  name: 'enter',\n                  animation: {\n                    ...animationConfig.enter,\n                    type: 'axisEnter',\n                    selfOnly: true,\n                    customParameters: {\n                      config: animationConfig.enter,\n                      lastScale,\n                      getTickCoord: this.getTickCoord.bind(this)\n                    }\n                  }\n                }\n              ]\n            );\n          }\n        }\n      });\n    }\n  }\n\n  release(): void {\n    super.release();\n    this._prevInnerView = null;\n    this._innerView = null;\n  }\n}\n"]}