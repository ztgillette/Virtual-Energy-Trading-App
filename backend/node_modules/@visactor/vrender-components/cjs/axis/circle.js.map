{"version":3,"sources":["../src/axis/circle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,yDAAwD;AAGxD,6CAA+G;AAC/G,0CAAiE;AAEjE,iCAAkC;AAClC,qCAA8C;AAC9C,yCAA+D;AAC/D,2CAAiD;AACjD,iCAAyD;AAEzD,yCAAqD;AACrD,mDAA+D;AAC/D,mEAA8D;AAE9D,IAAA,kCAAuB,GAAE,CAAC;AAK1B,MAAa,UAAW,SAAQ,eAA8B;IAG5D,YAAY,UAAgC,EAAE,OAA0B;QACtE,KAAK,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAA,cAAK,EAAC,EAAE,EAAE,UAAU,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,CAAC;IACjG,CAAC;IAES,UAAU,CAAC,SAAiB;QACpC,MAAM,EACJ,UAAU,GAAG,4BAAiB,EAC9B,QAAQ,GAAG,0BAAe,EAC1B,MAAM,EACN,MAAM,EACN,WAAW,GAAG,CAAC,EACf,IAAI,GAAG,EAAE,EACT,MAAM,GAAG,KAAK,EACd,KAAK,EACN,GAAG,IAAI,CAAC,SAAiC,CAAC;QAE3C,IAAI,SAAS,GAAG,MAAM,CAAC;QACvB,IAAI,cAAc,GAAG,WAAW,CAAC;QACjC,IAAI,MAAM,IAAI,WAAW,GAAG,CAAC,EAAE;YAC7B,SAAS,GAAG,WAAW,CAAC;YACxB,cAAc,GAAG,CAAC,CAAC;SACpB;QAED,IAAI,WAAqB,CAAC;QAC1B,IAAI,IAAA,sBAAa,EAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;YACtC,MAAM,UAAU,GAAG,IAAA,sBAAe,EAAC,MAAe,EAAE,KAAe,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;YAEtG,WAAW,GAAG,6BAAc,CAAC,IAAI,iCAC5B,IAAI,CAAC,KAAK,KACb,IAAI,EAAE,IAAA,qBAAc,EAAC,UAAU,EAAE,IAAI,CAAC,IACtC,CAAC;SACJ;aAAM;YACL,MAAM,QAAQ,iDACT,MAAM,KACT,UAAU;gBACV,QAAQ,EACR,MAAM,EAAE,SAAS,EACjB,WAAW,EAAE,cAAc,KACxB,IAAI,CAAC,KAAK,CACd,CAAC;YACF,WAAW,GAAG,6BAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC/C;QAED,WAAW,CAAC,IAAI,GAAG,4BAAiB,CAAC,IAAI,CAAC;QAC1C,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEzC,IAAI,CAAC,IAAA,gBAAO,EAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACxB,WAAW,CAAC,MAAM,GAAG,IAAA,cAAK,EAAC,EAAE,EAAE,yBAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5D;QACD,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAES,iBAAiB;;QACzB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,SAAiC,CAAC;QACnF,MAAM,KAOF,IAAI,CAAC,SAAS,CAAC,KAAwB,EAPrC,EACJ,KAAK,GAAG,CAAC,EACT,SAAS,GAAG,EAAE,EACd,KAAK,EACL,UAAU,EACV,KAAK,GAAG,EAAE,OAE+B,EADtC,SAAS,cANR,sDAOL,CAA0C,CAAC;QAC5C,IAAI,UAAU,GAAG,MAAM,CAAC;QACxB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,CAAA,MAAA,IAAI,CAAC,SAAS,CAAC,KAAK,0CAAE,OAAO,KAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,KAAK,EAAE;YAE1E,WAAW,GAAG,IAAA,YAAG,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,gBAAgB,EAAE,EAAE,CAAC,GAAG,IAAA,YAAG,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;SACvG;QACD,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,CAAA,MAAA,IAAI,CAAC,SAAS,CAAC,IAAI,0CAAE,OAAO,KAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;YACxE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;SAC9C;QACD,IAAI,CAAA,MAAA,IAAI,CAAC,SAAS,CAAC,OAAO,0CAAE,OAAO,KAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;YAC9E,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;SACvE;QACD,MAAM,MAAM,GAAG,MAAM,GAAG,UAAU,GAAG,WAAW,GAAG,KAAK,CAAC;QACzD,IAAI,YAAY,GAAqB,QAAQ,CAAC;QAC9C,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAwB,CAAC;QAC3D,IAAI,IAAA,cAAK,EAAC,QAAQ,CAAC,EAAE;YACnB,QAAQ,GAAG,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;SACjD;QACD,IAAI,QAAQ,KAAK,OAAO,EAAE;YACxB,YAAY,GAAG,QAAQ,CAAC;YACxB,UAAU,GAAG;gBACX,CAAC,EAAE,MAAM,CAAC,CAAC;gBACX,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;aACrB,CAAC;SACH;aAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;YAC7B,YAAY,GAAG,KAAK,CAAC;YACrB,UAAU,GAAG;gBACX,CAAC,EAAE,MAAM,CAAC,CAAC;gBACX,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;aACrB,CAAC;SACH;QACD,MAAM,KAAK,iDACN,UAAU,GACV,SAAS,KACZ,SAAS,kBACP,YAAY,EACZ,SAAS,EAAE,QAAQ,IAChB,SAAS,GAEd,KAAK,EAAE;gBACL,IAAI,EAAE,IAAA,cAAK,EAAC,EAAE,EAAE,yBAAc,EAAE,KAAK,CAAC,IAAI,CAAC;gBAC3C,KAAK,EAAE,IAAA,cAAK,EAAC,EAAE,EAAE,yBAAc,EAAE,KAAK,CAAC,KAAK,CAAC;gBAC7C,KAAK,EAAE,IAAA,cAAK,EAAC,EAAE,EAAE,yBAAc,EAAE,KAAK,CAAC,UAAU,CAAC;aACnD,GACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAEpB,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;YAC1B,KAAK,CAAC,KAAK,mBACT,OAAO,EAAE,IAAI,IACV,KAAK,CAAC,KAAK,CACf,CAAC;YACF,IAAI,KAAK,CAAC,KAAK,EAAE;gBACf,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aAC3B;SACF;QAED,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE;YACpC,KAAK,CAAC,KAAK,mBACT,OAAO,EAAE,IAAI,IACV,UAAU,CAAC,KAAK,CACpB,CAAC;SACH;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAES,mBAAmB;;QAC3B,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,SAAiC,CAAC;QAC3D,MAAM,gBAAgB,GAAmB,EAAE,CAAC;QAC5C,MAAM,EAAE,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,OAA4B,CAAC;QACzF,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,MAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;QAE3C,IAAI,aAAa,IAAI,CAAC,EAAE;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC5D,MAAM,gBAAgB,GAAG,MAAA,MAAA,IAAI,CAAC,SAAS,0CAAE,IAAI,0CAAE,cAAc,CAAC;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,IAAI,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACjC,MAAM,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACzC,MAAM,KAAK,GACT,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;oBAC7G,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;oBAC9D,gBAAgB,CAAC,IAAI,CAAC;wBACpB,KAAK,EAAE,KAAK;wBACZ,GAAG,EAAE,QAAQ;wBACb,KAAK;qBACN,CAAC,CAAC;iBACJ;aACF;SACF;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IACS,mBAAmB,CAC3B,WAAoB,EACpB,SAAqB,EACrB,cAAsB,EACtB,KAAa,EACb,UAAkB;QAElB,OAAO;IACT,CAAC;IACS,mBAAmB,CAC3B,WAAoB,EACpB,SAAqB,EACrB,cAAsB,EACtB,KAAa,EACb,UAAkB;QAElB,IAAI,IAAA,gBAAO,EAAC,WAAW,CAAC,EAAE;YACxB,OAAO;SACR;QAED,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAEvE,MAAM,MAAM,GAAG,IAAI;YACjB,CAAC,CAAC;gBACE,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,IAAI,CAAC,KAAK;gBACd,EAAE,EAAE,IAAI,CAAC,MAAM;aAChB;YACH,CAAC,CAAC;gBACE,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;gBACrB,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;gBACrB,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;gBACrB,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM;aACtB,CAAC;QACN,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,cAAc,EAAE,kBAAkB,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QAE/G,IAAI,IAAA,mBAAU,EAAC,UAAU,CAAC,EAAE;YAE1B,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACjD;aAAM;YAEL,IAAI,SAAS,IAAI,QAAQ,EAAE;gBACzB,IAAA,mCAAe,EAAC,WAAW,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;aAC7F;YACD,IAAI,QAAQ,EAAE;gBACZ,IAAA,oBAAY,EAAC,WAAW,EAAE;oBACxB,MAAM;oBACN,MAAM,EAAE,cAAc;oBACtB,UAAU,EAAE,kBAAkB;iBAC/B,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IACS,kBAAkB,CAC1B,WAAoB,EACpB,SAAqB,EACrB,cAAsB,EACtB,KAAa,EACb,UAAkB;QAElB,OAAO;IACT,CAAC;IAES,eAAe,CAAC,MAAwB;QAChD,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;YACzC,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAES,aAAa,CACrB,MAAwB,EACxB,MAAgB,EAChB,KAAc;QAEd,IAAI,IAAA,sBAAa,EAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC/B,OAAO;gBACL,SAAS,EAAE,QAAQ;gBACnB,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;aAC/C,CAAC;SACH;aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO;gBACL,SAAS,EAAE,OAAO;gBAClB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;aAC3C,CAAC;SACH;aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO;gBACL,SAAS,EAAE,MAAM;gBACjB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;aAC3C,CAAC;SACH;QAED,OAAO;YACL,SAAS,EAAE,QAAQ;YACnB,YAAY,EAAE,QAAQ;SACvB,CAAC;IACJ,CAAC;IAES,gBAAgB,CACxB,KAAY,EACZ,MAAwB,EACxB,IAAqB,EACrB,KAAqC;QAErC,OAAO,KAAK,CAAC;IACf,CAAC;;AApRH,gCAqRC;AApRQ,4BAAiB,GAAG,2BAAkB,CAAC;AAsRhD,IAAA,cAAK,EAAC,UAAU,EAAE,wBAAe,CAAC,CAAC","file":"circle.js","sourcesContent":["/**\n * @description 圆弧型坐标轴\n */\nimport type {\n  IGraphic,\n  IGroup,\n  IText,\n  ITextGraphicAttribute,\n  TextAlignType,\n  TextBaselineType\n} from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { graphicCreator } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport type { Point } from '@visactor/vutils';\nimport { isNil, get, merge, isNumberClose, isEmpty, mixin, isValidNumber, isFunction } from '@visactor/vutils';\nimport { POLAR_END_ANGLE, POLAR_START_ANGLE } from '../constant';\nimport type { CircleAxisAttributes, TitleAttributes, SubTickAttributes, TickLineItem, AxisItem } from './type';\nimport { AxisBase } from './base';\nimport { DEFAULT_AXIS_THEME } from './config';\nimport { AXIS_ELEMENT_NAME, DEFAULT_STATES } from './constant';\nimport { CircleAxisMixin } from './mixin/circle';\nimport { getCirclePoints, getPolygonPath } from './util';\nimport type { ComponentOptions } from '../interface';\nimport { loadCircleAxisComponent } from './register';\nimport { autoHide as autoHideFunc } from './overlap/auto-hide';\nimport { circleAutoLimit } from './overlap/circle-auto-limit';\n\nloadCircleAxisComponent();\nexport interface CircleAxis\n  extends Pick<CircleAxisMixin, 'isInValidValue' | 'getTickCoord' | 'getVerticalVector' | 'getRelativeVector'>,\n    AxisBase<CircleAxisAttributes> {}\n\nexport class CircleAxis extends AxisBase<CircleAxisAttributes> {\n  static defaultAttributes = DEFAULT_AXIS_THEME;\n\n  constructor(attributes: CircleAxisAttributes, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, CircleAxis.defaultAttributes, attributes));\n  }\n\n  protected renderLine(container: IGroup): void {\n    const {\n      startAngle = POLAR_START_ANGLE,\n      endAngle = POLAR_END_ANGLE,\n      radius,\n      center,\n      innerRadius = 0,\n      line = {},\n      inside = false,\n      sides\n    } = this.attribute as CircleAxisAttributes;\n\n    let arcRadius = radius;\n    let arcInnerRadius = innerRadius;\n    if (inside && innerRadius > 0) {\n      arcRadius = innerRadius;\n      arcInnerRadius = 0;\n    }\n\n    let lineGraphic: IGraphic;\n    if (isValidNumber(sides) && sides >= 3) {\n      const gridPoints = getCirclePoints(center as Point, sides as number, arcRadius, startAngle, endAngle);\n\n      lineGraphic = graphicCreator.path({\n        ...line.style,\n        path: getPolygonPath(gridPoints, true)\n      });\n    } else {\n      const arcAttrs = {\n        ...center,\n        startAngle,\n        endAngle,\n        radius: arcRadius,\n        innerRadius: arcInnerRadius,\n        ...line.style\n      };\n      lineGraphic = graphicCreator.circle(arcAttrs);\n    }\n\n    lineGraphic.name = AXIS_ELEMENT_NAME.line;\n    lineGraphic.id = this._getNodeId('line');\n\n    if (!isEmpty(line.state)) {\n      lineGraphic.states = merge({}, DEFAULT_STATES, line.state);\n    }\n    container.add(lineGraphic);\n  }\n\n  protected getTitleAttribute() {\n    const { center, radius, innerRadius = 0 } = this.attribute as CircleAxisAttributes;\n    const {\n      space = 4,\n      textStyle = {},\n      shape,\n      background,\n      state = {},\n      ...restAttrs\n    } = this.attribute.title as TitleAttributes;\n    let titlePoint = center;\n    let labelHeight = 0;\n    if (this.attribute.label?.visible && this.attribute.label.inside === false) {\n      // 这里取 label 的最大长度\n      labelHeight = get(this.attribute.label, 'style.fontSize', 12) + get(this.attribute.label, 'space', 4);\n    }\n    let tickLength = 0;\n    if (this.attribute.tick?.visible && this.attribute.tick.inside === false) {\n      tickLength = this.attribute.tick.length || 4;\n    }\n    if (this.attribute.subTick?.visible && this.attribute.subTick.inside === false) {\n      tickLength = Math.max(tickLength, this.attribute.subTick.length || 2);\n    }\n    const offset = radius + tickLength + labelHeight + space;\n    let textBaseline: TextBaselineType = 'middle';\n    let { position } = this.attribute.title as TitleAttributes;\n    if (isNil(position)) {\n      position = innerRadius === 0 ? 'end' : 'middle';\n    }\n    if (position === 'start') {\n      textBaseline = 'bottom';\n      titlePoint = {\n        x: center.x,\n        y: center.y - offset\n      };\n    } else if (position === 'end') {\n      textBaseline = 'top';\n      titlePoint = {\n        x: center.x,\n        y: center.y + offset\n      };\n    }\n    const attrs: any = {\n      ...titlePoint,\n      ...restAttrs,\n      textStyle: {\n        textBaseline,\n        textAlign: 'center',\n        ...textStyle\n      },\n      state: {\n        text: merge({}, DEFAULT_STATES, state.text),\n        shape: merge({}, DEFAULT_STATES, state.shape),\n        panel: merge({}, DEFAULT_STATES, state.background)\n      }\n    };\n\n    const { angle } = restAttrs; // 用户设置的是角度\n    attrs.angle = angle;\n\n    if (shape && shape.visible) {\n      attrs.shape = {\n        visible: true,\n        ...shape.style\n      };\n      if (shape.space) {\n        attrs.space = shape.space;\n      }\n    }\n\n    if (background && background.visible) {\n      attrs.panel = {\n        visible: true,\n        ...background.style\n      };\n    }\n\n    return attrs;\n  }\n\n  protected getSubTickLineItems() {\n    const { subTick } = this.attribute as CircleAxisAttributes;\n    const subTickLineItems: TickLineItem[] = [];\n    const { count: subCount = 4, inside = false, length = 2 } = subTick as SubTickAttributes;\n    const tickLineItems = this.tickLineItems;\n    const tickLineCount = tickLineItems.length;\n    // 刻度线的数量大于 2 时，才绘制子刻度\n    if (tickLineCount >= 2) {\n      const tickSegment = this.data[1].value - this.data[0].value;\n      const isAlignWithLable = this.attribute?.tick?.alignWithLabel;\n      for (let i = 0; i < tickLineCount; i++) {\n        const pre = tickLineItems[i];\n        const next = tickLineItems[i + 1];\n        for (let j = 0; j < subCount; j++) {\n          const percent = (j + 1) / (subCount + 1);\n          const value =\n            (1 - percent) * pre.value + percent * (next ? next.value : isAlignWithLable ? 1 : pre.value + tickSegment);\n          const point = this.getTickCoord(value);\n          const endPoint = this.getVerticalCoord(point, length, inside);\n          subTickLineItems.push({\n            start: point,\n            end: endPoint,\n            value\n          });\n        }\n      }\n    }\n\n    return subTickLineItems;\n  }\n  protected beforeLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void {\n    return;\n  }\n  protected handleLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void {\n    if (isEmpty(labelShapes)) {\n      return;\n    }\n\n    const { inside, radius, center, size, label, orient } = this.attribute;\n    // 宽高为0的异常情况，还是以圆心进行布局\n    const bounds = size\n      ? {\n          x1: 0,\n          y1: 0,\n          x2: size.width,\n          y2: size.height\n        }\n      : {\n          x1: center.x - radius,\n          y1: center.y - radius,\n          x2: center.x + radius,\n          y2: center.y + radius\n        };\n    const { layoutFunc, autoLimit, limitEllipsis, autoHide, autoHideMethod, autoHideSeparation, autoWrap } = label;\n\n    if (isFunction(layoutFunc)) {\n      // 自定义布局\n      layoutFunc(labelShapes, labelData, layer, this);\n    } else {\n      // autoWrap has computed width & height limit\n      if (autoLimit || autoWrap) {\n        circleAutoLimit(labelShapes, { inside, autoWrap, bounds, ellipsis: limitEllipsis, center });\n      }\n      if (autoHide) {\n        autoHideFunc(labelShapes, {\n          orient,\n          method: autoHideMethod,\n          separation: autoHideSeparation\n        });\n      }\n    }\n  }\n  protected afterLabelsOverlap(\n    labelShapes: IText[],\n    labelData: AxisItem[],\n    labelContainer: IGroup,\n    layer: number,\n    layerCount: number\n  ): void {\n    return;\n  }\n\n  protected getTextBaseline(vector: [number, number]) {\n    if (Math.abs(vector[1] / vector[0]) < 0.3) {\n      return 'middle';\n    } else if (vector[1] < 0) {\n      return 'bottom';\n    } else if (vector[1] > 0) {\n      return 'top';\n    }\n\n    return 'middle';\n  }\n\n  protected getLabelAlign(\n    vector: [number, number],\n    inside?: boolean,\n    angle?: number\n  ): { textAlign: TextAlignType; textBaseline: TextBaselineType } {\n    if (isNumberClose(vector[0], 0)) {\n      return {\n        textAlign: 'center',\n        textBaseline: vector[1] > 0 ? 'top' : 'bottom'\n      };\n    } else if (vector[0] < 0) {\n      return {\n        textAlign: 'right',\n        textBaseline: this.getTextBaseline(vector)\n      };\n    } else if (vector[0] > 0) {\n      return {\n        textAlign: 'left',\n        textBaseline: this.getTextBaseline(vector)\n      };\n    }\n\n    return {\n      textAlign: 'center', //'left',\n      textBaseline: 'middle' //'top'\n    };\n  }\n\n  protected getLabelPosition(\n    point: Point,\n    vector: [number, number],\n    text: string | number,\n    style: Partial<ITextGraphicAttribute>\n  ) {\n    return point;\n  }\n}\n\nmixin(CircleAxis, CircleAxisMixin);\n"]}