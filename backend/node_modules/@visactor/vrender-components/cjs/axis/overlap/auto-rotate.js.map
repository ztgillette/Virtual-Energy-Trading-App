{"version":3,"sources":["../src/axis/overlap/auto-rotate.ts"],"names":[],"mappings":"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","file":"auto-rotate.js","sourcesContent":["/**\n * @description 坐标轴标签自动旋转\n */\nimport type { IText, TextAlignType, TextBaselineType } from '@visactor/vrender-core';\nimport { degreeToRadian, isEmpty } from '@visactor/vutils';\nimport { genRotateBounds, itemIntersect } from './util';\n\ntype RotateConfig = {\n  /**\n   * 坐标轴的显示位置\n   */\n  orient: string;\n  /**\n   * 自动旋转的可选角度\n   */\n  labelRotateAngle?: number[];\n};\n\nexport function autoRotate(items: IText[], rotateConfig: RotateConfig) {\n  if (isEmpty(items)) {\n    return;\n  }\n\n  const { orient, labelRotateAngle = [0, 45, 90] } = rotateConfig;\n  if (labelRotateAngle.length === 0 || items.some(item => !!item.attribute.angle)) {\n    return;\n  }\n\n  let i = 0;\n  let n = 0;\n  if (labelRotateAngle && labelRotateAngle.length > 0) {\n    n = labelRotateAngle.length;\n  }\n\n  while (i < n) {\n    const angle = labelRotateAngle[i++];\n    items.forEach(item => {\n      // item.angle = angle;\n      item.attribute.angle = degreeToRadian(angle);\n    });\n    tryRotate(orient, items);\n    if (!hasIntersect(items)) {\n      break;\n    }\n  }\n}\n\nfunction hasIntersect(items: IText[]): boolean {\n  for (let i = 1; i < items.length; i++) {\n    if (itemIntersect(items[i - 1], items[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction tryRotate(orient: string, items: IText[]) {\n  // 针对 top bottom轴的自动旋转逻辑\n  if (orient === 'bottom' || orient === 'top') {\n    rotateXAxis(orient, items);\n  }\n  if (orient === 'left' || orient === 'right') {\n    rotateYAxis(orient, items);\n  }\n  // 先旋转，再计算这个limit，避免算limit后发现不需要旋转，导致莫名的水平limit\n  genRotateBounds(items);\n}\n\nfunction clampAngle(angle = 0) {\n  if (angle < 0) {\n    while (angle < 0) {\n      angle += Math.PI * 2;\n    }\n  }\n  if (angle > 0) {\n    while (angle >= Math.PI * 2) {\n      angle -= Math.PI * 2;\n    }\n  }\n\n  return angle;\n}\n\nexport function rotateYAxis(orient: string, items: IText[]) {\n  // 由于左右轴会裁切，所以上下两个label需要额外处理，做tighten处理\n  items.forEach((item, i) => {\n    item.attribute.angle &&\n      item.setAttributes({\n        ...getYAxisLabelAlign(orient, item.attribute.angle),\n        angle: clampAngle(item.attribute.angle)\n      });\n  });\n}\n\nexport function rotateXAxis(orient: string, items: IText[]) {\n  items.forEach(item => {\n    item.attribute.angle &&\n      item.setAttributes({\n        ...getXAxisLabelAlign(orient, item.attribute.angle),\n        angle: clampAngle(item.attribute.angle)\n      });\n  });\n}\n\nexport function getXAxisLabelAlign(orient: string, angle: number = 0) {\n  //                0,      0-90,   90,     90-180,   180,    180-270, 270,     270-360,   360\n  let align = ['center', 'left', 'left', 'left', 'center', 'right', 'right', 'right', 'left'];\n  let baseline = ['top', 'top', 'middle', 'bottom', 'bottom', 'bottom', 'middle', 'top', 'top'];\n  if (orient === 'top') {\n    //            0,      0-90,   90,     90-180,   180,    180-270, 270,     270-360,   360\n    align = ['center', 'right', 'right', 'right', 'center', 'left', 'left', 'left', 'right'];\n    baseline = ['bottom', 'bottom', 'middle', 'top', 'top', 'top', 'middle', 'bottom', 'bottom'];\n  }\n\n  angle = clampAngle(angle);\n  const step = angle / (Math.PI * 0.5);\n  let index;\n  if (step === Math.floor(step)) {\n    index = Math.floor(step) * 2;\n  } else {\n    index = Math.floor(step) * 2 + 1;\n  }\n\n  return {\n    textAlign: align[index] as TextAlignType,\n    textBaseline: baseline[index] as TextBaselineType\n  };\n}\n\nexport function getYAxisLabelAlign(orient: string, angle: number = 0) {\n  //           0,      0-90,       90,     90-180,   180,    180-270, 270,     270-360,   360\n  let align = ['right', 'right', 'center', 'left', 'left', 'left', 'center', 'right', 'right'];\n  let baseline = ['middle', 'middle', 'top', 'top', 'middle', 'middle', 'bottom', 'bottom', 'middle'];\n\n  if (orient === 'right') {\n    //        0,      0-90,   90,     90-180,   180,   180-270, 270,  270-360,   360\n    align = ['left', 'left', 'center', 'right', 'right', 'right', 'center', 'left', 'left'];\n    baseline = ['middle', 'middle', 'bottom', 'bottom', 'middle', 'middle', 'top', 'middle', 'middle'];\n  }\n\n  angle = clampAngle(angle);\n  const step = angle / (Math.PI * 0.5);\n  let index;\n  if (step === Math.floor(step)) {\n    index = Math.floor(step) * 2;\n  } else {\n    index = Math.floor(step) * 2 + 1;\n  }\n\n  return {\n    textAlign: align[index] as TextAlignType,\n    textBaseline: baseline[index] as TextBaselineType\n  };\n}\n"]}