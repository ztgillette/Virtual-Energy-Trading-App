import { BaseGrid } from './base';
import type { CircleAxisGridAttributes } from './type';
import { CircleAxisMixin } from '../mixin/circle';
import type { ComponentOptions } from '../../interface';
export interface CircleAxisGrid extends Pick<CircleAxisMixin, 'isInValidValue' | 'getTickCoord' | 'getVerticalVector'>, BaseGrid<CircleAxisGridAttributes> {
}
export declare class CircleAxisGrid extends BaseGrid<CircleAxisGridAttributes> {
    constructor(attributes: CircleAxisGridAttributes, options?: ComponentOptions);
    protected getGridPointsByValue(value: number): import("../..").Point[];
    protected getGridAttribute(isSubGrid: boolean): any;
}
