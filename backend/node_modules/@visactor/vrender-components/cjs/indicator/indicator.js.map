{"version":3,"sources":["../src/indicator/indicator.ts"],"names":[],"mappings":"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","file":"indicator.js","sourcesContent":["/**\n * @description 指标卡组件\n */\nimport type { IGroup, IRichText, IText, ITextGraphicAttribute } from '@visactor/vrender-core';\nimport { merge, isValid, array, isValidNumber, get } from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\nimport { createTextGraphicByType, measureTextSize } from '../util';\nimport type { IndicatorAttributes, IndicatorItemSpec } from './type';\nimport { DEFAULT_INDICATOR_THEME } from './config';\nimport { loadIndicatorComponent } from './register';\n\nloadIndicatorComponent();\nexport class Indicator extends AbstractComponent<Required<IndicatorAttributes>> {\n  name = 'indicator';\n\n  private _title?: IText | IRichText;\n  private _content?: (IText | IRichText)[];\n\n  protected _renderText(\n    group: IGroup,\n    title: IndicatorItemSpec,\n    limit: number,\n    limitRatio: number,\n    themePath: string,\n    graphicName: string\n  ) {\n    if (title.visible !== false) {\n      const titleStyle = merge({}, get(DEFAULT_INDICATOR_THEME, themePath), title.style, {\n        visible: title.visible\n      });\n      titleStyle.lineHeight = isValid(titleStyle.lineHeight) ? titleStyle.lineHeight : titleStyle.fontSize;\n\n      if (title.formatMethod) {\n        titleStyle._originText = titleStyle.text;\n        titleStyle.text = title.formatMethod(titleStyle.text, titleStyle);\n      }\n      const textGraphic = createTextGraphicByType(titleStyle);\n      textGraphic.name = graphicName;\n      group.appendChild(textGraphic);\n\n      // auto-fit\n      if (title.autoFit && isValidNumber(limit)) {\n        this._setLocalAutoFit(limit, textGraphic as IText, title);\n      }\n\n      //auto-limit\n      if (title.autoLimit && isValidNumber(limitRatio)) {\n        textGraphic.setAttribute('maxLineWidth', limit);\n      }\n\n      return textGraphic;\n    }\n\n    return undefined;\n  }\n\n  protected render() {\n    this.removeAllChild(true);\n\n    if (this.attribute.visible !== true) {\n      return;\n    }\n    const { title = {}, content, size, limitRatio = Infinity } = this.attribute as IndicatorAttributes;\n\n    const limit = Math.min(size.width, size.height) * limitRatio;\n\n    const group = this.createOrUpdateChild(\n      'indicator-container',\n      { x: 0, y: 0, zIndex: 1, pickable: this.attribute.pickable ?? true },\n      'group'\n    ) as IGroup;\n    if (isValid(title)) {\n      this._title = this._renderText(group, title, limit, limitRatio, 'title.style', 'indicator-title');\n    }\n\n    if (isValid(content)) {\n      const contents: IndicatorItemSpec[] = array(content);\n      const contentComponents: (IText | IRichText)[] = [];\n      contents.forEach((contentItem, i) => {\n        if (contentItem.visible !== false) {\n          contentComponents.push(\n            this._renderText(group, contentItem, limit, limitRatio, 'content.style', 'indicator-content-' + i)\n          );\n        } else {\n        }\n      });\n      this._content = contentComponents;\n    }\n\n    this._setGlobalAutoFit(limit);\n    this._setYPosition();\n\n    const totalHeight = group?.AABBBounds.height() ?? 0;\n    group.setAttribute('y', size.height / 2 - totalHeight / 2);\n    group.setAttribute('x', size.width / 2);\n  }\n\n  private _setLocalAutoFit(limit: number, indicatorItem: IText, indicatorItemSpec: IndicatorItemSpec) {\n    // only apply local auto fit for default auto fit text\n    if ((indicatorItemSpec.fitStrategy ?? 'default') !== 'default') {\n      return;\n    }\n    const originWidth = measureTextSize(\n      (indicatorItemSpec.style?.text ?? '') as string | number | number[] | string[],\n      (indicatorItemSpec.style ?? {}) as Partial<ITextGraphicAttribute>,\n      this.stage?.getTheme()?.text\n    ).width;\n    if (originWidth > 0) {\n      const ratio = (limit * (indicatorItemSpec.fitPercent ?? 0.5)) / originWidth;\n      const fontSize = Math.floor((indicatorItemSpec.style?.fontSize ?? 20) * ratio);\n      indicatorItem.setAttribute('fontSize', fontSize);\n      indicatorItem.setAttribute(\n        'lineHeight',\n        isValid(indicatorItemSpec.style.lineHeight) ? indicatorItemSpec.style.lineHeight : fontSize\n      );\n    }\n  }\n\n  private _setGlobalAutoFit(limit: number) {\n    // compute the inscribed rect width & height for all texts\n    // the font size will be determined by the longest text\n    // 1. hx^2 + hy^2 = r^2\n    // 2. hy = ra * hx + h\n    // -> (ra^2 + 1) * x^2 + (2 * h * ra) * x + (h^2 - r^2) = 0\n\n    const r = limit / 2;\n\n    // unify the initial font size for auto fit texts\n    const singleHeight = 12;\n    const autoFitTexts: { text: IText; spec: IndicatorItemSpec }[] = [];\n    // other text height\n    let otherHeight = 0;\n    // non auto fit title height\n    const titleSpec = this.attribute.title ?? {};\n    if (titleSpec.autoFit && titleSpec.fitStrategy === 'inscribed') {\n      this._title.setAttribute('fontSize', singleHeight);\n      autoFitTexts.push({ text: this._title as IText, spec: this.attribute.title ?? {} });\n    } else {\n      otherHeight += this._title?.AABBBounds?.height?.() ?? 0;\n    }\n    const titleSpace = titleSpec.space ?? 0;\n    otherHeight += titleSpace;\n    // non auto fit content height\n    array(this.attribute.content)\n      .filter(contentSpec => contentSpec.visible !== false)\n      .forEach((contentSpec, index) => {\n        const contentText = this._content[index];\n        if (contentSpec.autoFit && contentSpec.fitStrategy === 'inscribed') {\n          contentText.setAttribute('fontSize', singleHeight);\n          autoFitTexts.push({ text: contentText as IText, spec: contentSpec });\n        } else {\n          otherHeight += contentText?.AABBBounds?.height?.() ?? 0;\n        }\n        const contentSpace = contentSpec.space ?? 0;\n        otherHeight += contentSpace;\n      });\n    if (autoFitTexts.length <= 0) {\n      return;\n    }\n\n    // max width for all auto fit texts\n    const maxWidth = autoFitTexts.reduce((width, textItem) => {\n      return Math.max(width, textItem.text.AABBBounds.width());\n    }, 0);\n\n    // y = x * (singleHeight / maxWidth * textCount) + otherHeight\n    // hy = hx * (singleHeight / maxWidth * textCount) + otherHeight / 2\n    const ra = (singleHeight / maxWidth) * autoFitTexts.length;\n    const h = otherHeight / 2;\n    const a = ra ** 2 + 1;\n    const b = 2 * h * ra;\n    const c = h ** 2 - r ** 2;\n    const hx = (-b + Math.sqrt(b ** 2 - 4 * a * c)) / (2 * a);\n    const hy = ra * hx + h;\n    const y = 2 * hy;\n    const lineHeight = (y - otherHeight) / autoFitTexts.length;\n    if (isValidNumber(y)) {\n      autoFitTexts.forEach(textItem => {\n        const specLineHeight = textItem.spec.style?.lineHeight;\n        textItem.text.setAttribute('fontSize', lineHeight);\n        textItem.text.setAttribute('lineHeight', isValid(specLineHeight) ? specLineHeight : lineHeight);\n      });\n    }\n  }\n\n  private _setYPosition() {\n    let lastContentHeight = 0;\n\n    const titleHeight = this._title?.AABBBounds?.height?.() ?? 0;\n    const titleSpace = this.attribute.title?.space ?? 0;\n    array(this.attribute.content)\n      .filter(contentSpec => contentSpec.visible !== false)\n      .forEach((contentSpec, index) => {\n        const contentText = this._content[index];\n        contentText.setAttribute('y', titleHeight + titleSpace + lastContentHeight);\n        const contentSpace = contentSpec.space ?? 0;\n        lastContentHeight += contentText.AABBBounds.height() + contentSpace;\n      });\n  }\n}\n"]}