{"version":3,"sources":["../src/data-zoom/type.ts"],"names":[],"mappings":";;;AAYA,IAAY,iBAKX;AALD,WAAY,iBAAiB;IAC3B,kDAA6B,CAAA;IAC7B,8CAAyB,CAAA;IACzB,oDAA+B,CAAA;IAC/B,8CAAyB,CAAA;AAC3B,CAAC,EALW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAK5B","file":"type.js","sourcesContent":["import type {\n  IAreaGraphicAttribute,\n  ICurveType,\n  IGroupGraphicAttribute,\n  ILineGraphicAttribute,\n  IRectGraphicAttribute,\n  ISymbolGraphicAttribute\n} from '@visactor/vrender-core';\nimport type { IPointLike } from '@visactor/vutils';\nimport type { IDelayType, OrientType } from '../interface';\nimport type { TagAttributes } from '../tag/type';\n\nexport enum DataZoomActiveTag {\n  startHandler = 'startHandler',\n  endHandler = 'endHandler',\n  middleHandler = 'middleHandler',\n  background = 'background'\n}\n\nexport interface DataZoomAttributes extends IGroupGraphicAttribute {\n  /**\n   * DataZoom位置\n   */\n  position: IPointLike;\n  /**\n   * DataZoom 尺寸\n   */\n  size: {\n    width: number;\n    height: number;\n  };\n  /**\n   * DataZoom方向\n   * @default 'bottom'\n   */\n  orient?: OrientType;\n\n  /**\n   * 起点配置（比例）：范围[0, 1]\n   * @default 0\n   */\n  start?: number;\n\n  /**\n   * 终点配置（比例）：范围[0, 1]\n   * @default 1\n   */\n  end?: number;\n\n  /**\n   * 背景样式\n   */\n  backgroundStyle?: IRectGraphicAttribute;\n\n  /**\n   * 起点手柄样式\n   */\n  startHandlerStyle?: {\n    /**\n     * 热区最小size\n     * 取handler size 和 min size 的最大值\n     */\n    triggerMinSize?: number;\n  } & ISymbolGraphicAttribute;\n\n  /**\n   * 中间手柄样式\n   */\n  middleHandlerStyle?: {\n    /**\n     * 是否显示\n     * @default false\n     */\n    visible?: boolean;\n    /**\n     * 中间手柄的中间symbol样式\n     */\n    icon?: ISymbolGraphicAttribute;\n    /**\n     * 中间手柄的背景rect样式\n     */\n    background?: {\n      style?: IRectGraphicAttribute;\n      size?: number;\n    };\n  };\n\n  /**\n   * 终点手柄样式\n   */\n  endHandlerStyle?: {\n    /**\n     * 热区最小size\n     * 取handler size 和 min size 的最大值\n     */\n    triggerMinSize?: number;\n  } & ISymbolGraphicAttribute;\n\n  /**\n   * 起点文字样式\n   */\n  startTextStyle?: {\n    formatMethod?: (text: string | number) => (string | number) | (string | number)[];\n  } & Partial<TagAttributes>;\n\n  /**\n   * 终点文字样式\n   */\n  endTextStyle?: {\n    formatMethod?: (text: string | number) => (string | number) | (string | number)[];\n  } & Partial<TagAttributes>;\n\n  /**\n   * 选中背景样式\n   */\n  selectedBackgroundStyle?: IRectGraphicAttribute;\n\n  /**\n   * 拖拽进行中的选中背景样式\n   */\n  dragMaskStyle?: IRectGraphicAttribute;\n\n  /**\n   * 背景图表样式\n   */\n  backgroundChartStyle?: {\n    line?: {\n      visible?: boolean;\n    } & ILineGraphicAttribute;\n    area?: {\n      /**\n       * @default true\n       */\n      visible?: boolean;\n      curveType?: ICurveType;\n    } & Omit<IAreaGraphicAttribute, 'curveType'>;\n  };\n\n  /**\n   * 选中的背景图表样式\n   */\n  selectedBackgroundChartStyle?: {\n    line?: {\n      /**\n       * @default true\n       */\n      visible?: boolean;\n    } & ILineGraphicAttribute;\n    area?: {\n      /**\n       * @default true\n       */\n      visible?: boolean;\n      curveType?: ICurveType;\n    } & Omit<IAreaGraphicAttribute, 'curveType'>;\n  };\n\n  /**\n   * 是否显示startText和endText\n   * @default 'auto' 鼠标hover在选中区域时才显示startText和endText\n   */\n  showDetail?: 'auto' | boolean;\n\n  /**\n   * 是否开启框选, 如果不开启则支持selectedBackground拖拽（框选和拖拽两者互斥）\n   * @default true\n   */\n  brushSelect?: boolean;\n\n  /**\n   * 是否锁定选择区域（或叫做数据窗口）的大小\n   */\n  zoomLock?: boolean;\n\n  /**\n   * 用于限制窗口大小的最小值, [0, 1]\n   * @default 0\n   */\n  minSpan?: number;\n\n  /**\n   * 用于限制窗口大小的最大值, [0, 1]\n   * @default 1\n   */\n  maxSpan?: number;\n\n  /**\n   * 事件触发延迟类型\n   * @default 'throttle'\n   */\n  delayType?: IDelayType;\n\n  /**\n   * 事件触发延迟时长\n   * @default 0\n   */\n  delayTime?: number;\n  /**\n   * 是否在操作时动态更新视图\n   * @default true\n   */\n  realTime?: boolean;\n\n  /**\n   * 绘制背景图表的数据 & 映射函数\n   */\n  previewData?: any[];\n  previewPointsX?: (datum: any) => number;\n  previewPointsY?: (datum: any) => number;\n  previewPointsX1?: (datum: any) => number;\n  previewPointsY1?: (datum: any) => number;\n  updateStateCallback?: (start: number, end: number) => any;\n  /**\n   * 关闭交互效果\n   * @default false\n   */\n  disableTriggerEvent?: boolean;\n  /**\n   * 背景图表数据点采样压缩率\n   * 参考: https://mourner.github.io/simplify-js/\n   */\n  tolerance?: number;\n}\n"]}