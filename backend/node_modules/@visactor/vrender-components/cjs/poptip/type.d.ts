import type { IGraphic, IGroupGraphicAttribute, IRectGraphicAttribute, ISymbolGraphicAttribute, ITextGraphicAttribute } from '@visactor/vrender-core';
import type { Padding, State } from '../core/type';
import type { BackgroundAttributes } from '../interface';
import type { IAABBBoundsLike } from '@visactor/vutils';
type StateStyle = {
    title?: State<Partial<ITextGraphicAttribute>>;
    content?: State<Partial<ITextGraphicAttribute>>;
    panel?: State<Partial<IRectGraphicAttribute>>;
};
export type PopTipAttributes = {
    position?: 'auto' | 'top' | 'tl' | 'tr' | 'bottom' | 'bl' | 'br' | 'left' | 'lt' | 'lb' | 'right' | 'rt' | 'rb' | string[];
    poptipAnchor?: 'position' | 'bounds';
    positionBounds?: IAABBBoundsLike;
    title?: string | string[] | number | number[];
    titleStyle?: Partial<ITextGraphicAttribute>;
    titleFormatMethod?: (t: string | string[] | number | number[]) => string | string[] | number | number[];
    content?: string | string[] | number | number[];
    contentStyle?: Partial<ITextGraphicAttribute>;
    contentFormatMethod?: (t: string | string[] | number | number[]) => string | string[] | number | number[];
    space?: number;
    padding?: Padding;
    panel?: BackgroundAttributes & ISymbolGraphicAttribute & {
        space?: number;
        square?: boolean;
        panelSymbolType?: string;
    };
    triangleMode?: 'default' | 'concise';
    logoSymbol?: ISymbolGraphicAttribute;
    logoText?: string | string[] | number | number[];
    logoTextStyle?: Partial<ITextGraphicAttribute>;
    minWidth?: number;
    maxWidth?: number;
    maxWidthPercent?: number;
    visible?: boolean;
    visibleFunc?: (graphic: IGraphic) => boolean;
    state?: StateStyle;
    dx?: number;
    dy?: number;
} & Omit<IGroupGraphicAttribute, 'background'>;
export type PoptipShapeAttributes = {
    visible: boolean;
} & Partial<ISymbolGraphicAttribute>;
export {};
